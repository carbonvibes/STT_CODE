parent_sha,commit_sha,file_path,old_path,new_path,commit_message,diff_myers,diff_hist
,33850c0ebd23ae615e6823993d441f46d80b1ff0,.gitignore,,.gitignore,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/apishowcase.py,,examples/apishowcase/apishowcase.py,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/static/style.css,,examples/apishowcase/static/style.css,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/templates/counter.html,,examples/apishowcase/templates/counter.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/templates/hello.html,,examples/apishowcase/templates/hello.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/templates/index.html,,examples/apishowcase/templates/index.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/apishowcase/templates/layout.html,,examples/apishowcase/templates/layout.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/minitwit.py,,examples/minitwit/minitwit.py,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/schema.sql,,examples/minitwit/schema.sql,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/static/style.css,,examples/minitwit/static/style.css,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/templates/layout.html,,examples/minitwit/templates/layout.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/templates/login.html,,examples/minitwit/templates/login.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/templates/register.html,,examples/minitwit/templates/register.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,examples/minitwit/templates/timeline.html,,examples/minitwit/templates/timeline.html,Initial checkin of stuff that exists so far.,,
,33850c0ebd23ae615e6823993d441f46d80b1ff0,flask.py,,flask.py,Initial checkin of stuff that exists so far.,,
33850c0ebd23ae615e6823993d441f46d80b1ff0,b15ad394279fc3b7f998fa56857f334a7c0156f6,README,,README,Added setup.py and README,"diff --git a/README b/README
new file mode 100644
index 00000000..9b82ae29
--- /dev/null
+++ b/README
@@ -0,0 +1,17 @@
+
+                        // Flask //
+
+     because a pocket knife is not the only thing that
+                    might come in handy
+
+
+    ~ What is Flask?
+
+      Flask is a microframework for Python based on Werkzeug
+      and Jinja2.  It's intended for small scale applications
+      and was development with best intentions in mind.
+
+   ~ Is it ready?
+
+      Nope, this is still work in progress, but I am happy to
+      accept patches and improvements already.
","diff --git a/README b/README
new file mode 100644
index 00000000..9b82ae29
--- /dev/null
+++ b/README
@@ -0,0 +1,17 @@
+
+                        // Flask //
+
+     because a pocket knife is not the only thing that
+                    might come in handy
+
+
+    ~ What is Flask?
+
+      Flask is a microframework for Python based on Werkzeug
+      and Jinja2.  It's intended for small scale applications
+      and was development with best intentions in mind.
+
+   ~ Is it ready?
+
+      Nope, this is still work in progress, but I am happy to
+      accept patches and improvements already.
"
33850c0ebd23ae615e6823993d441f46d80b1ff0,b15ad394279fc3b7f998fa56857f334a7c0156f6,setup.py,,setup.py,Added setup.py and README,"diff --git a/setup.py b/setup.py
new file mode 100644
index 00000000..72ef584e
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,19 @@
+from setuptools import setup
+
+
+setup(
+    name='Flask',
+    version='0.1',
+    url='http://github.com/mitsuhiko/flask/',
+    license='BSD',
+    author='Armin Ronacher',
+    author_email='armin.ronacher@active-4.com',
+    description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    modules=['flask'],
+    zip_safe=False,
+    platforms='any',
+    install_requires=[ # yes, as of now we need the development versions
+        'Werkzeug==dev',
+        'Jinja2==dev',
+    ]
+)
","diff --git a/setup.py b/setup.py
new file mode 100644
index 00000000..72ef584e
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,19 @@
+from setuptools import setup
+
+
+setup(
+    name='Flask',
+    version='0.1',
+    url='http://github.com/mitsuhiko/flask/',
+    license='BSD',
+    author='Armin Ronacher',
+    author_email='armin.ronacher@active-4.com',
+    description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    modules=['flask'],
+    zip_safe=False,
+    platforms='any',
+    install_requires=[ # yes, as of now we need the development versions
+        'Werkzeug==dev',
+        'Jinja2==dev',
+    ]
+)
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,.gitignore,.gitignore,.gitignore,Started working on documentation.  So far just the stable parts :),"diff --git a/.gitignore b/.gitignore
index 2149b775..0edef0e9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,3 +2,4 @@
 *.pyc
 *.pyo
 env
+*.egg-info
","diff --git a/.gitignore b/.gitignore
index 2149b775..0edef0e9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,3 +2,4 @@
 *.pyc
 *.pyo
 env
+*.egg-info
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/.gitignore,,docs/.gitignore,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/.gitignore b/docs/.gitignore
new file mode 100644
index 00000000..e35d8850
--- /dev/null
+++ b/docs/.gitignore
@@ -0,0 +1 @@
+_build
","diff --git a/docs/.gitignore b/docs/.gitignore
new file mode 100644
index 00000000..e35d8850
--- /dev/null
+++ b/docs/.gitignore
@@ -0,0 +1 @@
+_build
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/Makefile,,docs/Makefile,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/Makefile b/docs/Makefile
new file mode 100644
index 00000000..52d78d9e
--- /dev/null
+++ b/docs/Makefile
@@ -0,0 +1,118 @@
+# Makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line.
+SPHINXOPTS    =
+SPHINXBUILD   = sphinx-build
+PAPER         =
+BUILDDIR      = _build
+
+# Internal variables.
+PAPEROPT_a4     = -D latex_paper_size=a4
+PAPEROPT_letter = -D latex_paper_size=letter
+ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
+
+.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp epub latex changes linkcheck doctest
+
+help:
+	@echo ""Please use \`make <target>' where <target> is one of""
+	@echo ""  html       to make standalone HTML files""
+	@echo ""  dirhtml    to make HTML files named index.html in directories""
+	@echo ""  singlehtml to make a single large HTML file""
+	@echo ""  pickle     to make pickle files""
+	@echo ""  json       to make JSON files""
+	@echo ""  htmlhelp   to make HTML files and a HTML help project""
+	@echo ""  qthelp     to make HTML files and a qthelp project""
+	@echo ""  devhelp    to make HTML files and a Devhelp project""
+	@echo ""  epub       to make an epub""
+	@echo ""  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter""
+	@echo ""  latexpdf   to make LaTeX files and run them through pdflatex""
+	@echo ""  changes    to make an overview of all changed/added/deprecated items""
+	@echo ""  linkcheck  to check all external links for integrity""
+	@echo ""  doctest    to run all doctests embedded in the documentation (if enabled)""
+
+clean:
+	-rm -rf $(BUILDDIR)/*
+
+html:
+	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
+	@echo
+	@echo ""Build finished. The HTML pages are in $(BUILDDIR)/html.""
+
+dirhtml:
+	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
+	@echo
+	@echo ""Build finished. The HTML pages are in $(BUILDDIR)/dirhtml.""
+
+singlehtml:
+	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
+	@echo
+	@echo ""Build finished. The HTML page is in $(BUILDDIR)/singlehtml.""
+
+pickle:
+	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
+	@echo
+	@echo ""Build finished; now you can process the pickle files.""
+
+json:
+	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
+	@echo
+	@echo ""Build finished; now you can process the JSON files.""
+
+htmlhelp:
+	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
+	@echo
+	@echo ""Build finished; now you can run HTML Help Workshop with the"" \
+	      "".hhp project file in $(BUILDDIR)/htmlhelp.""
+
+qthelp:
+	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
+	@echo
+	@echo ""Build finished; now you can run ""qcollectiongenerator"" with the"" \
+	      "".qhcp project file in $(BUILDDIR)/qthelp, like this:""
+	@echo ""# qcollectiongenerator $(BUILDDIR)/qthelp/Flask.qhcp""
+	@echo ""To view the help file:""
+	@echo ""# assistant -collectionFile $(BUILDDIR)/qthelp/Flask.qhc""
+
+devhelp:
+	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) _build/devhelp
+	@echo
+	@echo ""Build finished.""
+	@echo ""To view the help file:""
+	@echo ""# mkdir -p $$HOME/.local/share/devhelp/Flask""
+	@echo ""# ln -s _build/devhelp $$HOME/.local/share/devhelp/Flask""
+	@echo ""# devhelp""
+
+epub:
+	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
+	@echo
+	@echo ""Build finished. The epub file is in $(BUILDDIR)/epub.""
+
+latex:
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
+	@echo
+	@echo ""Build finished; the LaTeX files are in $(BUILDDIR)/latex.""
+	@echo ""Run \`make all-pdf' or \`make all-ps' in that directory to"" \
+	      ""run these through (pdf)latex.""
+
+latexpdf: latex
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) _build/latex
+	@echo ""Running LaTeX files through pdflatex...""
+	make -C _build/latex all-pdf
+	@echo ""pdflatex finished; the PDF files are in _build/latex.""
+
+changes:
+	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
+	@echo
+	@echo ""The overview file is in $(BUILDDIR)/changes.""
+
+linkcheck:
+	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
+	@echo
+	@echo ""Link check complete; look for any errors in the above output "" \
+	      ""or in $(BUILDDIR)/linkcheck/output.txt.""
+
+doctest:
+	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
+	@echo ""Testing of doctests in the sources finished, look at the "" \
+	      ""results in $(BUILDDIR)/doctest/output.txt.""
","diff --git a/docs/Makefile b/docs/Makefile
new file mode 100644
index 00000000..52d78d9e
--- /dev/null
+++ b/docs/Makefile
@@ -0,0 +1,118 @@
+# Makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line.
+SPHINXOPTS    =
+SPHINXBUILD   = sphinx-build
+PAPER         =
+BUILDDIR      = _build
+
+# Internal variables.
+PAPEROPT_a4     = -D latex_paper_size=a4
+PAPEROPT_letter = -D latex_paper_size=letter
+ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
+
+.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp epub latex changes linkcheck doctest
+
+help:
+	@echo ""Please use \`make <target>' where <target> is one of""
+	@echo ""  html       to make standalone HTML files""
+	@echo ""  dirhtml    to make HTML files named index.html in directories""
+	@echo ""  singlehtml to make a single large HTML file""
+	@echo ""  pickle     to make pickle files""
+	@echo ""  json       to make JSON files""
+	@echo ""  htmlhelp   to make HTML files and a HTML help project""
+	@echo ""  qthelp     to make HTML files and a qthelp project""
+	@echo ""  devhelp    to make HTML files and a Devhelp project""
+	@echo ""  epub       to make an epub""
+	@echo ""  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter""
+	@echo ""  latexpdf   to make LaTeX files and run them through pdflatex""
+	@echo ""  changes    to make an overview of all changed/added/deprecated items""
+	@echo ""  linkcheck  to check all external links for integrity""
+	@echo ""  doctest    to run all doctests embedded in the documentation (if enabled)""
+
+clean:
+	-rm -rf $(BUILDDIR)/*
+
+html:
+	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
+	@echo
+	@echo ""Build finished. The HTML pages are in $(BUILDDIR)/html.""
+
+dirhtml:
+	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
+	@echo
+	@echo ""Build finished. The HTML pages are in $(BUILDDIR)/dirhtml.""
+
+singlehtml:
+	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
+	@echo
+	@echo ""Build finished. The HTML page is in $(BUILDDIR)/singlehtml.""
+
+pickle:
+	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
+	@echo
+	@echo ""Build finished; now you can process the pickle files.""
+
+json:
+	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
+	@echo
+	@echo ""Build finished; now you can process the JSON files.""
+
+htmlhelp:
+	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
+	@echo
+	@echo ""Build finished; now you can run HTML Help Workshop with the"" \
+	      "".hhp project file in $(BUILDDIR)/htmlhelp.""
+
+qthelp:
+	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
+	@echo
+	@echo ""Build finished; now you can run ""qcollectiongenerator"" with the"" \
+	      "".qhcp project file in $(BUILDDIR)/qthelp, like this:""
+	@echo ""# qcollectiongenerator $(BUILDDIR)/qthelp/Flask.qhcp""
+	@echo ""To view the help file:""
+	@echo ""# assistant -collectionFile $(BUILDDIR)/qthelp/Flask.qhc""
+
+devhelp:
+	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) _build/devhelp
+	@echo
+	@echo ""Build finished.""
+	@echo ""To view the help file:""
+	@echo ""# mkdir -p $$HOME/.local/share/devhelp/Flask""
+	@echo ""# ln -s _build/devhelp $$HOME/.local/share/devhelp/Flask""
+	@echo ""# devhelp""
+
+epub:
+	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
+	@echo
+	@echo ""Build finished. The epub file is in $(BUILDDIR)/epub.""
+
+latex:
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
+	@echo
+	@echo ""Build finished; the LaTeX files are in $(BUILDDIR)/latex.""
+	@echo ""Run \`make all-pdf' or \`make all-ps' in that directory to"" \
+	      ""run these through (pdf)latex.""
+
+latexpdf: latex
+	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) _build/latex
+	@echo ""Running LaTeX files through pdflatex...""
+	make -C _build/latex all-pdf
+	@echo ""pdflatex finished; the PDF files are in _build/latex.""
+
+changes:
+	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
+	@echo
+	@echo ""The overview file is in $(BUILDDIR)/changes.""
+
+linkcheck:
+	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
+	@echo
+	@echo ""Link check complete; look for any errors in the above output "" \
+	      ""or in $(BUILDDIR)/linkcheck/output.txt.""
+
+doctest:
+	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
+	@echo ""Testing of doctests in the sources finished, look at the "" \
+	      ""results in $(BUILDDIR)/doctest/output.txt.""
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/api.rst,,docs/api.rst,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/api.rst b/docs/api.rst
new file mode 100644
index 00000000..19bd68b0
--- /dev/null
+++ b/docs/api.rst
@@ -0,0 +1,15 @@
+API
+===
+
+.. module:: flask
+
+This part of the documentation covers all the interfaces of Flask.  For
+parts where Flask depends on external libraries, we document the most
+important right here and provide links to the canonical documentation.
+
+
+General Structure
+-----------------
+
+.. autoclass:: Flask
+   :members:
","diff --git a/docs/api.rst b/docs/api.rst
new file mode 100644
index 00000000..19bd68b0
--- /dev/null
+++ b/docs/api.rst
@@ -0,0 +1,15 @@
+API
+===
+
+.. module:: flask
+
+This part of the documentation covers all the interfaces of Flask.  For
+parts where Flask depends on external libraries, we document the most
+important right here and provide links to the canonical documentation.
+
+
+General Structure
+-----------------
+
+.. autoclass:: Flask
+   :members:
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/conf.py,,docs/conf.py,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/conf.py b/docs/conf.py
new file mode 100644
index 00000000..1e4fb807
--- /dev/null
+++ b/docs/conf.py
@@ -0,0 +1,236 @@
+# -*- coding: utf-8 -*-
+#
+# Flask documentation build configuration file, created by
+# sphinx-quickstart on Tue Apr  6 15:24:58 2010.
+#
+# This file is execfile()d with the current directory set to its containing dir.
+#
+# Note that not all possible configuration values are present in this
+# autogenerated file.
+#
+# All configuration values have a default; values that are commented out
+# serve to show the default.
+
+import sys, os
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#sys.path.append(os.path.abspath('.'))
+
+# -- General configuration -----------------------------------------------------
+
+# If your documentation needs a minimal Sphinx version, state it here.
+#needs_sphinx = '1.0'
+
+# Add any Sphinx extension module names here, as strings. They can be extensions
+# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
+extensions = ['sphinx.ext.autodoc']
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The suffix of source filenames.
+source_suffix = '.rst'
+
+# The encoding of source files.
+#source_encoding = 'utf-8-sig'
+
+# The master toctree document.
+master_doc = 'index'
+
+# General information about the project.
+project = u'Flask'
+copyright = u'2010, Armin Ronacher'
+
+import pkg_resources
+
+# The version info for the project you're documenting, acts as replacement for
+# |version| and |release|, also used in various other places throughout the
+# built documents.
+release = __import__('pkg_resources').get_distribution('Flask').version
+version = '.'.join(release.split('.')[:2])
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#language = None
+
+# There are two options for replacing |today|: either, you set today to some
+# non-false value, then it is used:
+#today = ''
+# Else, today_fmt is used as the format for a strftime call.
+#today_fmt = '%B %d, %Y'
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+exclude_patterns = ['_build']
+
+# The reST default role (used for this markup: `text`) to use for all documents.
+#default_role = None
+
+# If true, '()' will be appended to :func: etc. cross-reference text.
+#add_function_parentheses = True
+
+# If true, the current module name will be prepended to all description
+# unit titles (such as .. function::).
+#add_module_names = True
+
+# If true, sectionauthor and moduleauthor directives will be shown in the
+# output. They are ignored by default.
+#show_authors = False
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+# A list of ignored prefixes for module index sorting.
+#modindex_common_prefix = []
+
+
+# -- Options for HTML output ---------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  Major themes that come with
+# Sphinx are currently 'default' and 'sphinxdoc'.
+html_theme = 'nature'
+
+# Theme options are theme-specific and customize the look and feel of a theme
+# further.  For a list of options available for each theme, see the
+# documentation.
+#html_theme_options = {}
+
+# Add any paths that contain custom themes here, relative to this directory.
+#html_theme_path = []
+
+# The name for this set of Sphinx documents.  If None, it defaults to
+# ""<project> v<release> documentation"".
+#html_title = None
+
+# A shorter title for the navigation bar.  Default is the same as html_title.
+#html_short_title = None
+
+# The name of an image file (relative to this directory) to place at the top
+# of the sidebar.
+#html_logo = None
+
+# The name of an image file (within the static path) to use as favicon of the
+# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
+# pixels large.
+#html_favicon = None
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named ""default.css"" will overwrite the builtin ""default.css"".
+html_static_path = ['_static']
+
+# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
+# using the given strftime format.
+#html_last_updated_fmt = '%b %d, %Y'
+
+# If true, SmartyPants will be used to convert quotes and dashes to
+# typographically correct entities.
+#html_use_smartypants = True
+
+# Custom sidebar templates, maps document names to template names.
+#html_sidebars = {}
+
+# Additional templates that should be rendered to pages, maps page names to
+# template names.
+#html_additional_pages = {}
+
+# If false, no module index is generated.
+#html_use_modindex = True
+
+# If false, no index is generated.
+#html_use_index = True
+
+# If true, the index is split into individual pages for each letter.
+#html_split_index = False
+
+# If true, links to the reST sources are added to the pages.
+#html_show_sourcelink = True
+
+# If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.
+#html_show_sphinx = True
+
+# If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.
+#html_show_copyright = True
+
+# If true, an OpenSearch description file will be output, and all pages will
+# contain a <link> tag referring to it.  The value of this option must be the
+# base URL from which the finished HTML is served.
+#html_use_opensearch = ''
+
+# If nonempty, this is the file name suffix for HTML files (e.g. "".xhtml"").
+#html_file_suffix = ''
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'Flaskdoc'
+
+
+# -- Options for LaTeX output --------------------------------------------------
+
+# The paper size ('letter' or 'a4').
+#latex_paper_size = 'letter'
+
+# The font size ('10pt', '11pt' or '12pt').
+#latex_font_size = '10pt'
+
+# Grouping the document tree into LaTeX files. List of tuples
+# (source start file, target name, title, author, documentclass [howto/manual]).
+latex_documents = [
+  ('index', 'Flask.tex', u'Flask Documentation',
+   u'Armin Ronacher', 'manual'),
+]
+
+# The name of an image file (relative to this directory) to place at the top of
+# the title page.
+#latex_logo = None
+
+# For ""manual"" documents, if this is true, then toplevel headings are parts,
+# not chapters.
+#latex_use_parts = False
+
+# Additional stuff for the LaTeX preamble.
+#latex_preamble = ''
+
+# Documents to append as an appendix to all manuals.
+#latex_appendices = []
+
+# If false, no module index is generated.
+#latex_use_modindex = True
+
+
+# -- Options for Epub output ---------------------------------------------------
+
+# Bibliographic Dublin Core info.
+#epub_title = ''
+#epub_author = ''
+#epub_publisher = ''
+#epub_copyright = ''
+
+# The language of the text. It defaults to the language option
+# or en if the language is not set.
+#epub_language = ''
+
+# The scheme of the identifier. Typical schemes are ISBN or URL.
+#epub_scheme = ''
+
+# The unique identifier of the text. This can be a ISBN number
+# or the project homepage.
+#epub_identifier = ''
+
+# A unique identification for the text.
+#epub_uid = ''
+
+# HTML files that should be inserted before the pages created by sphinx.
+# The format is a list of tuples containing the path and title.
+#epub_pre_files = []
+
+# HTML files shat should be inserted after the pages created by sphinx.
+# The format is a list of tuples containing the path and title.
+#epub_post_files = []
+
+# A list of files that should not be packed into the epub file.
+#epub_exclude_files = []
+
+# The depth of the table of contents in toc.ncx.
+#epub_tocdepth = 3
","diff --git a/docs/conf.py b/docs/conf.py
new file mode 100644
index 00000000..1e4fb807
--- /dev/null
+++ b/docs/conf.py
@@ -0,0 +1,236 @@
+# -*- coding: utf-8 -*-
+#
+# Flask documentation build configuration file, created by
+# sphinx-quickstart on Tue Apr  6 15:24:58 2010.
+#
+# This file is execfile()d with the current directory set to its containing dir.
+#
+# Note that not all possible configuration values are present in this
+# autogenerated file.
+#
+# All configuration values have a default; values that are commented out
+# serve to show the default.
+
+import sys, os
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#sys.path.append(os.path.abspath('.'))
+
+# -- General configuration -----------------------------------------------------
+
+# If your documentation needs a minimal Sphinx version, state it here.
+#needs_sphinx = '1.0'
+
+# Add any Sphinx extension module names here, as strings. They can be extensions
+# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
+extensions = ['sphinx.ext.autodoc']
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# The suffix of source filenames.
+source_suffix = '.rst'
+
+# The encoding of source files.
+#source_encoding = 'utf-8-sig'
+
+# The master toctree document.
+master_doc = 'index'
+
+# General information about the project.
+project = u'Flask'
+copyright = u'2010, Armin Ronacher'
+
+import pkg_resources
+
+# The version info for the project you're documenting, acts as replacement for
+# |version| and |release|, also used in various other places throughout the
+# built documents.
+release = __import__('pkg_resources').get_distribution('Flask').version
+version = '.'.join(release.split('.')[:2])
+
+# The language for content autogenerated by Sphinx. Refer to documentation
+# for a list of supported languages.
+#language = None
+
+# There are two options for replacing |today|: either, you set today to some
+# non-false value, then it is used:
+#today = ''
+# Else, today_fmt is used as the format for a strftime call.
+#today_fmt = '%B %d, %Y'
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+exclude_patterns = ['_build']
+
+# The reST default role (used for this markup: `text`) to use for all documents.
+#default_role = None
+
+# If true, '()' will be appended to :func: etc. cross-reference text.
+#add_function_parentheses = True
+
+# If true, the current module name will be prepended to all description
+# unit titles (such as .. function::).
+#add_module_names = True
+
+# If true, sectionauthor and moduleauthor directives will be shown in the
+# output. They are ignored by default.
+#show_authors = False
+
+# The name of the Pygments (syntax highlighting) style to use.
+pygments_style = 'sphinx'
+
+# A list of ignored prefixes for module index sorting.
+#modindex_common_prefix = []
+
+
+# -- Options for HTML output ---------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  Major themes that come with
+# Sphinx are currently 'default' and 'sphinxdoc'.
+html_theme = 'nature'
+
+# Theme options are theme-specific and customize the look and feel of a theme
+# further.  For a list of options available for each theme, see the
+# documentation.
+#html_theme_options = {}
+
+# Add any paths that contain custom themes here, relative to this directory.
+#html_theme_path = []
+
+# The name for this set of Sphinx documents.  If None, it defaults to
+# ""<project> v<release> documentation"".
+#html_title = None
+
+# A shorter title for the navigation bar.  Default is the same as html_title.
+#html_short_title = None
+
+# The name of an image file (relative to this directory) to place at the top
+# of the sidebar.
+#html_logo = None
+
+# The name of an image file (within the static path) to use as favicon of the
+# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
+# pixels large.
+#html_favicon = None
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named ""default.css"" will overwrite the builtin ""default.css"".
+html_static_path = ['_static']
+
+# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
+# using the given strftime format.
+#html_last_updated_fmt = '%b %d, %Y'
+
+# If true, SmartyPants will be used to convert quotes and dashes to
+# typographically correct entities.
+#html_use_smartypants = True
+
+# Custom sidebar templates, maps document names to template names.
+#html_sidebars = {}
+
+# Additional templates that should be rendered to pages, maps page names to
+# template names.
+#html_additional_pages = {}
+
+# If false, no module index is generated.
+#html_use_modindex = True
+
+# If false, no index is generated.
+#html_use_index = True
+
+# If true, the index is split into individual pages for each letter.
+#html_split_index = False
+
+# If true, links to the reST sources are added to the pages.
+#html_show_sourcelink = True
+
+# If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.
+#html_show_sphinx = True
+
+# If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.
+#html_show_copyright = True
+
+# If true, an OpenSearch description file will be output, and all pages will
+# contain a <link> tag referring to it.  The value of this option must be the
+# base URL from which the finished HTML is served.
+#html_use_opensearch = ''
+
+# If nonempty, this is the file name suffix for HTML files (e.g. "".xhtml"").
+#html_file_suffix = ''
+
+# Output file base name for HTML help builder.
+htmlhelp_basename = 'Flaskdoc'
+
+
+# -- Options for LaTeX output --------------------------------------------------
+
+# The paper size ('letter' or 'a4').
+#latex_paper_size = 'letter'
+
+# The font size ('10pt', '11pt' or '12pt').
+#latex_font_size = '10pt'
+
+# Grouping the document tree into LaTeX files. List of tuples
+# (source start file, target name, title, author, documentclass [howto/manual]).
+latex_documents = [
+  ('index', 'Flask.tex', u'Flask Documentation',
+   u'Armin Ronacher', 'manual'),
+]
+
+# The name of an image file (relative to this directory) to place at the top of
+# the title page.
+#latex_logo = None
+
+# For ""manual"" documents, if this is true, then toplevel headings are parts,
+# not chapters.
+#latex_use_parts = False
+
+# Additional stuff for the LaTeX preamble.
+#latex_preamble = ''
+
+# Documents to append as an appendix to all manuals.
+#latex_appendices = []
+
+# If false, no module index is generated.
+#latex_use_modindex = True
+
+
+# -- Options for Epub output ---------------------------------------------------
+
+# Bibliographic Dublin Core info.
+#epub_title = ''
+#epub_author = ''
+#epub_publisher = ''
+#epub_copyright = ''
+
+# The language of the text. It defaults to the language option
+# or en if the language is not set.
+#epub_language = ''
+
+# The scheme of the identifier. Typical schemes are ISBN or URL.
+#epub_scheme = ''
+
+# The unique identifier of the text. This can be a ISBN number
+# or the project homepage.
+#epub_identifier = ''
+
+# A unique identification for the text.
+#epub_uid = ''
+
+# HTML files that should be inserted before the pages created by sphinx.
+# The format is a list of tuples containing the path and title.
+#epub_pre_files = []
+
+# HTML files shat should be inserted after the pages created by sphinx.
+# The format is a list of tuples containing the path and title.
+#epub_post_files = []
+
+# A list of files that should not be packed into the epub file.
+#epub_exclude_files = []
+
+# The depth of the table of contents in toc.ncx.
+#epub_tocdepth = 3
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/index.rst,,docs/index.rst,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/index.rst b/docs/index.rst
new file mode 100644
index 00000000..217ced04
--- /dev/null
+++ b/docs/index.rst
@@ -0,0 +1,11 @@
+Welcome to Flask
+================
+
+Welcome to Flask's documentation.
+
+Contents:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
","diff --git a/docs/index.rst b/docs/index.rst
new file mode 100644
index 00000000..217ced04
--- /dev/null
+++ b/docs/index.rst
@@ -0,0 +1,11 @@
+Welcome to Flask
+================
+
+Welcome to Flask's documentation.
+
+Contents:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,docs/make.bat,,docs/make.bat,Started working on documentation.  So far just the stable parts :),"diff --git a/docs/make.bat b/docs/make.bat
new file mode 100644
index 00000000..3ad12879
--- /dev/null
+++ b/docs/make.bat
@@ -0,0 +1,139 @@
+@ECHO OFF
+
+REM Command file for Sphinx documentation
+
+if ""%SPHINXBUILD%"" == """" (
+	set SPHINXBUILD=sphinx-build
+)
+set BUILDDIR=_build
+set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
+if NOT ""%PAPER%"" == """" (
+	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
+)
+
+if ""%1"" == """" goto help
+
+if ""%1"" == ""help"" (
+	:help
+	echo.Please use `make ^<target^>` where ^<target^> is one of
+	echo.  html       to make standalone HTML files
+	echo.  dirhtml    to make HTML files named index.html in directories
+	echo.  singlehtml to make a single large HTML file
+	echo.  pickle     to make pickle files
+	echo.  json       to make JSON files
+	echo.  htmlhelp   to make HTML files and a HTML help project
+	echo.  qthelp     to make HTML files and a qthelp project
+	echo.  devhelp    to make HTML files and a Devhelp project
+	echo.  epub       to make an epub
+	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
+	echo.  changes    to make an overview over all changed/added/deprecated items
+	echo.  linkcheck  to check all external links for integrity
+	echo.  doctest    to run all doctests embedded in the documentation if enabled
+	goto end
+)
+
+if ""%1"" == ""clean"" (
+	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
+	del /q /s %BUILDDIR%\*
+	goto end
+)
+
+if ""%1"" == ""html"" (
+	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
+	goto end
+)
+
+if ""%1"" == ""dirhtml"" (
+	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
+	goto end
+)
+
+if ""%1"" == ""singlehtml"" (
+	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
+	goto end
+)
+
+if ""%1"" == ""pickle"" (
+	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
+	echo.
+	echo.Build finished; now you can process the pickle files.
+	goto end
+)
+
+if ""%1"" == ""json"" (
+	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
+	echo.
+	echo.Build finished; now you can process the JSON files.
+	goto end
+)
+
+if ""%1"" == ""htmlhelp"" (
+	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
+	echo.
+	echo.Build finished; now you can run HTML Help Workshop with the ^
+.hhp project file in %BUILDDIR%/htmlhelp.
+	goto end
+)
+
+if ""%1"" == ""qthelp"" (
+	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
+	echo.
+	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
+.qhcp project file in %BUILDDIR%/qthelp, like this:
+	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\Flask.qhcp
+	echo.To view the help file:
+	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\Flask.ghc
+	goto end
+)
+
+if ""%1"" == ""devhelp"" (
+	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% _build/devhelp
+	echo.
+	echo.Build finished.
+	goto end
+)
+
+if ""%1"" == ""epub"" (
+	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
+	echo.
+	echo.Build finished. The epub file is in %BUILDDIR%/epub.
+	goto end
+)
+
+if ""%1"" == ""latex"" (
+	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
+	echo.
+	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
+	goto end
+)
+
+if ""%1"" == ""changes"" (
+	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
+	echo.
+	echo.The overview file is in %BUILDDIR%/changes.
+	goto end
+)
+
+if ""%1"" == ""linkcheck"" (
+	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
+	echo.
+	echo.Link check complete; look for any errors in the above output ^
+or in %BUILDDIR%/linkcheck/output.txt.
+	goto end
+)
+
+if ""%1"" == ""doctest"" (
+	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
+	echo.
+	echo.Testing of doctests in the sources finished, look at the ^
+results in %BUILDDIR%/doctest/output.txt.
+	goto end
+)
+
+:end
","diff --git a/docs/make.bat b/docs/make.bat
new file mode 100644
index 00000000..3ad12879
--- /dev/null
+++ b/docs/make.bat
@@ -0,0 +1,139 @@
+@ECHO OFF
+
+REM Command file for Sphinx documentation
+
+if ""%SPHINXBUILD%"" == """" (
+	set SPHINXBUILD=sphinx-build
+)
+set BUILDDIR=_build
+set ALLSPHINXOPTS=-d %BUILDDIR%/doctrees %SPHINXOPTS% .
+if NOT ""%PAPER%"" == """" (
+	set ALLSPHINXOPTS=-D latex_paper_size=%PAPER% %ALLSPHINXOPTS%
+)
+
+if ""%1"" == """" goto help
+
+if ""%1"" == ""help"" (
+	:help
+	echo.Please use `make ^<target^>` where ^<target^> is one of
+	echo.  html       to make standalone HTML files
+	echo.  dirhtml    to make HTML files named index.html in directories
+	echo.  singlehtml to make a single large HTML file
+	echo.  pickle     to make pickle files
+	echo.  json       to make JSON files
+	echo.  htmlhelp   to make HTML files and a HTML help project
+	echo.  qthelp     to make HTML files and a qthelp project
+	echo.  devhelp    to make HTML files and a Devhelp project
+	echo.  epub       to make an epub
+	echo.  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter
+	echo.  changes    to make an overview over all changed/added/deprecated items
+	echo.  linkcheck  to check all external links for integrity
+	echo.  doctest    to run all doctests embedded in the documentation if enabled
+	goto end
+)
+
+if ""%1"" == ""clean"" (
+	for /d %%i in (%BUILDDIR%\*) do rmdir /q /s %%i
+	del /q /s %BUILDDIR%\*
+	goto end
+)
+
+if ""%1"" == ""html"" (
+	%SPHINXBUILD% -b html %ALLSPHINXOPTS% %BUILDDIR%/html
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/html.
+	goto end
+)
+
+if ""%1"" == ""dirhtml"" (
+	%SPHINXBUILD% -b dirhtml %ALLSPHINXOPTS% %BUILDDIR%/dirhtml
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/dirhtml.
+	goto end
+)
+
+if ""%1"" == ""singlehtml"" (
+	%SPHINXBUILD% -b singlehtml %ALLSPHINXOPTS% %BUILDDIR%/singlehtml
+	echo.
+	echo.Build finished. The HTML pages are in %BUILDDIR%/singlehtml.
+	goto end
+)
+
+if ""%1"" == ""pickle"" (
+	%SPHINXBUILD% -b pickle %ALLSPHINXOPTS% %BUILDDIR%/pickle
+	echo.
+	echo.Build finished; now you can process the pickle files.
+	goto end
+)
+
+if ""%1"" == ""json"" (
+	%SPHINXBUILD% -b json %ALLSPHINXOPTS% %BUILDDIR%/json
+	echo.
+	echo.Build finished; now you can process the JSON files.
+	goto end
+)
+
+if ""%1"" == ""htmlhelp"" (
+	%SPHINXBUILD% -b htmlhelp %ALLSPHINXOPTS% %BUILDDIR%/htmlhelp
+	echo.
+	echo.Build finished; now you can run HTML Help Workshop with the ^
+.hhp project file in %BUILDDIR%/htmlhelp.
+	goto end
+)
+
+if ""%1"" == ""qthelp"" (
+	%SPHINXBUILD% -b qthelp %ALLSPHINXOPTS% %BUILDDIR%/qthelp
+	echo.
+	echo.Build finished; now you can run ""qcollectiongenerator"" with the ^
+.qhcp project file in %BUILDDIR%/qthelp, like this:
+	echo.^> qcollectiongenerator %BUILDDIR%\qthelp\Flask.qhcp
+	echo.To view the help file:
+	echo.^> assistant -collectionFile %BUILDDIR%\qthelp\Flask.ghc
+	goto end
+)
+
+if ""%1"" == ""devhelp"" (
+	%SPHINXBUILD% -b devhelp %ALLSPHINXOPTS% _build/devhelp
+	echo.
+	echo.Build finished.
+	goto end
+)
+
+if ""%1"" == ""epub"" (
+	%SPHINXBUILD% -b epub %ALLSPHINXOPTS% %BUILDDIR%/epub
+	echo.
+	echo.Build finished. The epub file is in %BUILDDIR%/epub.
+	goto end
+)
+
+if ""%1"" == ""latex"" (
+	%SPHINXBUILD% -b latex %ALLSPHINXOPTS% %BUILDDIR%/latex
+	echo.
+	echo.Build finished; the LaTeX files are in %BUILDDIR%/latex.
+	goto end
+)
+
+if ""%1"" == ""changes"" (
+	%SPHINXBUILD% -b changes %ALLSPHINXOPTS% %BUILDDIR%/changes
+	echo.
+	echo.The overview file is in %BUILDDIR%/changes.
+	goto end
+)
+
+if ""%1"" == ""linkcheck"" (
+	%SPHINXBUILD% -b linkcheck %ALLSPHINXOPTS% %BUILDDIR%/linkcheck
+	echo.
+	echo.Link check complete; look for any errors in the above output ^
+or in %BUILDDIR%/linkcheck/output.txt.
+	goto end
+)
+
+if ""%1"" == ""doctest"" (
+	%SPHINXBUILD% -b doctest %ALLSPHINXOPTS% %BUILDDIR%/doctest
+	echo.
+	echo.Testing of doctests in the sources finished, look at the ^
+results in %BUILDDIR%/doctest/output.txt.
+	goto end
+)
+
+:end
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Started working on documentation.  So far just the stable parts :),"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 60f3fc0a..264325ec 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -57,7 +57,7 @@ def format_datetime(timestamp):
 def gravatar_url(email, size=80):
     """"""Return the gravatar image for the given email address""""""
     return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \
-        (md5(email.lower().encode('utf-8')).hexdigest(), size)
+        (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
 
 @app.request_init
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 60f3fc0a..264325ec 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -57,7 +57,7 @@ def format_datetime(timestamp):
 def gravatar_url(email, size=80):
     """"""Return the gravatar image for the given email address""""""
     return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \
-        (md5(email.lower().encode('utf-8')).hexdigest(), size)
+        (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
 
 @app.request_init
"
b15ad394279fc3b7f998fa56857f334a7c0156f6,4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,flask.py,flask.py,flask.py,Started working on documentation.  So far just the stable parts :),"diff --git a/flask.py b/flask.py
index 83d8a87e..20306a81 100644
--- a/flask.py
+++ b/flask.py
@@ -125,9 +125,22 @@ def render_template_string(source, **context):
 
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
-    object.  It is passed the name of the module or package of the application
-    and optionally a configuration.  When it's created it sets up the
-    template engine and provides ways to register view functions.
+    object.  It is passed the name of the module or package of the
+    application.  Once it is created it will act as a central registry for
+    the view functions, the URL rules, template configuration and much more.
+
+    The name of the package is used to resolve resources from inside the
+    package or the folder the module is contained in depending on if the
+    package parameter resolves to an actual python package (a folder with
+    an `__init__.py` file inside) or a standard module (just a `.py` file).
+
+    For more information about resource loading, see :func:`open_resource`.
+
+    Usually you create a :class:`Flask` instance in your main module or
+    in the `__init__.py` file of your package like this::
+
+        from flask import Flask
+        app = Flask(__name__)
     """"""
 
     #: the class that is used for request objects
@@ -156,11 +169,43 @@ class Flask(object):
     )
 
     def __init__(self, package_name):
+        #: the debug flag.  Set this to `True` to enable debugging of
+        #: the application.  In debug mode the debugger will kick in
+        #: when an unhandled exception ocurrs and the integrated server
+        #: will automatically reload the application if changes in the
+        #: code are detected.
         self.debug = False
+
+        #: the name of the package or module.  Do not change this once
+        #: it was set by the constructor.
         self.package_name = package_name
+
+        #: a dictionary of all view functions registered.  The keys will
+        #: be function names which are also used to generate URLs and
+        #: the values are the function objects themselves.
+        #: to register a view function, use the :meth:`route` decorator.
         self.view_functions = {}
+
+        #: a dictionary of all registered error handlers.  The key is
+        #: be the error code as integer, the value the function that
+        #: should handle that error.
+        #: To register a error handler, use the :meth:`errorhandler`
+        #: decorator.
         self.error_handlers = {}
+
+        #: a list of functions that should be called at the beginning
+        #: of the request before request dispatching kicks in.  This
+        #: can for example be used to open database connections or
+        #: getting hold of the currently logged in user.
+        #: To register a function here, use the :meth:`request_init`
+        #: decorator.
         self.request_init_funcs = []
+
+        #: a list of functions that are called at the end of the
+        #: request.  Tha function is passed the current response
+        #: object and modify it in place or replace it.
+        #: To register a function here use the :meth:`request_shtdown`
+        #: decorator.
         self.request_shutdown_funcs = []
         self.url_map = Map()
 
@@ -168,6 +213,9 @@ class Flask(object):
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
 
+        #: the Jinja2 environment.  It is created from the
+        #: :attr:`jinja_options` and the loader that is returned
+        #: by the :meth:`create_jinja_loader` function.
         self.jinja_env = Environment(loader=self.create_jinja_loader(),
                                      **self.jinja_options)
         self.jinja_env.globals.update(
@@ -187,7 +235,10 @@ class Flask(object):
         return PackageLoader(self.package_name)
 
     def run(self, host='localhost', port=5000, **options):
-        """"""Runs the application on a local development server""""""
+        """"""Runs the application on a local development server.  If the
+        :attr:`debug` flag is set the server will automatically reload
+        for code changes and show a debugger in case an exception happened.
+        """"""
         from werkzeug import run_simple
         if 'debug' in options:
             self.debug = options.pop('debug')
@@ -206,12 +257,30 @@ class Flask(object):
         return Client(self, self.response_class, use_cookies=True)
 
     def open_resource(self, resource):
-        """"""Opens a resource from the application's resource folder""""""
+        """"""Opens a resource from the application's resource folder.  To see
+        how this works, consider the following folder structure::
+
+            /myapplication.py
+            /schemal.sql
+            /static
+                /style.css
+            /template
+                /layout.html
+                /index.html
+
+        If you want to open the `schema.sql` file you would do the
+        following::
+
+            with app.open_resource('schema.sql') as f:
+                contents = f.read()
+                do_something_with(contents)
+        """"""
         return pkg_resources.resource_stream(self.package_name, resource)
 
     def open_session(self, request):
-        """"""Creates or opens a new session.  Default implementation requires
-        that `securecookie.secret_key` is set.
+        """"""Creates or opens a new session.  Default implementation stores all
+        session data in a signed cookie.  This requires that the
+        :attr:`secret_key` is set.
         """"""
         key = self.secret_key
         if key is not None:
@@ -219,7 +288,9 @@ class Flask(object):
                                             secret_key=key)
 
     def save_session(self, session, response):
-        """"""Saves the session if it needs updates.""""""
+        """"""Saves the session if it needs updates.  For the default
+        implementation, check :meth:`open_session`.
+        """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
@@ -230,6 +301,46 @@ class Flask(object):
             @app.route('/')
             def index():
                 return 'Hello World'
+
+        Variables parts in the route can be specified with angular
+        brackets (``/user/<username>``).  By default a variable part
+        in the URL accepts any string without a slash however a differnt
+        converter can be specified as well by using ``<converter:name>``.
+
+        Variable parts are passed to the view function as keyword
+        arguments.
+
+        The following converters are possible:
+
+        =========== ===========================================
+        `int`       accepts integers
+        `float`     like `int` but for floating point values
+        `path`      like the default but also accepts slashes
+        =========== ===========================================
+
+        Here some examples::
+
+            @app.route('/')
+            def index():
+                pass
+
+            @app.route('/<username>')
+            def show_user(username):
+                pass
+
+            @app.route('/post/<int:post_id>')
+            def show_post(post_id):
+                pass
+
+        The :meth:`route` decorator accepts a couple of other arguments
+        as well:
+
+        :param methods: a list of methods this rule should be limited
+                        to (``GET``, ``POST`` etc.)
+        :param subdomain: specifies the rule for the subdoain in case
+                          subdomain matching is in use.
+        :param strict_slashes: can be used to disable the strict slashes
+                               setting for this rule.  See above.
         """"""
         def decorator(f):
             if 'endpoint' not in options:
","diff --git a/flask.py b/flask.py
index 83d8a87e..20306a81 100644
--- a/flask.py
+++ b/flask.py
@@ -125,9 +125,22 @@ def render_template_string(source, **context):
 
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
-    object.  It is passed the name of the module or package of the application
-    and optionally a configuration.  When it's created it sets up the
-    template engine and provides ways to register view functions.
+    object.  It is passed the name of the module or package of the
+    application.  Once it is created it will act as a central registry for
+    the view functions, the URL rules, template configuration and much more.
+
+    The name of the package is used to resolve resources from inside the
+    package or the folder the module is contained in depending on if the
+    package parameter resolves to an actual python package (a folder with
+    an `__init__.py` file inside) or a standard module (just a `.py` file).
+
+    For more information about resource loading, see :func:`open_resource`.
+
+    Usually you create a :class:`Flask` instance in your main module or
+    in the `__init__.py` file of your package like this::
+
+        from flask import Flask
+        app = Flask(__name__)
     """"""
 
     #: the class that is used for request objects
@@ -156,11 +169,43 @@ class Flask(object):
     )
 
     def __init__(self, package_name):
+        #: the debug flag.  Set this to `True` to enable debugging of
+        #: the application.  In debug mode the debugger will kick in
+        #: when an unhandled exception ocurrs and the integrated server
+        #: will automatically reload the application if changes in the
+        #: code are detected.
         self.debug = False
+
+        #: the name of the package or module.  Do not change this once
+        #: it was set by the constructor.
         self.package_name = package_name
+
+        #: a dictionary of all view functions registered.  The keys will
+        #: be function names which are also used to generate URLs and
+        #: the values are the function objects themselves.
+        #: to register a view function, use the :meth:`route` decorator.
         self.view_functions = {}
+
+        #: a dictionary of all registered error handlers.  The key is
+        #: be the error code as integer, the value the function that
+        #: should handle that error.
+        #: To register a error handler, use the :meth:`errorhandler`
+        #: decorator.
         self.error_handlers = {}
+
+        #: a list of functions that should be called at the beginning
+        #: of the request before request dispatching kicks in.  This
+        #: can for example be used to open database connections or
+        #: getting hold of the currently logged in user.
+        #: To register a function here, use the :meth:`request_init`
+        #: decorator.
         self.request_init_funcs = []
+
+        #: a list of functions that are called at the end of the
+        #: request.  Tha function is passed the current response
+        #: object and modify it in place or replace it.
+        #: To register a function here use the :meth:`request_shtdown`
+        #: decorator.
         self.request_shutdown_funcs = []
         self.url_map = Map()
 
@@ -168,6 +213,9 @@ class Flask(object):
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
 
+        #: the Jinja2 environment.  It is created from the
+        #: :attr:`jinja_options` and the loader that is returned
+        #: by the :meth:`create_jinja_loader` function.
         self.jinja_env = Environment(loader=self.create_jinja_loader(),
                                      **self.jinja_options)
         self.jinja_env.globals.update(
@@ -187,7 +235,10 @@ class Flask(object):
         return PackageLoader(self.package_name)
 
     def run(self, host='localhost', port=5000, **options):
-        """"""Runs the application on a local development server""""""
+        """"""Runs the application on a local development server.  If the
+        :attr:`debug` flag is set the server will automatically reload
+        for code changes and show a debugger in case an exception happened.
+        """"""
         from werkzeug import run_simple
         if 'debug' in options:
             self.debug = options.pop('debug')
@@ -206,12 +257,30 @@ class Flask(object):
         return Client(self, self.response_class, use_cookies=True)
 
     def open_resource(self, resource):
-        """"""Opens a resource from the application's resource folder""""""
+        """"""Opens a resource from the application's resource folder.  To see
+        how this works, consider the following folder structure::
+
+            /myapplication.py
+            /schemal.sql
+            /static
+                /style.css
+            /template
+                /layout.html
+                /index.html
+
+        If you want to open the `schema.sql` file you would do the
+        following::
+
+            with app.open_resource('schema.sql') as f:
+                contents = f.read()
+                do_something_with(contents)
+        """"""
         return pkg_resources.resource_stream(self.package_name, resource)
 
     def open_session(self, request):
-        """"""Creates or opens a new session.  Default implementation requires
-        that `securecookie.secret_key` is set.
+        """"""Creates or opens a new session.  Default implementation stores all
+        session data in a signed cookie.  This requires that the
+        :attr:`secret_key` is set.
         """"""
         key = self.secret_key
         if key is not None:
@@ -219,7 +288,9 @@ class Flask(object):
                                             secret_key=key)
 
     def save_session(self, session, response):
-        """"""Saves the session if it needs updates.""""""
+        """"""Saves the session if it needs updates.  For the default
+        implementation, check :meth:`open_session`.
+        """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
@@ -230,6 +301,46 @@ class Flask(object):
             @app.route('/')
             def index():
                 return 'Hello World'
+
+        Variables parts in the route can be specified with angular
+        brackets (``/user/<username>``).  By default a variable part
+        in the URL accepts any string without a slash however a differnt
+        converter can be specified as well by using ``<converter:name>``.
+
+        Variable parts are passed to the view function as keyword
+        arguments.
+
+        The following converters are possible:
+
+        =========== ===========================================
+        `int`       accepts integers
+        `float`     like `int` but for floating point values
+        `path`      like the default but also accepts slashes
+        =========== ===========================================
+
+        Here some examples::
+
+            @app.route('/')
+            def index():
+                pass
+
+            @app.route('/<username>')
+            def show_user(username):
+                pass
+
+            @app.route('/post/<int:post_id>')
+            def show_post(post_id):
+                pass
+
+        The :meth:`route` decorator accepts a couple of other arguments
+        as well:
+
+        :param methods: a list of methods this rule should be limited
+                        to (``GET``, ``POST`` etc.)
+        :param subdomain: specifies the rule for the subdoain in case
+                          subdomain matching is in use.
+        :param strict_slashes: can be used to disable the strict slashes
+                               setting for this rule.  See above.
         """"""
         def decorator(f):
             if 'endpoint' not in options:
"
4ec7d2a0d8eac4f915dc0d38a886cd57045bb0c4,44b42e0fbd93d86e0f4e929bda8e5fb63e81035d,examples/minitwit/README,,examples/minitwit/README,Added a README file for MiniTwit.,"diff --git a/examples/minitwit/README b/examples/minitwit/README
new file mode 100644
index 00000000..f054fd8f
--- /dev/null
+++ b/examples/minitwit/README
@@ -0,0 +1,21 @@
+
+                        / MiniTwit /
+
+           because writing todo lists is not fun
+
+
+    ~ What is MiniTwit?
+
+      A SQLite and Flask powered twitter clone
+
+    ~ How do I use it?
+
+      1. edit the configurtion in the minitwit.py file
+
+      2. fire up a python shell and run this:
+
+         >>> from minitwit import init_db; init_db()
+
+      3. now you can run the minitwit.py file with your
+         python interpreter and the application will
+         greet you on http://localhost:5000/
","diff --git a/examples/minitwit/README b/examples/minitwit/README
new file mode 100644
index 00000000..f054fd8f
--- /dev/null
+++ b/examples/minitwit/README
@@ -0,0 +1,21 @@
+
+                        / MiniTwit /
+
+           because writing todo lists is not fun
+
+
+    ~ What is MiniTwit?
+
+      A SQLite and Flask powered twitter clone
+
+    ~ How do I use it?
+
+      1. edit the configurtion in the minitwit.py file
+
+      2. fire up a python shell and run this:
+
+         >>> from minitwit import init_db; init_db()
+
+      3. now you can run the minitwit.py file with your
+         python interpreter and the application will
+         greet you on http://localhost:5000/
"
44b42e0fbd93d86e0f4e929bda8e5fb63e81035d,3b36bef2e6165bb4dad73d17f23ee1879e99f497,docs/api.rst,docs/api.rst,docs/api.rst,"Improved documentation, added a contextmanager for request binding","diff --git a/docs/api.rst b/docs/api.rst
index 19bd68b0..5ab86e7d 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -8,8 +8,158 @@ parts where Flask depends on external libraries, we document the most
 important right here and provide links to the canonical documentation.
 
 
-General Structure
------------------
+Application Object
+------------------
 
 .. autoclass:: Flask
    :members:
+
+Incoming Request Data
+---------------------
+
+.. class:: request
+
+   To access incoming request data, you can use the global `request`
+   object.  Flask parses incoming request data for you and gives you
+   access to it through that global object.  Internally Flask makes
+   sure that you always get the correct data for the active thread if you
+   are in a multithreaded environment.
+
+   The request object is an instance of a :class:`~werkzeug.Request`
+   subclass and provides all of the attributes Werkzeug defines.  This
+   just shows a quick overview of the most important ones.
+
+   .. attribute:: form
+
+      A :class:`~werkzeug.MultiDict` with the parsed form data from `POST`
+      or `PUT` requests.  Please keep in mind that file uploads will not
+      end up here,  but instead in the :attr:`files` attribute.
+
+   .. attribute:: args
+
+      A :class:`~werkzeug.MultiDict` with the parsed contents of the query
+      string.  (The part in the URL after the question mark).
+
+   .. attribute:: values
+
+      A :class:`~werkzeug.CombinedMultiDict` with the contents of both
+      :attr:`form` and :attr:`args`.
+
+   .. attribute:: cookies
+
+      A :class:`dict` with the contents of all cookies transmitted with
+      the request.
+
+   .. attribute:: stream
+
+      If the incoming form data was not encoded with a known encoding (for
+      example it was transmitted as JSON) the data is stored unmodified in
+      this stream for consumption.  For example to read the incoming
+      request data as JSON, one can do the following::
+
+          json_body = simplejson.load(request.stream)
+
+   .. attribute:: files
+
+      A :class:`~werkzeug.MultiDict` with files uploaded as part of a
+      `POST` or `PUT` request.  Each file is stored as
+      :class:`~werkzeug.FileStorage` object.  It basically behaves like a
+      standard file object you know from Python, with the difference that
+      it also has a :meth:`~werkzeug.FileStorage.save` function that can
+      store the file on the filesystem.
+
+   .. attribute:: method
+
+      The current request method (``POST``, ``GET`` etc.)
+
+   .. attribute:: path
+   .. attribute:: script_root
+   .. attribute:: url
+   .. attribute:: base_url
+   .. attribute:: url_root
+
+      Provides different ways to look at the current URL.  Imagine your
+      application is listening on the following URL::
+
+          http://www.example.com/myapplication
+
+      And a user requests the following URL::
+
+          http://www.example.com/myapplication/page.html?x=y
+
+      In this case the values of the above mentioned attributes would be
+      the following:
+
+      ============= ======================================================
+      `path`        ``/page.html``
+      `script_root` ``/myapplication``
+      `url`         ``http://www.example.com/myapplication/page.html``
+      `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
+      `root_url`    ``http://www.example.com/myapplication/``
+      ============= ======================================================
+
+
+Sessions
+--------
+
+If you have the :attr:`Flask.secret_key` set you can use sessions in Flask
+applications.  A session basically makes it possible to remember
+information from one request to another.  The way Flask does this is by
+using a signed cookie.  So the user can look at the session contents, but
+not modify it unless he knows the secret key, so make sure to set that to
+something complex and unguessable.
+
+To access the current session you can use the :class:`session` object:
+
+.. class:: session
+
+   The session object works pretty much like an ordinary dict, with the
+   difference that it keeps track on modifications.
+
+   The following attributes are interesting:
+
+   .. attribute:: new
+
+      `True` if the session is new, `False` otherwise.
+
+   .. attribute:: modified
+
+      `True` if the session object detected a modification.  Be advised
+      that modifications on mutable structures are not picked up
+      automatically, in that situation you have to explicitly set the
+      attribute to `True` yourself.  Here an example::
+
+          # this change is not picked up because a mutable object (here
+          # a list) is changed.
+          session['objects'].append(42)
+          # so mark it as modified yourself
+          session.modified = True
+
+
+Useful Functions and Classes
+----------------------------
+
+.. autofunction:: url_for
+
+.. autofunction:: abort
+
+.. autofunction:: redirect
+
+.. autofunction:: escape
+
+.. autoclass:: Markup
+   :members: escape, unescape, striptags
+
+Message Flashing
+----------------
+
+.. autofunction:: flash
+
+.. autofunction:: get_flashed_messages
+
+Template Rendering
+------------------
+
+.. autofunction:: render_template
+
+.. autofunction:: render_template_string
","diff --git a/docs/api.rst b/docs/api.rst
index 19bd68b0..5ab86e7d 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -8,8 +8,158 @@ parts where Flask depends on external libraries, we document the most
 important right here and provide links to the canonical documentation.
 
 
-General Structure
------------------
+Application Object
+------------------
 
 .. autoclass:: Flask
    :members:
+
+Incoming Request Data
+---------------------
+
+.. class:: request
+
+   To access incoming request data, you can use the global `request`
+   object.  Flask parses incoming request data for you and gives you
+   access to it through that global object.  Internally Flask makes
+   sure that you always get the correct data for the active thread if you
+   are in a multithreaded environment.
+
+   The request object is an instance of a :class:`~werkzeug.Request`
+   subclass and provides all of the attributes Werkzeug defines.  This
+   just shows a quick overview of the most important ones.
+
+   .. attribute:: form
+
+      A :class:`~werkzeug.MultiDict` with the parsed form data from `POST`
+      or `PUT` requests.  Please keep in mind that file uploads will not
+      end up here,  but instead in the :attr:`files` attribute.
+
+   .. attribute:: args
+
+      A :class:`~werkzeug.MultiDict` with the parsed contents of the query
+      string.  (The part in the URL after the question mark).
+
+   .. attribute:: values
+
+      A :class:`~werkzeug.CombinedMultiDict` with the contents of both
+      :attr:`form` and :attr:`args`.
+
+   .. attribute:: cookies
+
+      A :class:`dict` with the contents of all cookies transmitted with
+      the request.
+
+   .. attribute:: stream
+
+      If the incoming form data was not encoded with a known encoding (for
+      example it was transmitted as JSON) the data is stored unmodified in
+      this stream for consumption.  For example to read the incoming
+      request data as JSON, one can do the following::
+
+          json_body = simplejson.load(request.stream)
+
+   .. attribute:: files
+
+      A :class:`~werkzeug.MultiDict` with files uploaded as part of a
+      `POST` or `PUT` request.  Each file is stored as
+      :class:`~werkzeug.FileStorage` object.  It basically behaves like a
+      standard file object you know from Python, with the difference that
+      it also has a :meth:`~werkzeug.FileStorage.save` function that can
+      store the file on the filesystem.
+
+   .. attribute:: method
+
+      The current request method (``POST``, ``GET`` etc.)
+
+   .. attribute:: path
+   .. attribute:: script_root
+   .. attribute:: url
+   .. attribute:: base_url
+   .. attribute:: url_root
+
+      Provides different ways to look at the current URL.  Imagine your
+      application is listening on the following URL::
+
+          http://www.example.com/myapplication
+
+      And a user requests the following URL::
+
+          http://www.example.com/myapplication/page.html?x=y
+
+      In this case the values of the above mentioned attributes would be
+      the following:
+
+      ============= ======================================================
+      `path`        ``/page.html``
+      `script_root` ``/myapplication``
+      `url`         ``http://www.example.com/myapplication/page.html``
+      `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
+      `root_url`    ``http://www.example.com/myapplication/``
+      ============= ======================================================
+
+
+Sessions
+--------
+
+If you have the :attr:`Flask.secret_key` set you can use sessions in Flask
+applications.  A session basically makes it possible to remember
+information from one request to another.  The way Flask does this is by
+using a signed cookie.  So the user can look at the session contents, but
+not modify it unless he knows the secret key, so make sure to set that to
+something complex and unguessable.
+
+To access the current session you can use the :class:`session` object:
+
+.. class:: session
+
+   The session object works pretty much like an ordinary dict, with the
+   difference that it keeps track on modifications.
+
+   The following attributes are interesting:
+
+   .. attribute:: new
+
+      `True` if the session is new, `False` otherwise.
+
+   .. attribute:: modified
+
+      `True` if the session object detected a modification.  Be advised
+      that modifications on mutable structures are not picked up
+      automatically, in that situation you have to explicitly set the
+      attribute to `True` yourself.  Here an example::
+
+          # this change is not picked up because a mutable object (here
+          # a list) is changed.
+          session['objects'].append(42)
+          # so mark it as modified yourself
+          session.modified = True
+
+
+Useful Functions and Classes
+----------------------------
+
+.. autofunction:: url_for
+
+.. autofunction:: abort
+
+.. autofunction:: redirect
+
+.. autofunction:: escape
+
+.. autoclass:: Markup
+   :members: escape, unescape, striptags
+
+Message Flashing
+----------------
+
+.. autofunction:: flash
+
+.. autofunction:: get_flashed_messages
+
+Template Rendering
+------------------
+
+.. autofunction:: render_template
+
+.. autofunction:: render_template_string
"
44b42e0fbd93d86e0f4e929bda8e5fb63e81035d,3b36bef2e6165bb4dad73d17f23ee1879e99f497,docs/conf.py,docs/conf.py,docs/conf.py,"Improved documentation, added a contextmanager for request binding","diff --git a/docs/conf.py b/docs/conf.py
index 1e4fb807..85c52700 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -25,7 +25,7 @@ import sys, os
 
 # Add any Sphinx extension module names here, as strings. They can be extensions
 # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
-extensions = ['sphinx.ext.autodoc']
+extensions = ['sphinx.ext.autodoc', 'sphinx.ext.intersphinx']
 
 # Add any paths that contain templates here, relative to this directory.
 templates_path = ['_templates']
@@ -234,3 +234,8 @@ latex_documents = [
 
 # The depth of the table of contents in toc.ncx.
 #epub_tocdepth = 3
+
+intersphinx_mapping = {
+    'http://docs.python.org/dev': None,
+    'http://werkzeug.pocoo.org/documentation/dev/': None
+}
","diff --git a/docs/conf.py b/docs/conf.py
index 1e4fb807..85c52700 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -25,7 +25,7 @@ import sys, os
 
 # Add any Sphinx extension module names here, as strings. They can be extensions
 # coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
-extensions = ['sphinx.ext.autodoc']
+extensions = ['sphinx.ext.autodoc', 'sphinx.ext.intersphinx']
 
 # Add any paths that contain templates here, relative to this directory.
 templates_path = ['_templates']
@@ -234,3 +234,8 @@ latex_documents = [
 
 # The depth of the table of contents in toc.ncx.
 #epub_tocdepth = 3
+
+intersphinx_mapping = {
+    'http://docs.python.org/dev': None,
+    'http://werkzeug.pocoo.org/documentation/dev/': None
+}
"
44b42e0fbd93d86e0f4e929bda8e5fb63e81035d,3b36bef2e6165bb4dad73d17f23ee1879e99f497,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,"Improved documentation, added a contextmanager for request binding","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 264325ec..fccf969c 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -7,8 +7,8 @@ from hashlib import md5
 from datetime import datetime
 from contextlib import closing
 from flask import Flask, request, session, url_for, redirect, \
-     render_template, abort, g, flash, generate_password_hash, \
-     check_password_hash
+     render_template, abort, g, flash
+from werkzeug import check_password_hash, generate_password_hash
 
 
 # configuration
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 264325ec..fccf969c 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -7,8 +7,8 @@ from hashlib import md5
 from datetime import datetime
 from contextlib import closing
 from flask import Flask, request, session, url_for, redirect, \
-     render_template, abort, g, flash, generate_password_hash, \
-     check_password_hash
+     render_template, abort, g, flash
+from werkzeug import check_password_hash, generate_password_hash
 
 
 # configuration
"
44b42e0fbd93d86e0f4e929bda8e5fb63e81035d,3b36bef2e6165bb4dad73d17f23ee1879e99f497,flask.py,flask.py,flask.py,"Improved documentation, added a contextmanager for request binding","diff --git a/flask.py b/flask.py
index 20306a81..794f234a 100644
--- a/flask.py
+++ b/flask.py
@@ -13,25 +13,17 @@ import os
 import sys
 import pkg_resources
 from threading import local
+from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
-from werkzeug import Request, Response, LocalStack, LocalProxy
+from werkzeug import Request, Response, LocalStack, LocalProxy, \
+     create_environ, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
 
-# try to import the json helpers
-try:
-    from simplejson import loads as load_json, dumps as dump_json
-except ImportError:
-    try:
-        from json import loads as load_json, dumps as dump_json
-    except ImportError:
-        pass
-
 # utilities we import from Werkzeug and Jinja2 that are unused
 # in the module but are exported as public interface.
-from werkzeug import abort, redirect, secure_filename, cached_property, \
-     html, import_string, generate_password_hash, check_password_hash
+from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
 
@@ -83,12 +75,6 @@ def url_for(endpoint, **values):
     return _request_ctx_stack.top.url_adapter.build(endpoint, values)
 
 
-def jsonified(**values):
-    """"""Returns a json response""""""
-    return current_app.response_class(dump_json(values),
-                                      mimetype='application/json')
-
-
 def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
@@ -113,6 +99,7 @@ def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
     """"""
+    current_app.update_template_context(context)
     return current_app.jinja_env.get_template(template_name).render(context)
 
 
@@ -120,6 +107,7 @@ def render_template_string(source, **context):
     """"""Renders a template from the given template source string
     with the given context.
     """"""
+    current_app.update_template_context(context)
     return current_app.jinja_env.from_string(source).render(context)
 
 
@@ -220,9 +208,6 @@ class Flask(object):
                                      **self.jinja_options)
         self.jinja_env.globals.update(
             url_for=url_for,
-            request=request,
-            session=session,
-            g=g,
             get_flashed_messages=get_flashed_messages
         )
 
@@ -234,6 +219,15 @@ class Flask(object):
         """"""
         return PackageLoader(self.package_name)
 
+    def update_template_context(self, context):
+        """"""Update the template context with some commonly used variables.
+        This injects request, session and g into the template context.
+        """"""
+        reqctx = _request_ctx_stack.top
+        context['request'] = reqctx.request
+        context['session'] = reqctx.session
+        context['g'] = reqctx.g
+
     def run(self, host='localhost', port=5000, **options):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
@@ -443,17 +437,38 @@ class Flask(object):
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
         """"""
-        _request_ctx_stack.push(_RequestContext(self, environ))
-        try:
+        with self.request_context(environ):
             rv = self.preprocess_request()
             if rv is None:
                 rv = self.dispatch_request()
             response = self.make_response(rv)
             response = self.process_response(response)
             return response(environ, start_response)
+
+    @contextmanager
+    def request_context(self, environ):
+        """"""Creates a request context from the given environment and binds
+        it to the current context.  This must be used in combination with
+        the `with` statement because the request is only bound to the
+        current context for the duration of the `with` block.
+
+        Example usage::
+
+            with app.request_context(environ):
+                do_something_with(request)
+        """"""
+        _request_ctx_stack.push(_RequestContext(self, environ))
+        try:
+            yield
         finally:
             _request_ctx_stack.pop()
 
+    def test_request_context(self, *args, **kwargs):
+        """"""Creates a WSGI environment from the given values (see
+        :func:`werkzeug.create_environ` for more information).
+        """"""
+        return self.request_context(create_environ(*args, **kwargs))
+
     def __call__(self, environ, start_response):
         """"""Shortcut for :attr:`wsgi_app`""""""
         return self.wsgi_app(environ, start_response)
","diff --git a/flask.py b/flask.py
index 20306a81..794f234a 100644
--- a/flask.py
+++ b/flask.py
@@ -13,25 +13,17 @@ import os
 import sys
 import pkg_resources
 from threading import local
+from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
-from werkzeug import Request, Response, LocalStack, LocalProxy
+from werkzeug import Request, Response, LocalStack, LocalProxy, \
+     create_environ, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
 
-# try to import the json helpers
-try:
-    from simplejson import loads as load_json, dumps as dump_json
-except ImportError:
-    try:
-        from json import loads as load_json, dumps as dump_json
-    except ImportError:
-        pass
-
 # utilities we import from Werkzeug and Jinja2 that are unused
 # in the module but are exported as public interface.
-from werkzeug import abort, redirect, secure_filename, cached_property, \
-     html, import_string, generate_password_hash, check_password_hash
+from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
 
@@ -83,12 +75,6 @@ def url_for(endpoint, **values):
     return _request_ctx_stack.top.url_adapter.build(endpoint, values)
 
 
-def jsonified(**values):
-    """"""Returns a json response""""""
-    return current_app.response_class(dump_json(values),
-                                      mimetype='application/json')
-
-
 def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
@@ -113,6 +99,7 @@ def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
     """"""
+    current_app.update_template_context(context)
     return current_app.jinja_env.get_template(template_name).render(context)
 
 
@@ -120,6 +107,7 @@ def render_template_string(source, **context):
     """"""Renders a template from the given template source string
     with the given context.
     """"""
+    current_app.update_template_context(context)
     return current_app.jinja_env.from_string(source).render(context)
 
 
@@ -220,9 +208,6 @@ class Flask(object):
                                      **self.jinja_options)
         self.jinja_env.globals.update(
             url_for=url_for,
-            request=request,
-            session=session,
-            g=g,
             get_flashed_messages=get_flashed_messages
         )
 
@@ -234,6 +219,15 @@ class Flask(object):
         """"""
         return PackageLoader(self.package_name)
 
+    def update_template_context(self, context):
+        """"""Update the template context with some commonly used variables.
+        This injects request, session and g into the template context.
+        """"""
+        reqctx = _request_ctx_stack.top
+        context['request'] = reqctx.request
+        context['session'] = reqctx.session
+        context['g'] = reqctx.g
+
     def run(self, host='localhost', port=5000, **options):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
@@ -443,17 +437,38 @@ class Flask(object):
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
         """"""
-        _request_ctx_stack.push(_RequestContext(self, environ))
-        try:
+        with self.request_context(environ):
             rv = self.preprocess_request()
             if rv is None:
                 rv = self.dispatch_request()
             response = self.make_response(rv)
             response = self.process_response(response)
             return response(environ, start_response)
+
+    @contextmanager
+    def request_context(self, environ):
+        """"""Creates a request context from the given environment and binds
+        it to the current context.  This must be used in combination with
+        the `with` statement because the request is only bound to the
+        current context for the duration of the `with` block.
+
+        Example usage::
+
+            with app.request_context(environ):
+                do_something_with(request)
+        """"""
+        _request_ctx_stack.push(_RequestContext(self, environ))
+        try:
+            yield
         finally:
             _request_ctx_stack.pop()
 
+    def test_request_context(self, *args, **kwargs):
+        """"""Creates a WSGI environment from the given values (see
+        :func:`werkzeug.create_environ` for more information).
+        """"""
+        return self.request_context(create_environ(*args, **kwargs))
+
     def __call__(self, environ, start_response):
         """"""Shortcut for :attr:`wsgi_app`""""""
         return self.wsgi_app(environ, start_response)
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,docs/api.rst,docs/api.rst,docs/api.rst,Updated documentation.  Starting to look pretty good,"diff --git a/docs/api.rst b/docs/api.rst
index 5ab86e7d..6c763393 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -68,6 +68,10 @@ Incoming Request Data
       it also has a :meth:`~werkzeug.FileStorage.save` function that can
       store the file on the filesystem.
 
+   .. attribute:: environ
+
+      The underlying WSGI environment.
+
    .. attribute:: method
 
       The current request method (``POST``, ``GET`` etc.)
@@ -136,6 +140,22 @@ To access the current session you can use the :class:`session` object:
           session.modified = True
 
 
+Application Globals
+-------------------
+
+To share data that is valid for one request only from one function to
+another, a global variable is not good enough because it would break in
+threaded environments.  Flask provides you with a special object that
+ensures it is only valid for the active request and that will return
+different values for each request.  In a nutshell: it does the right
+thing, like it does for :class:`request` and :class:`session`.
+
+.. data:: g
+   
+   Just store on this whatever you want.  For example a database
+   connection or the user that is currently logged in.
+
+
 Useful Functions and Classes
 ----------------------------
 
","diff --git a/docs/api.rst b/docs/api.rst
index 5ab86e7d..6c763393 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -68,6 +68,10 @@ Incoming Request Data
       it also has a :meth:`~werkzeug.FileStorage.save` function that can
       store the file on the filesystem.
 
+   .. attribute:: environ
+
+      The underlying WSGI environment.
+
    .. attribute:: method
 
       The current request method (``POST``, ``GET`` etc.)
@@ -136,6 +140,22 @@ To access the current session you can use the :class:`session` object:
           session.modified = True
 
 
+Application Globals
+-------------------
+
+To share data that is valid for one request only from one function to
+another, a global variable is not good enough because it would break in
+threaded environments.  Flask provides you with a special object that
+ensures it is only valid for the active request and that will return
+different values for each request.  In a nutshell: it does the right
+thing, like it does for :class:`request` and :class:`session`.
+
+.. data:: g
+   
+   Just store on this whatever you want.  For example a database
+   connection or the user that is currently logged in.
+
+
 Useful Functions and Classes
 ----------------------------
 
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,docs/index.rst,docs/index.rst,docs/index.rst,Updated documentation.  Starting to look pretty good,"diff --git a/docs/index.rst b/docs/index.rst
index 217ced04..5e5d8622 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -8,4 +8,6 @@ Contents:
 .. toctree::
    :maxdepth: 2
 
+   installation
+   quickstart
    api
","diff --git a/docs/index.rst b/docs/index.rst
index 217ced04..5e5d8622 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -8,4 +8,6 @@ Contents:
 .. toctree::
    :maxdepth: 2
 
+   installation
+   quickstart
    api
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,docs/installation.rst,,docs/installation.rst,Updated documentation.  Starting to look pretty good,"diff --git a/docs/installation.rst b/docs/installation.rst
new file mode 100644
index 00000000..8b0804d2
--- /dev/null
+++ b/docs/installation.rst
@@ -0,0 +1,6 @@
+.. _installation:
+
+Installation
+============
+
+Blafasel, add me
","diff --git a/docs/installation.rst b/docs/installation.rst
new file mode 100644
index 00000000..8b0804d2
--- /dev/null
+++ b/docs/installation.rst
@@ -0,0 +1,6 @@
+.. _installation:
+
+Installation
+============
+
+Blafasel, add me
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,docs/quickstart.rst,,docs/quickstart.rst,Updated documentation.  Starting to look pretty good,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
new file mode 100644
index 00000000..0bfd7df7
--- /dev/null
+++ b/docs/quickstart.rst
@@ -0,0 +1,312 @@
+Quickstart
+==========
+
+Eager to get started?  This page gives a good introduction in how to gets
+started with Flask.  This assumes you already have Flask installed.  If
+you do not, head over to the :ref:`installation` section.
+
+
+A Minimal Application
+---------------------
+
+A minimal Flask application looks something like that::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def hello_world():
+        return ""Hello World!""
+
+    if __name__ == '__main__':
+        app.run()
+
+If you now start that application with your Python interpreter and head
+over to `http://localhost:5000/ <http://localhost:5000/>`_, you should see
+your hello world application.
+
+So what did that code do?
+
+1. first we imported the :class:`~flask.Flask` class.  An instance of this
+   class will be our WSGI application.
+2. next we create an instance of it.  We pass it the name of the module /
+   package.  This is needed so that Flask knows where it should look for
+   templates, static files and so on.
+3. Then we use the :meth:`~flask.Flask.route` decorator to tell Flask
+   what URL should trigger our function.
+4. The function then has a name which is also used to generate URLs to
+   that particular function, and returns the message we want to display in
+   the user's browser.
+5. Finally we use the :meth:`~flask.Flask.run` function to run the
+   local server with our application.  The ``if __name__ == '__main__':``
+   makes sure the server only runs if the script is executed directly from
+   the Python interpreter and not used as imported module.
+
+
+Routing
+-------
+
+As you have seen above, the :meth:`~flask.Flask.route` decorator is used
+to bind a function to a URL.  But there is more to it!  You can make
+certain parts of the URL dynamic and attach multiple rules to a function.
+
+Here some examples::
+
+    @app.route('/')
+    def index():
+        return 'Index Page'
+
+    @app.route('/hello')
+    def hello():
+        return 'Hello World'
+
+
+Variable Rules
+``````````````
+
+Modern web applications have beautiful URLs.  This helps people remember
+the URLs which is especially handy for applications that are used from
+mobile devices with slower network connections.  If the user can directly
+go to the desired page without having to hit the index page it is more
+likely he will like the page and come back next time.
+
+To add variable parts to a URL you can mark these special sections as
+``<variable_name>``.  Such a part is then passed as keyword argument to
+your function.  Optionally a converter can be specifed by specifying a
+rule with ``<converter:variable_name>``.  Here some nice examples::
+
+    @app.route('/user/<username>')
+    def show_user_profile(username):
+        # show the user profile for that user
+        pass
+
+    @app.route('/post/<int:post_id>')
+    def show_post(post_id):
+        # show the post with the given id, the id is an integer
+        pass
+
+The following converters exist:
+
+=========== ===========================================
+`int`       accepts integers
+`float`     like `int` but for floating point values
+`path`      like the default but also accepts slashes
+=========== ===========================================
+
+
+HTTP Methods
+````````````
+
+HTTP knows different methods to access URLs.  By default a route only
+answers to ``GET`` requests, but that can be changed by providing the
+`methods` argument to the :meth:`~flask.Flask.route` decorator.  Here some
+examples::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        if request.method == 'POST':
+            do_the_login()
+        else:
+            show_the_login_form()
+
+If ``GET`` is present, ``HEAD`` will be added automatically for you.  You
+don't have to deal with that.  It will also make sure that ``HEAD``
+requests are handled like the RFC demands, so you can completely ignore
+that part of the HTTP specification.
+
+
+Accessing Request Data
+----------------------
+
+For web applications it's crucial to react to the data a client sent to
+the server.  In Flask this information is provided by the global
+:class:`~flask.request` object.  If you have some experience with Python
+you might be wondering how that object can be global and how Flask
+manages to still be threadsafe.  The answer are context locals:
+
+Context Locals
+``````````````
+
+.. admonition:: Insider Information
+
+   If you want to understand how that works and how you can implement
+   tests with context locals, read this section, otherwise just skip it.
+
+Certain objects in Flask are global objects, but not just a standard
+global object, but actually a proxy to an object that is local to a
+specific context.  What a mouthful.  But that is actually quite easy to
+understand.
+
+Imagine the context being the handling thread.  A request comes in and the
+webserver decides to spawn a new thread (or something else, the
+underlying object is capable of dealing with other concurrency systems
+than threads as well).  When Flask starts its internal request handling it
+figures out that the current thread is the active context and binds the
+current application and the WSGI environments to that context (thread).
+It does that in an intelligent way that one application can invoke another
+application without breaking.
+
+So what does this mean to you?  Basically you can completely ignore that
+this is the case unless you are unittesting or something different.  You
+will notice that code that depends on a request object will suddenly break
+because there is no request object.  The solution is creating a request
+object yourself and binding it to the context.  The easiest solution for
+unittesting is by using the :meth:`~flask.Flask.test_request_context`
+context manager.  In combination with the `with` statement it will bind a
+test request so that you can interact with it.  Here an example::
+
+    from flask import request
+
+    with app.test_request_context('/hello', method='POST'):
+        # now you can do something with the request until the
+        # end of the with block, such as basic assertions:
+        assert request.path == '/hello'
+        assert request.method == 'POST'
+
+The other possibility is passing a whole WSGI environment to the
+:meth:`~flask.Flask.request_context` method::
+
+    from flask import request
+
+    with app.request_context(environ):
+        assert request.method == 'POST'
+
+The Request Object
+``````````````````
+
+The request object is documented in the API section and we will not cover
+it here in detail (see :class:`~flask.request`), but just mention some of
+the most common operations.  First of all you have to import it from the
+the `flask` module::
+
+    from flask import request
+
+The current request method is available by using the
+:attr:`~flask.request.method` attribute.  To access form data (data
+transmitted in a `POST` or `PUT` request) you can use the
+:attr:`~flask.request.form` attribute.  Here a full example of the two
+attributes mentioned above::
+
+    @app.route('/login', method=['POST', 'GET'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if valid_login(request.form['username'],
+                           request.form['password']):
+                return log_the_user_in(request.form['username'])
+            else:
+                error = 'Invalid username/password'
+        # this is executed if the request method was GET or the
+        # credentials were invalid
+
+What happens if the key does not exist in the `form` attribute?  In that
+case a special :exc:`KeyError` is raised.  You can catch it like a
+standard :exc:`KeyError` but if you don't do that, a HTTP 400 Bad Request
+error page is shown instead.  So for many situations you don't have to
+deal with that problem.
+
+To access parameters submitted in the URL (``?key=value``) you can use the
+:attr:`~flask.request.args` attribute::
+
+    searchword = request.args.get('q', '')
+
+We recommend accessing URL parameters with `get` or by catching the
+`KeyError` because users might change the URL and presenting them a 400
+bad request page in that case is a bit user unfriendly.
+
+For a full list of methods and attribtues on that object, head over to the
+:class:`~flask.request` documentation.
+
+
+File Uploads
+````````````
+
+Obviously you can handle uploaded files with Flask just as easy.  Just
+make sure not to forget to set the ``enctype=""multipart/form-data""``
+attribtue on your HTML form, otherwise the browser will not transmit your
+files at all.
+
+Uploaded files are stored in memory or at a temporary location on the
+filesystem.  You can access those files by looking at the
+:attr:`~flask.request.files` attribute on the request object.  Each
+uploaded file is stored in that dictionary.  It behaves just like a
+standard Python :class:`file` object, but it also has a
+:meth:`~werkzeug.FileStorage.save` method that allows you to store that
+file on the filesystem of the server.  Here a simple example how that
+works::
+
+    from flask import request
+
+    @app.route('/upload', methods=['GET', 'POST'])
+    def upload_file():
+        if request.method == 'POST':
+            f = request.files['the_file']
+            f.save('/var/www/uploads/uploaded_file.txt')
+        ...
+
+If you want to know how the file was named on the client before it was
+uploaded to your application, you can access the
+:attr:`~werkzeug.FileStorage.filename` attribute.  However please keep in
+mind that this value can be forged so never ever trust that value.  If you
+want to use the filename of the client to store the file on the server,
+pass it through the :func:`~werkzeug.secure_filename` function that
+Werkzeug provides for you::
+
+    from flask import request
+    from werkzeug import secure_filename
+
+    @app.route('/upload', methods=['GET', 'POST'])
+    def upload_file():
+        if request.method == 'POST':
+            f= request.files['the_file']
+            f.save('/var/www/uploads/' + secure_filename(f.filename))
+        ...
+
+Cookies
+```````
+
+To access cookies you can use the :attr:`~flask.request.cookies`
+attribute.  Again this is a dictionary with all the cookies the client
+transmits.  If you want to use sessions, do not use the cookies directly
+but instead use the :ref:`sessions` in Flask that add some security on top
+of cookies for you.
+
+.. _sessions:
+
+Sessions
+--------
+
+Besides the request object there is also a second object called
+:class:`~flask.session` that allows you to store information specific to a
+user from one request to the next.  This is implemented on top of cookies
+for you and signes the cookies cryptographically.  What this means is that
+the user could look at the contents of your cookie but not modify it,
+unless he knows the secret key used for signing.
+
+In order to use sessions you have to set a secret key.  Here is how
+sessions work::
+
+    from flask import session, redirect, url_for, escape
+
+    @app.route('/')
+    def index():
+        if 'username' in session:
+            return 'Logged in as %s' % escape(session['username'])
+        return 'You are not logged in'
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        if request.method == 'POST':
+            session['username'] = request.form['username']
+            return redirect(url_for('index'))
+        return '''
+            <form action="""" method=""post"">
+                <p><input type=text name=username>
+                <p><input type=submit value=Login>
+            </form>
+        '''
+
+    @app.route('/logout')
+    def logout():
+        # remove the username from the session if its there
+        session.pop('username', None)
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
new file mode 100644
index 00000000..0bfd7df7
--- /dev/null
+++ b/docs/quickstart.rst
@@ -0,0 +1,312 @@
+Quickstart
+==========
+
+Eager to get started?  This page gives a good introduction in how to gets
+started with Flask.  This assumes you already have Flask installed.  If
+you do not, head over to the :ref:`installation` section.
+
+
+A Minimal Application
+---------------------
+
+A minimal Flask application looks something like that::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def hello_world():
+        return ""Hello World!""
+
+    if __name__ == '__main__':
+        app.run()
+
+If you now start that application with your Python interpreter and head
+over to `http://localhost:5000/ <http://localhost:5000/>`_, you should see
+your hello world application.
+
+So what did that code do?
+
+1. first we imported the :class:`~flask.Flask` class.  An instance of this
+   class will be our WSGI application.
+2. next we create an instance of it.  We pass it the name of the module /
+   package.  This is needed so that Flask knows where it should look for
+   templates, static files and so on.
+3. Then we use the :meth:`~flask.Flask.route` decorator to tell Flask
+   what URL should trigger our function.
+4. The function then has a name which is also used to generate URLs to
+   that particular function, and returns the message we want to display in
+   the user's browser.
+5. Finally we use the :meth:`~flask.Flask.run` function to run the
+   local server with our application.  The ``if __name__ == '__main__':``
+   makes sure the server only runs if the script is executed directly from
+   the Python interpreter and not used as imported module.
+
+
+Routing
+-------
+
+As you have seen above, the :meth:`~flask.Flask.route` decorator is used
+to bind a function to a URL.  But there is more to it!  You can make
+certain parts of the URL dynamic and attach multiple rules to a function.
+
+Here some examples::
+
+    @app.route('/')
+    def index():
+        return 'Index Page'
+
+    @app.route('/hello')
+    def hello():
+        return 'Hello World'
+
+
+Variable Rules
+``````````````
+
+Modern web applications have beautiful URLs.  This helps people remember
+the URLs which is especially handy for applications that are used from
+mobile devices with slower network connections.  If the user can directly
+go to the desired page without having to hit the index page it is more
+likely he will like the page and come back next time.
+
+To add variable parts to a URL you can mark these special sections as
+``<variable_name>``.  Such a part is then passed as keyword argument to
+your function.  Optionally a converter can be specifed by specifying a
+rule with ``<converter:variable_name>``.  Here some nice examples::
+
+    @app.route('/user/<username>')
+    def show_user_profile(username):
+        # show the user profile for that user
+        pass
+
+    @app.route('/post/<int:post_id>')
+    def show_post(post_id):
+        # show the post with the given id, the id is an integer
+        pass
+
+The following converters exist:
+
+=========== ===========================================
+`int`       accepts integers
+`float`     like `int` but for floating point values
+`path`      like the default but also accepts slashes
+=========== ===========================================
+
+
+HTTP Methods
+````````````
+
+HTTP knows different methods to access URLs.  By default a route only
+answers to ``GET`` requests, but that can be changed by providing the
+`methods` argument to the :meth:`~flask.Flask.route` decorator.  Here some
+examples::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        if request.method == 'POST':
+            do_the_login()
+        else:
+            show_the_login_form()
+
+If ``GET`` is present, ``HEAD`` will be added automatically for you.  You
+don't have to deal with that.  It will also make sure that ``HEAD``
+requests are handled like the RFC demands, so you can completely ignore
+that part of the HTTP specification.
+
+
+Accessing Request Data
+----------------------
+
+For web applications it's crucial to react to the data a client sent to
+the server.  In Flask this information is provided by the global
+:class:`~flask.request` object.  If you have some experience with Python
+you might be wondering how that object can be global and how Flask
+manages to still be threadsafe.  The answer are context locals:
+
+Context Locals
+``````````````
+
+.. admonition:: Insider Information
+
+   If you want to understand how that works and how you can implement
+   tests with context locals, read this section, otherwise just skip it.
+
+Certain objects in Flask are global objects, but not just a standard
+global object, but actually a proxy to an object that is local to a
+specific context.  What a mouthful.  But that is actually quite easy to
+understand.
+
+Imagine the context being the handling thread.  A request comes in and the
+webserver decides to spawn a new thread (or something else, the
+underlying object is capable of dealing with other concurrency systems
+than threads as well).  When Flask starts its internal request handling it
+figures out that the current thread is the active context and binds the
+current application and the WSGI environments to that context (thread).
+It does that in an intelligent way that one application can invoke another
+application without breaking.
+
+So what does this mean to you?  Basically you can completely ignore that
+this is the case unless you are unittesting or something different.  You
+will notice that code that depends on a request object will suddenly break
+because there is no request object.  The solution is creating a request
+object yourself and binding it to the context.  The easiest solution for
+unittesting is by using the :meth:`~flask.Flask.test_request_context`
+context manager.  In combination with the `with` statement it will bind a
+test request so that you can interact with it.  Here an example::
+
+    from flask import request
+
+    with app.test_request_context('/hello', method='POST'):
+        # now you can do something with the request until the
+        # end of the with block, such as basic assertions:
+        assert request.path == '/hello'
+        assert request.method == 'POST'
+
+The other possibility is passing a whole WSGI environment to the
+:meth:`~flask.Flask.request_context` method::
+
+    from flask import request
+
+    with app.request_context(environ):
+        assert request.method == 'POST'
+
+The Request Object
+``````````````````
+
+The request object is documented in the API section and we will not cover
+it here in detail (see :class:`~flask.request`), but just mention some of
+the most common operations.  First of all you have to import it from the
+the `flask` module::
+
+    from flask import request
+
+The current request method is available by using the
+:attr:`~flask.request.method` attribute.  To access form data (data
+transmitted in a `POST` or `PUT` request) you can use the
+:attr:`~flask.request.form` attribute.  Here a full example of the two
+attributes mentioned above::
+
+    @app.route('/login', method=['POST', 'GET'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if valid_login(request.form['username'],
+                           request.form['password']):
+                return log_the_user_in(request.form['username'])
+            else:
+                error = 'Invalid username/password'
+        # this is executed if the request method was GET or the
+        # credentials were invalid
+
+What happens if the key does not exist in the `form` attribute?  In that
+case a special :exc:`KeyError` is raised.  You can catch it like a
+standard :exc:`KeyError` but if you don't do that, a HTTP 400 Bad Request
+error page is shown instead.  So for many situations you don't have to
+deal with that problem.
+
+To access parameters submitted in the URL (``?key=value``) you can use the
+:attr:`~flask.request.args` attribute::
+
+    searchword = request.args.get('q', '')
+
+We recommend accessing URL parameters with `get` or by catching the
+`KeyError` because users might change the URL and presenting them a 400
+bad request page in that case is a bit user unfriendly.
+
+For a full list of methods and attribtues on that object, head over to the
+:class:`~flask.request` documentation.
+
+
+File Uploads
+````````````
+
+Obviously you can handle uploaded files with Flask just as easy.  Just
+make sure not to forget to set the ``enctype=""multipart/form-data""``
+attribtue on your HTML form, otherwise the browser will not transmit your
+files at all.
+
+Uploaded files are stored in memory or at a temporary location on the
+filesystem.  You can access those files by looking at the
+:attr:`~flask.request.files` attribute on the request object.  Each
+uploaded file is stored in that dictionary.  It behaves just like a
+standard Python :class:`file` object, but it also has a
+:meth:`~werkzeug.FileStorage.save` method that allows you to store that
+file on the filesystem of the server.  Here a simple example how that
+works::
+
+    from flask import request
+
+    @app.route('/upload', methods=['GET', 'POST'])
+    def upload_file():
+        if request.method == 'POST':
+            f = request.files['the_file']
+            f.save('/var/www/uploads/uploaded_file.txt')
+        ...
+
+If you want to know how the file was named on the client before it was
+uploaded to your application, you can access the
+:attr:`~werkzeug.FileStorage.filename` attribute.  However please keep in
+mind that this value can be forged so never ever trust that value.  If you
+want to use the filename of the client to store the file on the server,
+pass it through the :func:`~werkzeug.secure_filename` function that
+Werkzeug provides for you::
+
+    from flask import request
+    from werkzeug import secure_filename
+
+    @app.route('/upload', methods=['GET', 'POST'])
+    def upload_file():
+        if request.method == 'POST':
+            f= request.files['the_file']
+            f.save('/var/www/uploads/' + secure_filename(f.filename))
+        ...
+
+Cookies
+```````
+
+To access cookies you can use the :attr:`~flask.request.cookies`
+attribute.  Again this is a dictionary with all the cookies the client
+transmits.  If you want to use sessions, do not use the cookies directly
+but instead use the :ref:`sessions` in Flask that add some security on top
+of cookies for you.
+
+.. _sessions:
+
+Sessions
+--------
+
+Besides the request object there is also a second object called
+:class:`~flask.session` that allows you to store information specific to a
+user from one request to the next.  This is implemented on top of cookies
+for you and signes the cookies cryptographically.  What this means is that
+the user could look at the contents of your cookie but not modify it,
+unless he knows the secret key used for signing.
+
+In order to use sessions you have to set a secret key.  Here is how
+sessions work::
+
+    from flask import session, redirect, url_for, escape
+
+    @app.route('/')
+    def index():
+        if 'username' in session:
+            return 'Logged in as %s' % escape(session['username'])
+        return 'You are not logged in'
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        if request.method == 'POST':
+            session['username'] = request.form['username']
+            return redirect(url_for('index'))
+        return '''
+            <form action="""" method=""post"">
+                <p><input type=text name=username>
+                <p><input type=submit value=Login>
+            </form>
+        '''
+
+    @app.route('/logout')
+    def logout():
+        # remove the username from the session if its there
+        session.pop('username', None)
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Updated documentation.  Starting to look pretty good,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index fccf969c..ebb304a7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -148,7 +148,7 @@ def unfollow_user(username):
     return redirect(url_for('user_timeline', username=username))
 
 
-@app.route('/add_message')
+@app.route('/add_message', methods=['POST'])
 def add_message():
     if 'user_id' not in session:
         abort(401)
@@ -161,7 +161,7 @@ def add_message():
     return redirect(url_for('timeline'))
 
 
-@app.route('/login')
+@app.route('/login', methods=['GET', 'POST'])
 def login():
     if 'user_id' in session:
         return redirect(url_for('timeline'))
@@ -181,7 +181,7 @@ def login():
     return render_template('login.html', error=error)
 
 
-@app.route('/register')
+@app.route('/register', methods=['GET', 'POST'])
 def register():
     if 'user_id' in session:
         return redirect(url_for('timeline'))
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index fccf969c..ebb304a7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -148,7 +148,7 @@ def unfollow_user(username):
     return redirect(url_for('user_timeline', username=username))
 
 
-@app.route('/add_message')
+@app.route('/add_message', methods=['POST'])
 def add_message():
     if 'user_id' not in session:
         abort(401)
@@ -161,7 +161,7 @@ def add_message():
     return redirect(url_for('timeline'))
 
 
-@app.route('/login')
+@app.route('/login', methods=['GET', 'POST'])
 def login():
     if 'user_id' in session:
         return redirect(url_for('timeline'))
@@ -181,7 +181,7 @@ def login():
     return render_template('login.html', error=error)
 
 
-@app.route('/register')
+@app.route('/register', methods=['GET', 'POST'])
 def register():
     if 'user_id' in session:
         return redirect(url_for('timeline'))
"
3b36bef2e6165bb4dad73d17f23ee1879e99f497,4aa76212d1be9b17a57249549c2a73fb10b6cda8,flask.py,flask.py,flask.py,Updated documentation.  Starting to look pretty good,"diff --git a/flask.py b/flask.py
index 794f234a..9ea9db5c 100644
--- a/flask.py
+++ b/flask.py
@@ -326,11 +326,25 @@ class Flask(object):
             def show_post(post_id):
                 pass
 
+        An important detail to keep in mind is how Flask deals with trailing
+        slashes.  The idea is to keep each URL unique so the following rules
+        apply:
+
+        1. If a rule ends with a slash and is requested without a slash
+           by the user, the user is automatically redirected to the same
+           page with a trailing slash attached.
+        2. If a rule does not end with a trailing slash and the user request
+           the page with a trailing slash, a 404 not found is raised.
+
+        This is consistent with how web servers deal with static files.  This
+        also makes it possible to use relative link targets safely.
+
         The :meth:`route` decorator accepts a couple of other arguments
         as well:
 
         :param methods: a list of methods this rule should be limited
-                        to (``GET``, ``POST`` etc.)
+                        to (``GET``, ``POST`` etc.).  By default a rule
+                        just listens for ``GET`` (and implicitly ``HEAD``).
         :param subdomain: specifies the rule for the subdoain in case
                           subdomain matching is in use.
         :param strict_slashes: can be used to disable the strict slashes
@@ -339,6 +353,7 @@ class Flask(object):
         def decorator(f):
             if 'endpoint' not in options:
                 options['endpoint'] = f.__name__
+            options.setdefault('methods', ('GET',))
             self.url_map.add(Rule(rule, **options))
             self.view_functions[options['endpoint']] = f
             return f
","diff --git a/flask.py b/flask.py
index 794f234a..9ea9db5c 100644
--- a/flask.py
+++ b/flask.py
@@ -326,11 +326,25 @@ class Flask(object):
             def show_post(post_id):
                 pass
 
+        An important detail to keep in mind is how Flask deals with trailing
+        slashes.  The idea is to keep each URL unique so the following rules
+        apply:
+
+        1. If a rule ends with a slash and is requested without a slash
+           by the user, the user is automatically redirected to the same
+           page with a trailing slash attached.
+        2. If a rule does not end with a trailing slash and the user request
+           the page with a trailing slash, a 404 not found is raised.
+
+        This is consistent with how web servers deal with static files.  This
+        also makes it possible to use relative link targets safely.
+
         The :meth:`route` decorator accepts a couple of other arguments
         as well:
 
         :param methods: a list of methods this rule should be limited
-                        to (``GET``, ``POST`` etc.)
+                        to (``GET``, ``POST`` etc.).  By default a rule
+                        just listens for ``GET`` (and implicitly ``HEAD``).
         :param subdomain: specifies the rule for the subdoain in case
                           subdomain matching is in use.
         :param strict_slashes: can be used to disable the strict slashes
@@ -339,6 +353,7 @@ class Flask(object):
         def decorator(f):
             if 'endpoint' not in options:
                 options['endpoint'] = f.__name__
+            options.setdefault('methods', ('GET',))
             self.url_map.add(Rule(rule, **options))
             self.view_functions[options['endpoint']] = f
             return f
"
4aa76212d1be9b17a57249549c2a73fb10b6cda8,625eba4bb403296a8bbc1e72cc9cf4a5126f6c02,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Heavily improved quickstart section.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 0bfd7df7..e95e467a 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -93,6 +93,40 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+URL Building
+````````````
+
+If it can match URLs, can it also generate them?  Of course you can.  To
+build a URL to a specific function you can use the :func:`~flask.url_for`
+function.  It accepts the name of the function as first argument and a
+number of keyword arguments, each corresponding to the variable part of
+the URL rule.  Here some examples:
+
+>>> from flask import Flask, url_for
+>>> app = Flask(__name__)
+>>> @app.route('/')
+... def index(): pass
+... 
+>>> @app.route('/login')
+... def login(): pass
+... 
+>>> @app.route('/user/<username>')
+... def profile(username): pass
+... 
+>>> with app.test_request_context():
+...  print url_for('index')
+...  print url_for('login')
+...  print url_for('profile', username='John Doe')
+... 
+/
+/login
+/user/John%20Doe
+
+(This also uses the :meth:`~flask.Flask.test_request_context` method
+explained below.  It basically tells flask to think we are handling a
+request even though we are not, we are in an interactive Python shell.
+Have a look at the explanation below. :ref:`context-locals`).
+
 
 HTTP Methods
 ````````````
@@ -114,6 +148,80 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+Rendering Templates
+-------------------
+
+Generating HTML from within Python is not fun, and actually pretty
+cumbersome because you have to do the HTML escaping on your own to keep
+the application secure.  Because of that Flask configures the `Jinja2
+<http://jinja.pocoo.org/2/>`_ template engine for you automatically.
+
+To render a template you can use the :func:`~flask.render_template`
+method.  All you have to do is to provide the name of the template and the
+variables you want to pass to the template engine as keyword arguments.
+Here a simple example of how to render a template::
+
+    from flask import render_template
+
+    @app.route('/hello/')
+    @app.route('/hello/<name>')
+    def hello(name=None):
+        return render_template('hello.html', name=name)
+
+Flask will look for templates in the `templates` folder.  So if your
+application is a module, that folder is next to that module, if it's a
+pacakge it's actually inside your package:
+
+**Case 1**: a module::
+    
+    /application.py
+    /templates
+        /hello.html
+
+**Case 2**: a package::
+
+    /application
+        /__init__.py
+        /templates
+            /hello.html
+
+For templates you can use the full power of Jinja2 templates.  Head over
+to the `Jinja2 Template Documentation
+<http://jinja.pocoo.org/2/documentation/templates>`_ for more information.
+
+Here an example template:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Hello from Flask</title>
+    {% if name %}
+      <h1>Hello {{ name }}!</h1>
+    {% else %}
+      <h1>Hello World!</h1>
+    {% endif %}
+
+Inside templates you also have access to the :class:`~flask.request`,
+:class:`~flask.session` and :class:`~flask.g` objects as well as the
+:func:`~flask.get_flashed_messages` function.
+
+Automatic escaping is enabled, so if name contains HTML it will be escaped
+automatically.  If you can trust a variable and you know that it will be
+safe HTML (because for example it came from a module that converts wiki
+markup to HTML) you can mark it as safe by using the
+:class:`~jinja2.Markup` class or by using the ``|safe`` filter in the
+template.  Head over to the Jinja 2 documentation for more examples.
+
+Here a basic introduction in how the :class:`~jinja2.Markup` class works:
+
+>>> from flask import Markup
+>>> Markup('<strong>Hello %s!</strong>') % '<blink>hacker</blink>'
+Markup(u'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>')
+>>> Markup.escape('<blink>hacker</blink>')
+Markup(u'&lt;blink&gt;hacker&lt;/blink&gt;')
+>>> Markup('<em>Marked up</em> &raquo; HTML').striptags()
+u'Marked up \xbb HTML'
+
 
 Accessing Request Data
 ----------------------
@@ -124,6 +232,9 @@ the server.  In Flask this information is provided by the global
 you might be wondering how that object can be global and how Flask
 manages to still be threadsafe.  The answer are context locals:
 
+
+.. _context-locals:
+
 Context Locals
 ``````````````
 
@@ -271,6 +382,39 @@ transmits.  If you want to use sessions, do not use the cookies directly
 but instead use the :ref:`sessions` in Flask that add some security on top
 of cookies for you.
 
+
+Redirects and Errors
+--------------------
+
+To redirect a user to somewhere else you can use the
+:func:`~flask.redirect` function, to abort a request early with an error
+code the :func:`~flask.abort` function.  Here an example how this works::
+
+    from flask import abort, redirect, url_for
+
+    @app.route('/')
+    def index():
+        return redirect(url_for('login'))
+
+    @app.route('/login')
+    def login():
+        abort(401)
+        this_is_never_executed()
+
+This is a rather pointless example because a user will be redirected from
+the index to a page he cannot access (401 means access denied) but it
+shows how that works.
+
+By default a black and white error page is shown for each error code.  If
+you want to customize the error page, you can use the
+:meth:`~flask.Flask.errorhandler` decorator::
+
+    from flask import render_template
+
+    @app.errorhandler(404)
+    def page_not_found(error):
+        return render_template('page_not_found.html')
+
 .. _sessions:
 
 Sessions
@@ -310,3 +454,83 @@ sessions work::
     def logout():
         # remove the username from the session if its there
         session.pop('username', None)
+
+Message Flashing
+----------------
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 0bfd7df7..e95e467a 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -93,6 +93,40 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+URL Building
+````````````
+
+If it can match URLs, can it also generate them?  Of course you can.  To
+build a URL to a specific function you can use the :func:`~flask.url_for`
+function.  It accepts the name of the function as first argument and a
+number of keyword arguments, each corresponding to the variable part of
+the URL rule.  Here some examples:
+
+>>> from flask import Flask, url_for
+>>> app = Flask(__name__)
+>>> @app.route('/')
+... def index(): pass
+... 
+>>> @app.route('/login')
+... def login(): pass
+... 
+>>> @app.route('/user/<username>')
+... def profile(username): pass
+... 
+>>> with app.test_request_context():
+...  print url_for('index')
+...  print url_for('login')
+...  print url_for('profile', username='John Doe')
+... 
+/
+/login
+/user/John%20Doe
+
+(This also uses the :meth:`~flask.Flask.test_request_context` method
+explained below.  It basically tells flask to think we are handling a
+request even though we are not, we are in an interactive Python shell.
+Have a look at the explanation below. :ref:`context-locals`).
+
 
 HTTP Methods
 ````````````
@@ -114,6 +148,80 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+Rendering Templates
+-------------------
+
+Generating HTML from within Python is not fun, and actually pretty
+cumbersome because you have to do the HTML escaping on your own to keep
+the application secure.  Because of that Flask configures the `Jinja2
+<http://jinja.pocoo.org/2/>`_ template engine for you automatically.
+
+To render a template you can use the :func:`~flask.render_template`
+method.  All you have to do is to provide the name of the template and the
+variables you want to pass to the template engine as keyword arguments.
+Here a simple example of how to render a template::
+
+    from flask import render_template
+
+    @app.route('/hello/')
+    @app.route('/hello/<name>')
+    def hello(name=None):
+        return render_template('hello.html', name=name)
+
+Flask will look for templates in the `templates` folder.  So if your
+application is a module, that folder is next to that module, if it's a
+pacakge it's actually inside your package:
+
+**Case 1**: a module::
+    
+    /application.py
+    /templates
+        /hello.html
+
+**Case 2**: a package::
+
+    /application
+        /__init__.py
+        /templates
+            /hello.html
+
+For templates you can use the full power of Jinja2 templates.  Head over
+to the `Jinja2 Template Documentation
+<http://jinja.pocoo.org/2/documentation/templates>`_ for more information.
+
+Here an example template:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Hello from Flask</title>
+    {% if name %}
+      <h1>Hello {{ name }}!</h1>
+    {% else %}
+      <h1>Hello World!</h1>
+    {% endif %}
+
+Inside templates you also have access to the :class:`~flask.request`,
+:class:`~flask.session` and :class:`~flask.g` objects as well as the
+:func:`~flask.get_flashed_messages` function.
+
+Automatic escaping is enabled, so if name contains HTML it will be escaped
+automatically.  If you can trust a variable and you know that it will be
+safe HTML (because for example it came from a module that converts wiki
+markup to HTML) you can mark it as safe by using the
+:class:`~jinja2.Markup` class or by using the ``|safe`` filter in the
+template.  Head over to the Jinja 2 documentation for more examples.
+
+Here a basic introduction in how the :class:`~jinja2.Markup` class works:
+
+>>> from flask import Markup
+>>> Markup('<strong>Hello %s!</strong>') % '<blink>hacker</blink>'
+Markup(u'<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>')
+>>> Markup.escape('<blink>hacker</blink>')
+Markup(u'&lt;blink&gt;hacker&lt;/blink&gt;')
+>>> Markup('<em>Marked up</em> &raquo; HTML').striptags()
+u'Marked up \xbb HTML'
+
 
 Accessing Request Data
 ----------------------
@@ -124,6 +232,9 @@ the server.  In Flask this information is provided by the global
 you might be wondering how that object can be global and how Flask
 manages to still be threadsafe.  The answer are context locals:
 
+
+.. _context-locals:
+
 Context Locals
 ``````````````
 
@@ -271,6 +382,39 @@ transmits.  If you want to use sessions, do not use the cookies directly
 but instead use the :ref:`sessions` in Flask that add some security on top
 of cookies for you.
 
+
+Redirects and Errors
+--------------------
+
+To redirect a user to somewhere else you can use the
+:func:`~flask.redirect` function, to abort a request early with an error
+code the :func:`~flask.abort` function.  Here an example how this works::
+
+    from flask import abort, redirect, url_for
+
+    @app.route('/')
+    def index():
+        return redirect(url_for('login'))
+
+    @app.route('/login')
+    def login():
+        abort(401)
+        this_is_never_executed()
+
+This is a rather pointless example because a user will be redirected from
+the index to a page he cannot access (401 means access denied) but it
+shows how that works.
+
+By default a black and white error page is shown for each error code.  If
+you want to customize the error page, you can use the
+:meth:`~flask.Flask.errorhandler` decorator::
+
+    from flask import render_template
+
+    @app.errorhandler(404)
+    def page_not_found(error):
+        return render_template('page_not_found.html')
+
 .. _sessions:
 
 Sessions
@@ -310,3 +454,83 @@ sessions work::
     def logout():
         # remove the username from the session if its there
         session.pop('username', None)
+
+Message Flashing
+----------------
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
"
625eba4bb403296a8bbc1e72cc9cf4a5126f6c02,4edec48b74dbb9d571e927b69b24c30ec0624975,docs/installation.rst,docs/installation.rst,docs/installation.rst,Added installation docs,"diff --git a/docs/installation.rst b/docs/installation.rst
index 8b0804d2..b8375cd7 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -3,4 +3,101 @@
 Installation
 ============
 
-Blafasel, add me
+Flask is a microframework and yet it depends on external libraries.  There
+are various ways how you can install that library and this explains each
+way and why there are multiple ways.
+
+Flask depends on two external libraries: `Werkzeug
+<http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
+The first on is responsible for interfacing WSGI the latter to render
+templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
+in Python that is basically responsible for ensuring that your application
+is behaving in a specific way that you can run it on different
+environments (for example on a local development server, on an Apache2, on
+lighttpd, on Google's appengine or whatever you have in mind).
+
+So how do you get all that on your computer in no time?  The most kick-ass
+method is virtualenv, so let's look at that first.
+
+virtualenv
+----------
+
+Virtualenv is what you want to use during development and in production if
+you have shell access.  So first: what does virtualenv do?  If you are
+like me and you like Python, chances are you want to use it for another
+project as well.  Now the more projects you have, the more likely it is
+that you will be working with different versions of Python itself or a
+library involved.  Because let's face it: quite often libraries break
+backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv for the
+rescue!
+
+It basically makes it possible to have multiple side-by-side
+""installations"" of Python, each for your own project.  It's not actually
+an installation but a clever way to keep things separated.
+
+So let's see how that works!
+
+If you are on OS X or Linux chances are that one of the following two
+commands will for for you::
+
+    sudo easy_install virtualenv
+
+or even better::
+
+    sudo pip install virtualenv
+
+Changes are you have virtualenv installed on your system then.  Maybe it's
+even in your package manager (on ubuntu try ``sudo apt-get install
+python-virtualenv``).
+
+On windows, just installed virtualenv from the `Python Package Index
+<http://pypi.python.org/pypi/virtualenv>`_.
+
+So now that you have virtualenv running just fire up a shell and create
+your own environment.  I usually create a folder and a `env` folder
+within::
+
+    $ mkdir myproject
+    $ cd myproject
+    $ virtualenv env
+    New python executable in env/bin/python
+    Installing setuptools............done.
+
+Now you only have to activate it, whenever you work with it.  On OS X and
+Linux do the following::
+
+    $ source env/bin/activate
+
+If you are a Windows user, the following command is for you::
+
+    $ env\scripts\activate
+
+Either way, you should now be using your virtualenv (see how the prompt of
+your shell has changed to show the virtualenv).
+
+Now you can just enter the following command to get Flask activated in
+your virtualenv::
+
+    $ easy_install Flask
+
+A few seconds later you are good to go.
+
+
+System Wide Installation
+------------------------
+
+This is possible as well, but I would not recommend it.  Just run
+`easy_install` with root rights::
+
+    sudo easy_install Flask
+
+(Run it in an Admin shell on Windows systems and without the `sudo`). 
+
+
+The Drop into Place Version
+---------------------------
+
+Now I really don't recommend this way on using Flask, but you can do that
+of course as well.  Download the `dip` zipfile from the website and unzip
+it next to your application.
","diff --git a/docs/installation.rst b/docs/installation.rst
index 8b0804d2..b8375cd7 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -3,4 +3,101 @@
 Installation
 ============
 
-Blafasel, add me
+Flask is a microframework and yet it depends on external libraries.  There
+are various ways how you can install that library and this explains each
+way and why there are multiple ways.
+
+Flask depends on two external libraries: `Werkzeug
+<http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
+The first on is responsible for interfacing WSGI the latter to render
+templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
+in Python that is basically responsible for ensuring that your application
+is behaving in a specific way that you can run it on different
+environments (for example on a local development server, on an Apache2, on
+lighttpd, on Google's appengine or whatever you have in mind).
+
+So how do you get all that on your computer in no time?  The most kick-ass
+method is virtualenv, so let's look at that first.
+
+virtualenv
+----------
+
+Virtualenv is what you want to use during development and in production if
+you have shell access.  So first: what does virtualenv do?  If you are
+like me and you like Python, chances are you want to use it for another
+project as well.  Now the more projects you have, the more likely it is
+that you will be working with different versions of Python itself or a
+library involved.  Because let's face it: quite often libraries break
+backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv for the
+rescue!
+
+It basically makes it possible to have multiple side-by-side
+""installations"" of Python, each for your own project.  It's not actually
+an installation but a clever way to keep things separated.
+
+So let's see how that works!
+
+If you are on OS X or Linux chances are that one of the following two
+commands will for for you::
+
+    sudo easy_install virtualenv
+
+or even better::
+
+    sudo pip install virtualenv
+
+Changes are you have virtualenv installed on your system then.  Maybe it's
+even in your package manager (on ubuntu try ``sudo apt-get install
+python-virtualenv``).
+
+On windows, just installed virtualenv from the `Python Package Index
+<http://pypi.python.org/pypi/virtualenv>`_.
+
+So now that you have virtualenv running just fire up a shell and create
+your own environment.  I usually create a folder and a `env` folder
+within::
+
+    $ mkdir myproject
+    $ cd myproject
+    $ virtualenv env
+    New python executable in env/bin/python
+    Installing setuptools............done.
+
+Now you only have to activate it, whenever you work with it.  On OS X and
+Linux do the following::
+
+    $ source env/bin/activate
+
+If you are a Windows user, the following command is for you::
+
+    $ env\scripts\activate
+
+Either way, you should now be using your virtualenv (see how the prompt of
+your shell has changed to show the virtualenv).
+
+Now you can just enter the following command to get Flask activated in
+your virtualenv::
+
+    $ easy_install Flask
+
+A few seconds later you are good to go.
+
+
+System Wide Installation
+------------------------
+
+This is possible as well, but I would not recommend it.  Just run
+`easy_install` with root rights::
+
+    sudo easy_install Flask
+
+(Run it in an Admin shell on Windows systems and without the `sudo`). 
+
+
+The Drop into Place Version
+---------------------------
+
+Now I really don't recommend this way on using Flask, but you can do that
+of course as well.  Download the `dip` zipfile from the website and unzip
+it next to your application.
"
4edec48b74dbb9d571e927b69b24c30ec0624975,727c701686c18c4a27ca523eb0c5862d497be24e,docs/api.rst,docs/api.rst,docs/api.rst,And finished documentation for most parts.,"diff --git a/docs/api.rst b/docs/api.rst
index 6c763393..eefdf71c 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -1,3 +1,5 @@
+.. _api:
+
 API
 ===
 
","diff --git a/docs/api.rst b/docs/api.rst
index 6c763393..eefdf71c 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -1,3 +1,5 @@
+.. _api:
+
 API
 ===
 
"
4edec48b74dbb9d571e927b69b24c30ec0624975,727c701686c18c4a27ca523eb0c5862d497be24e,docs/index.rst,docs/index.rst,docs/index.rst,And finished documentation for most parts.,"diff --git a/docs/index.rst b/docs/index.rst
index 5e5d8622..ddb41da5 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,13 +1,17 @@
 Welcome to Flask
 ================
 
-Welcome to Flask's documentation.
-
-Contents:
+Welcome to Flask's documentation.  This documentation is devided into
+different parts.  I would suggest to get started with the
+:ref:`installation` and then heading over to the :ref:`quickstart`.  If
+you want to dive into all the internal parts of Flask, check out the
+:ref:`api` documentation.  Common patterns are described in the
+:ref:`patterns` section.
 
 .. toctree::
    :maxdepth: 2
 
    installation
    quickstart
+   patterns
    api
","diff --git a/docs/index.rst b/docs/index.rst
index 5e5d8622..ddb41da5 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,13 +1,17 @@
 Welcome to Flask
 ================
 
-Welcome to Flask's documentation.
-
-Contents:
+Welcome to Flask's documentation.  This documentation is devided into
+different parts.  I would suggest to get started with the
+:ref:`installation` and then heading over to the :ref:`quickstart`.  If
+you want to dive into all the internal parts of Flask, check out the
+:ref:`api` documentation.  Common patterns are described in the
+:ref:`patterns` section.
 
 .. toctree::
    :maxdepth: 2
 
    installation
    quickstart
+   patterns
    api
"
4edec48b74dbb9d571e927b69b24c30ec0624975,727c701686c18c4a27ca523eb0c5862d497be24e,docs/patterns.rst,,docs/patterns.rst,And finished documentation for most parts.,"diff --git a/docs/patterns.rst b/docs/patterns.rst
new file mode 100644
index 00000000..5047ea73
--- /dev/null
+++ b/docs/patterns.rst
@@ -0,0 +1,166 @@
+.. _patterns:
+
+Patterns in Flask
+=================
+
+Certain things are common enough that the changes are high you will find
+them in most web applications.  For example quite a lot of applications
+are using relational databases and user authentication.  In that case,
+changes are they will open a database connection at the beginning of the
+request and get the information of the currently logged in user.  At the
+end of the request, the database connection is closed again.
+
+In Flask you can implement such things with the
+:meth:`~flask.Flask.request_init` and
+:meth:`~flask.Flask.request_shutdown` decorators in combination with the
+special :class:`~flask.g` object.
+
+
+Using SQLite 3 with Flask
+-------------------------
+
+So here a simple example how you can use SQLite 3 with Flask::
+
+    import sqlite3
+    from flask import g
+
+    DATABASE = '/path/to/database.db'
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+    @app.request_init
+    def before_request():
+        g.db = connect_db()
+
+    @app.request_shutdown
+    def after_request(response):
+        g.db.close()
+        return response
+
+Easy Querying
+`````````````
+
+Now in each request handling function you can access `g.db` to get the
+current open database connection.  To simplify working with SQLite a
+helper function can be useful::
+
+    def query_db(query, args=(), one=False):
+        cur = g.db.execute(query, args)
+        rv = [dict((cur.description[idx][0], value)
+                   for idx, value in enumerate(row)) for row in cur.fetchall()]
+        return (rv[0] if rv else None) if one else rv
+
+This handy little function makes working with the database much more
+pleasant than it is by just using the raw cursor and connection objects.
+
+Here is how you can use it::
+
+    for user in query_db('select * from users'):
+        print user['username'], 'has the id', user['user_id']
+
+Or if you just want a single result::
+
+    user = query_db('select * from users where username = ?',
+                    [the_username], one=True)
+    if user is None:
+        print 'No such user'
+    else:
+        print the_username, 'has the id', user['user_id']
+
+To pass variable parts to the SQL statement, use a question mark in the
+statement and pass in the arguments as a list.  Never directly add them to
+the SQL statement with string formattings because this makes it possible
+to attack the application using `SQL Injections
+<http://en.wikipedia.org/wiki/SQL_injection>`_.
+
+Initial Schemas
+```````````````
+
+Relational databases need schemas, so applications often ship a
+`schema.sql` file that creates the database.  It's a good idea to provide
+a function that creates the database bases on that schema.  This function
+can do that for you::
+
+    from contextlib import closing
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+You can then create such a database from the python shell:
+
+>>> from yourapplication import init_db
+>>> init_db()
+
+.. _template-inheritance:
+
+Template Inheritance
+--------------------
+
+The most powerful part of Jinja is template inheritance. Template inheritance
+allows you to build a base ""skeleton"" template that contains all the common
+elements of your site and defines **blocks** that child templates can override.
+
+Sounds complicated but is very basic. It's easiest to understand it by starting
+with an example.
+
+
+Base Template
+`````````````
+
+This template, which we'll call ``layout.html``, defines a simple HTML skeleton
+document that you might use for a simple two-column page. It's the job of
+""child"" templates to fill the empty blocks with content:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <html>
+      <head>
+        {% block head %}
+        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
+        <title>{% block title %}{% endblock %} - My Webpage</title>
+        {% endblock %}
+      </head>
+    <body>
+      <div id=""content"">{% block content %}{% endblock %}</div>
+      <div id=""footer"">
+        {% block footer %}
+        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
+        {% endblock %}
+      </div>
+    </body>
+
+In this example, the ``{% block %}`` tags define four blocks that child templates
+can fill in. All the `block` tag does is to tell the template engine that a
+child template may override those portions of the template.
+
+Child Template
+``````````````
+
+A child template might look like this:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block title %}Index{% endblock %}
+    {% block head %}
+      {{ super() }}
+      <style type=""text/css"">
+        .important { color: #336699; }
+      </style>
+    {% endblock %}
+    {% block content %}
+      <h1>Index</h1>
+      <p class=""important"">
+        Welcome on my awesome homepage.
+    {% endblock %}
+
+The ``{% extends %}`` tag is the key here. It tells the template engine that
+this template ""extends"" another template.  When the template system evaluates
+this template, first it locates the parent.  The extends tag must be the
+first tag in the template.  To render the contents of a block defined in
+the parent template, use ``{{ super() }}``.
","diff --git a/docs/patterns.rst b/docs/patterns.rst
new file mode 100644
index 00000000..5047ea73
--- /dev/null
+++ b/docs/patterns.rst
@@ -0,0 +1,166 @@
+.. _patterns:
+
+Patterns in Flask
+=================
+
+Certain things are common enough that the changes are high you will find
+them in most web applications.  For example quite a lot of applications
+are using relational databases and user authentication.  In that case,
+changes are they will open a database connection at the beginning of the
+request and get the information of the currently logged in user.  At the
+end of the request, the database connection is closed again.
+
+In Flask you can implement such things with the
+:meth:`~flask.Flask.request_init` and
+:meth:`~flask.Flask.request_shutdown` decorators in combination with the
+special :class:`~flask.g` object.
+
+
+Using SQLite 3 with Flask
+-------------------------
+
+So here a simple example how you can use SQLite 3 with Flask::
+
+    import sqlite3
+    from flask import g
+
+    DATABASE = '/path/to/database.db'
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+    @app.request_init
+    def before_request():
+        g.db = connect_db()
+
+    @app.request_shutdown
+    def after_request(response):
+        g.db.close()
+        return response
+
+Easy Querying
+`````````````
+
+Now in each request handling function you can access `g.db` to get the
+current open database connection.  To simplify working with SQLite a
+helper function can be useful::
+
+    def query_db(query, args=(), one=False):
+        cur = g.db.execute(query, args)
+        rv = [dict((cur.description[idx][0], value)
+                   for idx, value in enumerate(row)) for row in cur.fetchall()]
+        return (rv[0] if rv else None) if one else rv
+
+This handy little function makes working with the database much more
+pleasant than it is by just using the raw cursor and connection objects.
+
+Here is how you can use it::
+
+    for user in query_db('select * from users'):
+        print user['username'], 'has the id', user['user_id']
+
+Or if you just want a single result::
+
+    user = query_db('select * from users where username = ?',
+                    [the_username], one=True)
+    if user is None:
+        print 'No such user'
+    else:
+        print the_username, 'has the id', user['user_id']
+
+To pass variable parts to the SQL statement, use a question mark in the
+statement and pass in the arguments as a list.  Never directly add them to
+the SQL statement with string formattings because this makes it possible
+to attack the application using `SQL Injections
+<http://en.wikipedia.org/wiki/SQL_injection>`_.
+
+Initial Schemas
+```````````````
+
+Relational databases need schemas, so applications often ship a
+`schema.sql` file that creates the database.  It's a good idea to provide
+a function that creates the database bases on that schema.  This function
+can do that for you::
+
+    from contextlib import closing
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+You can then create such a database from the python shell:
+
+>>> from yourapplication import init_db
+>>> init_db()
+
+.. _template-inheritance:
+
+Template Inheritance
+--------------------
+
+The most powerful part of Jinja is template inheritance. Template inheritance
+allows you to build a base ""skeleton"" template that contains all the common
+elements of your site and defines **blocks** that child templates can override.
+
+Sounds complicated but is very basic. It's easiest to understand it by starting
+with an example.
+
+
+Base Template
+`````````````
+
+This template, which we'll call ``layout.html``, defines a simple HTML skeleton
+document that you might use for a simple two-column page. It's the job of
+""child"" templates to fill the empty blocks with content:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <html>
+      <head>
+        {% block head %}
+        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
+        <title>{% block title %}{% endblock %} - My Webpage</title>
+        {% endblock %}
+      </head>
+    <body>
+      <div id=""content"">{% block content %}{% endblock %}</div>
+      <div id=""footer"">
+        {% block footer %}
+        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
+        {% endblock %}
+      </div>
+    </body>
+
+In this example, the ``{% block %}`` tags define four blocks that child templates
+can fill in. All the `block` tag does is to tell the template engine that a
+child template may override those portions of the template.
+
+Child Template
+``````````````
+
+A child template might look like this:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block title %}Index{% endblock %}
+    {% block head %}
+      {{ super() }}
+      <style type=""text/css"">
+        .important { color: #336699; }
+      </style>
+    {% endblock %}
+    {% block content %}
+      <h1>Index</h1>
+      <p class=""important"">
+        Welcome on my awesome homepage.
+    {% endblock %}
+
+The ``{% extends %}`` tag is the key here. It tells the template engine that
+this template ""extends"" another template.  When the template system evaluates
+this template, first it locates the parent.  The extends tag must be the
+first tag in the template.  To render the contents of a block defined in
+the parent template, use ``{{ super() }}``.
"
4edec48b74dbb9d571e927b69b24c30ec0624975,727c701686c18c4a27ca523eb0c5862d497be24e,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,And finished documentation for most parts.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e95e467a..64ef0368 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -1,3 +1,5 @@
+.. _quickstart:
+
 Quickstart
 ==========
 
@@ -148,6 +150,22 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+Static Files
+------------
+
+Dynamic web applications need static files as well.  That's usually where
+the CSS and JavaScript files are coming from.  Ideally your web server is
+configured to serve them for you, but during development Flask can do that
+as well.  Just create a folder called `static` in your package or next to
+your module and it will be available at `/static` on the application.
+
+To generate URLs to that part of the URL, use the special ``'static'`` URL
+name::
+
+    url_for('static', filename='style.css')
+
+The file has to be stored on the filesystem as ``static/style.css``.
+
 Rendering Templates
 -------------------
 
@@ -205,6 +223,11 @@ Inside templates you also have access to the :class:`~flask.request`,
 :class:`~flask.session` and :class:`~flask.g` objects as well as the
 :func:`~flask.get_flashed_messages` function.
 
+Templates are especially useful if inheritance is used.  If you want to
+know how that works, head over to the :ref:`template-inheritance` pattern
+documentation.  Basically template inheritance makes it possible to keep
+certain elements on each page (like header, navigation and footer).
+
 Automatic escaping is enabled, so if name contains HTML it will be escaped
 automatically.  If you can trust a variable and you know that it will be
 safe HTML (because for example it came from a module that converts wiki
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e95e467a..64ef0368 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -1,3 +1,5 @@
+.. _quickstart:
+
 Quickstart
 ==========
 
@@ -148,6 +150,22 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+Static Files
+------------
+
+Dynamic web applications need static files as well.  That's usually where
+the CSS and JavaScript files are coming from.  Ideally your web server is
+configured to serve them for you, but during development Flask can do that
+as well.  Just create a folder called `static` in your package or next to
+your module and it will be available at `/static` on the application.
+
+To generate URLs to that part of the URL, use the special ``'static'`` URL
+name::
+
+    url_for('static', filename='style.css')
+
+The file has to be stored on the filesystem as ``static/style.css``.
+
 Rendering Templates
 -------------------
 
@@ -205,6 +223,11 @@ Inside templates you also have access to the :class:`~flask.request`,
 :class:`~flask.session` and :class:`~flask.g` objects as well as the
 :func:`~flask.get_flashed_messages` function.
 
+Templates are especially useful if inheritance is used.  If you want to
+know how that works, head over to the :ref:`template-inheritance` pattern
+documentation.  Basically template inheritance makes it possible to keep
+certain elements on each page (like header, navigation and footer).
+
 Automatic escaping is enabled, so if name contains HTML it will be escaped
 automatically.  If you can trust a variable and you know that it will be
 safe HTML (because for example it came from a module that converts wiki
"
4edec48b74dbb9d571e927b69b24c30ec0624975,727c701686c18c4a27ca523eb0c5862d497be24e,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,And finished documentation for most parts.,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index ebb304a7..06168746 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -65,7 +65,7 @@ def before_request():
     """"""Make sure we are connected to the database each request and look
     up the current user so that we know he's there.
     """"""
-    g.db = sqlite3.connect(DATABASE)
+    g.db = connect_db()
     if 'user_id' in session:
         g.user = query_db('select * from user where user_id = ?',
                           [session['user_id']], one=True)
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index ebb304a7..06168746 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -65,7 +65,7 @@ def before_request():
     """"""Make sure we are connected to the database each request and look
     up the current user so that we know he's there.
     """"""
-    g.db = sqlite3.connect(DATABASE)
+    g.db = connect_db()
     if 'user_id' in session:
         g.user = query_db('select * from user where user_id = ?',
                           [session['user_id']], one=True)
"
727c701686c18c4a27ca523eb0c5862d497be24e,a9d4ea81da28ee9c894bf9d45adc4cfa9d52fddc,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,Flashing -> patterns documentation,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index 5047ea73..3809f754 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -164,3 +164,85 @@ this template ""extends"" another template.  When the template system evaluates
 this template, first it locates the parent.  The extends tag must be the
 first tag in the template.  To render the contents of a block defined in
 the parent template, use ``{{ super() }}``.
+
+.. _message-flashing-pattern:
+
+Message Flashing
+----------------
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 5047ea73..3809f754 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -164,3 +164,85 @@ this template ""extends"" another template.  When the template system evaluates
 this template, first it locates the parent.  The extends tag must be the
 first tag in the template.  To render the contents of a block defined in
 the parent template, use ``{{ super() }}``.
+
+.. _message-flashing-pattern:
+
+Message Flashing
+----------------
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
"
727c701686c18c4a27ca523eb0c5862d497be24e,a9d4ea81da28ee9c894bf9d45adc4cfa9d52fddc,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Flashing -> patterns documentation,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 64ef0368..54a421e9 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -489,71 +489,7 @@ possible to record a message at the end of a request and access it next
 request and only next request.  This is usually combined with a layout
 template that does this.
 
-So here a full example::
-
-    from flask import flash, redirect, url_for, render_template
-
-    @app.route('/')
-    def index():
-        return render_template('index.html')
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != 'admin' or \
-               request.form['password'] != 'secret':
-                error = 'Invalid credentials'
-            else:
-                flash('You were sucessfully logged in')
-                return redirect(url_for('index'))
-        return render_template('login.html', error=error)
-
-And here the ``layout.html`` template which does the magic:
-
-.. sourcecode:: html+jinja
-
-   <!doctype html>
-   <title>My Application</title>
-   {% with messages = get_flashed_messages() %}
-     {% if messages %}
-       <ul class=flashes>
-       {% for message in messages %}
-         <li>{{ message }}</li>
-       {% endfor %}
-       </ul>
-     {% endif %}
-   {% endwith %}
-   {% block body %}{% endblock %}
-
-And here the index.html template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Overview</h1>
-     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
-   {% endblock %}
-
-And of course the login template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Login</h1>
-     {% if error %}
-       <p class=error><strong>Error:</strong> {{ error }}
-     {% endif %}
-     <form action="""" method=post>
-       <dl>
-         <dt>Username:
-         <dd><input type=text name=username value=""{{
-             request.form.username }}"">
-         <dt>Password:
-         <dd><input type=password name=password>
-       </dl>
-       <p><input type=submit value=Login>
-     </form>
-   {% endblock %}
+To flash a message use the :func:`~flask.flash` method, to get hold of the
+messages you can use :func:`~flask.get_flashed_messages` which is also
+available in the templates.  Check out the :ref:`message-flashing-pattern`
+for a full example.
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 64ef0368..54a421e9 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -489,71 +489,7 @@ possible to record a message at the end of a request and access it next
 request and only next request.  This is usually combined with a layout
 template that does this.
 
-So here a full example::
-
-    from flask import flash, redirect, url_for, render_template
-
-    @app.route('/')
-    def index():
-        return render_template('index.html')
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != 'admin' or \
-               request.form['password'] != 'secret':
-                error = 'Invalid credentials'
-            else:
-                flash('You were sucessfully logged in')
-                return redirect(url_for('index'))
-        return render_template('login.html', error=error)
-
-And here the ``layout.html`` template which does the magic:
-
-.. sourcecode:: html+jinja
-
-   <!doctype html>
-   <title>My Application</title>
-   {% with messages = get_flashed_messages() %}
-     {% if messages %}
-       <ul class=flashes>
-       {% for message in messages %}
-         <li>{{ message }}</li>
-       {% endfor %}
-       </ul>
-     {% endif %}
-   {% endwith %}
-   {% block body %}{% endblock %}
-
-And here the index.html template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Overview</h1>
-     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
-   {% endblock %}
-
-And of course the login template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Login</h1>
-     {% if error %}
-       <p class=error><strong>Error:</strong> {{ error }}
-     {% endif %}
-     <form action="""" method=post>
-       <dl>
-         <dt>Username:
-         <dd><input type=text name=username value=""{{
-             request.form.username }}"">
-         <dt>Password:
-         <dd><input type=password name=password>
-       </dl>
-       <p><input type=submit value=Login>
-     </form>
-   {% endblock %}
+To flash a message use the :func:`~flask.flash` method, to get hold of the
+messages you can use :func:`~flask.get_flashed_messages` which is also
+available in the templates.  Check out the :ref:`message-flashing-pattern`
+for a full example.
"
a9d4ea81da28ee9c894bf9d45adc4cfa9d52fddc,7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,flask.py,flask.py,flask.py,Documented non-decorator uses of registation.,"diff --git a/flask.py b/flask.py
index 9ea9db5c..4bb2d85d 100644
--- a/flask.py
+++ b/flask.py
@@ -288,6 +288,27 @@ class Flask(object):
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
+    def add_url_rule(self, endpoint, **options):
+        """"""Connects a URL rule.  Works exactly like the :meth:`route`
+        decorator but does not register the view function for the endpoint.
+
+        Basically this example::
+
+            @app.route('/')
+            def index():
+                pass
+
+        Is equivalent to the following:
+
+            def index():
+                pass
+            app.add_url_rule('index', '/')
+            app.view_functions['index'] = index
+        """"""
+        options['endpoint'] = f.__name__
+        options.setdefault('methods', ('GET',))
+        self.url_map.add(Rule(rule, **options))
+
     def route(self, rule, **options):
         """"""A decorator that is used to register a view function for a
         given URL rule.  Example::
@@ -351,11 +372,8 @@ class Flask(object):
                                setting for this rule.  See above.
         """"""
         def decorator(f):
-            if 'endpoint' not in options:
-                options['endpoint'] = f.__name__
-            options.setdefault('methods', ('GET',))
-            self.url_map.add(Rule(rule, **options))
-            self.view_functions[options['endpoint']] = f
+            self.add_url_rule(f.__name__, **options)
+            self.view_functions[f.__name__] = f
             return f
         return decorator
 
@@ -366,6 +384,14 @@ class Flask(object):
             @app.errorhandler(404)
             def page_not_found():
                 return 'This page does not exist', 404
+
+        You can also register a function as error handler without using
+        the :meth:`errorhandler` decorator.  The following example is
+        equivalent to the one above::
+
+            def page_not_found():
+                return 'This page does not exist', 404
+            app.error_handlers[404] = page_not_found
         """"""
         def decorator(f):
             self.error_handlers[code] = f
","diff --git a/flask.py b/flask.py
index 9ea9db5c..4bb2d85d 100644
--- a/flask.py
+++ b/flask.py
@@ -288,6 +288,27 @@ class Flask(object):
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
+    def add_url_rule(self, endpoint, **options):
+        """"""Connects a URL rule.  Works exactly like the :meth:`route`
+        decorator but does not register the view function for the endpoint.
+
+        Basically this example::
+
+            @app.route('/')
+            def index():
+                pass
+
+        Is equivalent to the following:
+
+            def index():
+                pass
+            app.add_url_rule('index', '/')
+            app.view_functions['index'] = index
+        """"""
+        options['endpoint'] = f.__name__
+        options.setdefault('methods', ('GET',))
+        self.url_map.add(Rule(rule, **options))
+
     def route(self, rule, **options):
         """"""A decorator that is used to register a view function for a
         given URL rule.  Example::
@@ -351,11 +372,8 @@ class Flask(object):
                                setting for this rule.  See above.
         """"""
         def decorator(f):
-            if 'endpoint' not in options:
-                options['endpoint'] = f.__name__
-            options.setdefault('methods', ('GET',))
-            self.url_map.add(Rule(rule, **options))
-            self.view_functions[options['endpoint']] = f
+            self.add_url_rule(f.__name__, **options)
+            self.view_functions[f.__name__] = f
             return f
         return decorator
 
@@ -366,6 +384,14 @@ class Flask(object):
             @app.errorhandler(404)
             def page_not_found():
                 return 'This page does not exist', 404
+
+        You can also register a function as error handler without using
+        the :meth:`errorhandler` decorator.  The following example is
+        equivalent to the one above::
+
+            def page_not_found():
+                return 'This page does not exist', 404
+            app.error_handlers[404] = page_not_found
         """"""
         def decorator(f):
             self.error_handlers[code] = f
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,artwork/logo-full.svg,,artwork/logo-full.svg,"Added docs, fixed some bugs I introduced last commit","diff --git a/artwork/logo-full.svg b/artwork/logo-full.svg
new file mode 100755
index 00000000..43465a4d
--- /dev/null
+++ b/artwork/logo-full.svg
@@ -0,0 +1,329 @@
+<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc=""http://purl.org/dc/elements/1.1/""
+   xmlns:cc=""http://creativecommons.org/ns#""
+   xmlns:rdf=""http://www.w3.org/1999/02/22-rdf-syntax-ns#""
+   xmlns:svg=""http://www.w3.org/2000/svg""
+   xmlns=""http://www.w3.org/2000/svg""
+   xmlns:sodipodi=""http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd""
+   xmlns:inkscape=""http://www.inkscape.org/namespaces/inkscape""
+   width=""460""
+   height=""180""
+   id=""svg2""
+   version=""1.1""
+   inkscape:version=""0.47 r22583""
+   sodipodi:docname=""logo.svg"">
+  <defs
+     id=""defs4"">
+    <inkscape:perspective
+       sodipodi:type=""inkscape:persp3d""
+       inkscape:vp_x=""0 : 526.18109 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_z=""744.09448 : 526.18109 : 1""
+       inkscape:persp3d-origin=""372.04724 : 350.78739 : 1""
+       id=""perspective10"" />
+    <inkscape:perspective
+       id=""perspective2824""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2840""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2878""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2894""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2910""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2926""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2976""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3020""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3036""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3052""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3866""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+  </defs>
+  <sodipodi:namedview
+     id=""base""
+     pagecolor=""#ffffff""
+     bordercolor=""#666666""
+     borderopacity=""1.0""
+     inkscape:pageopacity=""0.0""
+     inkscape:pageshadow=""2""
+     inkscape:zoom=""0.98994949""
+     inkscape:cx=""240.32415""
+     inkscape:cy=""-37.836532""
+     inkscape:document-units=""px""
+     inkscape:current-layer=""layer1""
+     showgrid=""false""
+     inkscape:window-width=""1680""
+     inkscape:window-height=""998""
+     inkscape:window-x=""-8""
+     inkscape:window-y=""-8""
+     inkscape:window-maximized=""1"" />
+  <metadata
+     id=""metadata7"">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="""">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource=""http://purl.org/dc/dcmitype/StillImage"" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label=""Layer 1""
+     inkscape:groupmode=""layer""
+     id=""layer1""
+     transform=""translate(-27.820801,-24.714976)"">
+    <path
+       style=""fill:#000000""
+       d=""M 96.944917,182.03377 C 89.662681,176.30608 81.894549,170.81448 76.586317,163.08166 65.416842,149.44499 56.816875,133.6567 50.937585,117.06515 47.383955,106.27654 46.166898,94.709824 41.585799,84.338096 c -4.792287,-7.533044 0.821224,-15.767897 9.072722,-18.16242 3.673742,-0.705104 10.133327,-4.170258 2.335951,-1.693539 -6.990592,5.128871 -7.667129,-4.655603 -0.498823,-5.27517 4.892026,-0.650249 6.692895,-4.655044 5.019966,-8.260251 -5.251326,-3.424464 12.733737,-7.18801 3.684373,-12.297799 -9.426987,-10.170666 13.186339,-12.128546 7.607283,-0.577786 -1.335447,8.882061 15.801226,-1.627907 11.825117,8.628945 4.041283,4.925694 15.133562,1.1211 14.85838,8.031392 5.887092,0.404678 7.907562,5.358061 13.433992,5.738347 5.72759,2.586557 16.1108,4.624792 18.0598,11.079149 -5.68242,4.498756 -18.84089,-9.292674 -19.47305,3.160397 1.71659,18.396078 1.27926,37.346439 8.00986,54.864989 3.18353,10.60759 10.9012,18.95779 17.87109,27.21946 6.66875,8.09126 15.70186,13.78715 24.90885,18.58338 8.07647,3.80901 16.78383,6.33528 25.58583,7.92044 3.5701,-2.7307 9.87303,-12.8828 15.44238,-8.60188 0.26423,4.81007 -11.0541,10.05512 -0.53248,9.5235 6.17819,-1.86378 10.46336,4.77803 15.55099,-1.21289 4.68719,5.55206 19.48197,-3.54734 16.14693,7.80115 -4.50972,2.90955 -11.08689,1.15142 -15.60404,5.15397 -7.44757,-3.71979 -13.37691,3.32843 -21.6219,2.43707 -9.15641,1.64002 -18.4716,2.30204 -27.75473,2.31642 -15.22952,-1.20328 -30.78158,-1.71049 -45.26969,-7.01291 -8.16166,-2.37161 -16.12649,-7.01887 -23.299683,-11.66829 z m 12.862043,5.5729 c 7.9696,3.44651 15.76243,7.07889 24.49656,8.17457 13.85682,1.92727 28.16653,4.89163 42.07301,2.18757 -6.2939,-2.84199 -12.80077,1.10719 -19.07096,-2.0322 -7.52033,1.61821 -15.59049,-0.41223 -23.23574,-1.41189 -8.69395,-3.87259 -18.0762,-6.53549 -26.21772,-11.56219 -10.173155,-3.71578 5.26142,4.76524 8.00873,5.45214 6.35952,3.60969 -6.99343,-1.85044 -8.87589,-3.35101 -5.32648,-2.9879 -6.00529,-2.36357 -0.52745,0.67085 1.10332,0.64577 2.19359,1.32226 3.34946,1.87216 z M 94.642259,176.88976 c 7.722781,2.86052 -0.03406,-5.43082 -3.572941,-4.94904 -1.567906,-2.72015 -5.9903,-4.43854 -2.870721,-5.89973 -5.611524,1.9481 -5.878319,-7.40814 -8.516004,-6.07139 -5.936516,-1.87454 -2.310496,-8.51501 -9.381929,-12.59292 -0.645488,-4.29697 -7.02577,-8.02393 -9.060801,-14.50525 -0.898786,-3.31843 -7.208336,-12.84783 -3.332369,-3.97927 3.300194,8.53747 9.106618,15.84879 13.93868,23.15175 3.752083,6.95328 8.182497,14.22026 15.015767,18.55788 2.303436,2.20963 4.527452,5.59533 7.780318,6.28797 z M 72.39456,152.46355 c 0.26956,-1.16626 1.412424,2.52422 0,0 z m 31.49641,27.85526 c 1.71013,-0.76577 -2.45912,-0.96476 0,0 z m 4.19228,1.52924 c -0.43419,-2.1116 -1.91376,1.18074 0,0 z m 5.24749,2.18891 c 2.49828,-2.37871 -3.85009,-1.49983 0,0 z m 8.99389,5.01274 c 1.51811,-2.2439 -4.85872,-0.84682 0,0 z m -17.2707,-12.03933 c 3.88031,-2.51023 -5.01186,-0.0347 0,0 z m 3.9366,1.96293 c -0.11004,-1.32709 -1.40297,0.59432 0,0 z m 19.67473,12.28006 c 3.16281,1.99601 18.46961,4.3749 8.88477,0.81847 -1.60377,0.33811 -17.77263,-4.57336 -8.88477,-0.81847 z M 97.430958,166.92721 c -0.307503,-1.33094 -4.909341,-1.4694 0,0 z m 9.159302,5.33813 c 2.38371,-1.66255 -4.94757,-1.28235 0,0 z m 7.70426,4.72382 c 3.42065,-1.28963 -5.54907,-1.29571 0,0 z M 93.703927,162.86805 c 3.711374,2.84621 14.967683,0.36473 5.683776,-1.69906 -4.225516,-2.2524 -13.74889,-3.79415 -7.25757,1.35821 l 1.573785,0.34088 9e-6,-3e-5 z m 25.808723,15.75216 c 1.54595,-2.63388 -6.48298,-1.50411 0,0 z m -7.84249,-6.23284 c 9.0752,2.56719 -7.63142,-5.739 -2.23911,-0.94466 l 1.19513,0.54082 1.04399,0.4039 -1e-5,-6e-5 z m 15.72354,9.0878 c 8.59474,0.082 -7.76304,-1.18486 0,1e-5 l 0,-1e-5 z M 90.396984,157.89545 c -0.335695,-1.60094 -2.120962,0.13419 0,0 z m 51.535396,31.73502 c 0.2292,-2.89141 -2.80486,2.15157 0,0 z m -36.86817,-22.75299 c -0.51986,-1.52251 -2.68548,-0.0622 0,0 z m -13.852128,-9.98649 c 4.934237,-0.29629 -6.755322,-2.17418 0,0 z M 74.802387,146.28394 c -0.614146,-2.36536 -5.369213,-4.2519 0,0 z m 43.079323,27.33941 c -0.90373,-1.0307 -0.4251,0.22546 0,0 z m 26.81408,16.45475 c -0.086,-1.57503 -1.46039,0.59616 0,0 z m -29.18712,-18.90528 c 0.48266,-2.02932 -4.20741,-0.61442 0,0 z M 95.532612,158.51286 c 3.670785,-0.39305 -5.880434,-2.48161 0,0 z M 129.32396,179.51 c 5.72042,-2.26627 -5.57541,-1.10635 0,0 z m -17.57682,-11.93145 c 6.59278,0.85002 -7.84442,-4.48425 -1.44651,-0.4773 l 1.4465,0.47734 1e-5,-4e-5 z m 22.91296,14.0886 c 6.15514,-3.67975 4.12588,8.61677 10.44254,1.0388 6.23086,-4.54942 -5.38086,5.62451 2.29838,0.81116 5.55359,-3.71438 13.75643,1.76075 18.93848,3.5472 3.72659,-0.18307 7.34938,3.22236 11.16973,1.15059 7.3542,-1.98082 -14.38097,-2.93789 -8.68344,-6.4523 -6.72914,1.95848 -11.70093,-2.33483 -15.01213,-6.64508 -7.54812,-1.74298 -16.27548,-5.602 -20.04257,-12.28184 -1.5359,-2.50802 2.21884,0.35333 -1.32586,-3.74638 -4.54834,-4.04546 -6.81948,-8.63766 -9.87278,-13.5552 -3.64755,-1.94587 -4.07249,-7.67345 -4.44123,-0.19201 0.0289,-4.72164 -4.40393,-7.89964 -5.48589,-6.57859 -0.0194,-4.54721 4.74396,-2.26787 1.40945,-5.63228 -0.71771,-4.71302 -3.08085,-9.6241 -3.79115,-14.9453 -1.1036,-2.56502 -0.15541,-8.05863 -3.76662,-2.25204 -1.31566,6.13669 -0.43668,-7.54129 1.6093,-3.03083 2.68543,-4.60251 -0.9641,-4.0612 -1.11361,-3.42211 1.74931,-3.88333 1.10719,-9.39159 -0.45644,-7.29023 0.93213,-4.11586 1.47259,-15.147529 -1.3951,-13.192579 1.73833,-4.303958 3.29668,-19.694077 -4.24961,-13.826325 -3.058358,0.04294 -8.354541,1.110195 -10.858032,2.355243 7.849502,4.326857 -0.789543,1.562577 -3.984808,0.874879 -0.416343,4.003642 -3.58119,2.272086 -7.535123,2.311339 6.315273,0.781339 -3.075253,6.458962 -6.698132,4.253506 -4.705102,2.248756 4.060621,7.862038 0.0944,9.597586 0.487433,2.616581 -7.208227,-0.944906 -6.603832,5.097711 -4.56774,-1.92155 -0.628961,7.16796 1.656273,4.09382 7.768882,2.10261 5.469108,6.89631 5.666947,11.44992 -1.265833,2.6534 -6.249495,-6.23691 -1.109939,-5.82517 -4.054715,-6.58674 -4.485232,-2.38081 -7.854566,0.67911 -0.783857,0.22222 8.5944,4.35376 2.709059,6.3967 5.177884,0.79894 5.325199,5.33008 6.379284,8.19735 3.11219,3.24152 2.475226,-3.57931 6.199071,0.31623 -2.356488,-3.4705 -12.48183,-9.77839 -4.329567,-7.7553 -0.04358,-3.49291 -1.474412,-6.30951 1.02322,-6.24118 2.473367,-4.47926 -2.590385,11.044 2.984725,5.35124 1.543285,-0.67388 1.92554,-4.48494 4.699544,0.35989 4.029096,3.96363 1.45533,6.83577 -4.228162,3.20648 1.016828,3.44946 7.603062,4.68217 6.365348,10.07646 1.3121,4.7444 3.147844,2.99695 4.747999,2.72266 1.25523,4.60973 1.968016,1.2201 2.027559,-0.97355 5.747357,1.23033 4.401142,4.62773 6.199456,7.00134 3.960416,1.78761 -5.668696,-12.11713 1.130659,-4.18106 7.153577,6.4586 2.682797,9.15464 -3.736856,8.11995 4.063129,-0.32824 5.373423,5.49305 10.455693,5.28853 4.63456,2.20477 7.77237,10.67291 -0.21613,7.1478 -2.77074,-2.49821 -12.575734,-5.5801 -4.56731,-0.82823 7.39657,3.42523 13.27117,5.47432 20.40487,9.77384 5.10535,3.64464 7.31104,7.81908 9.24607,8.64541 -4.29084,2.04946 -12.93089,-1.63655 -6.51514,-2.76618 -4.00168,-0.72894 -8.50258,-2.75259 -4.66961,2.2333 3.25926,2.72127 11.54708,2.43298 13.0328,2.74132 -1.25934,2.77488 -3.4207,2.99556 0.0516,3.21078 -3.87375,2.06438 1.24216,2.38403 1.60114,3.56362 z m -7.9215,-22.36993 c -2.35682,-2.46475 -2.9662,-7.08134 -0.41852,-3.06426 1.30648,0.52466 4.18523,7.54428 0.41857,3.06426 l -5e-5,0 z m 25.79733,16.38693 c 1.47004,-0.0952 0.0427,1.11681 0,0 z m -29.51867,-22.43039 c -0.0904,-3.72637 0.8525,2.87419 0,0 z m -2.56392,-3.44965 c -2.96446,-5.72787 3.73721,1.62212 0,0 z M 89.382646,128.35916 c 1.7416,-0.46446 0.856841,2.97864 0,0 z m 24.728294,13.40357 c 1.06957,-4.01654 1.25692,3.37014 0,0 z M 96.64115,129.61525 c -1.231543,-2.21638 2.576009,2.07865 0,0 z m 14.99279,4.80618 c -2.80851,-6.29223 1.98836,-3.43699 0.62135,1.03124 l -0.62135,-1.03124 0,0 z M 85.778757,117.17864 c -1.255624,-2.06432 -3.332663,-8.12135 -2.663982,-9.97042 0.604935,3.0114 6.403914,12.95956 2.844571,4.12096 -3.933386,-7.40908 4.701805,2.40491 5.590052,4.2529 0.413624,1.83837 -2.426789,-0.50225 -0.502192,3.80828 -3.509809,-4.90766 -2.071967,2.71088 -5.268449,-2.21172 z m -7.990701,-5.50612 c 0.328938,-4.79981 1.829262,3.29132 0,0 z m 3.594293,1.23728 c 1.715175,-3.62282 2.908243,5.05052 0,0 z m -8.64616,-6.68847 c -2.974956,-2.95622 -5.127809,-5.68132 0.139193,-1.83474 2.029482,0.0792 -4.509002,-6.19705 0.488751,-1.99305 5.25531,0.95822 2.5951,8.61674 -0.627944,3.82779 z m 4.541717,-0.11873 c 1.727646,-1.71203 0.917172,1.6853 0,0 z m 2.794587,0.8959 c -2.619181,-4.9094 3.178801,2.05822 0,0 z m -5.55546,-5.30909 c -8.64844,-7.696511 10.867309,4.02451 1.4129,1.4269 l -1.412955,-1.42683 5.5e-5,-7e-5 z m 24.77908,14.39717 c -3.742506,-2.24398 -0.991777,-15.79747 0.284503,-6.52785 3.638294,-1.17695 -0.200879,4.78728 2.512784,4.73208 -0.42767,3.76305 -1.64169,5.11594 -2.797287,1.79577 z m 9.165207,5.41684 c 0.36705,-4.08462 0.77249,2.79262 0,0 z m -1.59198,-1.57295 c 0.41206,-1.74497 0.0426,2.05487 0,0 z M 76.213566,99.16032 c -5.556046,-7.665657 16.147323,7.75413 3.558556,1.9443 -1.315432,-0.34404 -2.898208,-0.46688 -3.558556,-1.9443 z m 17.649112,9.35749 c -0.525779,-6.45461 1.174169,1.06991 -1.92e-4,-2e-5 l 1.92e-4,2e-5 z m 13.399762,8.59585 c 1.03698,-3.67668 0.0773,2.43221 0,0 z M 77.064685,96.23472 c 3.302172,-0.706291 13.684695,5.79939 4.150224,1.85832 -1.059396,-1.17279 -3.317802,-0.63994 -4.150224,-1.85832 z m 28.356745,14.13312 c 0.35296,-6.60002 1.97138,-3.94233 0.0122,0.94474 l -0.0121,-0.94473 -5e-5,-1e-5 z M 79.52277,93.938099 c 1.345456,-1.97361 -3.571631,-8.923063 0.708795,-2.492797 1.849543,1.469605 5.355103,2.461959 2.260017,3.080216 4.867744,4.294162 -1.187244,1.163612 -2.968812,-0.587419 z m 24.49612,14.368161 c 0.92952,-7.51843 0.81971,4.40485 0,0 z M 76.712755,86.993902 c 1.027706,-0.439207 0.542746,1.369335 0,0 z m 6.389622,3.803092 c 1.644416,-3.450522 3.03351,3.848297 0,0 z m 18.023553,10.026276 c -0.0174,-1.3252 0.34003,1.92765 0,0 z m -1.04404,-2.31139 c -2.501612,-6.171646 2.32693,3.26759 0,0 z m -1.536003,-4.046372 c -0.419906,-2.550188 1.427129,3.203862 -7.3e-5,-9e-6 l 7.3e-5,9e-6 z m 2.499773,-4.063514 c -1.71663,-3.025123 2.16777,-13.331073 2.60122,-6.939418 -1.81185,4.980256 -0.52268,7.766309 0.74129,1.086388 2.33417,-5.257159 -0.50421,10.374054 -3.34255,5.853057 l 4e-5,-2.7e-5 z m 2.56889,-15.326649 c 0.74833,-0.918921 0.16609,1.107082 0,0 z m -4.290016,84.534235 c -1.017552,-0.88802 0.127775,0.56506 0,0 z m 8.837726,4.47065 c 4.91599,1.26135 4.89086,-0.76487 0.44782,-1.36683 -2.3898,-2.22316 -9.930475,-4.58124 -3.18119,-0.27586 0.44699,1.13227 1.85944,1.10589 2.73337,1.64269 z M 90.708067,152.48725 c 2.708244,2.01956 10.201213,5.72375 3.858186,0.76868 2.138588,-2.48467 -4.093336,-3.80722 -2.026067,-5.46927 -5.258175,-3.21755 -4.147962,-2.93133 -0.464111,-2.8301 -6.319385,-2.82462 0.912163,-2.61333 0.571661,-4.06067 -2.436706,-0.48126 -12.103074,-4.29664 -6.416395,0.31341 -5.780887,-2.94751 -1.377603,1.09799 -3.12488,0.67029 -5.911336,-1.61178 5.264392,4.50224 -0.938845,2.98448 3.391327,2.6875 9.128301,6.88393 1.433786,2.84407 -1.013816,1.45934 5.506273,3.67136 7.106665,4.77911 z m 9.243194,5.31013 c 11.238769,3.62163 -5.510018,-4.4246 0,0 z m 47.316399,28.66432 c 0.14496,-2.22965 -1.53604,1.90201 0,0 z m 4.86324,2.04679 c 2.59297,-2.51255 0.106,4.00222 4.29655,-0.61509 0.0453,-3.30544 -0.12904,-5.25783 -4.81563,-1.24252 -1.29194,0.71648 -1.86871,3.76288 0.51908,1.85761 z M 74.932378,140.02637 c -0.796355,-3.1304 -5.581949,-3.11418 0,0 z m 5.193029,3.40294 c -1.928397,-3.19739 -6.880525,-2.89469 0,0 z m 29.543373,17.81697 c 2.8844,2.56199 13.24761,1.87984 3.50331,0.31527 -1.44321,-2.13386 -9.16415,-1.6203 -3.50331,-0.31527 z m 40.61236,25.08153 c 4.43933,-3.72512 -4.30122,1.66183 0,0 z m 9.2328,6.34473 c 0.0277,-1.19543 -1.91352,0.52338 0,0 z m 0.0142,-1.6736 c 4.91602,-5.20866 -4.76346,0.30807 -4e-5,0 l 4e-5,0 z M 62.15981,129.33339 c -4.189944,-5.97826 -2.604586,-8.66544 -6.645136,-13.54677 -0.764913,-3.73279 -6.931672,-12.20326 -3.189579,-3.22947 3.42754,5.24836 4.446054,13.37434 9.834715,16.77624 z m 95.82635,60.00977 c 9.04429,-5.84575 -3.7125,-2.54641 0,0 z m 6.9041,2.70461 c 4.52911,-3.88867 -2.86491,-0.81334 0,0 z M 73.393094,133.41838 c 1.296204,-1.92838 -3.347642,-0.24666 0,0 z m 90.055596,56.78275 c 4.38526,-2.82746 -1.01036,-2.39335 -0.79483,0.26003 l 0.79484,-0.26003 -1e-5,0 z m -59.51386,-37.51178 c -0.15075,-1.90924 -2.31574,0.16206 0,0 z m 3.67794,2.11629 c -1.16888,-2.36318 -1.79716,0.37121 0,0 z m 62.8725,37.30625 c 5.61806,-4.05283 -3.4056,-0.77594 -1.17927,0.76785 l 1.17927,-0.76785 0,0 z m -2.15131,-1.03979 c 4.57663,-3.83506 -4.83183,1.69954 0,0 z m 10.99163,7.31983 c 3.0728,-2.05816 -3.73316,-0.66575 0,0 z M 76.211249,132.02781 c 4.118965,0.92286 16.460394,10.1439 9.179466,0.63772 -3.728991,-1.10384 -1.492605,-10.21906 -5.29621,-8.60579 2.552972,4.2649 2.100461,6.08018 -3.259642,3.3914 -6.736808,-3.28853 -3.785888,1.6297 -2.469293,2.98518 -1.794185,0.40772 2.373226,1.5572 1.845679,1.59149 z m -18.76588,-14.82026 c 0.737407,-3.04991 -6.789814,-16.77881 -3.554464,-6.87916 1.167861,2.07373 1.049123,6.00387 3.554464,6.87916 z m 34.443451,21.23513 c -2.120989,-1.77378 -0.100792,-0.25103 0,0 z m 5.222997,1.21548 c -0.0027,-3.23079 -5.77326,-1.31196 0,0 z m 45.261473,28.53321 c -0.86326,-2.20739 -3.41229,-0.0512 8e-5,4e-5 l -8e-5,-4e-5 z m 2.17351,1.58769 c -0.32087,-1.23546 -1.25399,0.23848 0,0 z m 17.94015,11.3001 c 1.72546,-1.27472 -2.15318,-0.1628 0,0 z M 66.819057,119.6006 c 4.935243,-1.91072 -5.28775,-1.36248 0,0 z m 71.569733,45.08937 c -0.0549,-3.19499 -3.14622,0.79264 0,0 z M 64.869152,115.05675 c 3.170167,-1.07084 -2.932663,-0.70531 0,0 z m 9.201532,4.45726 c -0.0575,-1.05014 -0.973336,0.39747 0,0 z m 112.231406,68.82181 c 4.0765,-0.8265 13.36606,2.07489 14.86752,-1.08086 -4.95044,-0.12019 -17.12734,-3.49263 -17.70346,0.80479 l 1.08368,0.17072 1.75226,0.10534 0,1e-5 z M 76.995161,120.25099 c 0.07087,-3.23755 -2.524669,-0.12092 0,0 z M 52.801998,103.4687 c -1.098703,-6.16843 -4.178791,-0.93357 0,0 z m 5.769195,1.45013 c 0.07087,-1.9807 -5.280562,-1.78224 0,0 z m 3.296917,1.61923 c -0.953019,-0.77196 -0.745959,0.97521 0,0 z m 20.744719,13.30775 c 0.976615,-0.89718 -2.312116,-0.66455 0,0 z M 59.672204,102.88617 c -0.557624,-4.65897 -6.681999,-0.69805 0,0 z M 47.844441,95.21166 c -0.168219,-2.150189 -1.152625,0.81111 0,0 z m 1.759336,-1.328672 c -0.28703,-2.549584 -1.510515,0.324387 0,0 z m 9.720792,5.802442 c 4.110486,-1.61465 -7.487254,-3.33984 -0.839893,-0.30506 l 0.839893,0.30506 z m 130.097601,80.35913 c 2.63092,-2.4121 -3.34373,-0.74577 0,0 z m 15.71669,8.14691 c 1.05433,-3.1186 -2.65452,0.41058 0,0 z M 60.318012,94.590436 c 0.433018,-3.016773 -3.258762,0.59902 0,0 z M 46.487687,85.324242 c -0.742965,-4.25911 -0.64134,-11.735065 6.465133,-9.208583 -9.485962,1.883339 6.56534,11.790095 4.538357,3.968363 3.988626,0.195294 7.802669,-2.357284 5.709487,1.516403 7.85876,-0.867958 13.307129,-7.682612 20.898169,-6.72768 5.913058,-0.782493 12.378182,-1.375955 18.750257,-3.756157 5.23905,-0.37743 10.28235,-6.018062 7.41068,-9.361383 -7.14456,-0.604513 -14.62339,0.289393 -22.520112,1.858993 -8.750559,1.819117 -16.699014,5.275307 -25.528125,6.758866 -8.605891,1.15604 1.730998,3.185165 -0.734074,3.637227 -4.490681,1.558136 5.355488,2.608852 -0.582182,4.251428 C 57.228283,77.56448 53.411411,76.304535 54.977788,72.440196 46.7341,73.50992 39.490264,76.931325 46.003276,85.320342 l 0.484402,0.0037 9e-6,-2.56e-4 z m 19.864291,-10.1168 c 1.932856,-7.120464 10.355229,5.859274 3.168052,0.945776 -0.858453,-0.642457 -2.2703,-1.166588 -3.168052,-0.945776 z m 0.376038,-3.452197 c 2.789661,-2.078257 1.482964,1.16516 0,0 z m 3.542213,0.05622 c 0.251833,-3.27648 8.108752,1.73455 1.295517,1.179499 l -1.295517,-1.179499 0,0 z m 4.84543,-1.948193 c 1.769481,-2.067535 0.50862,1.83906 0,0 z m 1.239563,-0.83005 c 2.946379,-3.540216 16.68561,-2.259413 6.628966,-0.34519 -2.695543,-2.029363 -4.761797,1.196575 -6.628966,0.34519 z m 17.930017,-2.763886 c -0.448199,-9.670222 8.907771,3.436477 0,0 z m 5.087539,-0.02784 c 1.860022,-4.873906 7.218072,-1.955774 0.860732,-0.979407 0.13805,0.518656 -0.18642,2.516173 -0.860732,0.979407 z M 58.311842,92.088739 c 5.55753,-3.403212 -5.899945,-2.952541 0,0 l 0,0 z m 4.109214,1.141866 c 1.948513,-2.071884 -4.233857,-0.840369 0,0 z M 50.313395,84.63767 c 3.175569,-2.439416 -3.757842,-0.927473 0,0 z M 214.41578,187.30012 c 0.0918,-2.83019 -2.42718,1.27537 0,0 z m -16.67487,-11.37935 c 0.47417,-3.25845 -2.14286,0.28408 0,0 z m 21.26022,12.47672 c 4.43994,0.015 13.45265,-1.37884 3.79217,-1.37442 -1.51594,0.23641 -8.83311,0.18571 -3.79216,1.37439 l -1e-5,3e-5 z M 66.035603,91.23339 c 3.593258,-0.246807 5.621861,-3.963629 -0.694932,-3.749977 -9.789949,-1.013541 8.637508,3.352129 -1.255898,2.10383 -1.329368,0.880346 1.873606,1.889721 1.95083,1.646147 z m 3.164618,1.601748 c -0.375177,-2.307063 -1.111156,1.225591 0,0 z m 3.753896,-10.009901 c 1.559281,-1.934055 -2.157697,-0.517053 0,0 z M 61.003998,62.84999 c 6.412879,-2.181631 15.182392,-4.633087 18.210335,1.074184 -3.081589,-3.70893 -1.24361,-7.360157 1.666959,-1.937407 4.115576,5.486669 6.175915,-2.495489 3.499086,-4.335821 3.050468,3.790246 6.520044,5.581281 2.042429,0.239564 4.865693,-5.852929 -9.742712,0.766433 -13.063105,0.699775 -1.597564,0.717062 -16.493576,3.79889 -12.355704,4.259705 z m 3.75831,-7.197834 c 3.657324,-2.760416 12.648968,1.641989 6.879078,-2.743367 -0.564117,-0.498292 -12.636077,3.325475 -6.879078,2.743367 z m 13.333489,0.550473 c 4.280389,0.109225 -1.84632,-5.750287 3.254304,-3.095159 -0.837696,-2.736627 -5.938558,-3.248956 -8.432316,-4.342312 -1.410474,2.502054 2.870977,7.471102 5.178012,7.437471 z M 67.100291,44.099162 c 1.480803,-2.007406 -2.59521,1.017699 0,0 z m 5.449586,1.304353 c 6.897867,-0.914901 -1.758292,-2.970542 -1.389954,-0.07352 l 1.389954,0.07352 0,-9e-6 z M 62.374386,37.441437 c -4.856866,-6.340205 9.133987,1.065769 4.199411,-5.572646 -4.153254,-3.307245 -8.144297,3.721775 -4.199411,5.572646 z m 62.330124,33.572802 c 2.22762,-3.948988 -9.19697,-5.323011 -1.5009,-1.399578 0.70858,0.236781 0.54821,1.6727 1.5009,1.399578 z""
+       id=""path2900"" />
+    <g
+       style=""font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+       id=""text3844"">
+      <path
+         d=""m 166.92789,156.32883 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91863,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48113,-0.57422 -1.49024,-0.82031 -0.009,-0.20964 -0.005,-0.94336 0.0137,-2.20118 0.0274,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60058 -0.0182,-2.00976 -0.0273,-3.34276 -0.0273,-3.99903 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51953 -0.23698,-0.082 -0.35547,-0.23241 -0.35547,-0.45118 0,-0.19138 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48761 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42382,0.69727 0,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46484,0.38281 1.09375,-0.62889 2.23307,-0.94335 3.41797,-0.94336 1.36718,10e-6 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90268 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03907,-3.07617 -0.65625,-0.7565 -1.45378,-1.13475 -2.39257,-1.13476 -0.64715,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33724 -0.94336,0.69271 -0.94336,1.0664 l 0,3.66406 c 0,1.75912 0.9707,2.63868 2.91211,2.63868 1.01171,0 1.82747,-0.32585 2.44727,-0.97754 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2841"" />
+      <path
+         d=""m 179.35562,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2843"" />
+      <path
+         d=""m 191.11343,160.70383 c -1e-5,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02148,0.77929 -1.54949,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54493,-2.18749 -1.54493,-3.77343 0,-1.70443 0.59245,-3.12174 1.77735,-4.25196 1.15755,-1.10285 2.57942,-1.65428 4.26562,-1.65429 1.02083,1e-5 1.9095,0.14584 2.66602,0.4375 0.6927,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13672,1e-5 -0.45118,-0.19595 -0.94335,-0.58789 -0.92059,-0.72915 -1.64064,-1.09374 -2.16016,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83398,2.78906 -1e-5,1.431 0.40103,2.57488 1.20312,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98242,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.1914,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2845"" />
+      <path
+         d=""m 204.26578,161.155 c -1e-5,0.19141 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25554,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94335,-0.51953 -0.27345,-0.34636 -0.46486,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37174,-0.21875 -1.87304,-0.65625 -0.54688,-0.48307 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28776,-0.916 3.36328,-0.91601 1.85026,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75196,0.88867 0.10025,1e-5 0.29165,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49218,-0.0684 0.26431,0 0.39648,0.17773 0.39649,0.5332 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29492,1.10743 -3.29492,2.14649 0,1.04818 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2847"" />
+      <path
+         d=""m 218.74429,161.31906 c -1e-5,0.18229 -0.4284,0.46029 -1.28515,0.83399 -0.72918,0.31901 -1.09376,0.47851 -1.09375,0.47851 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -1e-5,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17772 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26431 1.3444,-0.53319 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,10e-6 0.47851,0.2142 0.47851,0.64258 0,1e-5 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.9616 -0.041,1.87533 -0.041,2.74121 l 0,1.64063 c -1e-5,1.11198 0.21874,1.87304 0.65625,2.2832 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46093 l 0,-2.4336 c -1e-5,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20962 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -1e-5,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00717 1.42188,1.08008 0.31899,0.0274 0.4785,0.15039 0.47851,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2849"" />
+      <path
+         d=""m 229.34,159.52805 c -1e-5,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74285,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85678,0 -1.71355,-0.0911 -2.57032,-0.27344 -0.73828,-0.16406 -1.16666,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10938,-0.73372 0.32813,-0.75195 0.21875,-0.0273 0.40559,0.0911 0.56054,0.35547 0.6836,1.19401 1.78646,1.79101 3.3086,1.79101 1.28515,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31901,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48307,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37826,-1.74999 1.13477,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50586,1.06641 0.30077,0.22787 1.00715,0.58334 2.11914,1.0664 1.16666,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.82031,1.2168 0.82032,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2851"" />
+      <path
+         d=""m 242.08218,160.17062 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -10e-6,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2853"" />
+      <path
+         d=""m 259.58218,159.52805 c -10e-6,0.96614 -0.37142,1.73405 -1.11425,2.30371 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2855"" />
+      <path
+         d=""m 273.84195,156.95773 c -10e-6,1.58594 -0.5879,2.92807 -1.76367,4.02637 -1.17579,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.44921,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.59309 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65625,0.80209 1.51302,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2857"" />
+      <path
+         d=""m 298.39664,162.09836 c -3e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.8594,-0.13672 -3.59117,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.53321,-0.47852 -10e-6,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82945,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28257,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12305,-0.38281 0,-0.23698 0.25976,-0.38282 0.7793,-0.4375 0.56509,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.6836,-2.32421 -0.40105,-0.49218 -0.91146,-0.73828 -1.53125,-0.73829 -0.91146,10e-6 -1.73177,0.18458 -2.46093,0.55371 -0.72918,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14582,0.95703 0.4375,1.17578 0.26431,0.20052 0.74283,0.32357 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -1e-5,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41015,-0.10938 0.61523,-0.64258 0.61523,-1.59961 l 0,-4.19727 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31446 0,-0.16405 0.47396,-0.5104 1.42188,-1.03906 1.0026,-0.56509 1.61783,-0.84764 1.8457,-0.84766 0.1914,2e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83398,-0.42383 0.5651,-0.35546 1.07552,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43748 2.31055,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32811,0.41017 0.32813,0.41016 -2e-5,1e-5 0.23696,-0.13671 0.71093,-0.41016 0.55598,-0.319 1.0983,-0.56965 1.62696,-0.75195 0.77472,-0.27343 1.52667,-0.41014 2.25586,-0.41016 2.49737,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64711,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22787 0.72461,0.41016 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2859"" />
+      <path
+         d=""m 309.94937,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2861"" />
+      <path
+         d=""m 319.49234,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35548,0 -0.57423,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13022 0.10026,1.84571 0.30079,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2863"" />
+      <path
+         d=""m 326.34195,146.64914 c -10e-6,0.41929 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36005 -0.65853,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49903,-1.12109 0.33267,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39452,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41472 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57877,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28255,-0.10025 -0.42383,-0.25064 -0.42383,-0.45117 0,-0.26432 0.20508,-0.46028 0.61524,-0.58789 0.76562,-0.23697 1.44465,-0.55143 2.03711,-0.94336 0.47395,-0.32812 0.76562,-0.49218 0.875,-0.49219 0.36457,10e-6 0.54231,0.23699 0.5332,0.71094 -0.0365,2.38802 -0.0547,4.82162 -0.0547,7.30078 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48308 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2865"" />
+      <path
+         d=""m 351.9357,162.09836 c -2e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.85939,-0.13672 -3.59116,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.5332,-0.47852 -2e-5,-0.27344 0.24151,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82944,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12304,-0.38281 -10e-6,-0.23698 0.25975,-0.38282 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.68359,-2.32421 -0.40106,-0.49218 -0.91147,-0.73828 -1.53125,-0.73829 -0.91147,10e-6 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14583,0.95703 0.4375,1.17578 0.26432,0.20052 0.74283,0.32357 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41016,-0.10938 0.61523,-0.64258 0.61524,-1.59961 l 0,-4.19727 c -10e-6,-1.0664 -0.28712,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15722,-0.31446 -1e-5,-0.16405 0.47395,-0.5104 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84764 1.8457,-0.84766 0.19141,2e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51757,-0.43748 2.31054,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41014 2.25586,-0.41016 2.49738,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2867"" />
+      <path
+         d=""m 363.48843,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2869"" />
+      <path
+         d=""m 374.04312,159.52805 c -10e-6,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74284,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28516,-0.45117 -0.0729,-0.1276 -0.10937,-0.75195 -0.10937,-1.87305 0,-0.48307 0.10937,-0.73372 0.32812,-0.75195 0.21875,-0.0273 0.4056,0.0911 0.56055,0.35547 0.68359,1.19401 1.78645,1.79101 3.30859,1.79101 1.28515,0 1.92773,-0.44661 1.92774,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85938,-1.05274 -1.33073,-0.59244 -2.2194,-1.11197 -2.66601,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13476,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.81641,-0.79297 0.73827,1e-5 1.41275,0.0593 2.02344,0.17774 0.65624,0.1185 0.99803,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60157,-0.15039 -0.72006,-1.17577 -1.63151,-1.76366 -2.73437,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87305,1.20312 0,0.44662 0.16862,0.80209 0.50586,1.06641 0.30078,0.22787 1.00716,0.58334 2.11914,1.0664 1.16666,0.50131 1.95963,0.95248 2.37891,1.35352 0.54686,0.51953 0.8203,1.2168 0.82031,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2871"" />
+      <path
+         d=""m 394.4689,161.155 c -1e-5,0.19141 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51953 -0.27345,-0.34636 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54687,-0.48307 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61979,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0274,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98243,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11425,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51075,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28775,-0.916 3.36328,-0.91601 1.85025,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75195,0.88867 0.10025,1e-5 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49219,-0.0684 0.26431,0 0.39647,0.17773 0.39648,0.5332 z m -4.21093,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29493,1.10743 -3.29492,2.14649 -1e-5,1.04818 0.56965,1.57226 1.70898,1.57226 0.45573,0 0.92513,-0.0866 1.40821,-0.25976 0.56509,-0.20052 0.84764,-0.44206 0.84765,-0.72461 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2873"" />
+      <path
+         d=""m 415.11343,156.58859 c -10e-6,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18946 -2.47689,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49218 -0.0912,-0.0365 -0.13672,0.18684 -0.13671,0.66992 l 0,4.11523 c -1e-5,0.66536 0.54231,1.09375 1.62695,1.28516 0.50129,0.0911 0.81803,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19825,0.38965 -10e-6,0.30988 -0.20509,0.45116 -0.61524,0.42382 -1.91407,-0.12761 -3.5957,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16862 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.7793,-0.56054 0.44661,-0.1823 0.66991,-0.6198 0.66992,-1.3125 l 0,-12.0586 c -10e-6,-0.97525 -0.26889,-1.58593 -0.80664,-1.83203 -0.63803,-0.28254 -0.95704,-0.51496 -0.95703,-0.69727 -10e-6,-0.20051 0.18684,-0.3509 0.56054,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49024,-0.6289 0.42838,-0.24609 0.68814,-0.36913 0.77929,-0.36914 0.27344,1e-5 0.49674,0.25066 0.66993,0.75195 0.2552,0.72918 0.42382,1.09376 0.50585,1.09375 0.0182,1e-5 0.41016,-0.21418 1.17579,-0.64258 0.83853,-0.46483 1.65884,-0.69725 2.46093,-0.69726 1.30338,1e-5 2.3789,0.36915 3.22657,1.10742 1.0117,0.86589 1.51756,2.11915 1.51757,3.75976 z m -2.32421,1.09375 c -2e-5,-1.48567 -0.36916,-2.64322 -1.10743,-3.47265 -0.60157,-0.6927 -1.30795,-1.03906 -2.11914,-1.03907 -0.62891,10e-6 -1.23047,0.21876 -1.80468,0.65625 -0.75652,0.56512 -1.13478,1.35353 -1.13477,2.36524 l 0,3.86914 c -10e-6,0.24609 0.34635,0.50586 1.03906,0.7793 0.74739,0.30078 1.55859,0.45117 2.4336,0.45117 1.79556,0 2.69334,-1.20313 2.69336,-3.60938 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2875"" />
+      <path
+         d=""m 429.20914,156.95773 c -2e-5,1.58594 -0.58791,2.92807 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.4492,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2877"" />
+      <path
+         d=""m 441.19937,160.70383 c -10e-6,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02149,0.77929 -1.54948,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54492,-2.18749 -1.54492,-3.77343 0,-1.70443 0.59245,-3.12174 1.77734,-4.25196 1.15755,-1.10285 2.57943,-1.65428 4.26563,-1.65429 1.02082,1e-5 1.9095,0.14584 2.66602,0.4375 0.69269,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13673,1e-5 -0.45118,-0.19595 -0.94336,-0.58789 -0.92058,-0.72915 -1.64063,-1.09374 -2.16015,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83399,2.78906 0,1.431 0.40104,2.57488 1.20313,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98241,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.19139,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2879"" />
+      <path
+         d=""m 456.73062,161.98898 c -10e-6,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47201,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.1914 -1.44011,-1.54948 -2.66147,-3.17188 -3.66406,-4.86719 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64257,1.01172 -1e-5,0.3099 0.009,0.75652 0.0273,1.33985 0.0182,0.58333 0.16406,0.96614 0.4375,1.14843 0.1914,0.12761 0.63346,0.22787 1.32617,0.30079 0.42838,0.0547 0.64257,0.21419 0.64258,0.47851 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91146,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88867,-0.20508 -0.0182,-0.0638 -0.0274,-0.15495 -0.0274,-0.27344 0,-0.28255 0.278,-0.49674 0.83399,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75195,-1.76367 l 0,-11.94922 c 0,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20052,-0.37368 -0.61979,-0.66535 -1.25781,-0.875 -0.30079,-0.10024 -0.45118,-0.24152 -0.45117,-0.42383 -10e-6,-0.2643 0.21419,-0.46938 0.64257,-0.61523 0.68359,-0.22785 1.33529,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.8112,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56055,0.71094 -1e-5,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0274,8.55859 c -1e-5,0.23699 0.0638,0.35548 0.1914,0.35547 0.13672,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32421 0.21874,-0.22786 0.32812,-0.41015 0.32813,-0.54688 -1e-5,-0.24608 -0.36915,-0.41926 -1.10743,-0.51953 -0.31901,-0.0365 -0.4694,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22332,0.47853 -0.66992,0.50586 -0.70184,0.0273 -1.36265,0.18686 -1.98243,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13932,1.73178 2.21484,3.03972 3.22656,3.92383 0.64713,0.55599 1.25325,0.83399 1.81836,0.83399 0.41926,0 0.67903,0.0296 0.7793,0.0889 0.10025,0.0592 0.15038,0.21648 0.15039,0.47168 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2881"" />
+      <path
+         d=""m 468.26968,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2883"" />
+      <path
+         d=""m 477.81265,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99804,-0.41699 -0.14584,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30534,0.18231 0.31446,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35547,0 -0.57422,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c -10e-6,1.13022 0.10025,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10937,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2885"" />
+      <path
+         d=""m 267.56656,187.18898 c -2e-5,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47202,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.19141 -1.44012,-1.54947 -2.66147,-3.17187 -3.66406,-4.86718 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64258,1.01172 0,0.3099 0.009,0.75652 0.0274,1.33985 0.0182,0.58333 0.16405,0.96614 0.4375,1.14843 0.1914,0.12761 0.63345,0.22787 1.32617,0.30078 0.42838,0.0547 0.64257,0.2142 0.64258,0.47852 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91147,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88868,-0.20508 -0.0182,-0.0638 -0.0273,-0.15495 -0.0273,-0.27344 0,-0.28255 0.27799,-0.49674 0.83398,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75196,-1.76367 l 0,-11.94922 c -1e-5,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20053,-0.37368 -0.6198,-0.66535 -1.25782,-0.875 -0.30078,-0.10024 -0.45117,-0.24152 -0.45117,-0.42383 0,-0.2643 0.21419,-0.46938 0.64258,-0.61523 0.68359,-0.22785 1.33528,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.81119,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56054,0.71094 0,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0273,8.55859 c 0,0.23699 0.0638,0.35548 0.19141,0.35547 0.13671,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32422 0.21874,-0.22785 0.32811,-0.41014 0.32812,-0.54687 -10e-6,-0.24608 -0.36915,-0.41926 -1.10742,-0.51953 -0.31902,-0.0365 -0.46941,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22333,0.47853 -0.66993,0.50586 -0.70183,0.0274 -1.36264,0.18686 -1.98242,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13931,1.73178 2.21483,3.03972 3.22656,3.92383 0.64713,0.55599 1.25324,0.83399 1.81836,0.83399 0.41926,0 0.67902,0.0296 0.7793,0.0889 0.10024,0.0592 0.15037,0.21647 0.15039,0.47168 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2887"" />
+      <path
+         d=""m 283.31656,187.4214 c -2e-5,0.28256 -0.20509,0.41016 -0.61524,0.38282 -1.95964,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -10e-6,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76108 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68164,1.43554 0.42838,0.0365 0.64258,0.17318 0.64258,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46485,0.0137 -1.43099,-0.0547 -2.90755,0.0182 -4.42968,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42382 -10e-6,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51041,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41016,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55011,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27148,0.46484 0.41015,0.082 0.61522,0.23242 0.61524,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2889"" />
+      <path
+         d=""m 289.48257,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31445,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -1e-5,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51951 1.07324,-0.51953 0.92969,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15495,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24153,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79296,-0.66081 0.79297,-1.51758 l 0,-3.58203 c -1e-5,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20053,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20507,-0.46027 0.61523,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 -10e-6,0.59245 0.0866,1.01627 0.25976,1.27148 0.1914,0.28255 0.55599,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2891"" />
+      <path
+         d=""m 303.00406,169.01906 c -10e-6,0.38283 -0.17319,0.82945 -0.51953,1.33984 -0.34637,0.51044 -0.6198,0.76565 -0.82031,0.76563 -0.24611,2e-5 -0.50587,-0.12303 -0.7793,-0.36914 -0.57423,-0.41014 -1.08009,-0.61522 -1.51758,-0.61524 -1.73178,2e-5 -2.59766,1.21226 -2.59766,3.63672 l 0,2.93946 c 0,0.45574 0.39193,0.6517 1.17579,0.58789 l 1.73632,-0.13672 c 0.68359,-0.0547 1.05729,0.0547 1.1211,0.32812 0.0182,0.0912 0.0273,0.22332 0.0273,0.39649 -10e-6,0.3737 -0.0911,0.60613 -0.27344,0.69726 -0.10938,0.0638 -0.39193,0.0957 -0.84765,0.0957 l -1.73633,0 c -0.77475,1e-5 -1.17579,0.16407 -1.20313,0.49218 -0.0182,0.19142 -0.0182,2.17384 0,5.94727 0,0.51042 0.23698,0.875 0.71094,1.09375 0.35546,0.17318 0.94791,0.29167 1.77735,0.35547 0.32811,0.0273 0.52635,0.0661 0.59472,0.11621 0.0684,0.0501 0.10253,0.19824 0.10254,0.44433 -10e-6,0.28256 -0.0387,0.45118 -0.11621,0.50586 -0.0775,0.0547 -0.27117,0.0729 -0.58105,0.0547 -2.01433,-0.10937 -3.82358,-0.082 -5.42774,0.082 -0.41927,0.0456 -0.67448,0.0456 -0.76562,0 -0.0912,-0.0456 -0.13672,-0.20507 -0.13672,-0.47851 0,-0.22787 0.26432,-0.41472 0.79297,-0.56055 0.6289,-0.17318 0.94335,-0.6289 0.94336,-1.36719 l 0,-5.31836 c -10e-6,-0.55598 -0.0866,-0.94335 -0.25977,-1.16211 -0.11849,-0.14582 -0.34636,-0.27342 -0.68359,-0.38281 -0.52865,-0.16405 -0.79297,-0.42382 -0.79297,-0.7793 0,-0.24608 0.10937,-0.40103 0.32812,-0.46484 0.0729,-0.0182 0.30078,-0.0319 0.6836,-0.041 0.32812,-0.009 0.5332,-0.082 0.61523,-0.21875 0.0547,-0.10025 0.082,-0.34635 0.082,-0.73829 l 0,-2.17382 c 0,-1.73176 0.71094,-3.14908 2.13281,-4.25196 1.35807,-1.04816 3.02604,-1.57224 5.00391,-1.57226 0.8203,2e-5 1.23046,0.25067 1.23047,0.75195 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2893"" />
+      <path
+         d=""m 312.84781,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.3763,0 -2.53385,-0.45117 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c 0,-0.50129 -0.2028,-0.94107 -0.60839,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2895"" />
+      <path
+         d=""m 326.72476,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -10e-6,-0.40102 0.16633,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35548,0.0365 -0.57878,0.0228 -0.66993,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13671,-0.4375 -10e-6,-0.20963 0.24153,-0.38281 0.7246,-0.51953 0.52865,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61523,-0.70637 -1.24414,-0.91601 -0.28255,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61524,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2897"" />
+      <path
+         d=""m 338.55093,184.72804 c -10e-6,0.96615 -0.37142,1.73406 -1.11425,2.30372 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39193 -0.14584,-0.72005 -0.4375,-0.98438 -0.31902,-0.30077 -0.93881,-0.65168 -1.85937,-1.05273 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17773 0.65624,0.1185 0.99804,0.26434 1.02539,0.4375 0.0729,0.51043 0.2233,1.24871 0.45117,2.21485 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17578 -1.63152,-1.76367 -2.73438,-1.76368 -1.2487,1e-5 -1.87305,0.40106 -1.87304,1.20313 -10e-6,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.09179 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2899"" />
+      <path
+         d=""m 362.44937,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2901"" />
+      <path
+         d=""m 375.39664,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2903"" />
+      <path
+         d=""m 385.17203,186.38234 c -1e-5,0.4375 -0.40105,0.8112 -1.20313,1.1211 -0.71094,0.27343 -1.43099,0.41015 -2.16015,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43295,-0.28027 -0.99805,-0.417 -0.14583,-0.0364 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98438,-0.48306 1.84115,-1.34895 2.57032,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -1e-5,0.12762 0.0228,0.21877 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17316,1e-5 0.17316,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2905"" />
+      <path
+         d=""m 404.23062,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2907"" />
+      <path
+         d=""m 420.63687,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2909"" />
+      <path
+         d=""m 433.58414,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2911"" />
+      <path
+         d=""m 448.65054,186.51906 c -10e-6,0.18229 -0.4284,0.46029 -1.28515,0.83398 -0.72918,0.31902 -1.09376,0.47852 -1.09375,0.47852 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -10e-6,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17773 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26432 1.3444,-0.5332 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,1e-5 0.47851,0.2142 0.47851,0.64258 0,10e-6 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.96159 -0.041,1.87533 -0.041,2.74121 l 0,1.64062 c -10e-6,1.11199 0.21874,1.87305 0.65625,2.28321 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46094 l 0,-2.43359 c -10e-6,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20963 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -10e-6,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00716 1.42188,1.08008 0.31899,0.0273 0.4785,0.15039 0.47851,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2913"" />
+      <path
+         d=""m 462.54117,178.58937 c -0.0912,0.67449 -0.32814,1.01173 -0.71094,1.01172 -0.13673,1e-5 -0.39194,-0.0273 -0.76562,-0.082 -0.16408,-0.0182 -0.27801,-0.0273 -0.3418,-0.0273 -0.12762,0.009 -0.19142,0.0912 -0.19141,0.24609 -1e-5,0.0456 0.009,0.18686 0.0273,0.42383 0.0182,0.23699 0.0273,0.47852 0.0273,0.72461 -1e-5,1.97787 -1.28061,3.32227 -3.8418,4.0332 -1.51302,0.41927 -2.26953,0.75651 -2.26953,1.01172 0,0.26432 0.56054,0.4694 1.68164,0.61523 l 2.13282,0.28711 c 1.194,0.15495 2.06899,0.37826 2.625,0.66993 0.8841,0.46484 1.32615,1.18033 1.32617,2.14648 -2e-5,1.35807 -0.77931,2.51562 -2.33789,3.47266 -1.51303,0.92056 -3.27215,1.38085 -5.27735,1.38086 -1.23958,-1e-5 -2.22624,-0.25066 -2.95996,-0.75196 -0.73372,-0.50131 -1.10059,-1.16667 -1.10058,-1.99609 -1e-5,-1.25782 0.87499,-2.46094 2.625,-3.60938 -0.80209,-0.32812 -1.20313,-0.84309 -1.20313,-1.54492 0,-0.65625 0.74739,-1.25325 2.24219,-1.79101 -2.15105,-0.57422 -3.22657,-1.83203 -3.22656,-3.77344 -1e-5,-1.21223 0.43977,-2.21711 1.31933,-3.01465 0.87956,-0.79752 1.98925,-1.19628 3.3291,-1.19629 0.95703,10e-6 1.89127,0.21876 2.80274,0.65625 0.60155,0.28256 1.35806,0.41017 2.26953,0.38281 l 1.20312,-0.0273 c 0.30989,-0.009 0.50129,0.0319 0.57422,0.12305 0.0729,0.0912 0.0866,0.30079 0.041,0.6289 z m -4.08789,2.55664 c -1e-5,-2.11457 -0.91147,-3.17186 -2.73438,-3.17187 -1.54948,1e-5 -2.32422,0.97983 -2.32422,2.93945 0,1.94141 0.85677,2.91212 2.57032,2.91211 0.71093,10e-6 1.30337,-0.25065 1.77734,-0.75195 0.47395,-0.5013 0.71093,-1.14388 0.71094,-1.92774 z m 2.16015,9.32422 c -10e-6,-0.69271 -0.83855,-1.16211 -2.51562,-1.4082 l -2.7207,-0.38281 c -0.25522,-0.0456 -0.61069,-0.11394 -1.06641,-0.20508 -0.96615,0.77474 -1.44922,1.73632 -1.44922,2.88476 0,1.29427 0.875,1.9414 2.625,1.94141 1.35807,-1e-5 2.5703,-0.32357 3.63672,-0.9707 0.99348,-0.59245 1.49022,-1.21225 1.49023,-1.85938 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2915"" />
+      <path
+         d=""m 478.3732,187.35304 c -2e-5,0.30079 -0.20509,0.44206 -0.61523,0.42383 -2.28778,-0.082 -3.77345,-0.10026 -4.45704,-0.0547 -0.33725,0.0273 -0.53777,0.0319 -0.60156,0.0137 -0.17319,-0.0456 -0.25977,-0.19141 -0.25976,-0.4375 -1e-5,-0.17318 0.25975,-0.33724 0.77929,-0.49219 0.34635,-0.10937 0.5651,-0.27799 0.65625,-0.50586 0.0456,-0.1276 0.0683,-0.41927 0.0684,-0.875 l 0,-3.69141 c -1e-5,-2.1328 -0.90235,-3.19921 -2.70703,-3.19921 -0.80209,0 -1.55404,0.19141 -2.25586,0.57421 -0.66537,0.3646 -0.99805,0.72462 -0.99805,1.08008 l 0,5.20899 c 0,0.875 0.56055,1.37174 1.68165,1.49023 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.18229 -0.0319,0.30078 -0.0957,0.35547 -0.0638,0.0547 -0.2461,0.0775 -0.54687,0.0684 -1.44923,-0.0547 -2.92579,-0.0182 -4.42969,0.10937 -0.32813,0.0273 -0.53321,0.0319 -0.61524,0.0137 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -1e-5,-0.20052 0.25976,-0.36914 0.77929,-0.50586 0.48307,-0.13671 0.72461,-0.63346 0.72461,-1.49023 l 0,-12.37305 c 0,-0.72003 -0.0729,-1.24412 -0.21875,-1.57226 -0.20964,-0.43749 -0.62891,-0.76105 -1.25781,-0.97071 -0.2461,-0.082 -0.36914,-0.2324 -0.36914,-0.45117 0,-0.15493 0.18685,-0.31443 0.56055,-0.47851 0.5013,-0.22785 1.13932,-0.56053 1.91406,-0.99805 0.5013,-0.28253 0.84309,-0.42381 1.02539,-0.42383 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,4.67578 c -10e-6,0.50131 0.0729,0.75196 0.21875,0.75196 -0.082,0 0.37597,-0.26204 1.37402,-0.78614 0.99804,-0.52408 1.94368,-0.78612 2.83691,-0.78613 2.42447,1e-5 3.64583,1.34441 3.66407,4.0332 l 0.0273,4.6211 c 0.009,0.92057 0.57876,1.43554 1.70899,1.54492 0.41014,0.0365 0.61521,0.17318 0.61523,0.41015 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2917"" />
+    </g>
+    <g
+       style=""font-size:40px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
+       id=""text3850"">
+      <path
+         d=""m 229.85182,43.77803 c -0.79695,3.140714 -1.28913,8.414146 -1.47656,15.820313 -7e-5,1.453199 -0.65632,2.179761 -1.96875,2.179687 -1.31257,7.4e-5 -2.22663,-0.632738 -2.74219,-1.898437 -1.40631,-3.421796 -2.74225,-5.812419 -4.00781,-7.171875 -1.50006,-1.593666 -3.49225,-2.554603 -5.97656,-2.882813 -2.67193,-0.421789 -9.32818,-0.632726 -19.96875,-0.632812 -2.43754,8.6e-5 -4.03129,0.257898 -4.78125,0.773437 -0.46879,0.32821 -0.70316,1.031335 -0.70313,2.109375 l 0,31.851563 c -3e-5,1.078175 0.67966,1.5938 2.03906,1.546875 4.17184,-0.04682 10.21871,-0.328075 18.14063,-0.84375 1.54682,-0.187449 2.58979,-0.691355 3.12891,-1.511719 0.539,-0.820259 1.06634,-2.941351 1.58203,-6.363281 0.32806,-1.87494 1.42963,-2.601502 3.30468,-2.179688 1.59369,0.328186 2.27338,1.054747 2.03907,2.179688 -1.31256,6.375052 -1.73444,14.671919 -1.26563,24.890627 0.0468,1.21878 -0.72662,1.87503 -2.32031,1.96875 -1.31256,0.14065 -2.13287,-0.56247 -2.46094,-2.10938 -1.2188,-5.859333 -3.48052,-8.988236 -6.78515,-9.386716 -3.30474,-0.398394 -8.68364,-0.597612 -16.13672,-0.597656 -0.84379,4.4e-5 -1.26566,0.304731 -1.26563,0.914062 l 0,31.64063 c -3e-5,2.34375 0.86716,3.9375 2.60156,4.78125 1.35934,0.70313 4.28903,1.33594 8.78907,1.89843 2.29683,0.23438 3.30464,1.24219 3.02343,3.02344 -0.28129,1.54688 -2.34379,2.15625 -6.1875,1.82813 -11.1094,-0.89063 -20.27345,-0.84375 -27.49218,0.14062 -2.01564,0.28125 -3.02345,-0.53906 -3.02344,-2.46094 -1e-5,-1.21874 1.0078,-1.92187 3.02344,-2.10937 4.59373,-0.51562 6.8906,-4.54687 6.89062,-12.09375 l 0,-60.187502 c -2e-5,-3.093671 -0.5508,-5.472575 -1.65234,-7.136719 -1.10158,-1.663977 -3.15236,-3.175695 -6.15235,-4.535156 -1.87501,-0.843661 -2.57813,-1.992098 -2.10937,-3.445313 0.23436,-0.890532 0.60936,-1.382719 1.125,-1.476562 0.46874,-0.140532 1.71092,-0.04678 3.72656,0.28125 2.95311,0.468842 9.91404,0.703217 20.88281,0.703125 12.93746,9.2e-5 24.11713,-0.281158 33.53907,-0.84375 3.14055,-0.187407 4.71086,0.07041 4.71093,0.773437 -7e-5,0.187592 -0.0235,0.375092 -0.0703,0.5625 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2830"" />
+      <path
+         d=""m 275.55495,133.14522 c -4e-5,1.875 -1.05473,2.69531 -3.16407,2.46094 -6.46877,-0.60938 -14.48439,-0.51563 -24.04687,0.28125 -1.92189,0.18749 -3.10548,0.14062 -3.55078,-0.14063 -0.44532,-0.28125 -0.66798,-1.05469 -0.66797,-2.32031 -1e-5,-1.125 1.27733,-2.07422 3.83203,-2.84766 2.55467,-0.77343 3.83202,-3.08202 3.83203,-6.92578 l 0,-63.632812 c -1e-5,-3.796796 -0.55079,-6.585856 -1.65234,-8.367188 -1.10158,-1.781164 -3.03517,-3.163975 -5.80078,-4.148437 -1.45313,-0.515537 -2.1797,-1.242099 -2.17969,-2.179688 -1e-5,-1.406158 1.05468,-2.460845 3.16406,-3.164062 3.18749,-1.031156 6.49217,-2.624904 9.91406,-4.78125 2.81248,-1.687401 4.59373,-2.53115 5.34375,-2.53125 1.73435,1e-4 2.60154,1.195412 2.60157,3.585937 -3e-5,-0.187403 -0.0938,2.156345 -0.28125,7.03125 -0.14065,4.64071 -0.18753,9.211018 -0.14063,13.710938 l 0.28125,62.789062 c -2e-5,2.85939 0.7031,4.9336 2.10938,6.22266 1.40622,1.28906 3.82028,2.14453 7.24218,2.5664 2.10934,0.23438 3.16403,1.03126 3.16407,2.39063 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2832"" />
+      <path
+         d=""m 339.67995,128.43428 c -7e-5,0.98438 -1.79303,2.47266 -5.37891,4.46484 -3.58599,1.99219 -6.45708,2.98828 -8.61328,2.98829 -1.82817,-10e-6 -3.44536,-0.89063 -4.85156,-2.67188 -1.40629,-1.78125 -2.39067,-2.67187 -2.95313,-2.67187 -0.42191,0 -2.64847,0.96094 -6.67969,2.88281 -4.03128,1.92187 -8.08596,2.88281 -12.16406,2.88281 -3.84377,0 -7.0547,-1.125 -9.63281,-3.375 -2.81251,-2.48437 -4.21876,-5.85937 -4.21875,-10.125 -1e-5,-8.10935 9.28123,-13.92185 27.84375,-17.4375 3.18746,-0.60934 4.80465,-1.89841 4.85156,-3.86719 l 0.14063,-4.499997 c 0.28121,-7.687454 -3.11723,-11.5312 -10.19532,-11.53125 -2.01565,5e-5 -3.9258,1.804735 -5.73046,5.414062 -1.80471,3.609416 -4.39456,5.554727 -7.76954,5.835938 -3.84376,0.375038 -5.76563,-1.242148 -5.76562,-4.851563 -1e-5,-2.249954 2.85936,-4.874951 8.57812,-7.875 5.99998,-3.14057 11.7656,-4.710881 17.29688,-4.710937 9.51558,5.6e-5 14.22651,4.523489 14.13281,13.570312 l -0.28125,28.968755 c -0.0469,3.04688 1.24214,4.57032 3.86719,4.57031 0.51557,1e-5 1.49994,-0.11718 2.95312,-0.35156 1.45307,-0.23437 2.29682,-0.35156 2.53125,-0.35157 1.35932,1e-5 2.039,0.91407 2.03907,2.74219 z M 318.0237,112.40303 c 0.0468,-1.17185 -0.2227,-1.94529 -0.8086,-2.32031 -0.58597,-0.37498 -1.51175,-0.44529 -2.77734,-0.21094 -11.2969,2.01565 -16.94533,5.69533 -16.94531,11.03906 -2e-5,5.39064 2.92966,8.08595 8.78906,8.08594 2.34372,1e-5 4.75778,-0.44531 7.24219,-1.33594 2.90621,-1.03124 4.35933,-2.27342 4.35937,-3.72656 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2834"" />
+      <path
+         d=""m 392.13307,120.06709 c -5e-5,4.96876 -1.9102,8.91798 -5.73047,11.84766 -3.82035,2.92969 -9.03519,4.39453 -15.64453,4.39453 -4.40627,0 -8.81252,-0.46875 -13.21875,-1.40625 -3.79688,-0.84375 -6.00001,-1.61719 -6.60937,-2.32031 -0.37501,-0.65625 -0.56251,-3.86718 -0.5625,-9.63281 -1e-5,-2.48436 0.56249,-3.77343 1.6875,-3.86719 1.12499,-0.14061 2.08592,0.46876 2.88281,1.82812 3.51561,6.14064 9.18748,9.21095 17.01562,9.21094 6.60934,1e-5 9.91403,-2.29687 9.91407,-6.89062 -4e-5,-2.01562 -0.75004,-3.70311 -2.25,-5.0625 -1.64066,-1.54686 -4.82816,-3.35155 -9.5625,-5.41407 -6.84377,-3.04685 -11.41408,-5.71872 -13.71094,-8.01562 -2.48439,-2.43747 -3.72657,-5.718716 -3.72656,-9.843752 -1e-5,-5.062455 1.9453,-8.999951 5.83593,-11.8125 3.60936,-2.718695 8.43748,-4.078069 14.48438,-4.078125 3.79684,5.6e-5 7.26559,0.304743 10.40625,0.914062 3.37496,0.60943 5.13277,1.359429 5.27344,2.25 0.37495,2.625051 1.14839,6.421922 2.32031,11.390625 0.14058,0.609416 -0.51567,1.101603 -1.96875,1.476563 -1.54692,0.328165 -2.57817,0.07035 -3.09375,-0.773438 -3.70317,-6.046828 -8.39066,-9.070262 -14.0625,-9.070312 -6.4219,5e-5 -9.63283,2.062548 -9.63281,6.1875 -2e-5,2.296916 0.86716,4.12504 2.60156,5.484375 1.54685,1.171912 5.17966,3.000035 10.89844,5.484372 5.99996,2.57816 10.07808,4.89847 12.23437,6.96094 2.81245,2.6719 4.2187,6.25783 4.21875,10.75781 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2836"" />
+      <path
+         d=""m 473.69557,132.72334 c -7e-5,1.64063 -1.10163,2.50782 -3.30469,2.60157 -3.28131,0.0469 -7.57037,0.28124 -12.86718,0.70312 -2.62506,0.51562 -4.50006,0.1875 -5.625,-0.98437 -7.4063,-7.96875 -13.68754,-16.31249 -18.84375,-25.03125 -0.42191,-0.74998 -0.96097,-1.12498 -1.61719,-1.125 -0.79691,2e-5 -2.17972,0.70315 -4.14844,2.10937 -2.20315,1.21877 -3.30471,2.95315 -3.30469,5.20313 -2e-5,1.59376 0.0469,3.89064 0.14063,6.89062 0.0937,3.00001 0.84372,4.96876 2.25,5.90625 0.98435,0.65626 3.25778,1.17188 6.82031,1.54688 2.20309,0.28125 3.30465,1.10156 3.30469,2.46093 -4e-5,1.07813 -0.17582,1.7461 -0.52734,2.00391 -0.3516,0.25781 -1.27738,0.31641 -2.77735,0.17578 -4.68753,-0.42187 -12.60939,-0.1875 -23.76562,0.70313 -2.81251,0.23437 -4.33595,-0.11719 -4.57032,-1.05469 -0.0937,-0.32813 -0.14063,-0.79688 -0.14062,-1.40625 -1e-5,-1.45312 1.42968,-2.55469 4.28906,-3.30469 2.57811,-0.65624 3.86718,-3.67968 3.86719,-9.07031 l 0,-61.453127 c -1e-5,-3.843671 -0.37501,-6.515543 -1.125,-8.015625 -1.03126,-1.92179 -3.18751,-3.421788 -6.46875,-4.5 -1.54688,-0.515536 -2.32032,-1.242098 -2.32031,-2.179688 -1e-5,-1.359283 1.10155,-2.413969 3.30468,-3.164062 3.51562,-1.17178 6.86718,-2.788966 10.05469,-4.851563 2.57811,-1.6874 4.17186,-2.531149 4.78125,-2.53125 1.92185,1.01e-4 2.88279,1.21885 2.88281,3.65625 -2e-5,-0.328027 -0.0235,1.992283 -0.0703,6.960938 -0.0469,3.421962 -0.0703,8.015707 -0.0703,13.78125 l 0.14062,44.015627 c -2e-5,1.21878 0.3281,1.82815 0.98438,1.82812 0.7031,3e-5 1.78122,-0.60934 3.23437,-1.82812 3.8906,-3.046842 8.67184,-7.031213 14.34375,-11.953127 1.12496,-1.17183 1.68746,-2.109329 1.6875,-2.8125 -4e-5,-1.265577 -1.89848,-2.156201 -5.69531,-2.671875 -1.64066,-0.18745 -2.4141,-1.101512 -2.32031,-2.742188 0.14059,-1.64057 0.9609,-2.343695 2.46094,-2.109375 3.37495,0.468805 8.29682,0.726617 14.76562,0.773438 4.49994,0.04693 8.9765,0.07037 13.42969,0.07031 1.45306,0.04693 2.17962,0.914116 2.17969,2.601563 -7e-5,1.5938 -1.14851,2.460986 -3.44532,2.601562 -3.60943,0.140674 -7.00787,0.960986 -10.19531,2.460938 -4.45317,2.015669 -9.21098,5.554728 -14.27344,10.617187 -0.37504,0.281286 -0.56254,0.632845 -0.5625,1.054685 -4e-5,0.65629 0.79684,2.2266 2.39063,4.71094 5.85933,8.90627 11.39057,15.63283 16.59375,20.17969 3.32806,2.85938 6.44525,4.28907 9.35156,4.28906 2.15618,1e-5 3.49212,0.15235 4.00781,0.45703 0.51556,0.30469 0.77337,1.11329 0.77344,2.42578 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2838"" />
+    </g>
+  </g>
+</svg>
","diff --git a/artwork/logo-full.svg b/artwork/logo-full.svg
new file mode 100755
index 00000000..43465a4d
--- /dev/null
+++ b/artwork/logo-full.svg
@@ -0,0 +1,329 @@
+<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc=""http://purl.org/dc/elements/1.1/""
+   xmlns:cc=""http://creativecommons.org/ns#""
+   xmlns:rdf=""http://www.w3.org/1999/02/22-rdf-syntax-ns#""
+   xmlns:svg=""http://www.w3.org/2000/svg""
+   xmlns=""http://www.w3.org/2000/svg""
+   xmlns:sodipodi=""http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd""
+   xmlns:inkscape=""http://www.inkscape.org/namespaces/inkscape""
+   width=""460""
+   height=""180""
+   id=""svg2""
+   version=""1.1""
+   inkscape:version=""0.47 r22583""
+   sodipodi:docname=""logo.svg"">
+  <defs
+     id=""defs4"">
+    <inkscape:perspective
+       sodipodi:type=""inkscape:persp3d""
+       inkscape:vp_x=""0 : 526.18109 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_z=""744.09448 : 526.18109 : 1""
+       inkscape:persp3d-origin=""372.04724 : 350.78739 : 1""
+       id=""perspective10"" />
+    <inkscape:perspective
+       id=""perspective2824""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2840""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2878""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2894""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2910""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2926""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective2976""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3020""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3036""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3052""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+    <inkscape:perspective
+       id=""perspective3866""
+       inkscape:persp3d-origin=""0.5 : 0.33333333 : 1""
+       inkscape:vp_z=""1 : 0.5 : 1""
+       inkscape:vp_y=""0 : 1000 : 0""
+       inkscape:vp_x=""0 : 0.5 : 1""
+       sodipodi:type=""inkscape:persp3d"" />
+  </defs>
+  <sodipodi:namedview
+     id=""base""
+     pagecolor=""#ffffff""
+     bordercolor=""#666666""
+     borderopacity=""1.0""
+     inkscape:pageopacity=""0.0""
+     inkscape:pageshadow=""2""
+     inkscape:zoom=""0.98994949""
+     inkscape:cx=""240.32415""
+     inkscape:cy=""-37.836532""
+     inkscape:document-units=""px""
+     inkscape:current-layer=""layer1""
+     showgrid=""false""
+     inkscape:window-width=""1680""
+     inkscape:window-height=""998""
+     inkscape:window-x=""-8""
+     inkscape:window-y=""-8""
+     inkscape:window-maximized=""1"" />
+  <metadata
+     id=""metadata7"">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="""">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource=""http://purl.org/dc/dcmitype/StillImage"" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label=""Layer 1""
+     inkscape:groupmode=""layer""
+     id=""layer1""
+     transform=""translate(-27.820801,-24.714976)"">
+    <path
+       style=""fill:#000000""
+       d=""M 96.944917,182.03377 C 89.662681,176.30608 81.894549,170.81448 76.586317,163.08166 65.416842,149.44499 56.816875,133.6567 50.937585,117.06515 47.383955,106.27654 46.166898,94.709824 41.585799,84.338096 c -4.792287,-7.533044 0.821224,-15.767897 9.072722,-18.16242 3.673742,-0.705104 10.133327,-4.170258 2.335951,-1.693539 -6.990592,5.128871 -7.667129,-4.655603 -0.498823,-5.27517 4.892026,-0.650249 6.692895,-4.655044 5.019966,-8.260251 -5.251326,-3.424464 12.733737,-7.18801 3.684373,-12.297799 -9.426987,-10.170666 13.186339,-12.128546 7.607283,-0.577786 -1.335447,8.882061 15.801226,-1.627907 11.825117,8.628945 4.041283,4.925694 15.133562,1.1211 14.85838,8.031392 5.887092,0.404678 7.907562,5.358061 13.433992,5.738347 5.72759,2.586557 16.1108,4.624792 18.0598,11.079149 -5.68242,4.498756 -18.84089,-9.292674 -19.47305,3.160397 1.71659,18.396078 1.27926,37.346439 8.00986,54.864989 3.18353,10.60759 10.9012,18.95779 17.87109,27.21946 6.66875,8.09126 15.70186,13.78715 24.90885,18.58338 8.07647,3.80901 16.78383,6.33528 25.58583,7.92044 3.5701,-2.7307 9.87303,-12.8828 15.44238,-8.60188 0.26423,4.81007 -11.0541,10.05512 -0.53248,9.5235 6.17819,-1.86378 10.46336,4.77803 15.55099,-1.21289 4.68719,5.55206 19.48197,-3.54734 16.14693,7.80115 -4.50972,2.90955 -11.08689,1.15142 -15.60404,5.15397 -7.44757,-3.71979 -13.37691,3.32843 -21.6219,2.43707 -9.15641,1.64002 -18.4716,2.30204 -27.75473,2.31642 -15.22952,-1.20328 -30.78158,-1.71049 -45.26969,-7.01291 -8.16166,-2.37161 -16.12649,-7.01887 -23.299683,-11.66829 z m 12.862043,5.5729 c 7.9696,3.44651 15.76243,7.07889 24.49656,8.17457 13.85682,1.92727 28.16653,4.89163 42.07301,2.18757 -6.2939,-2.84199 -12.80077,1.10719 -19.07096,-2.0322 -7.52033,1.61821 -15.59049,-0.41223 -23.23574,-1.41189 -8.69395,-3.87259 -18.0762,-6.53549 -26.21772,-11.56219 -10.173155,-3.71578 5.26142,4.76524 8.00873,5.45214 6.35952,3.60969 -6.99343,-1.85044 -8.87589,-3.35101 -5.32648,-2.9879 -6.00529,-2.36357 -0.52745,0.67085 1.10332,0.64577 2.19359,1.32226 3.34946,1.87216 z M 94.642259,176.88976 c 7.722781,2.86052 -0.03406,-5.43082 -3.572941,-4.94904 -1.567906,-2.72015 -5.9903,-4.43854 -2.870721,-5.89973 -5.611524,1.9481 -5.878319,-7.40814 -8.516004,-6.07139 -5.936516,-1.87454 -2.310496,-8.51501 -9.381929,-12.59292 -0.645488,-4.29697 -7.02577,-8.02393 -9.060801,-14.50525 -0.898786,-3.31843 -7.208336,-12.84783 -3.332369,-3.97927 3.300194,8.53747 9.106618,15.84879 13.93868,23.15175 3.752083,6.95328 8.182497,14.22026 15.015767,18.55788 2.303436,2.20963 4.527452,5.59533 7.780318,6.28797 z M 72.39456,152.46355 c 0.26956,-1.16626 1.412424,2.52422 0,0 z m 31.49641,27.85526 c 1.71013,-0.76577 -2.45912,-0.96476 0,0 z m 4.19228,1.52924 c -0.43419,-2.1116 -1.91376,1.18074 0,0 z m 5.24749,2.18891 c 2.49828,-2.37871 -3.85009,-1.49983 0,0 z m 8.99389,5.01274 c 1.51811,-2.2439 -4.85872,-0.84682 0,0 z m -17.2707,-12.03933 c 3.88031,-2.51023 -5.01186,-0.0347 0,0 z m 3.9366,1.96293 c -0.11004,-1.32709 -1.40297,0.59432 0,0 z m 19.67473,12.28006 c 3.16281,1.99601 18.46961,4.3749 8.88477,0.81847 -1.60377,0.33811 -17.77263,-4.57336 -8.88477,-0.81847 z M 97.430958,166.92721 c -0.307503,-1.33094 -4.909341,-1.4694 0,0 z m 9.159302,5.33813 c 2.38371,-1.66255 -4.94757,-1.28235 0,0 z m 7.70426,4.72382 c 3.42065,-1.28963 -5.54907,-1.29571 0,0 z M 93.703927,162.86805 c 3.711374,2.84621 14.967683,0.36473 5.683776,-1.69906 -4.225516,-2.2524 -13.74889,-3.79415 -7.25757,1.35821 l 1.573785,0.34088 9e-6,-3e-5 z m 25.808723,15.75216 c 1.54595,-2.63388 -6.48298,-1.50411 0,0 z m -7.84249,-6.23284 c 9.0752,2.56719 -7.63142,-5.739 -2.23911,-0.94466 l 1.19513,0.54082 1.04399,0.4039 -1e-5,-6e-5 z m 15.72354,9.0878 c 8.59474,0.082 -7.76304,-1.18486 0,1e-5 l 0,-1e-5 z M 90.396984,157.89545 c -0.335695,-1.60094 -2.120962,0.13419 0,0 z m 51.535396,31.73502 c 0.2292,-2.89141 -2.80486,2.15157 0,0 z m -36.86817,-22.75299 c -0.51986,-1.52251 -2.68548,-0.0622 0,0 z m -13.852128,-9.98649 c 4.934237,-0.29629 -6.755322,-2.17418 0,0 z M 74.802387,146.28394 c -0.614146,-2.36536 -5.369213,-4.2519 0,0 z m 43.079323,27.33941 c -0.90373,-1.0307 -0.4251,0.22546 0,0 z m 26.81408,16.45475 c -0.086,-1.57503 -1.46039,0.59616 0,0 z m -29.18712,-18.90528 c 0.48266,-2.02932 -4.20741,-0.61442 0,0 z M 95.532612,158.51286 c 3.670785,-0.39305 -5.880434,-2.48161 0,0 z M 129.32396,179.51 c 5.72042,-2.26627 -5.57541,-1.10635 0,0 z m -17.57682,-11.93145 c 6.59278,0.85002 -7.84442,-4.48425 -1.44651,-0.4773 l 1.4465,0.47734 1e-5,-4e-5 z m 22.91296,14.0886 c 6.15514,-3.67975 4.12588,8.61677 10.44254,1.0388 6.23086,-4.54942 -5.38086,5.62451 2.29838,0.81116 5.55359,-3.71438 13.75643,1.76075 18.93848,3.5472 3.72659,-0.18307 7.34938,3.22236 11.16973,1.15059 7.3542,-1.98082 -14.38097,-2.93789 -8.68344,-6.4523 -6.72914,1.95848 -11.70093,-2.33483 -15.01213,-6.64508 -7.54812,-1.74298 -16.27548,-5.602 -20.04257,-12.28184 -1.5359,-2.50802 2.21884,0.35333 -1.32586,-3.74638 -4.54834,-4.04546 -6.81948,-8.63766 -9.87278,-13.5552 -3.64755,-1.94587 -4.07249,-7.67345 -4.44123,-0.19201 0.0289,-4.72164 -4.40393,-7.89964 -5.48589,-6.57859 -0.0194,-4.54721 4.74396,-2.26787 1.40945,-5.63228 -0.71771,-4.71302 -3.08085,-9.6241 -3.79115,-14.9453 -1.1036,-2.56502 -0.15541,-8.05863 -3.76662,-2.25204 -1.31566,6.13669 -0.43668,-7.54129 1.6093,-3.03083 2.68543,-4.60251 -0.9641,-4.0612 -1.11361,-3.42211 1.74931,-3.88333 1.10719,-9.39159 -0.45644,-7.29023 0.93213,-4.11586 1.47259,-15.147529 -1.3951,-13.192579 1.73833,-4.303958 3.29668,-19.694077 -4.24961,-13.826325 -3.058358,0.04294 -8.354541,1.110195 -10.858032,2.355243 7.849502,4.326857 -0.789543,1.562577 -3.984808,0.874879 -0.416343,4.003642 -3.58119,2.272086 -7.535123,2.311339 6.315273,0.781339 -3.075253,6.458962 -6.698132,4.253506 -4.705102,2.248756 4.060621,7.862038 0.0944,9.597586 0.487433,2.616581 -7.208227,-0.944906 -6.603832,5.097711 -4.56774,-1.92155 -0.628961,7.16796 1.656273,4.09382 7.768882,2.10261 5.469108,6.89631 5.666947,11.44992 -1.265833,2.6534 -6.249495,-6.23691 -1.109939,-5.82517 -4.054715,-6.58674 -4.485232,-2.38081 -7.854566,0.67911 -0.783857,0.22222 8.5944,4.35376 2.709059,6.3967 5.177884,0.79894 5.325199,5.33008 6.379284,8.19735 3.11219,3.24152 2.475226,-3.57931 6.199071,0.31623 -2.356488,-3.4705 -12.48183,-9.77839 -4.329567,-7.7553 -0.04358,-3.49291 -1.474412,-6.30951 1.02322,-6.24118 2.473367,-4.47926 -2.590385,11.044 2.984725,5.35124 1.543285,-0.67388 1.92554,-4.48494 4.699544,0.35989 4.029096,3.96363 1.45533,6.83577 -4.228162,3.20648 1.016828,3.44946 7.603062,4.68217 6.365348,10.07646 1.3121,4.7444 3.147844,2.99695 4.747999,2.72266 1.25523,4.60973 1.968016,1.2201 2.027559,-0.97355 5.747357,1.23033 4.401142,4.62773 6.199456,7.00134 3.960416,1.78761 -5.668696,-12.11713 1.130659,-4.18106 7.153577,6.4586 2.682797,9.15464 -3.736856,8.11995 4.063129,-0.32824 5.373423,5.49305 10.455693,5.28853 4.63456,2.20477 7.77237,10.67291 -0.21613,7.1478 -2.77074,-2.49821 -12.575734,-5.5801 -4.56731,-0.82823 7.39657,3.42523 13.27117,5.47432 20.40487,9.77384 5.10535,3.64464 7.31104,7.81908 9.24607,8.64541 -4.29084,2.04946 -12.93089,-1.63655 -6.51514,-2.76618 -4.00168,-0.72894 -8.50258,-2.75259 -4.66961,2.2333 3.25926,2.72127 11.54708,2.43298 13.0328,2.74132 -1.25934,2.77488 -3.4207,2.99556 0.0516,3.21078 -3.87375,2.06438 1.24216,2.38403 1.60114,3.56362 z m -7.9215,-22.36993 c -2.35682,-2.46475 -2.9662,-7.08134 -0.41852,-3.06426 1.30648,0.52466 4.18523,7.54428 0.41857,3.06426 l -5e-5,0 z m 25.79733,16.38693 c 1.47004,-0.0952 0.0427,1.11681 0,0 z m -29.51867,-22.43039 c -0.0904,-3.72637 0.8525,2.87419 0,0 z m -2.56392,-3.44965 c -2.96446,-5.72787 3.73721,1.62212 0,0 z M 89.382646,128.35916 c 1.7416,-0.46446 0.856841,2.97864 0,0 z m 24.728294,13.40357 c 1.06957,-4.01654 1.25692,3.37014 0,0 z M 96.64115,129.61525 c -1.231543,-2.21638 2.576009,2.07865 0,0 z m 14.99279,4.80618 c -2.80851,-6.29223 1.98836,-3.43699 0.62135,1.03124 l -0.62135,-1.03124 0,0 z M 85.778757,117.17864 c -1.255624,-2.06432 -3.332663,-8.12135 -2.663982,-9.97042 0.604935,3.0114 6.403914,12.95956 2.844571,4.12096 -3.933386,-7.40908 4.701805,2.40491 5.590052,4.2529 0.413624,1.83837 -2.426789,-0.50225 -0.502192,3.80828 -3.509809,-4.90766 -2.071967,2.71088 -5.268449,-2.21172 z m -7.990701,-5.50612 c 0.328938,-4.79981 1.829262,3.29132 0,0 z m 3.594293,1.23728 c 1.715175,-3.62282 2.908243,5.05052 0,0 z m -8.64616,-6.68847 c -2.974956,-2.95622 -5.127809,-5.68132 0.139193,-1.83474 2.029482,0.0792 -4.509002,-6.19705 0.488751,-1.99305 5.25531,0.95822 2.5951,8.61674 -0.627944,3.82779 z m 4.541717,-0.11873 c 1.727646,-1.71203 0.917172,1.6853 0,0 z m 2.794587,0.8959 c -2.619181,-4.9094 3.178801,2.05822 0,0 z m -5.55546,-5.30909 c -8.64844,-7.696511 10.867309,4.02451 1.4129,1.4269 l -1.412955,-1.42683 5.5e-5,-7e-5 z m 24.77908,14.39717 c -3.742506,-2.24398 -0.991777,-15.79747 0.284503,-6.52785 3.638294,-1.17695 -0.200879,4.78728 2.512784,4.73208 -0.42767,3.76305 -1.64169,5.11594 -2.797287,1.79577 z m 9.165207,5.41684 c 0.36705,-4.08462 0.77249,2.79262 0,0 z m -1.59198,-1.57295 c 0.41206,-1.74497 0.0426,2.05487 0,0 z M 76.213566,99.16032 c -5.556046,-7.665657 16.147323,7.75413 3.558556,1.9443 -1.315432,-0.34404 -2.898208,-0.46688 -3.558556,-1.9443 z m 17.649112,9.35749 c -0.525779,-6.45461 1.174169,1.06991 -1.92e-4,-2e-5 l 1.92e-4,2e-5 z m 13.399762,8.59585 c 1.03698,-3.67668 0.0773,2.43221 0,0 z M 77.064685,96.23472 c 3.302172,-0.706291 13.684695,5.79939 4.150224,1.85832 -1.059396,-1.17279 -3.317802,-0.63994 -4.150224,-1.85832 z m 28.356745,14.13312 c 0.35296,-6.60002 1.97138,-3.94233 0.0122,0.94474 l -0.0121,-0.94473 -5e-5,-1e-5 z M 79.52277,93.938099 c 1.345456,-1.97361 -3.571631,-8.923063 0.708795,-2.492797 1.849543,1.469605 5.355103,2.461959 2.260017,3.080216 4.867744,4.294162 -1.187244,1.163612 -2.968812,-0.587419 z m 24.49612,14.368161 c 0.92952,-7.51843 0.81971,4.40485 0,0 z M 76.712755,86.993902 c 1.027706,-0.439207 0.542746,1.369335 0,0 z m 6.389622,3.803092 c 1.644416,-3.450522 3.03351,3.848297 0,0 z m 18.023553,10.026276 c -0.0174,-1.3252 0.34003,1.92765 0,0 z m -1.04404,-2.31139 c -2.501612,-6.171646 2.32693,3.26759 0,0 z m -1.536003,-4.046372 c -0.419906,-2.550188 1.427129,3.203862 -7.3e-5,-9e-6 l 7.3e-5,9e-6 z m 2.499773,-4.063514 c -1.71663,-3.025123 2.16777,-13.331073 2.60122,-6.939418 -1.81185,4.980256 -0.52268,7.766309 0.74129,1.086388 2.33417,-5.257159 -0.50421,10.374054 -3.34255,5.853057 l 4e-5,-2.7e-5 z m 2.56889,-15.326649 c 0.74833,-0.918921 0.16609,1.107082 0,0 z m -4.290016,84.534235 c -1.017552,-0.88802 0.127775,0.56506 0,0 z m 8.837726,4.47065 c 4.91599,1.26135 4.89086,-0.76487 0.44782,-1.36683 -2.3898,-2.22316 -9.930475,-4.58124 -3.18119,-0.27586 0.44699,1.13227 1.85944,1.10589 2.73337,1.64269 z M 90.708067,152.48725 c 2.708244,2.01956 10.201213,5.72375 3.858186,0.76868 2.138588,-2.48467 -4.093336,-3.80722 -2.026067,-5.46927 -5.258175,-3.21755 -4.147962,-2.93133 -0.464111,-2.8301 -6.319385,-2.82462 0.912163,-2.61333 0.571661,-4.06067 -2.436706,-0.48126 -12.103074,-4.29664 -6.416395,0.31341 -5.780887,-2.94751 -1.377603,1.09799 -3.12488,0.67029 -5.911336,-1.61178 5.264392,4.50224 -0.938845,2.98448 3.391327,2.6875 9.128301,6.88393 1.433786,2.84407 -1.013816,1.45934 5.506273,3.67136 7.106665,4.77911 z m 9.243194,5.31013 c 11.238769,3.62163 -5.510018,-4.4246 0,0 z m 47.316399,28.66432 c 0.14496,-2.22965 -1.53604,1.90201 0,0 z m 4.86324,2.04679 c 2.59297,-2.51255 0.106,4.00222 4.29655,-0.61509 0.0453,-3.30544 -0.12904,-5.25783 -4.81563,-1.24252 -1.29194,0.71648 -1.86871,3.76288 0.51908,1.85761 z M 74.932378,140.02637 c -0.796355,-3.1304 -5.581949,-3.11418 0,0 z m 5.193029,3.40294 c -1.928397,-3.19739 -6.880525,-2.89469 0,0 z m 29.543373,17.81697 c 2.8844,2.56199 13.24761,1.87984 3.50331,0.31527 -1.44321,-2.13386 -9.16415,-1.6203 -3.50331,-0.31527 z m 40.61236,25.08153 c 4.43933,-3.72512 -4.30122,1.66183 0,0 z m 9.2328,6.34473 c 0.0277,-1.19543 -1.91352,0.52338 0,0 z m 0.0142,-1.6736 c 4.91602,-5.20866 -4.76346,0.30807 -4e-5,0 l 4e-5,0 z M 62.15981,129.33339 c -4.189944,-5.97826 -2.604586,-8.66544 -6.645136,-13.54677 -0.764913,-3.73279 -6.931672,-12.20326 -3.189579,-3.22947 3.42754,5.24836 4.446054,13.37434 9.834715,16.77624 z m 95.82635,60.00977 c 9.04429,-5.84575 -3.7125,-2.54641 0,0 z m 6.9041,2.70461 c 4.52911,-3.88867 -2.86491,-0.81334 0,0 z M 73.393094,133.41838 c 1.296204,-1.92838 -3.347642,-0.24666 0,0 z m 90.055596,56.78275 c 4.38526,-2.82746 -1.01036,-2.39335 -0.79483,0.26003 l 0.79484,-0.26003 -1e-5,0 z m -59.51386,-37.51178 c -0.15075,-1.90924 -2.31574,0.16206 0,0 z m 3.67794,2.11629 c -1.16888,-2.36318 -1.79716,0.37121 0,0 z m 62.8725,37.30625 c 5.61806,-4.05283 -3.4056,-0.77594 -1.17927,0.76785 l 1.17927,-0.76785 0,0 z m -2.15131,-1.03979 c 4.57663,-3.83506 -4.83183,1.69954 0,0 z m 10.99163,7.31983 c 3.0728,-2.05816 -3.73316,-0.66575 0,0 z M 76.211249,132.02781 c 4.118965,0.92286 16.460394,10.1439 9.179466,0.63772 -3.728991,-1.10384 -1.492605,-10.21906 -5.29621,-8.60579 2.552972,4.2649 2.100461,6.08018 -3.259642,3.3914 -6.736808,-3.28853 -3.785888,1.6297 -2.469293,2.98518 -1.794185,0.40772 2.373226,1.5572 1.845679,1.59149 z m -18.76588,-14.82026 c 0.737407,-3.04991 -6.789814,-16.77881 -3.554464,-6.87916 1.167861,2.07373 1.049123,6.00387 3.554464,6.87916 z m 34.443451,21.23513 c -2.120989,-1.77378 -0.100792,-0.25103 0,0 z m 5.222997,1.21548 c -0.0027,-3.23079 -5.77326,-1.31196 0,0 z m 45.261473,28.53321 c -0.86326,-2.20739 -3.41229,-0.0512 8e-5,4e-5 l -8e-5,-4e-5 z m 2.17351,1.58769 c -0.32087,-1.23546 -1.25399,0.23848 0,0 z m 17.94015,11.3001 c 1.72546,-1.27472 -2.15318,-0.1628 0,0 z M 66.819057,119.6006 c 4.935243,-1.91072 -5.28775,-1.36248 0,0 z m 71.569733,45.08937 c -0.0549,-3.19499 -3.14622,0.79264 0,0 z M 64.869152,115.05675 c 3.170167,-1.07084 -2.932663,-0.70531 0,0 z m 9.201532,4.45726 c -0.0575,-1.05014 -0.973336,0.39747 0,0 z m 112.231406,68.82181 c 4.0765,-0.8265 13.36606,2.07489 14.86752,-1.08086 -4.95044,-0.12019 -17.12734,-3.49263 -17.70346,0.80479 l 1.08368,0.17072 1.75226,0.10534 0,1e-5 z M 76.995161,120.25099 c 0.07087,-3.23755 -2.524669,-0.12092 0,0 z M 52.801998,103.4687 c -1.098703,-6.16843 -4.178791,-0.93357 0,0 z m 5.769195,1.45013 c 0.07087,-1.9807 -5.280562,-1.78224 0,0 z m 3.296917,1.61923 c -0.953019,-0.77196 -0.745959,0.97521 0,0 z m 20.744719,13.30775 c 0.976615,-0.89718 -2.312116,-0.66455 0,0 z M 59.672204,102.88617 c -0.557624,-4.65897 -6.681999,-0.69805 0,0 z M 47.844441,95.21166 c -0.168219,-2.150189 -1.152625,0.81111 0,0 z m 1.759336,-1.328672 c -0.28703,-2.549584 -1.510515,0.324387 0,0 z m 9.720792,5.802442 c 4.110486,-1.61465 -7.487254,-3.33984 -0.839893,-0.30506 l 0.839893,0.30506 z m 130.097601,80.35913 c 2.63092,-2.4121 -3.34373,-0.74577 0,0 z m 15.71669,8.14691 c 1.05433,-3.1186 -2.65452,0.41058 0,0 z M 60.318012,94.590436 c 0.433018,-3.016773 -3.258762,0.59902 0,0 z M 46.487687,85.324242 c -0.742965,-4.25911 -0.64134,-11.735065 6.465133,-9.208583 -9.485962,1.883339 6.56534,11.790095 4.538357,3.968363 3.988626,0.195294 7.802669,-2.357284 5.709487,1.516403 7.85876,-0.867958 13.307129,-7.682612 20.898169,-6.72768 5.913058,-0.782493 12.378182,-1.375955 18.750257,-3.756157 5.23905,-0.37743 10.28235,-6.018062 7.41068,-9.361383 -7.14456,-0.604513 -14.62339,0.289393 -22.520112,1.858993 -8.750559,1.819117 -16.699014,5.275307 -25.528125,6.758866 -8.605891,1.15604 1.730998,3.185165 -0.734074,3.637227 -4.490681,1.558136 5.355488,2.608852 -0.582182,4.251428 C 57.228283,77.56448 53.411411,76.304535 54.977788,72.440196 46.7341,73.50992 39.490264,76.931325 46.003276,85.320342 l 0.484402,0.0037 9e-6,-2.56e-4 z m 19.864291,-10.1168 c 1.932856,-7.120464 10.355229,5.859274 3.168052,0.945776 -0.858453,-0.642457 -2.2703,-1.166588 -3.168052,-0.945776 z m 0.376038,-3.452197 c 2.789661,-2.078257 1.482964,1.16516 0,0 z m 3.542213,0.05622 c 0.251833,-3.27648 8.108752,1.73455 1.295517,1.179499 l -1.295517,-1.179499 0,0 z m 4.84543,-1.948193 c 1.769481,-2.067535 0.50862,1.83906 0,0 z m 1.239563,-0.83005 c 2.946379,-3.540216 16.68561,-2.259413 6.628966,-0.34519 -2.695543,-2.029363 -4.761797,1.196575 -6.628966,0.34519 z m 17.930017,-2.763886 c -0.448199,-9.670222 8.907771,3.436477 0,0 z m 5.087539,-0.02784 c 1.860022,-4.873906 7.218072,-1.955774 0.860732,-0.979407 0.13805,0.518656 -0.18642,2.516173 -0.860732,0.979407 z M 58.311842,92.088739 c 5.55753,-3.403212 -5.899945,-2.952541 0,0 l 0,0 z m 4.109214,1.141866 c 1.948513,-2.071884 -4.233857,-0.840369 0,0 z M 50.313395,84.63767 c 3.175569,-2.439416 -3.757842,-0.927473 0,0 z M 214.41578,187.30012 c 0.0918,-2.83019 -2.42718,1.27537 0,0 z m -16.67487,-11.37935 c 0.47417,-3.25845 -2.14286,0.28408 0,0 z m 21.26022,12.47672 c 4.43994,0.015 13.45265,-1.37884 3.79217,-1.37442 -1.51594,0.23641 -8.83311,0.18571 -3.79216,1.37439 l -1e-5,3e-5 z M 66.035603,91.23339 c 3.593258,-0.246807 5.621861,-3.963629 -0.694932,-3.749977 -9.789949,-1.013541 8.637508,3.352129 -1.255898,2.10383 -1.329368,0.880346 1.873606,1.889721 1.95083,1.646147 z m 3.164618,1.601748 c -0.375177,-2.307063 -1.111156,1.225591 0,0 z m 3.753896,-10.009901 c 1.559281,-1.934055 -2.157697,-0.517053 0,0 z M 61.003998,62.84999 c 6.412879,-2.181631 15.182392,-4.633087 18.210335,1.074184 -3.081589,-3.70893 -1.24361,-7.360157 1.666959,-1.937407 4.115576,5.486669 6.175915,-2.495489 3.499086,-4.335821 3.050468,3.790246 6.520044,5.581281 2.042429,0.239564 4.865693,-5.852929 -9.742712,0.766433 -13.063105,0.699775 -1.597564,0.717062 -16.493576,3.79889 -12.355704,4.259705 z m 3.75831,-7.197834 c 3.657324,-2.760416 12.648968,1.641989 6.879078,-2.743367 -0.564117,-0.498292 -12.636077,3.325475 -6.879078,2.743367 z m 13.333489,0.550473 c 4.280389,0.109225 -1.84632,-5.750287 3.254304,-3.095159 -0.837696,-2.736627 -5.938558,-3.248956 -8.432316,-4.342312 -1.410474,2.502054 2.870977,7.471102 5.178012,7.437471 z M 67.100291,44.099162 c 1.480803,-2.007406 -2.59521,1.017699 0,0 z m 5.449586,1.304353 c 6.897867,-0.914901 -1.758292,-2.970542 -1.389954,-0.07352 l 1.389954,0.07352 0,-9e-6 z M 62.374386,37.441437 c -4.856866,-6.340205 9.133987,1.065769 4.199411,-5.572646 -4.153254,-3.307245 -8.144297,3.721775 -4.199411,5.572646 z m 62.330124,33.572802 c 2.22762,-3.948988 -9.19697,-5.323011 -1.5009,-1.399578 0.70858,0.236781 0.54821,1.6727 1.5009,1.399578 z""
+       id=""path2900"" />
+    <g
+       style=""font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+       id=""text3844"">
+      <path
+         d=""m 166.92789,156.32883 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91863,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48113,-0.57422 -1.49024,-0.82031 -0.009,-0.20964 -0.005,-0.94336 0.0137,-2.20118 0.0274,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60058 -0.0182,-2.00976 -0.0273,-3.34276 -0.0273,-3.99903 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51953 -0.23698,-0.082 -0.35547,-0.23241 -0.35547,-0.45118 0,-0.19138 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48761 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42382,0.69727 0,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46484,0.38281 1.09375,-0.62889 2.23307,-0.94335 3.41797,-0.94336 1.36718,10e-6 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90268 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03907,-3.07617 -0.65625,-0.7565 -1.45378,-1.13475 -2.39257,-1.13476 -0.64715,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33724 -0.94336,0.69271 -0.94336,1.0664 l 0,3.66406 c 0,1.75912 0.9707,2.63868 2.91211,2.63868 1.01171,0 1.82747,-0.32585 2.44727,-0.97754 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2841"" />
+      <path
+         d=""m 179.35562,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2843"" />
+      <path
+         d=""m 191.11343,160.70383 c -1e-5,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02148,0.77929 -1.54949,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54493,-2.18749 -1.54493,-3.77343 0,-1.70443 0.59245,-3.12174 1.77735,-4.25196 1.15755,-1.10285 2.57942,-1.65428 4.26562,-1.65429 1.02083,1e-5 1.9095,0.14584 2.66602,0.4375 0.6927,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13672,1e-5 -0.45118,-0.19595 -0.94335,-0.58789 -0.92059,-0.72915 -1.64064,-1.09374 -2.16016,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83398,2.78906 -1e-5,1.431 0.40103,2.57488 1.20312,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98242,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.1914,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2845"" />
+      <path
+         d=""m 204.26578,161.155 c -1e-5,0.19141 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25554,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94335,-0.51953 -0.27345,-0.34636 -0.46486,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37174,-0.21875 -1.87304,-0.65625 -0.54688,-0.48307 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28776,-0.916 3.36328,-0.91601 1.85026,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75196,0.88867 0.10025,1e-5 0.29165,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49218,-0.0684 0.26431,0 0.39648,0.17773 0.39649,0.5332 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29492,1.10743 -3.29492,2.14649 0,1.04818 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2847"" />
+      <path
+         d=""m 218.74429,161.31906 c -1e-5,0.18229 -0.4284,0.46029 -1.28515,0.83399 -0.72918,0.31901 -1.09376,0.47851 -1.09375,0.47851 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -1e-5,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17772 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26431 1.3444,-0.53319 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,10e-6 0.47851,0.2142 0.47851,0.64258 0,1e-5 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.9616 -0.041,1.87533 -0.041,2.74121 l 0,1.64063 c -1e-5,1.11198 0.21874,1.87304 0.65625,2.2832 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46093 l 0,-2.4336 c -1e-5,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20962 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -1e-5,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00717 1.42188,1.08008 0.31899,0.0274 0.4785,0.15039 0.47851,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2849"" />
+      <path
+         d=""m 229.34,159.52805 c -1e-5,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74285,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85678,0 -1.71355,-0.0911 -2.57032,-0.27344 -0.73828,-0.16406 -1.16666,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10938,-0.73372 0.32813,-0.75195 0.21875,-0.0273 0.40559,0.0911 0.56054,0.35547 0.6836,1.19401 1.78646,1.79101 3.3086,1.79101 1.28515,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31901,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48307,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37826,-1.74999 1.13477,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50586,1.06641 0.30077,0.22787 1.00715,0.58334 2.11914,1.0664 1.16666,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.82031,1.2168 0.82032,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2851"" />
+      <path
+         d=""m 242.08218,160.17062 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -10e-6,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2853"" />
+      <path
+         d=""m 259.58218,159.52805 c -10e-6,0.96614 -0.37142,1.73405 -1.11425,2.30371 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2855"" />
+      <path
+         d=""m 273.84195,156.95773 c -10e-6,1.58594 -0.5879,2.92807 -1.76367,4.02637 -1.17579,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.44921,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.59309 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65625,0.80209 1.51302,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2857"" />
+      <path
+         d=""m 298.39664,162.09836 c -3e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.8594,-0.13672 -3.59117,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.53321,-0.47852 -10e-6,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82945,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28257,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12305,-0.38281 0,-0.23698 0.25976,-0.38282 0.7793,-0.4375 0.56509,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.6836,-2.32421 -0.40105,-0.49218 -0.91146,-0.73828 -1.53125,-0.73829 -0.91146,10e-6 -1.73177,0.18458 -2.46093,0.55371 -0.72918,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14582,0.95703 0.4375,1.17578 0.26431,0.20052 0.74283,0.32357 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -1e-5,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41015,-0.10938 0.61523,-0.64258 0.61523,-1.59961 l 0,-4.19727 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31446 0,-0.16405 0.47396,-0.5104 1.42188,-1.03906 1.0026,-0.56509 1.61783,-0.84764 1.8457,-0.84766 0.1914,2e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83398,-0.42383 0.5651,-0.35546 1.07552,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43748 2.31055,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32811,0.41017 0.32813,0.41016 -2e-5,1e-5 0.23696,-0.13671 0.71093,-0.41016 0.55598,-0.319 1.0983,-0.56965 1.62696,-0.75195 0.77472,-0.27343 1.52667,-0.41014 2.25586,-0.41016 2.49737,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64711,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22787 0.72461,0.41016 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2859"" />
+      <path
+         d=""m 309.94937,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2861"" />
+      <path
+         d=""m 319.49234,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35548,0 -0.57423,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13022 0.10026,1.84571 0.30079,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2863"" />
+      <path
+         d=""m 326.34195,146.64914 c -10e-6,0.41929 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36005 -0.65853,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49903,-1.12109 0.33267,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39452,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41472 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57877,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28255,-0.10025 -0.42383,-0.25064 -0.42383,-0.45117 0,-0.26432 0.20508,-0.46028 0.61524,-0.58789 0.76562,-0.23697 1.44465,-0.55143 2.03711,-0.94336 0.47395,-0.32812 0.76562,-0.49218 0.875,-0.49219 0.36457,10e-6 0.54231,0.23699 0.5332,0.71094 -0.0365,2.38802 -0.0547,4.82162 -0.0547,7.30078 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48308 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2865"" />
+      <path
+         d=""m 351.9357,162.09836 c -2e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.85939,-0.13672 -3.59116,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.5332,-0.47852 -2e-5,-0.27344 0.24151,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82944,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12304,-0.38281 -10e-6,-0.23698 0.25975,-0.38282 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.68359,-2.32421 -0.40106,-0.49218 -0.91147,-0.73828 -1.53125,-0.73829 -0.91147,10e-6 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14583,0.95703 0.4375,1.17578 0.26432,0.20052 0.74283,0.32357 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41016,-0.10938 0.61523,-0.64258 0.61524,-1.59961 l 0,-4.19727 c -10e-6,-1.0664 -0.28712,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15722,-0.31446 -1e-5,-0.16405 0.47395,-0.5104 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84764 1.8457,-0.84766 0.19141,2e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51757,-0.43748 2.31054,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41014 2.25586,-0.41016 2.49738,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2867"" />
+      <path
+         d=""m 363.48843,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2869"" />
+      <path
+         d=""m 374.04312,159.52805 c -10e-6,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74284,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28516,-0.45117 -0.0729,-0.1276 -0.10937,-0.75195 -0.10937,-1.87305 0,-0.48307 0.10937,-0.73372 0.32812,-0.75195 0.21875,-0.0273 0.4056,0.0911 0.56055,0.35547 0.68359,1.19401 1.78645,1.79101 3.30859,1.79101 1.28515,0 1.92773,-0.44661 1.92774,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85938,-1.05274 -1.33073,-0.59244 -2.2194,-1.11197 -2.66601,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13476,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.81641,-0.79297 0.73827,1e-5 1.41275,0.0593 2.02344,0.17774 0.65624,0.1185 0.99803,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60157,-0.15039 -0.72006,-1.17577 -1.63151,-1.76366 -2.73437,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87305,1.20312 0,0.44662 0.16862,0.80209 0.50586,1.06641 0.30078,0.22787 1.00716,0.58334 2.11914,1.0664 1.16666,0.50131 1.95963,0.95248 2.37891,1.35352 0.54686,0.51953 0.8203,1.2168 0.82031,2.0918 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2871"" />
+      <path
+         d=""m 394.4689,161.155 c -1e-5,0.19141 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51953 -0.27345,-0.34636 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54687,-0.48307 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61979,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0274,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98243,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11425,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51075,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28775,-0.916 3.36328,-0.91601 1.85025,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75195,0.88867 0.10025,1e-5 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49219,-0.0684 0.26431,0 0.39647,0.17773 0.39648,0.5332 z m -4.21093,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29493,1.10743 -3.29492,2.14649 -1e-5,1.04818 0.56965,1.57226 1.70898,1.57226 0.45573,0 0.92513,-0.0866 1.40821,-0.25976 0.56509,-0.20052 0.84764,-0.44206 0.84765,-0.72461 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2873"" />
+      <path
+         d=""m 415.11343,156.58859 c -10e-6,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18946 -2.47689,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49218 -0.0912,-0.0365 -0.13672,0.18684 -0.13671,0.66992 l 0,4.11523 c -1e-5,0.66536 0.54231,1.09375 1.62695,1.28516 0.50129,0.0911 0.81803,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19825,0.38965 -10e-6,0.30988 -0.20509,0.45116 -0.61524,0.42382 -1.91407,-0.12761 -3.5957,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16862 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.7793,-0.56054 0.44661,-0.1823 0.66991,-0.6198 0.66992,-1.3125 l 0,-12.0586 c -10e-6,-0.97525 -0.26889,-1.58593 -0.80664,-1.83203 -0.63803,-0.28254 -0.95704,-0.51496 -0.95703,-0.69727 -10e-6,-0.20051 0.18684,-0.3509 0.56054,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49024,-0.6289 0.42838,-0.24609 0.68814,-0.36913 0.77929,-0.36914 0.27344,1e-5 0.49674,0.25066 0.66993,0.75195 0.2552,0.72918 0.42382,1.09376 0.50585,1.09375 0.0182,1e-5 0.41016,-0.21418 1.17579,-0.64258 0.83853,-0.46483 1.65884,-0.69725 2.46093,-0.69726 1.30338,1e-5 2.3789,0.36915 3.22657,1.10742 1.0117,0.86589 1.51756,2.11915 1.51757,3.75976 z m -2.32421,1.09375 c -2e-5,-1.48567 -0.36916,-2.64322 -1.10743,-3.47265 -0.60157,-0.6927 -1.30795,-1.03906 -2.11914,-1.03907 -0.62891,10e-6 -1.23047,0.21876 -1.80468,0.65625 -0.75652,0.56512 -1.13478,1.35353 -1.13477,2.36524 l 0,3.86914 c -10e-6,0.24609 0.34635,0.50586 1.03906,0.7793 0.74739,0.30078 1.55859,0.45117 2.4336,0.45117 1.79556,0 2.69334,-1.20313 2.69336,-3.60938 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2875"" />
+      <path
+         d=""m 429.20914,156.95773 c -2e-5,1.58594 -0.58791,2.92807 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.4492,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2877"" />
+      <path
+         d=""m 441.19937,160.70383 c -10e-6,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02149,0.77929 -1.54948,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54492,-2.18749 -1.54492,-3.77343 0,-1.70443 0.59245,-3.12174 1.77734,-4.25196 1.15755,-1.10285 2.57943,-1.65428 4.26563,-1.65429 1.02082,1e-5 1.9095,0.14584 2.66602,0.4375 0.69269,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13673,1e-5 -0.45118,-0.19595 -0.94336,-0.58789 -0.92058,-0.72915 -1.64063,-1.09374 -2.16015,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83399,2.78906 0,1.431 0.40104,2.57488 1.20313,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98241,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.19139,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2879"" />
+      <path
+         d=""m 456.73062,161.98898 c -10e-6,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47201,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.1914 -1.44011,-1.54948 -2.66147,-3.17188 -3.66406,-4.86719 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64257,1.01172 -1e-5,0.3099 0.009,0.75652 0.0273,1.33985 0.0182,0.58333 0.16406,0.96614 0.4375,1.14843 0.1914,0.12761 0.63346,0.22787 1.32617,0.30079 0.42838,0.0547 0.64257,0.21419 0.64258,0.47851 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91146,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88867,-0.20508 -0.0182,-0.0638 -0.0274,-0.15495 -0.0274,-0.27344 0,-0.28255 0.278,-0.49674 0.83399,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75195,-1.76367 l 0,-11.94922 c 0,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20052,-0.37368 -0.61979,-0.66535 -1.25781,-0.875 -0.30079,-0.10024 -0.45118,-0.24152 -0.45117,-0.42383 -10e-6,-0.2643 0.21419,-0.46938 0.64257,-0.61523 0.68359,-0.22785 1.33529,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.8112,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56055,0.71094 -1e-5,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0274,8.55859 c -1e-5,0.23699 0.0638,0.35548 0.1914,0.35547 0.13672,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32421 0.21874,-0.22786 0.32812,-0.41015 0.32813,-0.54688 -1e-5,-0.24608 -0.36915,-0.41926 -1.10743,-0.51953 -0.31901,-0.0365 -0.4694,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22332,0.47853 -0.66992,0.50586 -0.70184,0.0273 -1.36265,0.18686 -1.98243,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13932,1.73178 2.21484,3.03972 3.22656,3.92383 0.64713,0.55599 1.25325,0.83399 1.81836,0.83399 0.41926,0 0.67903,0.0296 0.7793,0.0889 0.10025,0.0592 0.15038,0.21648 0.15039,0.47168 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2881"" />
+      <path
+         d=""m 468.26968,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2883"" />
+      <path
+         d=""m 477.81265,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99804,-0.41699 -0.14584,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30534,0.18231 0.31446,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35547,0 -0.57422,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c -10e-6,1.13022 0.10025,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10937,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2885"" />
+      <path
+         d=""m 267.56656,187.18898 c -2e-5,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47202,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.19141 -1.44012,-1.54947 -2.66147,-3.17187 -3.66406,-4.86718 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64258,1.01172 0,0.3099 0.009,0.75652 0.0274,1.33985 0.0182,0.58333 0.16405,0.96614 0.4375,1.14843 0.1914,0.12761 0.63345,0.22787 1.32617,0.30078 0.42838,0.0547 0.64257,0.2142 0.64258,0.47852 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91147,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88868,-0.20508 -0.0182,-0.0638 -0.0273,-0.15495 -0.0273,-0.27344 0,-0.28255 0.27799,-0.49674 0.83398,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75196,-1.76367 l 0,-11.94922 c -1e-5,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20053,-0.37368 -0.6198,-0.66535 -1.25782,-0.875 -0.30078,-0.10024 -0.45117,-0.24152 -0.45117,-0.42383 0,-0.2643 0.21419,-0.46938 0.64258,-0.61523 0.68359,-0.22785 1.33528,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.81119,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56054,0.71094 0,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0273,8.55859 c 0,0.23699 0.0638,0.35548 0.19141,0.35547 0.13671,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32422 0.21874,-0.22785 0.32811,-0.41014 0.32812,-0.54687 -10e-6,-0.24608 -0.36915,-0.41926 -1.10742,-0.51953 -0.31902,-0.0365 -0.46941,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22333,0.47853 -0.66993,0.50586 -0.70183,0.0274 -1.36264,0.18686 -1.98242,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13931,1.73178 2.21483,3.03972 3.22656,3.92383 0.64713,0.55599 1.25324,0.83399 1.81836,0.83399 0.41926,0 0.67902,0.0296 0.7793,0.0889 0.10024,0.0592 0.15037,0.21647 0.15039,0.47168 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2887"" />
+      <path
+         d=""m 283.31656,187.4214 c -2e-5,0.28256 -0.20509,0.41016 -0.61524,0.38282 -1.95964,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -10e-6,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76108 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68164,1.43554 0.42838,0.0365 0.64258,0.17318 0.64258,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46485,0.0137 -1.43099,-0.0547 -2.90755,0.0182 -4.42968,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42382 -10e-6,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51041,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41016,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55011,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27148,0.46484 0.41015,0.082 0.61522,0.23242 0.61524,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2889"" />
+      <path
+         d=""m 289.48257,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31445,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -1e-5,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51951 1.07324,-0.51953 0.92969,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15495,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24153,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79296,-0.66081 0.79297,-1.51758 l 0,-3.58203 c -1e-5,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20053,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20507,-0.46027 0.61523,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 -10e-6,0.59245 0.0866,1.01627 0.25976,1.27148 0.1914,0.28255 0.55599,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2891"" />
+      <path
+         d=""m 303.00406,169.01906 c -10e-6,0.38283 -0.17319,0.82945 -0.51953,1.33984 -0.34637,0.51044 -0.6198,0.76565 -0.82031,0.76563 -0.24611,2e-5 -0.50587,-0.12303 -0.7793,-0.36914 -0.57423,-0.41014 -1.08009,-0.61522 -1.51758,-0.61524 -1.73178,2e-5 -2.59766,1.21226 -2.59766,3.63672 l 0,2.93946 c 0,0.45574 0.39193,0.6517 1.17579,0.58789 l 1.73632,-0.13672 c 0.68359,-0.0547 1.05729,0.0547 1.1211,0.32812 0.0182,0.0912 0.0273,0.22332 0.0273,0.39649 -10e-6,0.3737 -0.0911,0.60613 -0.27344,0.69726 -0.10938,0.0638 -0.39193,0.0957 -0.84765,0.0957 l -1.73633,0 c -0.77475,1e-5 -1.17579,0.16407 -1.20313,0.49218 -0.0182,0.19142 -0.0182,2.17384 0,5.94727 0,0.51042 0.23698,0.875 0.71094,1.09375 0.35546,0.17318 0.94791,0.29167 1.77735,0.35547 0.32811,0.0273 0.52635,0.0661 0.59472,0.11621 0.0684,0.0501 0.10253,0.19824 0.10254,0.44433 -10e-6,0.28256 -0.0387,0.45118 -0.11621,0.50586 -0.0775,0.0547 -0.27117,0.0729 -0.58105,0.0547 -2.01433,-0.10937 -3.82358,-0.082 -5.42774,0.082 -0.41927,0.0456 -0.67448,0.0456 -0.76562,0 -0.0912,-0.0456 -0.13672,-0.20507 -0.13672,-0.47851 0,-0.22787 0.26432,-0.41472 0.79297,-0.56055 0.6289,-0.17318 0.94335,-0.6289 0.94336,-1.36719 l 0,-5.31836 c -10e-6,-0.55598 -0.0866,-0.94335 -0.25977,-1.16211 -0.11849,-0.14582 -0.34636,-0.27342 -0.68359,-0.38281 -0.52865,-0.16405 -0.79297,-0.42382 -0.79297,-0.7793 0,-0.24608 0.10937,-0.40103 0.32812,-0.46484 0.0729,-0.0182 0.30078,-0.0319 0.6836,-0.041 0.32812,-0.009 0.5332,-0.082 0.61523,-0.21875 0.0547,-0.10025 0.082,-0.34635 0.082,-0.73829 l 0,-2.17382 c 0,-1.73176 0.71094,-3.14908 2.13281,-4.25196 1.35807,-1.04816 3.02604,-1.57224 5.00391,-1.57226 0.8203,2e-5 1.23046,0.25067 1.23047,0.75195 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2893"" />
+      <path
+         d=""m 312.84781,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.3763,0 -2.53385,-0.45117 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c 0,-0.50129 -0.2028,-0.94107 -0.60839,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90234,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2895"" />
+      <path
+         d=""m 326.72476,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -10e-6,-0.40102 0.16633,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35548,0.0365 -0.57878,0.0228 -0.66993,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13671,-0.4375 -10e-6,-0.20963 0.24153,-0.38281 0.7246,-0.51953 0.52865,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61523,-0.70637 -1.24414,-0.91601 -0.28255,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61524,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2897"" />
+      <path
+         d=""m 338.55093,184.72804 c -10e-6,0.96615 -0.37142,1.73406 -1.11425,2.30372 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39193 -0.14584,-0.72005 -0.4375,-0.98438 -0.31902,-0.30077 -0.93881,-0.65168 -1.85937,-1.05273 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17773 0.65624,0.1185 0.99804,0.26434 1.02539,0.4375 0.0729,0.51043 0.2233,1.24871 0.45117,2.21485 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17578 -1.63152,-1.76367 -2.73438,-1.76368 -1.2487,1e-5 -1.87305,0.40106 -1.87304,1.20313 -10e-6,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.09179 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2899"" />
+      <path
+         d=""m 362.44937,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2901"" />
+      <path
+         d=""m 375.39664,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2903"" />
+      <path
+         d=""m 385.17203,186.38234 c -1e-5,0.4375 -0.40105,0.8112 -1.20313,1.1211 -0.71094,0.27343 -1.43099,0.41015 -2.16015,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43295,-0.28027 -0.99805,-0.417 -0.14583,-0.0364 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98438,-0.48306 1.84115,-1.34895 2.57032,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -1e-5,0.12762 0.0228,0.21877 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17316,1e-5 0.17316,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2905"" />
+      <path
+         d=""m 404.23062,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2907"" />
+      <path
+         d=""m 420.63687,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2909"" />
+      <path
+         d=""m 433.58414,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2911"" />
+      <path
+         d=""m 448.65054,186.51906 c -10e-6,0.18229 -0.4284,0.46029 -1.28515,0.83398 -0.72918,0.31902 -1.09376,0.47852 -1.09375,0.47852 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -10e-6,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17773 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26432 1.3444,-0.5332 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,1e-5 0.47851,0.2142 0.47851,0.64258 0,10e-6 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.96159 -0.041,1.87533 -0.041,2.74121 l 0,1.64062 c -10e-6,1.11199 0.21874,1.87305 0.65625,2.28321 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46094 l 0,-2.43359 c -10e-6,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20963 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -10e-6,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00716 1.42188,1.08008 0.31899,0.0273 0.4785,0.15039 0.47851,0.36914 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2913"" />
+      <path
+         d=""m 462.54117,178.58937 c -0.0912,0.67449 -0.32814,1.01173 -0.71094,1.01172 -0.13673,1e-5 -0.39194,-0.0273 -0.76562,-0.082 -0.16408,-0.0182 -0.27801,-0.0273 -0.3418,-0.0273 -0.12762,0.009 -0.19142,0.0912 -0.19141,0.24609 -1e-5,0.0456 0.009,0.18686 0.0273,0.42383 0.0182,0.23699 0.0273,0.47852 0.0273,0.72461 -1e-5,1.97787 -1.28061,3.32227 -3.8418,4.0332 -1.51302,0.41927 -2.26953,0.75651 -2.26953,1.01172 0,0.26432 0.56054,0.4694 1.68164,0.61523 l 2.13282,0.28711 c 1.194,0.15495 2.06899,0.37826 2.625,0.66993 0.8841,0.46484 1.32615,1.18033 1.32617,2.14648 -2e-5,1.35807 -0.77931,2.51562 -2.33789,3.47266 -1.51303,0.92056 -3.27215,1.38085 -5.27735,1.38086 -1.23958,-1e-5 -2.22624,-0.25066 -2.95996,-0.75196 -0.73372,-0.50131 -1.10059,-1.16667 -1.10058,-1.99609 -1e-5,-1.25782 0.87499,-2.46094 2.625,-3.60938 -0.80209,-0.32812 -1.20313,-0.84309 -1.20313,-1.54492 0,-0.65625 0.74739,-1.25325 2.24219,-1.79101 -2.15105,-0.57422 -3.22657,-1.83203 -3.22656,-3.77344 -1e-5,-1.21223 0.43977,-2.21711 1.31933,-3.01465 0.87956,-0.79752 1.98925,-1.19628 3.3291,-1.19629 0.95703,10e-6 1.89127,0.21876 2.80274,0.65625 0.60155,0.28256 1.35806,0.41017 2.26953,0.38281 l 1.20312,-0.0273 c 0.30989,-0.009 0.50129,0.0319 0.57422,0.12305 0.0729,0.0912 0.0866,0.30079 0.041,0.6289 z m -4.08789,2.55664 c -1e-5,-2.11457 -0.91147,-3.17186 -2.73438,-3.17187 -1.54948,1e-5 -2.32422,0.97983 -2.32422,2.93945 0,1.94141 0.85677,2.91212 2.57032,2.91211 0.71093,10e-6 1.30337,-0.25065 1.77734,-0.75195 0.47395,-0.5013 0.71093,-1.14388 0.71094,-1.92774 z m 2.16015,9.32422 c -10e-6,-0.69271 -0.83855,-1.16211 -2.51562,-1.4082 l -2.7207,-0.38281 c -0.25522,-0.0456 -0.61069,-0.11394 -1.06641,-0.20508 -0.96615,0.77474 -1.44922,1.73632 -1.44922,2.88476 0,1.29427 0.875,1.9414 2.625,1.94141 1.35807,-1e-5 2.5703,-0.32357 3.63672,-0.9707 0.99348,-0.59245 1.49022,-1.21225 1.49023,-1.85938 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2915"" />
+      <path
+         d=""m 478.3732,187.35304 c -2e-5,0.30079 -0.20509,0.44206 -0.61523,0.42383 -2.28778,-0.082 -3.77345,-0.10026 -4.45704,-0.0547 -0.33725,0.0273 -0.53777,0.0319 -0.60156,0.0137 -0.17319,-0.0456 -0.25977,-0.19141 -0.25976,-0.4375 -1e-5,-0.17318 0.25975,-0.33724 0.77929,-0.49219 0.34635,-0.10937 0.5651,-0.27799 0.65625,-0.50586 0.0456,-0.1276 0.0683,-0.41927 0.0684,-0.875 l 0,-3.69141 c -1e-5,-2.1328 -0.90235,-3.19921 -2.70703,-3.19921 -0.80209,0 -1.55404,0.19141 -2.25586,0.57421 -0.66537,0.3646 -0.99805,0.72462 -0.99805,1.08008 l 0,5.20899 c 0,0.875 0.56055,1.37174 1.68165,1.49023 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.18229 -0.0319,0.30078 -0.0957,0.35547 -0.0638,0.0547 -0.2461,0.0775 -0.54687,0.0684 -1.44923,-0.0547 -2.92579,-0.0182 -4.42969,0.10937 -0.32813,0.0273 -0.53321,0.0319 -0.61524,0.0137 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -1e-5,-0.20052 0.25976,-0.36914 0.77929,-0.50586 0.48307,-0.13671 0.72461,-0.63346 0.72461,-1.49023 l 0,-12.37305 c 0,-0.72003 -0.0729,-1.24412 -0.21875,-1.57226 -0.20964,-0.43749 -0.62891,-0.76105 -1.25781,-0.97071 -0.2461,-0.082 -0.36914,-0.2324 -0.36914,-0.45117 0,-0.15493 0.18685,-0.31443 0.56055,-0.47851 0.5013,-0.22785 1.13932,-0.56053 1.91406,-0.99805 0.5013,-0.28253 0.84309,-0.42381 1.02539,-0.42383 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,4.67578 c -10e-6,0.50131 0.0729,0.75196 0.21875,0.75196 -0.082,0 0.37597,-0.26204 1.37402,-0.78614 0.99804,-0.52408 1.94368,-0.78612 2.83691,-0.78613 2.42447,1e-5 3.64583,1.34441 3.66407,4.0332 l 0.0273,4.6211 c 0.009,0.92057 0.57876,1.43554 1.70899,1.54492 0.41014,0.0365 0.61521,0.17318 0.61523,0.41015 z""
+         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2917"" />
+    </g>
+    <g
+       style=""font-size:40px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
+       id=""text3850"">
+      <path
+         d=""m 229.85182,43.77803 c -0.79695,3.140714 -1.28913,8.414146 -1.47656,15.820313 -7e-5,1.453199 -0.65632,2.179761 -1.96875,2.179687 -1.31257,7.4e-5 -2.22663,-0.632738 -2.74219,-1.898437 -1.40631,-3.421796 -2.74225,-5.812419 -4.00781,-7.171875 -1.50006,-1.593666 -3.49225,-2.554603 -5.97656,-2.882813 -2.67193,-0.421789 -9.32818,-0.632726 -19.96875,-0.632812 -2.43754,8.6e-5 -4.03129,0.257898 -4.78125,0.773437 -0.46879,0.32821 -0.70316,1.031335 -0.70313,2.109375 l 0,31.851563 c -3e-5,1.078175 0.67966,1.5938 2.03906,1.546875 4.17184,-0.04682 10.21871,-0.328075 18.14063,-0.84375 1.54682,-0.187449 2.58979,-0.691355 3.12891,-1.511719 0.539,-0.820259 1.06634,-2.941351 1.58203,-6.363281 0.32806,-1.87494 1.42963,-2.601502 3.30468,-2.179688 1.59369,0.328186 2.27338,1.054747 2.03907,2.179688 -1.31256,6.375052 -1.73444,14.671919 -1.26563,24.890627 0.0468,1.21878 -0.72662,1.87503 -2.32031,1.96875 -1.31256,0.14065 -2.13287,-0.56247 -2.46094,-2.10938 -1.2188,-5.859333 -3.48052,-8.988236 -6.78515,-9.386716 -3.30474,-0.398394 -8.68364,-0.597612 -16.13672,-0.597656 -0.84379,4.4e-5 -1.26566,0.304731 -1.26563,0.914062 l 0,31.64063 c -3e-5,2.34375 0.86716,3.9375 2.60156,4.78125 1.35934,0.70313 4.28903,1.33594 8.78907,1.89843 2.29683,0.23438 3.30464,1.24219 3.02343,3.02344 -0.28129,1.54688 -2.34379,2.15625 -6.1875,1.82813 -11.1094,-0.89063 -20.27345,-0.84375 -27.49218,0.14062 -2.01564,0.28125 -3.02345,-0.53906 -3.02344,-2.46094 -1e-5,-1.21874 1.0078,-1.92187 3.02344,-2.10937 4.59373,-0.51562 6.8906,-4.54687 6.89062,-12.09375 l 0,-60.187502 c -2e-5,-3.093671 -0.5508,-5.472575 -1.65234,-7.136719 -1.10158,-1.663977 -3.15236,-3.175695 -6.15235,-4.535156 -1.87501,-0.843661 -2.57813,-1.992098 -2.10937,-3.445313 0.23436,-0.890532 0.60936,-1.382719 1.125,-1.476562 0.46874,-0.140532 1.71092,-0.04678 3.72656,0.28125 2.95311,0.468842 9.91404,0.703217 20.88281,0.703125 12.93746,9.2e-5 24.11713,-0.281158 33.53907,-0.84375 3.14055,-0.187407 4.71086,0.07041 4.71093,0.773437 -7e-5,0.187592 -0.0235,0.375092 -0.0703,0.5625 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2830"" />
+      <path
+         d=""m 275.55495,133.14522 c -4e-5,1.875 -1.05473,2.69531 -3.16407,2.46094 -6.46877,-0.60938 -14.48439,-0.51563 -24.04687,0.28125 -1.92189,0.18749 -3.10548,0.14062 -3.55078,-0.14063 -0.44532,-0.28125 -0.66798,-1.05469 -0.66797,-2.32031 -1e-5,-1.125 1.27733,-2.07422 3.83203,-2.84766 2.55467,-0.77343 3.83202,-3.08202 3.83203,-6.92578 l 0,-63.632812 c -1e-5,-3.796796 -0.55079,-6.585856 -1.65234,-8.367188 -1.10158,-1.781164 -3.03517,-3.163975 -5.80078,-4.148437 -1.45313,-0.515537 -2.1797,-1.242099 -2.17969,-2.179688 -1e-5,-1.406158 1.05468,-2.460845 3.16406,-3.164062 3.18749,-1.031156 6.49217,-2.624904 9.91406,-4.78125 2.81248,-1.687401 4.59373,-2.53115 5.34375,-2.53125 1.73435,1e-4 2.60154,1.195412 2.60157,3.585937 -3e-5,-0.187403 -0.0938,2.156345 -0.28125,7.03125 -0.14065,4.64071 -0.18753,9.211018 -0.14063,13.710938 l 0.28125,62.789062 c -2e-5,2.85939 0.7031,4.9336 2.10938,6.22266 1.40622,1.28906 3.82028,2.14453 7.24218,2.5664 2.10934,0.23438 3.16403,1.03126 3.16407,2.39063 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2832"" />
+      <path
+         d=""m 339.67995,128.43428 c -7e-5,0.98438 -1.79303,2.47266 -5.37891,4.46484 -3.58599,1.99219 -6.45708,2.98828 -8.61328,2.98829 -1.82817,-10e-6 -3.44536,-0.89063 -4.85156,-2.67188 -1.40629,-1.78125 -2.39067,-2.67187 -2.95313,-2.67187 -0.42191,0 -2.64847,0.96094 -6.67969,2.88281 -4.03128,1.92187 -8.08596,2.88281 -12.16406,2.88281 -3.84377,0 -7.0547,-1.125 -9.63281,-3.375 -2.81251,-2.48437 -4.21876,-5.85937 -4.21875,-10.125 -1e-5,-8.10935 9.28123,-13.92185 27.84375,-17.4375 3.18746,-0.60934 4.80465,-1.89841 4.85156,-3.86719 l 0.14063,-4.499997 c 0.28121,-7.687454 -3.11723,-11.5312 -10.19532,-11.53125 -2.01565,5e-5 -3.9258,1.804735 -5.73046,5.414062 -1.80471,3.609416 -4.39456,5.554727 -7.76954,5.835938 -3.84376,0.375038 -5.76563,-1.242148 -5.76562,-4.851563 -1e-5,-2.249954 2.85936,-4.874951 8.57812,-7.875 5.99998,-3.14057 11.7656,-4.710881 17.29688,-4.710937 9.51558,5.6e-5 14.22651,4.523489 14.13281,13.570312 l -0.28125,28.968755 c -0.0469,3.04688 1.24214,4.57032 3.86719,4.57031 0.51557,1e-5 1.49994,-0.11718 2.95312,-0.35156 1.45307,-0.23437 2.29682,-0.35156 2.53125,-0.35157 1.35932,1e-5 2.039,0.91407 2.03907,2.74219 z M 318.0237,112.40303 c 0.0468,-1.17185 -0.2227,-1.94529 -0.8086,-2.32031 -0.58597,-0.37498 -1.51175,-0.44529 -2.77734,-0.21094 -11.2969,2.01565 -16.94533,5.69533 -16.94531,11.03906 -2e-5,5.39064 2.92966,8.08595 8.78906,8.08594 2.34372,1e-5 4.75778,-0.44531 7.24219,-1.33594 2.90621,-1.03124 4.35933,-2.27342 4.35937,-3.72656 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2834"" />
+      <path
+         d=""m 392.13307,120.06709 c -5e-5,4.96876 -1.9102,8.91798 -5.73047,11.84766 -3.82035,2.92969 -9.03519,4.39453 -15.64453,4.39453 -4.40627,0 -8.81252,-0.46875 -13.21875,-1.40625 -3.79688,-0.84375 -6.00001,-1.61719 -6.60937,-2.32031 -0.37501,-0.65625 -0.56251,-3.86718 -0.5625,-9.63281 -1e-5,-2.48436 0.56249,-3.77343 1.6875,-3.86719 1.12499,-0.14061 2.08592,0.46876 2.88281,1.82812 3.51561,6.14064 9.18748,9.21095 17.01562,9.21094 6.60934,1e-5 9.91403,-2.29687 9.91407,-6.89062 -4e-5,-2.01562 -0.75004,-3.70311 -2.25,-5.0625 -1.64066,-1.54686 -4.82816,-3.35155 -9.5625,-5.41407 -6.84377,-3.04685 -11.41408,-5.71872 -13.71094,-8.01562 -2.48439,-2.43747 -3.72657,-5.718716 -3.72656,-9.843752 -1e-5,-5.062455 1.9453,-8.999951 5.83593,-11.8125 3.60936,-2.718695 8.43748,-4.078069 14.48438,-4.078125 3.79684,5.6e-5 7.26559,0.304743 10.40625,0.914062 3.37496,0.60943 5.13277,1.359429 5.27344,2.25 0.37495,2.625051 1.14839,6.421922 2.32031,11.390625 0.14058,0.609416 -0.51567,1.101603 -1.96875,1.476563 -1.54692,0.328165 -2.57817,0.07035 -3.09375,-0.773438 -3.70317,-6.046828 -8.39066,-9.070262 -14.0625,-9.070312 -6.4219,5e-5 -9.63283,2.062548 -9.63281,6.1875 -2e-5,2.296916 0.86716,4.12504 2.60156,5.484375 1.54685,1.171912 5.17966,3.000035 10.89844,5.484372 5.99996,2.57816 10.07808,4.89847 12.23437,6.96094 2.81245,2.6719 4.2187,6.25783 4.21875,10.75781 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2836"" />
+      <path
+         d=""m 473.69557,132.72334 c -7e-5,1.64063 -1.10163,2.50782 -3.30469,2.60157 -3.28131,0.0469 -7.57037,0.28124 -12.86718,0.70312 -2.62506,0.51562 -4.50006,0.1875 -5.625,-0.98437 -7.4063,-7.96875 -13.68754,-16.31249 -18.84375,-25.03125 -0.42191,-0.74998 -0.96097,-1.12498 -1.61719,-1.125 -0.79691,2e-5 -2.17972,0.70315 -4.14844,2.10937 -2.20315,1.21877 -3.30471,2.95315 -3.30469,5.20313 -2e-5,1.59376 0.0469,3.89064 0.14063,6.89062 0.0937,3.00001 0.84372,4.96876 2.25,5.90625 0.98435,0.65626 3.25778,1.17188 6.82031,1.54688 2.20309,0.28125 3.30465,1.10156 3.30469,2.46093 -4e-5,1.07813 -0.17582,1.7461 -0.52734,2.00391 -0.3516,0.25781 -1.27738,0.31641 -2.77735,0.17578 -4.68753,-0.42187 -12.60939,-0.1875 -23.76562,0.70313 -2.81251,0.23437 -4.33595,-0.11719 -4.57032,-1.05469 -0.0937,-0.32813 -0.14063,-0.79688 -0.14062,-1.40625 -1e-5,-1.45312 1.42968,-2.55469 4.28906,-3.30469 2.57811,-0.65624 3.86718,-3.67968 3.86719,-9.07031 l 0,-61.453127 c -1e-5,-3.843671 -0.37501,-6.515543 -1.125,-8.015625 -1.03126,-1.92179 -3.18751,-3.421788 -6.46875,-4.5 -1.54688,-0.515536 -2.32032,-1.242098 -2.32031,-2.179688 -1e-5,-1.359283 1.10155,-2.413969 3.30468,-3.164062 3.51562,-1.17178 6.86718,-2.788966 10.05469,-4.851563 2.57811,-1.6874 4.17186,-2.531149 4.78125,-2.53125 1.92185,1.01e-4 2.88279,1.21885 2.88281,3.65625 -2e-5,-0.328027 -0.0235,1.992283 -0.0703,6.960938 -0.0469,3.421962 -0.0703,8.015707 -0.0703,13.78125 l 0.14062,44.015627 c -2e-5,1.21878 0.3281,1.82815 0.98438,1.82812 0.7031,3e-5 1.78122,-0.60934 3.23437,-1.82812 3.8906,-3.046842 8.67184,-7.031213 14.34375,-11.953127 1.12496,-1.17183 1.68746,-2.109329 1.6875,-2.8125 -4e-5,-1.265577 -1.89848,-2.156201 -5.69531,-2.671875 -1.64066,-0.18745 -2.4141,-1.101512 -2.32031,-2.742188 0.14059,-1.64057 0.9609,-2.343695 2.46094,-2.109375 3.37495,0.468805 8.29682,0.726617 14.76562,0.773438 4.49994,0.04693 8.9765,0.07037 13.42969,0.07031 1.45306,0.04693 2.17962,0.914116 2.17969,2.601563 -7e-5,1.5938 -1.14851,2.460986 -3.44532,2.601562 -3.60943,0.140674 -7.00787,0.960986 -10.19531,2.460938 -4.45317,2.015669 -9.21098,5.554728 -14.27344,10.617187 -0.37504,0.281286 -0.56254,0.632845 -0.5625,1.054685 -4e-5,0.65629 0.79684,2.2266 2.39063,4.71094 5.85933,8.90627 11.39057,15.63283 16.59375,20.17969 3.32806,2.85938 6.44525,4.28907 9.35156,4.28906 2.15618,1e-5 3.49212,0.15235 4.00781,0.45703 0.51556,0.30469 0.77337,1.11329 0.77344,2.42578 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2838"" />
+    </g>
+  </g>
+</svg>
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_static/flask.png,docs/_static/flask.png,docs/_static/flask.png,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_static/flask.png b/docs/_static/flask.png
new file mode 100644
index 00000000..5c603cc2
Binary files /dev/null and b/docs/_static/flask.png differ
","diff --git a/docs/_static/flask.png b/docs/_static/flask.png
new file mode 100644
index 00000000..5c603cc2
Binary files /dev/null and b/docs/_static/flask.png differ
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_static/logo-full.png,docs/_static/logo-full.png,docs/_static/logo-full.png,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_static/logo-full.png b/docs/_static/logo-full.png
new file mode 100644
index 00000000..f255eece
Binary files /dev/null and b/docs/_static/logo-full.png differ
","diff --git a/docs/_static/logo-full.png b/docs/_static/logo-full.png
new file mode 100644
index 00000000..f255eece
Binary files /dev/null and b/docs/_static/logo-full.png differ
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_templates/sidebarintro.html,,docs/_templates/sidebarintro.html,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
new file mode 100644
index 00000000..46e01d5c
--- /dev/null
+++ b/docs/_templates/sidebarintro.html
@@ -0,0 +1,7 @@
+<h3>About Flask</h3>
+<p>
+  Flask is a micro webdevelopment framework for Python.  You are currently
+  looking at the documentation of the development version.  Things are
+  not stable yet, but if you have some feedback,
+  <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
+</p>
","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
new file mode 100644
index 00000000..46e01d5c
--- /dev/null
+++ b/docs/_templates/sidebarintro.html
@@ -0,0 +1,7 @@
+<h3>About Flask</h3>
+<p>
+  Flask is a micro webdevelopment framework for Python.  You are currently
+  looking at the documentation of the development version.  Things are
+  not stable yet, but if you have some feedback,
+  <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
+</p>
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_templates/sidebarlogo.html,,docs/_templates/sidebarlogo.html,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_templates/sidebarlogo.html b/docs/_templates/sidebarlogo.html
new file mode 100644
index 00000000..3bc7f762
--- /dev/null
+++ b/docs/_templates/sidebarlogo.html
@@ -0,0 +1,3 @@
+<p class=""logo""><a href=""{{ pathto(master_doc) }}"">
+  <img class=""logo"" src=""{{ pathto('_static/flask.png', 1) }}"" alt=""Logo""/>
+</a></p>
","diff --git a/docs/_templates/sidebarlogo.html b/docs/_templates/sidebarlogo.html
new file mode 100644
index 00000000..3bc7f762
--- /dev/null
+++ b/docs/_templates/sidebarlogo.html
@@ -0,0 +1,3 @@
+<p class=""logo""><a href=""{{ pathto(master_doc) }}"">
+  <img class=""logo"" src=""{{ pathto('_static/flask.png', 1) }}"" alt=""Logo""/>
+</a></p>
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_themes/flasky/static/flasky.css_t,,docs/_themes/flasky/static/flasky.css_t,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
new file mode 100644
index 00000000..05caf2f7
--- /dev/null
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -0,0 +1,239 @@
+/*
+ * flasky.css_t
+ * ~~~~~~~~~~~~
+ *
+ * Sphinx stylesheet -- flasky theme based on nature theme.
+ *
+ * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
+ * :license: BSD, see LICENSE for details.
+ *
+ */
+ 
+@import url(""basic.css"");
+ 
+/* -- page layout ----------------------------------------------------------- */
+ 
+body {
+    font-family: 'Georgia', serif;
+    font-size: 100%;
+    background-color: #111;
+    color: #555;
+    margin: 0;
+    padding: 0;
+}
+
+div.documentwrapper {
+    float: left;
+    width: 100%;
+}
+
+div.bodywrapper {
+    margin: 0 0 0 230px;
+}
+
+hr {
+    border: 1px solid #B1B4B6;
+}
+ 
+div.document {
+    background-color: #eee;
+}
+ 
+div.body {
+    background-color: #ffffff;
+    color: #3E4349;
+    padding: 0 30px 30px 30px;
+    font-size: 0.9em;
+}
+ 
+div.footer {
+    color: #555;
+    width: 100%;
+    padding: 13px 0;
+    text-align: center;
+    font-size: 75%;
+}
+ 
+div.footer a {
+    color: #444;
+    text-decoration: underline;
+}
+ 
+div.related {
+    background-color: #774117;
+    line-height: 32px;
+    color: #fff;
+    text-shadow: 0px 1px 0 #444;
+    font-size: 0.9em;
+}
+ 
+div.related a {
+    color: #E9D1C1;
+}
+ 
+div.sphinxsidebar {
+    font-size: 0.75em;
+    line-height: 1.5em;
+}
+
+div.sphinxsidebarwrapper {
+    padding: 20px 0 20px 0;
+}
+
+div.sphinxsidebarwrapper p.logo {
+    padding: 0 0 10px 0;
+    margin: 0;
+    text-align: center;
+}
+ 
+div.sphinxsidebar h3,
+div.sphinxsidebar h4 {
+    font-family: 'Georgia', serif;
+    color: #222;
+    font-size: 1.2em;
+    font-weight: normal;
+    margin: 0;
+    padding: 5px 10px;
+    background-color: #ddd;
+    text-shadow: 1px 1px 0 white
+}
+
+div.sphinxsidebar h4{
+    font-size: 1.1em;
+}
+ 
+div.sphinxsidebar h3 a {
+    color: #444;
+}
+ 
+ 
+div.sphinxsidebar p {
+    color: #555;
+    padding: 5px 20px;
+}
+ 
+div.sphinxsidebar p.topless {
+}
+ 
+div.sphinxsidebar ul {
+    margin: 10px 20px;
+    padding: 0;
+    color: #000;
+}
+ 
+div.sphinxsidebar a {
+    color: #444;
+}
+ 
+div.sphinxsidebar input {
+    border: 1px solid #ccc;
+    font-family: 'Georgia', serif;
+    font-size: 1em;
+}
+
+div.sphinxsidebar input[type=text]{
+    margin-left: 20px;
+}
+ 
+/* -- body styles ----------------------------------------------------------- */
+ 
+a {
+    color: #003B55;
+    text-decoration: none;
+}
+ 
+a:hover {
+    color: #6D4100;
+    text-decoration: underline;
+}
+ 
+div.body h1,
+div.body h2,
+div.body h3,
+div.body h4,
+div.body h5,
+div.body h6 {
+    font-family: 'Georiga', serif;
+    background-color: #bbb;
+    font-weight: normal;
+    color: #212224;
+    margin: 30px 0px 10px 0px;
+    padding: 8px 0 5px 10px;
+    text-shadow: 0px 1px 0 white
+}
+ 
+div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
+div.body h2 { font-size: 150%; background-color: #ddd; }
+div.body h3 { font-size: 120%; background-color: #eee; }
+div.body h4 { font-size: 110%; background-color: #eee; }
+div.body h5 { font-size: 100%; background-color: #eee; }
+div.body h6 { font-size: 100%; background-color: #eee; }
+ 
+a.headerlink {
+    color: #c60f0f;
+    padding: 0 4px;
+    text-decoration: none;
+}
+ 
+a.headerlink:hover {
+    background-color: #c60f0f;
+    color: white;
+}
+ 
+div.body p, div.body dd, div.body li {
+    line-height: 1.5em;
+}
+ 
+div.admonition p.admonition-title + p {
+    display: inline;
+}
+
+div.highlight{
+    background-color: white;
+}
+
+div.note {
+    background-color: #eee;
+    border: 1px solid #ccc;
+}
+ 
+div.seealso {
+    background-color: #ffc;
+    border: 1px solid #ff6;
+}
+ 
+div.topic {
+    background-color: #eee;
+}
+ 
+div.warning {
+    background-color: #ffe4e4;
+    border: 1px solid #f66;
+}
+ 
+p.admonition-title {
+    display: inline;
+}
+ 
+p.admonition-title:after {
+    content: "":"";
+}
+ 
+pre {
+    padding: 10px;
+    color: #222;
+    line-height: 1.2em;
+    border: 1px solid #C6C9CB;
+    font-size: 1.1em;
+    margin: 1.5em 0 1.5em 0;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+ 
+tt {
+    background-color: #ecf0f3;
+    color: #222;
+    /* padding: 1px 2px; */
+    font-size: 1.1em;
+    font-family: monospace;
+}
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
new file mode 100644
index 00000000..05caf2f7
--- /dev/null
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -0,0 +1,239 @@
+/*
+ * flasky.css_t
+ * ~~~~~~~~~~~~
+ *
+ * Sphinx stylesheet -- flasky theme based on nature theme.
+ *
+ * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
+ * :license: BSD, see LICENSE for details.
+ *
+ */
+ 
+@import url(""basic.css"");
+ 
+/* -- page layout ----------------------------------------------------------- */
+ 
+body {
+    font-family: 'Georgia', serif;
+    font-size: 100%;
+    background-color: #111;
+    color: #555;
+    margin: 0;
+    padding: 0;
+}
+
+div.documentwrapper {
+    float: left;
+    width: 100%;
+}
+
+div.bodywrapper {
+    margin: 0 0 0 230px;
+}
+
+hr {
+    border: 1px solid #B1B4B6;
+}
+ 
+div.document {
+    background-color: #eee;
+}
+ 
+div.body {
+    background-color: #ffffff;
+    color: #3E4349;
+    padding: 0 30px 30px 30px;
+    font-size: 0.9em;
+}
+ 
+div.footer {
+    color: #555;
+    width: 100%;
+    padding: 13px 0;
+    text-align: center;
+    font-size: 75%;
+}
+ 
+div.footer a {
+    color: #444;
+    text-decoration: underline;
+}
+ 
+div.related {
+    background-color: #774117;
+    line-height: 32px;
+    color: #fff;
+    text-shadow: 0px 1px 0 #444;
+    font-size: 0.9em;
+}
+ 
+div.related a {
+    color: #E9D1C1;
+}
+ 
+div.sphinxsidebar {
+    font-size: 0.75em;
+    line-height: 1.5em;
+}
+
+div.sphinxsidebarwrapper {
+    padding: 20px 0 20px 0;
+}
+
+div.sphinxsidebarwrapper p.logo {
+    padding: 0 0 10px 0;
+    margin: 0;
+    text-align: center;
+}
+ 
+div.sphinxsidebar h3,
+div.sphinxsidebar h4 {
+    font-family: 'Georgia', serif;
+    color: #222;
+    font-size: 1.2em;
+    font-weight: normal;
+    margin: 0;
+    padding: 5px 10px;
+    background-color: #ddd;
+    text-shadow: 1px 1px 0 white
+}
+
+div.sphinxsidebar h4{
+    font-size: 1.1em;
+}
+ 
+div.sphinxsidebar h3 a {
+    color: #444;
+}
+ 
+ 
+div.sphinxsidebar p {
+    color: #555;
+    padding: 5px 20px;
+}
+ 
+div.sphinxsidebar p.topless {
+}
+ 
+div.sphinxsidebar ul {
+    margin: 10px 20px;
+    padding: 0;
+    color: #000;
+}
+ 
+div.sphinxsidebar a {
+    color: #444;
+}
+ 
+div.sphinxsidebar input {
+    border: 1px solid #ccc;
+    font-family: 'Georgia', serif;
+    font-size: 1em;
+}
+
+div.sphinxsidebar input[type=text]{
+    margin-left: 20px;
+}
+ 
+/* -- body styles ----------------------------------------------------------- */
+ 
+a {
+    color: #003B55;
+    text-decoration: none;
+}
+ 
+a:hover {
+    color: #6D4100;
+    text-decoration: underline;
+}
+ 
+div.body h1,
+div.body h2,
+div.body h3,
+div.body h4,
+div.body h5,
+div.body h6 {
+    font-family: 'Georiga', serif;
+    background-color: #bbb;
+    font-weight: normal;
+    color: #212224;
+    margin: 30px 0px 10px 0px;
+    padding: 8px 0 5px 10px;
+    text-shadow: 0px 1px 0 white
+}
+ 
+div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
+div.body h2 { font-size: 150%; background-color: #ddd; }
+div.body h3 { font-size: 120%; background-color: #eee; }
+div.body h4 { font-size: 110%; background-color: #eee; }
+div.body h5 { font-size: 100%; background-color: #eee; }
+div.body h6 { font-size: 100%; background-color: #eee; }
+ 
+a.headerlink {
+    color: #c60f0f;
+    padding: 0 4px;
+    text-decoration: none;
+}
+ 
+a.headerlink:hover {
+    background-color: #c60f0f;
+    color: white;
+}
+ 
+div.body p, div.body dd, div.body li {
+    line-height: 1.5em;
+}
+ 
+div.admonition p.admonition-title + p {
+    display: inline;
+}
+
+div.highlight{
+    background-color: white;
+}
+
+div.note {
+    background-color: #eee;
+    border: 1px solid #ccc;
+}
+ 
+div.seealso {
+    background-color: #ffc;
+    border: 1px solid #ff6;
+}
+ 
+div.topic {
+    background-color: #eee;
+}
+ 
+div.warning {
+    background-color: #ffe4e4;
+    border: 1px solid #f66;
+}
+ 
+p.admonition-title {
+    display: inline;
+}
+ 
+p.admonition-title:after {
+    content: "":"";
+}
+ 
+pre {
+    padding: 10px;
+    color: #222;
+    line-height: 1.2em;
+    border: 1px solid #C6C9CB;
+    font-size: 1.1em;
+    margin: 1.5em 0 1.5em 0;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+ 
+tt {
+    background-color: #ecf0f3;
+    color: #222;
+    /* padding: 1px 2px; */
+    font-size: 1.1em;
+    font-family: monospace;
+}
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/_themes/flasky/theme.conf,,docs/_themes/flasky/theme.conf,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/_themes/flasky/theme.conf b/docs/_themes/flasky/theme.conf
new file mode 100644
index 00000000..cb9eb465
--- /dev/null
+++ b/docs/_themes/flasky/theme.conf
@@ -0,0 +1,3 @@
+[theme]
+inherit = basic
+stylesheet = flasky.css
","diff --git a/docs/_themes/flasky/theme.conf b/docs/_themes/flasky/theme.conf
new file mode 100644
index 00000000..cb9eb465
--- /dev/null
+++ b/docs/_themes/flasky/theme.conf
@@ -0,0 +1,3 @@
+[theme]
+inherit = basic
+stylesheet = flasky.css
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/becomingbig.rst,,docs/becomingbig.rst,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
new file mode 100644
index 00000000..90cc0138
--- /dev/null
+++ b/docs/becomingbig.rst
@@ -0,0 +1,54 @@
+.. _becomingbig:
+
+Becoming Big
+============
+
+Your application is becoming more and more complex?  Flask is really not
+designed for large scale applications and does not attempt to do so, but
+that does not mean you picked the wrong tool in the first place.
+
+Flask is powered by Werkzeug and Jinja2, two libraries that are in use at
+a number of large websites out there and all Flask does is bringing those
+two together.  Being a microframework, Flask is literally a single file.
+What that means for large applications is that it's probably a good idea
+to take the code from Flask and put it into a new module within the
+applications and expanding on that.
+
+What Could Be Improved?
+-----------------------
+
+For instance it makes a lot of sense to change the way endpoints (the
+names of the functions / URL rules) are handled to also take the module
+name into account.  Right now the function name is the URL name, but
+imagine you have a large applications consisting of multiple components.
+In that case, it makes a lot of sense to use dotted names for the URL
+endpoints.
+
+Here some suggestions how Flask can be modified to better accomodate large
+scale applications:
+
+-   implement dotted names for URL endpoints
+-   get rid of the decorator function registering which causes a lot
+    of troubles for applications that have circular dependencies.  It
+    also requires that the whole application is imported when the system
+    initializes or certain URLs will not be available right away.
+-   switch to explicit request object passing.  This makes it more to type
+    (because you now have something to pass around) but it makes it a
+    whole lot easier to debug hairy situations and to test the code.
+-   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directl into the
+    core framework.
+
+.. _Babel: http://babel.edgewall.org/
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+
+Why does not Flask do all that by Default?
+------------------------------------------
+
+There is a huge difference between a small application that only has to
+handle a couple of requests per second and with an overall code complexity
+of less than 4000 lines of code or something of larger scale.  At one
+point it becomes important to integrate external systems, different
+storage backends and more.
+
+If Flask was designed with all these contingencies in mind, it would be a
+much more complex framework and less easy to get started with.
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
new file mode 100644
index 00000000..90cc0138
--- /dev/null
+++ b/docs/becomingbig.rst
@@ -0,0 +1,54 @@
+.. _becomingbig:
+
+Becoming Big
+============
+
+Your application is becoming more and more complex?  Flask is really not
+designed for large scale applications and does not attempt to do so, but
+that does not mean you picked the wrong tool in the first place.
+
+Flask is powered by Werkzeug and Jinja2, two libraries that are in use at
+a number of large websites out there and all Flask does is bringing those
+two together.  Being a microframework, Flask is literally a single file.
+What that means for large applications is that it's probably a good idea
+to take the code from Flask and put it into a new module within the
+applications and expanding on that.
+
+What Could Be Improved?
+-----------------------
+
+For instance it makes a lot of sense to change the way endpoints (the
+names of the functions / URL rules) are handled to also take the module
+name into account.  Right now the function name is the URL name, but
+imagine you have a large applications consisting of multiple components.
+In that case, it makes a lot of sense to use dotted names for the URL
+endpoints.
+
+Here some suggestions how Flask can be modified to better accomodate large
+scale applications:
+
+-   implement dotted names for URL endpoints
+-   get rid of the decorator function registering which causes a lot
+    of troubles for applications that have circular dependencies.  It
+    also requires that the whole application is imported when the system
+    initializes or certain URLs will not be available right away.
+-   switch to explicit request object passing.  This makes it more to type
+    (because you now have something to pass around) but it makes it a
+    whole lot easier to debug hairy situations and to test the code.
+-   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directl into the
+    core framework.
+
+.. _Babel: http://babel.edgewall.org/
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+
+Why does not Flask do all that by Default?
+------------------------------------------
+
+There is a huge difference between a small application that only has to
+handle a couple of requests per second and with an overall code complexity
+of less than 4000 lines of code or something of larger scale.  At one
+point it becomes important to integrate external systems, different
+storage backends and more.
+
+If Flask was designed with all these contingencies in mind, it would be a
+much more complex framework and less easy to get started with.
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/conf.py,docs/conf.py,docs/conf.py,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/conf.py b/docs/conf.py
index 85c52700..9f417120 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -16,7 +16,7 @@ import sys, os
 # If extensions (or modules to document with autodoc) are in another directory,
 # add these directories to sys.path here. If the directory is relative to the
 # documentation root, use os.path.abspath to make it absolute, like shown here.
-#sys.path.append(os.path.abspath('.'))
+sys.path.append(os.path.abspath('.'))
 
 # -- General configuration -----------------------------------------------------
 
@@ -80,7 +80,7 @@ exclude_patterns = ['_build']
 #show_authors = False
 
 # The name of the Pygments (syntax highlighting) style to use.
-pygments_style = 'sphinx'
+pygments_style = 'flaskext.FlaskyStyle'
 
 # A list of ignored prefixes for module index sorting.
 #modindex_common_prefix = []
@@ -90,7 +90,7 @@ pygments_style = 'sphinx'
 
 # The theme to use for HTML and HTML Help pages.  Major themes that come with
 # Sphinx are currently 'default' and 'sphinxdoc'.
-html_theme = 'nature'
+html_theme = 'flasky'
 
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
@@ -98,7 +98,7 @@ html_theme = 'nature'
 #html_theme_options = {}
 
 # Add any paths that contain custom themes here, relative to this directory.
-#html_theme_path = []
+html_theme_path = ['_themes']
 
 # The name for this set of Sphinx documents.  If None, it defaults to
 # ""<project> v<release> documentation"".
@@ -108,7 +108,7 @@ html_theme = 'nature'
 #html_short_title = None
 
 # The name of an image file (relative to this directory) to place at the top
-# of the sidebar.
+# of the sidebar.  Do not set, template magic!
 #html_logo = None
 
 # The name of an image file (within the static path) to use as favicon of the
@@ -130,7 +130,11 @@ html_static_path = ['_static']
 #html_use_smartypants = True
 
 # Custom sidebar templates, maps document names to template names.
-#html_sidebars = {}
+html_sidebars = {
+    'index':    ['sidebarintro.html', 'sourcelink.html', 'searchbox.html'],
+    '**':       ['sidebarlogo.html', 'localtoc.html', 'relations.html',
+                 'sourcelink.html', 'searchbox.html']
+}
 
 # Additional templates that should be rendered to pages, maps page names to
 # template names.
","diff --git a/docs/conf.py b/docs/conf.py
index 85c52700..9f417120 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -16,7 +16,7 @@ import sys, os
 # If extensions (or modules to document with autodoc) are in another directory,
 # add these directories to sys.path here. If the directory is relative to the
 # documentation root, use os.path.abspath to make it absolute, like shown here.
-#sys.path.append(os.path.abspath('.'))
+sys.path.append(os.path.abspath('.'))
 
 # -- General configuration -----------------------------------------------------
 
@@ -80,7 +80,7 @@ exclude_patterns = ['_build']
 #show_authors = False
 
 # The name of the Pygments (syntax highlighting) style to use.
-pygments_style = 'sphinx'
+pygments_style = 'flaskext.FlaskyStyle'
 
 # A list of ignored prefixes for module index sorting.
 #modindex_common_prefix = []
@@ -90,7 +90,7 @@ pygments_style = 'sphinx'
 
 # The theme to use for HTML and HTML Help pages.  Major themes that come with
 # Sphinx are currently 'default' and 'sphinxdoc'.
-html_theme = 'nature'
+html_theme = 'flasky'
 
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
@@ -98,7 +98,7 @@ html_theme = 'nature'
 #html_theme_options = {}
 
 # Add any paths that contain custom themes here, relative to this directory.
-#html_theme_path = []
+html_theme_path = ['_themes']
 
 # The name for this set of Sphinx documents.  If None, it defaults to
 # ""<project> v<release> documentation"".
@@ -108,7 +108,7 @@ html_theme = 'nature'
 #html_short_title = None
 
 # The name of an image file (relative to this directory) to place at the top
-# of the sidebar.
+# of the sidebar.  Do not set, template magic!
 #html_logo = None
 
 # The name of an image file (within the static path) to use as favicon of the
@@ -130,7 +130,11 @@ html_static_path = ['_static']
 #html_use_smartypants = True
 
 # Custom sidebar templates, maps document names to template names.
-#html_sidebars = {}
+html_sidebars = {
+    'index':    ['sidebarintro.html', 'sourcelink.html', 'searchbox.html'],
+    '**':       ['sidebarlogo.html', 'localtoc.html', 'relations.html',
+                 'sourcelink.html', 'searchbox.html']
+}
 
 # Additional templates that should be rendered to pages, maps page names to
 # template names.
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/flaskext.py,,docs/flaskext.py,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/flaskext.py b/docs/flaskext.py
new file mode 100644
index 00000000..85331eff
--- /dev/null
+++ b/docs/flaskext.py
@@ -0,0 +1,96 @@
+# flasky extensions.  flasky pygments style based on tango style
+from pygments.style import Style
+from pygments.token import Keyword, Name, Comment, String, Error, \
+     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal
+
+
+class FlaskyStyle(Style):
+    background_color = ""#f8f8f8""
+    default_style = """"
+
+    styles = {
+        # No corresponding class for the following:
+        #Text:                     """", # class:  ''
+        Whitespace:                ""underline #f8f8f8"",      # class: 'w'
+        Error:                     ""#a40000 border:#ef2929"", # class: 'err'
+        Other:                     ""#000000"",                # class 'x'
+
+        Comment:                   ""italic #8f5902"", # class: 'c'
+        Comment.Multiline:         ""italic #8f5902"", # class: 'cm'
+        Comment.Preproc:           ""italic #8f5902"", # class: 'cp'
+        Comment.Single:            ""italic #8f5902"", # class: 'c1'
+        Comment.Special:           ""italic #8f5902"", # class: 'cs'
+
+        Keyword:                   ""bold #004461"",   # class: 'k'
+        Keyword.Constant:          ""bold #004461"",   # class: 'kc'
+        Keyword.Declaration:       ""bold #004461"",   # class: 'kd'
+        Keyword.Namespace:         ""bold #004461"",   # class: 'kn'
+        Keyword.Pseudo:            ""bold #004461"",   # class: 'kp'
+        Keyword.Reserved:          ""bold #004461"",   # class: 'kr'
+        Keyword.Type:              ""bold #004461"",   # class: 'kt'
+
+        Operator:                  ""#582800"",   # class: 'o'
+        Operator.Word:             ""bold #004461"",   # class: 'ow' - like keywords
+
+        Punctuation:               ""bold #000000"",   # class: 'p'
+
+        # because special names such as Name.Class, Name.Function, etc.
+        # are not recognized as such later in the parsing, we choose them
+        # to look the same as ordinary variables.
+        Name:                      ""#000000"",        # class: 'n'
+        Name.Attribute:            ""#c4a000"",        # class: 'na' - to be revised
+        Name.Builtin:              ""#004461"",        # class: 'nb'
+        Name.Builtin.Pseudo:       ""#3465a4"",        # class: 'bp'
+        Name.Class:                ""#000000"",        # class: 'nc' - to be revised
+        Name.Constant:             ""#000000"",        # class: 'no' - to be revised
+        Name.Decorator:            ""#999"",           # class: 'nd' - to be revised
+        Name.Entity:               ""#ce5c00"",        # class: 'ni'
+        Name.Exception:            ""bold #cc0000"",   # class: 'ne'
+        Name.Function:             ""#000000"",        # class: 'nf'
+        Name.Property:             ""#000000"",        # class: 'py'
+        Name.Label:                ""#f57900"",        # class: 'nl'
+        Name.Namespace:            ""#000000"",        # class: 'nn' - to be revised
+        Name.Other:                ""#000000"",        # class: 'nx'
+        Name.Tag:                  ""bold #004461"",   # class: 'nt' - like a keyword
+        Name.Variable:             ""#000000"",        # class: 'nv' - to be revised
+        Name.Variable.Class:       ""#000000"",        # class: 'vc' - to be revised
+        Name.Variable.Global:      ""#000000"",        # class: 'vg' - to be revised
+        Name.Variable.Instance:    ""#000000"",        # class: 'vi' - to be revised
+
+        # since the tango light blue does not show up well in text, we choose
+        # a pure blue instead.
+        Number:                    ""bold #0000cf"",   # class: 'm'
+        Number.Float:              ""bold #0000cf"",   # class: 'mf'
+        Number.Hex:                ""bold #0000cf"",   # class: 'mh'
+        Number.Integer:            ""bold #0000cf"",   # class: 'mi'
+        Number.Integer.Long:       ""bold #0000cf"",   # class: 'il'
+        Number.Oct:                ""bold #0000cf"",   # class: 'mo'
+
+        Literal:                   ""#000000"",        # class: 'l'
+        Literal.Date:              ""#000000"",        # class: 'ld'
+
+        String:                    ""#4e9a06"",        # class: 's'
+        String.Backtick:           ""#4e9a06"",        # class: 'sb'
+        String.Char:               ""#4e9a06"",        # class: 'sc'
+        String.Doc:                ""italic #8f5902"", # class: 'sd' - like a comment
+        String.Double:             ""#4e9a06"",        # class: 's2'
+        String.Escape:             ""#4e9a06"",        # class: 'se'
+        String.Heredoc:            ""#4e9a06"",        # class: 'sh'
+        String.Interpol:           ""#4e9a06"",        # class: 'si'
+        String.Other:              ""#4e9a06"",        # class: 'sx'
+        String.Regex:              ""#4e9a06"",        # class: 'sr'
+        String.Single:             ""#4e9a06"",        # class: 's1'
+        String.Symbol:             ""#4e9a06"",        # class: 'ss'
+
+        Generic:                   ""#000000"",        # class: 'g'
+        Generic.Deleted:           ""#a40000"",        # class: 'gd'
+        Generic.Emph:              ""italic #000000"", # class: 'ge'
+        Generic.Error:             ""#ef2929"",        # class: 'gr'
+        Generic.Heading:           ""bold #000080"",   # class: 'gh'
+        Generic.Inserted:          ""#00A000"",        # class: 'gi'
+        Generic.Output:            ""italic #000000"", # class: 'go'
+        Generic.Prompt:            ""#8f5902"",        # class: 'gp'
+        Generic.Strong:            ""bold #000000"",   # class: 'gs'
+        Generic.Subheading:        ""bold #800080"",   # class: 'gu'
+        Generic.Traceback:         ""bold #a40000"",   # class: 'gt'
+    }
","diff --git a/docs/flaskext.py b/docs/flaskext.py
new file mode 100644
index 00000000..85331eff
--- /dev/null
+++ b/docs/flaskext.py
@@ -0,0 +1,96 @@
+# flasky extensions.  flasky pygments style based on tango style
+from pygments.style import Style
+from pygments.token import Keyword, Name, Comment, String, Error, \
+     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal
+
+
+class FlaskyStyle(Style):
+    background_color = ""#f8f8f8""
+    default_style = """"
+
+    styles = {
+        # No corresponding class for the following:
+        #Text:                     """", # class:  ''
+        Whitespace:                ""underline #f8f8f8"",      # class: 'w'
+        Error:                     ""#a40000 border:#ef2929"", # class: 'err'
+        Other:                     ""#000000"",                # class 'x'
+
+        Comment:                   ""italic #8f5902"", # class: 'c'
+        Comment.Multiline:         ""italic #8f5902"", # class: 'cm'
+        Comment.Preproc:           ""italic #8f5902"", # class: 'cp'
+        Comment.Single:            ""italic #8f5902"", # class: 'c1'
+        Comment.Special:           ""italic #8f5902"", # class: 'cs'
+
+        Keyword:                   ""bold #004461"",   # class: 'k'
+        Keyword.Constant:          ""bold #004461"",   # class: 'kc'
+        Keyword.Declaration:       ""bold #004461"",   # class: 'kd'
+        Keyword.Namespace:         ""bold #004461"",   # class: 'kn'
+        Keyword.Pseudo:            ""bold #004461"",   # class: 'kp'
+        Keyword.Reserved:          ""bold #004461"",   # class: 'kr'
+        Keyword.Type:              ""bold #004461"",   # class: 'kt'
+
+        Operator:                  ""#582800"",   # class: 'o'
+        Operator.Word:             ""bold #004461"",   # class: 'ow' - like keywords
+
+        Punctuation:               ""bold #000000"",   # class: 'p'
+
+        # because special names such as Name.Class, Name.Function, etc.
+        # are not recognized as such later in the parsing, we choose them
+        # to look the same as ordinary variables.
+        Name:                      ""#000000"",        # class: 'n'
+        Name.Attribute:            ""#c4a000"",        # class: 'na' - to be revised
+        Name.Builtin:              ""#004461"",        # class: 'nb'
+        Name.Builtin.Pseudo:       ""#3465a4"",        # class: 'bp'
+        Name.Class:                ""#000000"",        # class: 'nc' - to be revised
+        Name.Constant:             ""#000000"",        # class: 'no' - to be revised
+        Name.Decorator:            ""#999"",           # class: 'nd' - to be revised
+        Name.Entity:               ""#ce5c00"",        # class: 'ni'
+        Name.Exception:            ""bold #cc0000"",   # class: 'ne'
+        Name.Function:             ""#000000"",        # class: 'nf'
+        Name.Property:             ""#000000"",        # class: 'py'
+        Name.Label:                ""#f57900"",        # class: 'nl'
+        Name.Namespace:            ""#000000"",        # class: 'nn' - to be revised
+        Name.Other:                ""#000000"",        # class: 'nx'
+        Name.Tag:                  ""bold #004461"",   # class: 'nt' - like a keyword
+        Name.Variable:             ""#000000"",        # class: 'nv' - to be revised
+        Name.Variable.Class:       ""#000000"",        # class: 'vc' - to be revised
+        Name.Variable.Global:      ""#000000"",        # class: 'vg' - to be revised
+        Name.Variable.Instance:    ""#000000"",        # class: 'vi' - to be revised
+
+        # since the tango light blue does not show up well in text, we choose
+        # a pure blue instead.
+        Number:                    ""bold #0000cf"",   # class: 'm'
+        Number.Float:              ""bold #0000cf"",   # class: 'mf'
+        Number.Hex:                ""bold #0000cf"",   # class: 'mh'
+        Number.Integer:            ""bold #0000cf"",   # class: 'mi'
+        Number.Integer.Long:       ""bold #0000cf"",   # class: 'il'
+        Number.Oct:                ""bold #0000cf"",   # class: 'mo'
+
+        Literal:                   ""#000000"",        # class: 'l'
+        Literal.Date:              ""#000000"",        # class: 'ld'
+
+        String:                    ""#4e9a06"",        # class: 's'
+        String.Backtick:           ""#4e9a06"",        # class: 'sb'
+        String.Char:               ""#4e9a06"",        # class: 'sc'
+        String.Doc:                ""italic #8f5902"", # class: 'sd' - like a comment
+        String.Double:             ""#4e9a06"",        # class: 's2'
+        String.Escape:             ""#4e9a06"",        # class: 'se'
+        String.Heredoc:            ""#4e9a06"",        # class: 'sh'
+        String.Interpol:           ""#4e9a06"",        # class: 'si'
+        String.Other:              ""#4e9a06"",        # class: 'sx'
+        String.Regex:              ""#4e9a06"",        # class: 'sr'
+        String.Single:             ""#4e9a06"",        # class: 's1'
+        String.Symbol:             ""#4e9a06"",        # class: 'ss'
+
+        Generic:                   ""#000000"",        # class: 'g'
+        Generic.Deleted:           ""#a40000"",        # class: 'gd'
+        Generic.Emph:              ""italic #000000"", # class: 'ge'
+        Generic.Error:             ""#ef2929"",        # class: 'gr'
+        Generic.Heading:           ""bold #000080"",   # class: 'gh'
+        Generic.Inserted:          ""#00A000"",        # class: 'gi'
+        Generic.Output:            ""italic #000000"", # class: 'go'
+        Generic.Prompt:            ""#8f5902"",        # class: 'gp'
+        Generic.Strong:            ""bold #000000"",   # class: 'gs'
+        Generic.Subheading:        ""bold #800080"",   # class: 'gu'
+        Generic.Traceback:         ""bold #a40000"",   # class: 'gt'
+    }
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/foreword.rst,,docs/foreword.rst,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/foreword.rst b/docs/foreword.rst
new file mode 100644
index 00000000..79243d3b
--- /dev/null
+++ b/docs/foreword.rst
@@ -0,0 +1,57 @@
+Foreword
+========
+
+Read this before you get started with Flask.  This hopefully answers some
+questions about the intention of the project, what it aims at and when you
+should or should not be using it.
+
+What does Micro Mean?
+---------------------
+
+The micro in microframework for me means on the one hand being small in
+size, complexity but on the other hand also that the complexity of the
+applications that are written with these frameworks do not exceed a
+certain size.  A microframework like Flask sacrifices a few things in
+order to be approachable and to be as concise as possible.
+
+For example Flask uses thread local objects internally so that you don't
+have to pass objects around from function to function within a request in
+order to stay threadsafe.  While this is a really easy approach and saves
+you a lot of time, it also does not scale well to large applications.
+It's especially painful for more complex unittests and when you suddenly
+have to deal with code being executed outside of the context of a request
+(for example if you have cronjobs).
+
+Flask provides some tools to deal with the downsides of this approach but
+the core problem of this approach obviously stays.  It is also based on
+convention over configuration which means that a lot of things are
+preconfigured in Flask and will work well for smaller applications but not
+so much for larger ones (where and how it looks for templates, static
+files etc.)
+
+But don't worry if your application suddenly grows larger than it was
+initially and you're afraid Flask might not grow with it.  Even with
+larger frameworks you sooner or later will find out that you need
+something the framework just cannot do for you without modification.
+If you are ever in that situation, check out the :ref:`becomingbig`
+chapter.
+
+Target Audience
+---------------
+
+Is Flask for you?  Is your application small-ish (less than 4000 lines of
+Python code) and does not depend on too complex database structures, Flask
+is the Framework for you.  It was designed from the ground up to be easy
+to use, based on established principles, good intentions and on top of two
+established libraries in widespread usage.
+
+Flask serves two purposes: it's an example of how to create a minimal and
+opinionated framework on top of Werkzeug to show how this can be done, and
+to provide people with a simple tool to prototype larger applications or
+to implement small and medium sized applications.
+
+If you suddenly discover that your application grows larger than
+originally intended, head over to the :ref:`becomingbig` section to see
+some possible solutions for larger applications.
+
+Satisfied?  Then head over to the :ref:`installation`.
","diff --git a/docs/foreword.rst b/docs/foreword.rst
new file mode 100644
index 00000000..79243d3b
--- /dev/null
+++ b/docs/foreword.rst
@@ -0,0 +1,57 @@
+Foreword
+========
+
+Read this before you get started with Flask.  This hopefully answers some
+questions about the intention of the project, what it aims at and when you
+should or should not be using it.
+
+What does Micro Mean?
+---------------------
+
+The micro in microframework for me means on the one hand being small in
+size, complexity but on the other hand also that the complexity of the
+applications that are written with these frameworks do not exceed a
+certain size.  A microframework like Flask sacrifices a few things in
+order to be approachable and to be as concise as possible.
+
+For example Flask uses thread local objects internally so that you don't
+have to pass objects around from function to function within a request in
+order to stay threadsafe.  While this is a really easy approach and saves
+you a lot of time, it also does not scale well to large applications.
+It's especially painful for more complex unittests and when you suddenly
+have to deal with code being executed outside of the context of a request
+(for example if you have cronjobs).
+
+Flask provides some tools to deal with the downsides of this approach but
+the core problem of this approach obviously stays.  It is also based on
+convention over configuration which means that a lot of things are
+preconfigured in Flask and will work well for smaller applications but not
+so much for larger ones (where and how it looks for templates, static
+files etc.)
+
+But don't worry if your application suddenly grows larger than it was
+initially and you're afraid Flask might not grow with it.  Even with
+larger frameworks you sooner or later will find out that you need
+something the framework just cannot do for you without modification.
+If you are ever in that situation, check out the :ref:`becomingbig`
+chapter.
+
+Target Audience
+---------------
+
+Is Flask for you?  Is your application small-ish (less than 4000 lines of
+Python code) and does not depend on too complex database structures, Flask
+is the Framework for you.  It was designed from the ground up to be easy
+to use, based on established principles, good intentions and on top of two
+established libraries in widespread usage.
+
+Flask serves two purposes: it's an example of how to create a minimal and
+opinionated framework on top of Werkzeug to show how this can be done, and
+to provide people with a simple tool to prototype larger applications or
+to implement small and medium sized applications.
+
+If you suddenly discover that your application grows larger than
+originally intended, head over to the :ref:`becomingbig` section to see
+some possible solutions for larger applications.
+
+Satisfied?  Then head over to the :ref:`installation`.
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,docs/index.rst,docs/index.rst,docs/index.rst,"Added docs, fixed some bugs I introduced last commit","diff --git a/docs/index.rst b/docs/index.rst
index ddb41da5..74397dbe 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,6 +1,10 @@
 Welcome to Flask
 ================
 
+.. image:: _static/logo-full.png
+   :alt: The Flask Logo with Subtitle
+   :align: right
+
 Welcome to Flask's documentation.  This documentation is devided into
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
@@ -11,7 +15,9 @@ you want to dive into all the internal parts of Flask, check out the
 .. toctree::
    :maxdepth: 2
 
+   foreword
    installation
    quickstart
    patterns
    api
+   becomingbig
","diff --git a/docs/index.rst b/docs/index.rst
index ddb41da5..74397dbe 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,6 +1,10 @@
 Welcome to Flask
 ================
 
+.. image:: _static/logo-full.png
+   :alt: The Flask Logo with Subtitle
+   :align: right
+
 Welcome to Flask's documentation.  This documentation is devided into
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
@@ -11,7 +15,9 @@ you want to dive into all the internal parts of Flask, check out the
 .. toctree::
    :maxdepth: 2
 
+   foreword
    installation
    quickstart
    patterns
    api
+   becomingbig
"
7d6b8e9ab3e738d69e39ad53a7c0f6a552d5284a,3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,flask.py,flask.py,flask.py,"Added docs, fixed some bugs I introduced last commit","diff --git a/flask.py b/flask.py
index 4bb2d85d..344cae3b 100644
--- a/flask.py
+++ b/flask.py
@@ -288,7 +288,7 @@ class Flask(object):
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
-    def add_url_rule(self, endpoint, **options):
+    def add_url_rule(self, rule, endpoint, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator but does not register the view function for the endpoint.
 
@@ -298,14 +298,14 @@ class Flask(object):
             def index():
                 pass
 
-        Is equivalent to the following:
+        Is equivalent to the following::
 
             def index():
                 pass
             app.add_url_rule('index', '/')
             app.view_functions['index'] = index
         """"""
-        options['endpoint'] = f.__name__
+        options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
 
@@ -372,7 +372,7 @@ class Flask(object):
                                setting for this rule.  See above.
         """"""
         def decorator(f):
-            self.add_url_rule(f.__name__, **options)
+            self.add_url_rule(rule, f.__name__, **options)
             self.view_functions[f.__name__] = f
             return f
         return decorator
","diff --git a/flask.py b/flask.py
index 4bb2d85d..344cae3b 100644
--- a/flask.py
+++ b/flask.py
@@ -288,7 +288,7 @@ class Flask(object):
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
 
-    def add_url_rule(self, endpoint, **options):
+    def add_url_rule(self, rule, endpoint, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator but does not register the view function for the endpoint.
 
@@ -298,14 +298,14 @@ class Flask(object):
             def index():
                 pass
 
-        Is equivalent to the following:
+        Is equivalent to the following::
 
             def index():
                 pass
             app.add_url_rule('index', '/')
             app.view_functions['index'] = index
         """"""
-        options['endpoint'] = f.__name__
+        options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
 
@@ -372,7 +372,7 @@ class Flask(object):
                                setting for this rule.  See above.
         """"""
         def decorator(f):
-            self.add_url_rule(f.__name__, **options)
+            self.add_url_rule(rule, f.__name__, **options)
             self.view_functions[f.__name__] = f
             return f
         return decorator
"
3d719f35f5c1ee4ce3dc01fb2167ef49c0180cf6,9dfab582d065521e9350327801ed2c5ced1c8fa1,README,README,README,Updated README,"diff --git a/README b/README
index 9b82ae29..f3a8a03e 100644
--- a/README
+++ b/README
@@ -15,3 +15,16 @@
 
       Nope, this is still work in progress, but I am happy to
       accept patches and improvements already.
+
+    ~ What do I need?
+
+      Currently the development versions of Jinja2 and Werkzeug.
+      Because of Flask I did some refactoring in Werkzeug and
+      Jinja2 and the next versions (out April 10th) will contain
+      these changes.
+
+    ~ Where are the docs?
+
+      Go to http://flask.pocoo.org/ for a prebuild version of
+      the current documentation.  Otherwise build them yourself
+      from the sphinx sources in the docs folder.
","diff --git a/README b/README
index 9b82ae29..f3a8a03e 100644
--- a/README
+++ b/README
@@ -15,3 +15,16 @@
 
       Nope, this is still work in progress, but I am happy to
       accept patches and improvements already.
+
+    ~ What do I need?
+
+      Currently the development versions of Jinja2 and Werkzeug.
+      Because of Flask I did some refactoring in Werkzeug and
+      Jinja2 and the next versions (out April 10th) will contain
+      these changes.
+
+    ~ Where are the docs?
+
+      Go to http://flask.pocoo.org/ for a prebuild version of
+      the current documentation.  Otherwise build them yourself
+      from the sphinx sources in the docs folder.
"
9dfab582d065521e9350327801ed2c5ced1c8fa1,8e9bd5f009bb8756a2a7d76a4b792323eeee49d6,docs/index.rst,docs/index.rst,docs/index.rst,Fixed a typo,"diff --git a/docs/index.rst b/docs/index.rst
index 74397dbe..290656ea 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -5,7 +5,7 @@ Welcome to Flask
    :alt: The Flask Logo with Subtitle
    :align: right
 
-Welcome to Flask's documentation.  This documentation is devided into
+Welcome to Flask's documentation.  This documentation is divided into
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
 you want to dive into all the internal parts of Flask, check out the
","diff --git a/docs/index.rst b/docs/index.rst
index 74397dbe..290656ea 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -5,7 +5,7 @@ Welcome to Flask
    :alt: The Flask Logo with Subtitle
    :align: right
 
-Welcome to Flask's documentation.  This documentation is devided into
+Welcome to Flask's documentation.  This documentation is divided into
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
 you want to dive into all the internal parts of Flask, check out the
"
8e9bd5f009bb8756a2a7d76a4b792323eeee49d6,4e1b3e1134eb478563bc434d794085d0a412cb84,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,set secret key :),"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 54a421e9..45a3f0f6 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -478,6 +478,9 @@ sessions work::
         # remove the username from the session if its there
         session.pop('username', None)
 
+    # set the secret key.  keep this really secret:
+    app.secret_key = 'the secret key'
+
 Message Flashing
 ----------------
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 54a421e9..45a3f0f6 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -478,6 +478,9 @@ sessions work::
         # remove the username from the session if its there
         session.pop('username', None)
 
+    # set the secret key.  keep this really secret:
+    app.secret_key = 'the secret key'
+
 Message Flashing
 ----------------
 
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,Heavily improved documentation,"diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index 46e01d5c..06bd737e 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,3 +5,8 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
+<h3>Useful Links</h3>
+<ul>
+  <li><a href=""http://pypi.python.org/pypi/Flask"">Flask @ PyPI</a></li>
+  <li><a href=""http://github.com/mitsuhiko/flask"">Flask @ github</a></li>
+</ul>
","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index 46e01d5c..06bd737e 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,3 +5,8 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
+<h3>Useful Links</h3>
+<ul>
+  <li><a href=""http://pypi.python.org/pypi/Flask"">Flask @ PyPI</a></li>
+  <li><a href=""http://github.com/mitsuhiko/flask"">Flask @ github</a></li>
+</ul>
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Heavily improved documentation,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 05caf2f7..bd829c0c 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -16,7 +16,7 @@
 body {
     font-family: 'Georgia', serif;
     font-size: 100%;
-    background-color: #111;
+    background-color: #555;
     color: #555;
     margin: 0;
     padding: 0;
@@ -47,15 +47,13 @@ div.body {
 }
  
 div.footer {
-    color: #555;
-    width: 100%;
-    padding: 13px 0;
-    text-align: center;
-    font-size: 75%;
+    color: #ccc;
+    padding: 10px;
+    font-size: 0.8em;
 }
  
 div.footer a {
-    color: #444;
+    color: white;
     text-decoration: underline;
 }
  
@@ -138,7 +136,7 @@ div.sphinxsidebar input[type=text]{
 /* -- body styles ----------------------------------------------------------- */
  
 a {
-    color: #003B55;
+    color: #004B6B;
     text-decoration: none;
 }
  
@@ -159,7 +157,7 @@ div.body h6 {
     color: #212224;
     margin: 30px 0px 10px 0px;
     padding: 8px 0 5px 10px;
-    text-shadow: 0px 1px 0 white
+    text-shadow: 0px 1px 0 white;
 }
  
 div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
@@ -170,14 +168,14 @@ div.body h5 { font-size: 100%; background-color: #eee; }
 div.body h6 { font-size: 100%; background-color: #eee; }
  
 a.headerlink {
-    color: #c60f0f;
+    color: white;
     padding: 0 4px;
     text-decoration: none;
 }
  
 a.headerlink:hover {
-    background-color: #c60f0f;
-    color: white;
+    color: #444;
+    background: #eaeaea;
 }
  
 div.body p, div.body dd, div.body li {
@@ -219,21 +217,77 @@ p.admonition-title:after {
     content: "":"";
 }
 
+pre, tt {
+    font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono', monospace;
+    font-size: 0.9em;
+}
+
+tt.descname, tt.descclassname {
+    font-size: 0.95em;
+    -webkit-box-shadow: none;
+    -moz-box-shadow: none;
+}
+
+tt.descname {
+    padding-right: 0.08em;
+}
+
+table.docutils {
+    border: 1px solid #888;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+
+table.docutils td, table.docutils th {
+    border: 1px solid #888;
+    padding: 0.25em 0.7em;
+}
+
+table.field-list {
+    border: none;
+    -webkit-box-shadow: none;
+    -moz-box-shadow: none;
+}
+
+table.field-list th {
+    padding: 0 0.8em 0 0;
+}
+
+table.field-list td {
+    padding: 0;
+}
+ 
 pre {
+    background: #FDFDFD;
     padding: 10px;
     color: #222;
-    line-height: 1.2em;
-    border: 1px solid #C6C9CB;
-    font-size: 1.1em;
-    margin: 1.5em 0 1.5em 0;
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+    line-height: 1.3em;
+    border: 1px solid #f9f9f9;
+    margin: 1.5em 3px 1.5em 0;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
 }
  
 tt {
     background-color: #ecf0f3;
     color: #222;
     /* padding: 1px 2px; */
-    font-size: 1.1em;
-    font-family: monospace;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+
+tt.xref, a tt {
+    background-color: #FBFBFB;
+}
+
+a:hover tt {
+    background: #EEE;
+}
+
+div.document + div.related {
+    background: #aaa;
+}
+
+div.document + div.related a {
+    color: white;
 }
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 05caf2f7..bd829c0c 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -16,7 +16,7 @@
 body {
     font-family: 'Georgia', serif;
     font-size: 100%;
-    background-color: #111;
+    background-color: #555;
     color: #555;
     margin: 0;
     padding: 0;
@@ -47,15 +47,13 @@ div.body {
 }
  
 div.footer {
-    color: #555;
-    width: 100%;
-    padding: 13px 0;
-    text-align: center;
-    font-size: 75%;
+    color: #ccc;
+    padding: 10px;
+    font-size: 0.8em;
 }
  
 div.footer a {
-    color: #444;
+    color: white;
     text-decoration: underline;
 }
  
@@ -138,7 +136,7 @@ div.sphinxsidebar input[type=text]{
 /* -- body styles ----------------------------------------------------------- */
  
 a {
-    color: #003B55;
+    color: #004B6B;
     text-decoration: none;
 }
  
@@ -159,7 +157,7 @@ div.body h6 {
     color: #212224;
     margin: 30px 0px 10px 0px;
     padding: 8px 0 5px 10px;
-    text-shadow: 0px 1px 0 white
+    text-shadow: 0px 1px 0 white;
 }
  
 div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
@@ -170,14 +168,14 @@ div.body h5 { font-size: 100%; background-color: #eee; }
 div.body h6 { font-size: 100%; background-color: #eee; }
  
 a.headerlink {
-    color: #c60f0f;
+    color: white;
     padding: 0 4px;
     text-decoration: none;
 }
  
 a.headerlink:hover {
-    background-color: #c60f0f;
-    color: white;
+    color: #444;
+    background: #eaeaea;
 }
  
 div.body p, div.body dd, div.body li {
@@ -219,21 +217,77 @@ p.admonition-title:after {
     content: "":"";
 }
 
+pre, tt {
+    font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono', monospace;
+    font-size: 0.9em;
+}
+
+tt.descname, tt.descclassname {
+    font-size: 0.95em;
+    -webkit-box-shadow: none;
+    -moz-box-shadow: none;
+}
+
+tt.descname {
+    padding-right: 0.08em;
+}
+
+table.docutils {
+    border: 1px solid #888;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+
+table.docutils td, table.docutils th {
+    border: 1px solid #888;
+    padding: 0.25em 0.7em;
+}
+
+table.field-list {
+    border: none;
+    -webkit-box-shadow: none;
+    -moz-box-shadow: none;
+}
+
+table.field-list th {
+    padding: 0 0.8em 0 0;
+}
+
+table.field-list td {
+    padding: 0;
+}
+ 
 pre {
+    background: #FDFDFD;
     padding: 10px;
     color: #222;
-    line-height: 1.2em;
-    border: 1px solid #C6C9CB;
-    font-size: 1.1em;
-    margin: 1.5em 0 1.5em 0;
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+    line-height: 1.3em;
+    border: 1px solid #f9f9f9;
+    margin: 1.5em 3px 1.5em 0;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
 }
  
 tt {
     background-color: #ecf0f3;
     color: #222;
     /* padding: 1px 2px; */
-    font-size: 1.1em;
-    font-family: monospace;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+
+tt.xref, a tt {
+    background-color: #FBFBFB;
+}
+
+a:hover tt {
+    background: #EEE;
+}
+
+div.document + div.related {
+    background: #aaa;
+}
+
+div.document + div.related a {
+    color: white;
 }
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/api.rst,docs/api.rst,docs/api.rst,Heavily improved documentation,"diff --git a/docs/api.rst b/docs/api.rst
index eefdf71c..98614ead 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -163,7 +163,13 @@ Useful Functions and Classes
 
 .. autofunction:: url_for
 
-.. autofunction:: abort
+.. function:: abort(code)
+
+   Raises an :exc:`~werkzeug.exception.HTTPException` for the given
+   status code.  For example to abort request handling with a page not
+   found exception, you would call ``abort(404)``.
+
+   :param code: the HTTP error code.
 
 .. autofunction:: redirect
 
","diff --git a/docs/api.rst b/docs/api.rst
index eefdf71c..98614ead 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -163,7 +163,13 @@ Useful Functions and Classes
 
 .. autofunction:: url_for
 
-.. autofunction:: abort
+.. function:: abort(code)
+
+   Raises an :exc:`~werkzeug.exception.HTTPException` for the given
+   status code.  For example to abort request handling with a page not
+   found exception, you would call ``abort(404)``.
+
+   :param code: the HTTP error code.
 
 .. autofunction:: redirect
 
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/deploying.rst,,docs/deploying.rst,Heavily improved documentation,"diff --git a/docs/deploying.rst b/docs/deploying.rst
new file mode 100644
index 00000000..345d7ee9
--- /dev/null
+++ b/docs/deploying.rst
@@ -0,0 +1,266 @@
+Deployment Options
+==================
+
+Depending on what you have available there are multiple ways to run Flask
+applications.  A very common method is to use the builtin server during
+development and maybe behind a proxy for simple applications, but there
+are more options available.
+
+If you have a different WSGI server look up the server documentation about
+how to use a WSGI app with it.  Just remember that your application object
+is the actual WSGI application.
+
+
+FastCGI
+-------
+
+A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
+is FastCGI.  To use your WSGI application with any of them you will need
+a FastCGI server first.
+
+The most popular one is `flup`_ which we will use for this guide.  Make
+sure to have it installed.
+
+Creating a `.fcgi` file
+```````````````````````
+
+First you need to create the FastCGI server file.  Let's call it
+`yourapplication.fcgi`::
+
+    #!/usr/bin/python
+    from flup.server.fcgi import WSGIServer
+    from yourapplication import app
+
+    WSGIServer(app).run()
+
+This is enough for Apache to work, however lighttpd and nginx need a
+socket to communicate with the FastCGI server.  For that to work you
+need to pass the path to the socket to the
+:class:`~flup.server.fcgi.WSGIServer`::
+
+    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
+
+The path has to be the exact same path you define in the server
+config.
+
+Save the `yourapplication.fcgi` file somewhere you will find it again.
+It makes sense to have that in `/var/www/yourapplication` or something
+similar.
+
+Make sure to set the executable bit on that file so that the servers
+can execute it::
+
+    # chmod +x /var/www/yourapplication/yourapplication.fcgi
+
+Configuring lighttpd
+````````````````````
+
+A basic FastCGI configuration for lighttpd looks like that::
+
+    fastcgi.server = (""/yourapplication"" =>
+        ""yourapplication"" => (
+            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
+            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
+            ""check-local"" => ""disable""
+        )
+    )
+
+This configuration binds the application to `/yourapplication`.  If you
+want the application to work in the URL root you have to work around a
+lighttpd bug with the `~werkzeug.contrib.fixers.LighttpdCGIRootFix` middleware.
+
+Make sure to apply it only if you are mounting the application the URL
+root.
+
+Configuring nginx
+`````````````````
+
+Installing FastCGI applications on nginx is a bit tricky because by default
+some FastCGI parameters are not properly forwarded.
+
+A basic FastCGI configuration for nginx looks like this::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        if ($uri ~ ^/yourapplication/(.*)?) {
+            set $path_url $1;
+        }
+        fastcgi_param PATH_INFO $path_url;
+        fastcgi_param SCRIPT_NAME /yourapplication;
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+This configuration binds the application to `/yourapplication`.  If you want
+to have it in the URL root it's a bit easier because you don't have to figure
+out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        fastcgi_param PATH_INFO $fastcgi_script_name;
+        fastcgi_param SCRIPT_NAME """";
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
+can either write an `init.d` script for that or execute it inside a screen
+session::
+
+    $ screen
+    $ /var/www/yourapplication/yourapplication.fcgi
+
+Debugging
+`````````
+
+FastCGI deployments tend to be hard to debug on most webservers.  Very often the
+only thing the server log tells you is something along the lines of ""premature
+end of headers"".  In order to debug the application the only thing that can
+really give you ideas why it breaks is switching to the correct user and
+executing the application by hand.
+
+This example assumes your application is called `application.fcgi` and that your
+webserver user is `www-data`::
+
+    $ su www-data
+    $ cd /var/www/yourapplication
+    $ python application.fcgi
+    Traceback (most recent call last):
+      File ""yourapplication.fcg"", line 4, in <module>
+    ImportError: No module named yourapplication
+
+In this case the error seems to be ""yourapplication"" not being on the python
+path.  Common problems are:
+
+-   relative paths being used.  Don't rely on the current working directory
+-   the code depending on environment variables that are not set by the
+    web server.
+-   different python interpreters being used.
+
+.. _lighttpd: http://www.lighttpd.net/
+.. _nginx: http://nginx.net/
+.. _flup: http://trac.saddi.com/flup
+
+
+mod_wsgi (Apache)
+-----------------
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+`````````````````````
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+```````````````````````
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+``````````````````
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 processes=1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+
+CGI
+---
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major browsers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+``````````````````````
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+````````````
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptName /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
","diff --git a/docs/deploying.rst b/docs/deploying.rst
new file mode 100644
index 00000000..345d7ee9
--- /dev/null
+++ b/docs/deploying.rst
@@ -0,0 +1,266 @@
+Deployment Options
+==================
+
+Depending on what you have available there are multiple ways to run Flask
+applications.  A very common method is to use the builtin server during
+development and maybe behind a proxy for simple applications, but there
+are more options available.
+
+If you have a different WSGI server look up the server documentation about
+how to use a WSGI app with it.  Just remember that your application object
+is the actual WSGI application.
+
+
+FastCGI
+-------
+
+A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
+is FastCGI.  To use your WSGI application with any of them you will need
+a FastCGI server first.
+
+The most popular one is `flup`_ which we will use for this guide.  Make
+sure to have it installed.
+
+Creating a `.fcgi` file
+```````````````````````
+
+First you need to create the FastCGI server file.  Let's call it
+`yourapplication.fcgi`::
+
+    #!/usr/bin/python
+    from flup.server.fcgi import WSGIServer
+    from yourapplication import app
+
+    WSGIServer(app).run()
+
+This is enough for Apache to work, however lighttpd and nginx need a
+socket to communicate with the FastCGI server.  For that to work you
+need to pass the path to the socket to the
+:class:`~flup.server.fcgi.WSGIServer`::
+
+    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
+
+The path has to be the exact same path you define in the server
+config.
+
+Save the `yourapplication.fcgi` file somewhere you will find it again.
+It makes sense to have that in `/var/www/yourapplication` or something
+similar.
+
+Make sure to set the executable bit on that file so that the servers
+can execute it::
+
+    # chmod +x /var/www/yourapplication/yourapplication.fcgi
+
+Configuring lighttpd
+````````````````````
+
+A basic FastCGI configuration for lighttpd looks like that::
+
+    fastcgi.server = (""/yourapplication"" =>
+        ""yourapplication"" => (
+            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
+            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
+            ""check-local"" => ""disable""
+        )
+    )
+
+This configuration binds the application to `/yourapplication`.  If you
+want the application to work in the URL root you have to work around a
+lighttpd bug with the `~werkzeug.contrib.fixers.LighttpdCGIRootFix` middleware.
+
+Make sure to apply it only if you are mounting the application the URL
+root.
+
+Configuring nginx
+`````````````````
+
+Installing FastCGI applications on nginx is a bit tricky because by default
+some FastCGI parameters are not properly forwarded.
+
+A basic FastCGI configuration for nginx looks like this::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        if ($uri ~ ^/yourapplication/(.*)?) {
+            set $path_url $1;
+        }
+        fastcgi_param PATH_INFO $path_url;
+        fastcgi_param SCRIPT_NAME /yourapplication;
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+This configuration binds the application to `/yourapplication`.  If you want
+to have it in the URL root it's a bit easier because you don't have to figure
+out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        fastcgi_param PATH_INFO $fastcgi_script_name;
+        fastcgi_param SCRIPT_NAME """";
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
+can either write an `init.d` script for that or execute it inside a screen
+session::
+
+    $ screen
+    $ /var/www/yourapplication/yourapplication.fcgi
+
+Debugging
+`````````
+
+FastCGI deployments tend to be hard to debug on most webservers.  Very often the
+only thing the server log tells you is something along the lines of ""premature
+end of headers"".  In order to debug the application the only thing that can
+really give you ideas why it breaks is switching to the correct user and
+executing the application by hand.
+
+This example assumes your application is called `application.fcgi` and that your
+webserver user is `www-data`::
+
+    $ su www-data
+    $ cd /var/www/yourapplication
+    $ python application.fcgi
+    Traceback (most recent call last):
+      File ""yourapplication.fcg"", line 4, in <module>
+    ImportError: No module named yourapplication
+
+In this case the error seems to be ""yourapplication"" not being on the python
+path.  Common problems are:
+
+-   relative paths being used.  Don't rely on the current working directory
+-   the code depending on environment variables that are not set by the
+    web server.
+-   different python interpreters being used.
+
+.. _lighttpd: http://www.lighttpd.net/
+.. _nginx: http://nginx.net/
+.. _flup: http://trac.saddi.com/flup
+
+
+mod_wsgi (Apache)
+-----------------
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+`````````````````````
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+```````````````````````
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+``````````````````
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 processes=1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+
+CGI
+---
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major browsers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+``````````````````````
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+````````````
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptName /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/flaskext.py,docs/flaskext.py,docs/flaskext.py,Heavily improved documentation,"diff --git a/docs/flaskext.py b/docs/flaskext.py
index 85331eff..33f47449 100644
--- a/docs/flaskext.py
+++ b/docs/flaskext.py
@@ -16,10 +16,7 @@ class FlaskyStyle(Style):
         Other:                     ""#000000"",                # class 'x'
 
         Comment:                   ""italic #8f5902"", # class: 'c'
-        Comment.Multiline:         ""italic #8f5902"", # class: 'cm'
-        Comment.Preproc:           ""italic #8f5902"", # class: 'cp'
-        Comment.Single:            ""italic #8f5902"", # class: 'c1'
-        Comment.Special:           ""italic #8f5902"", # class: 'cs'
+        Comment.Preproc:           ""noitalic"",       # class: 'cp'
 
         Keyword:                   ""bold #004461"",   # class: 'k'
         Keyword.Constant:          ""bold #004461"",   # class: 'kc'
@@ -43,7 +40,7 @@ class FlaskyStyle(Style):
         Name.Builtin.Pseudo:       ""#3465a4"",        # class: 'bp'
         Name.Class:                ""#000000"",        # class: 'nc' - to be revised
         Name.Constant:             ""#000000"",        # class: 'no' - to be revised
-        Name.Decorator:            ""#999"",           # class: 'nd' - to be revised
+        Name.Decorator:            ""#888"",           # class: 'nd' - to be revised
         Name.Entity:               ""#ce5c00"",        # class: 'ni'
         Name.Exception:            ""bold #cc0000"",   # class: 'ne'
         Name.Function:             ""#000000"",        # class: 'nf'
@@ -57,14 +54,7 @@ class FlaskyStyle(Style):
         Name.Variable.Global:      ""#000000"",        # class: 'vg' - to be revised
         Name.Variable.Instance:    ""#000000"",        # class: 'vi' - to be revised
 
-        # since the tango light blue does not show up well in text, we choose
-        # a pure blue instead.
-        Number:                    ""bold #0000cf"",   # class: 'm'
-        Number.Float:              ""bold #0000cf"",   # class: 'mf'
-        Number.Hex:                ""bold #0000cf"",   # class: 'mh'
-        Number.Integer:            ""bold #0000cf"",   # class: 'mi'
-        Number.Integer.Long:       ""bold #0000cf"",   # class: 'il'
-        Number.Oct:                ""bold #0000cf"",   # class: 'mo'
+        Number:                    ""#990000"",        # class: 'm'
 
         Literal:                   ""#000000"",        # class: 'l'
         Literal.Date:              ""#000000"",        # class: 'ld'
@@ -88,8 +78,8 @@ class FlaskyStyle(Style):
         Generic.Error:             ""#ef2929"",        # class: 'gr'
         Generic.Heading:           ""bold #000080"",   # class: 'gh'
         Generic.Inserted:          ""#00A000"",        # class: 'gi'
-        Generic.Output:            ""italic #000000"", # class: 'go'
-        Generic.Prompt:            ""#8f5902"",        # class: 'gp'
+        Generic.Output:            ""#888"",           # class: 'go'
+        Generic.Prompt:            ""#745334"",        # class: 'gp'
         Generic.Strong:            ""bold #000000"",   # class: 'gs'
         Generic.Subheading:        ""bold #800080"",   # class: 'gu'
         Generic.Traceback:         ""bold #a40000"",   # class: 'gt'
","diff --git a/docs/flaskext.py b/docs/flaskext.py
index 85331eff..33f47449 100644
--- a/docs/flaskext.py
+++ b/docs/flaskext.py
@@ -16,10 +16,7 @@ class FlaskyStyle(Style):
         Other:                     ""#000000"",                # class 'x'
 
         Comment:                   ""italic #8f5902"", # class: 'c'
-        Comment.Multiline:         ""italic #8f5902"", # class: 'cm'
-        Comment.Preproc:           ""italic #8f5902"", # class: 'cp'
-        Comment.Single:            ""italic #8f5902"", # class: 'c1'
-        Comment.Special:           ""italic #8f5902"", # class: 'cs'
+        Comment.Preproc:           ""noitalic"",       # class: 'cp'
 
         Keyword:                   ""bold #004461"",   # class: 'k'
         Keyword.Constant:          ""bold #004461"",   # class: 'kc'
@@ -43,7 +40,7 @@ class FlaskyStyle(Style):
         Name.Builtin.Pseudo:       ""#3465a4"",        # class: 'bp'
         Name.Class:                ""#000000"",        # class: 'nc' - to be revised
         Name.Constant:             ""#000000"",        # class: 'no' - to be revised
-        Name.Decorator:            ""#999"",           # class: 'nd' - to be revised
+        Name.Decorator:            ""#888"",           # class: 'nd' - to be revised
         Name.Entity:               ""#ce5c00"",        # class: 'ni'
         Name.Exception:            ""bold #cc0000"",   # class: 'ne'
         Name.Function:             ""#000000"",        # class: 'nf'
@@ -57,14 +54,7 @@ class FlaskyStyle(Style):
         Name.Variable.Global:      ""#000000"",        # class: 'vg' - to be revised
         Name.Variable.Instance:    ""#000000"",        # class: 'vi' - to be revised
 
-        # since the tango light blue does not show up well in text, we choose
-        # a pure blue instead.
-        Number:                    ""bold #0000cf"",   # class: 'm'
-        Number.Float:              ""bold #0000cf"",   # class: 'mf'
-        Number.Hex:                ""bold #0000cf"",   # class: 'mh'
-        Number.Integer:            ""bold #0000cf"",   # class: 'mi'
-        Number.Integer.Long:       ""bold #0000cf"",   # class: 'il'
-        Number.Oct:                ""bold #0000cf"",   # class: 'mo'
+        Number:                    ""#990000"",        # class: 'm'
 
         Literal:                   ""#000000"",        # class: 'l'
         Literal.Date:              ""#000000"",        # class: 'ld'
@@ -88,8 +78,8 @@ class FlaskyStyle(Style):
         Generic.Error:             ""#ef2929"",        # class: 'gr'
         Generic.Heading:           ""bold #000080"",   # class: 'gh'
         Generic.Inserted:          ""#00A000"",        # class: 'gi'
-        Generic.Output:            ""italic #000000"", # class: 'go'
-        Generic.Prompt:            ""#8f5902"",        # class: 'gp'
+        Generic.Output:            ""#888"",           # class: 'go'
+        Generic.Prompt:            ""#745334"",        # class: 'gp'
         Generic.Strong:            ""bold #000000"",   # class: 'gs'
         Generic.Subheading:        ""bold #800080"",   # class: 'gu'
         Generic.Traceback:         ""bold #a40000"",   # class: 'gt'
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Heavily improved documentation,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index 79243d3b..580cf37d 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -36,6 +36,15 @@ something the framework just cannot do for you without modification.
 If you are ever in that situation, check out the :ref:`becomingbig`
 chapter.
 
+A Framework and An Example
+--------------------------
+
+Flask is not only a microframework, it is also an example.  Based on
+Flask, there will be a series of blog posts that explain how to create a
+framework.  Flask itself is just one way to implement a framework on top
+of existing libraries.  Unlike many other microframeworks Flask does not
+try to implement anything on its own, it reuses existing code.
+
 Target Audience
 ---------------
 
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index 79243d3b..580cf37d 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -36,6 +36,15 @@ something the framework just cannot do for you without modification.
 If you are ever in that situation, check out the :ref:`becomingbig`
 chapter.
 
+A Framework and An Example
+--------------------------
+
+Flask is not only a microframework, it is also an example.  Based on
+Flask, there will be a series of blog posts that explain how to create a
+framework.  Flask itself is just one way to implement a framework on top
+of existing libraries.  Unlike many other microframeworks Flask does not
+try to implement anything on its own, it reuses existing code.
+
 Target Audience
 ---------------
 
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/index.rst,docs/index.rst,docs/index.rst,Heavily improved documentation,"diff --git a/docs/index.rst b/docs/index.rst
index 290656ea..81528203 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -20,4 +20,5 @@ you want to dive into all the internal parts of Flask, check out the
    quickstart
    patterns
    api
+   deploying
    becomingbig
","diff --git a/docs/index.rst b/docs/index.rst
index 290656ea..81528203 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -20,4 +20,5 @@ you want to dive into all the internal parts of Flask, check out the
    quickstart
    patterns
    api
+   deploying
    becomingbig
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/installation.rst,docs/installation.rst,docs/installation.rst,Heavily improved documentation,"diff --git a/docs/installation.rst b/docs/installation.rst
index b8375cd7..89e5a680 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -41,18 +41,19 @@ So let's see how that works!
 If you are on OS X or Linux chances are that one of the following two
 commands will for for you::
 
-    sudo easy_install virtualenv
+    $ sudo easy_install virtualenv
 
 or even better::
 
-    sudo pip install virtualenv
+    $ sudo pip install virtualenv
 
 Changes are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
-On windows, just installed virtualenv from the `Python Package Index
-<http://pypi.python.org/pypi/virtualenv>`_.
+If you are on Windows and missing the `easy_install` command you have to
+install it first.  Check the :ref:`windows-easy-install` section for more
+information about how to do that.
 
 So now that you have virtualenv running just fire up a shell and create
 your own environment.  I usually create a folder and a `env` folder
@@ -101,3 +102,37 @@ The Drop into Place Version
 Now I really don't recommend this way on using Flask, but you can do that
 of course as well.  Download the `dip` zipfile from the website and unzip
 it next to your application.
+
+.. _windows-easy-install:
+
+`easy_install` on Windows
+-------------------------
+
+On Windows installation of `easy_install` is a little bit tricker because
+on Windows slightly different rules apply, but it's not a biggy.  The
+easiest way to accomplish that is downloading the `ez_setup.py`_ file and
+running it.  (Double clicking should do the trick)
+
+Once you have done that it's important to add the `easy_install` command
+and other Python scripts to the path.  To do that you have to add the
+Python installation's Script folder to the `PATH` variable.
+
+To do that, click right on your ""Computer"" desktop icon and click
+""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
+settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
+on the ""Environment variables"" button and double click on the ""Path""
+variable in the ""System variables"" section.
+
+There append the path of your Python interpreter's Script folder to the
+end of the last (make sure you delimit it from existing values with a
+semicolon).  Assuming you are using Python 2.6 on the default path, add
+the following value::
+
+    ;C:\Python26\Scripts
+
+Then you are done.  To check if it worked, open the cmd and execute
+""easy_install"".  If you have UAC enabled it should prompt you for admin
+privileges.
+
+
+.. _ez_setup.py: http://peak.telecommunity.com/dist/ez_setup.py
","diff --git a/docs/installation.rst b/docs/installation.rst
index b8375cd7..89e5a680 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -41,18 +41,19 @@ So let's see how that works!
 If you are on OS X or Linux chances are that one of the following two
 commands will for for you::
 
-    sudo easy_install virtualenv
+    $ sudo easy_install virtualenv
 
 or even better::
 
-    sudo pip install virtualenv
+    $ sudo pip install virtualenv
 
 Changes are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
-On windows, just installed virtualenv from the `Python Package Index
-<http://pypi.python.org/pypi/virtualenv>`_.
+If you are on Windows and missing the `easy_install` command you have to
+install it first.  Check the :ref:`windows-easy-install` section for more
+information about how to do that.
 
 So now that you have virtualenv running just fire up a shell and create
 your own environment.  I usually create a folder and a `env` folder
@@ -101,3 +102,37 @@ The Drop into Place Version
 Now I really don't recommend this way on using Flask, but you can do that
 of course as well.  Download the `dip` zipfile from the website and unzip
 it next to your application.
+
+.. _windows-easy-install:
+
+`easy_install` on Windows
+-------------------------
+
+On Windows installation of `easy_install` is a little bit tricker because
+on Windows slightly different rules apply, but it's not a biggy.  The
+easiest way to accomplish that is downloading the `ez_setup.py`_ file and
+running it.  (Double clicking should do the trick)
+
+Once you have done that it's important to add the `easy_install` command
+and other Python scripts to the path.  To do that you have to add the
+Python installation's Script folder to the `PATH` variable.
+
+To do that, click right on your ""Computer"" desktop icon and click
+""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
+settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
+on the ""Environment variables"" button and double click on the ""Path""
+variable in the ""System variables"" section.
+
+There append the path of your Python interpreter's Script folder to the
+end of the last (make sure you delimit it from existing values with a
+semicolon).  Assuming you are using Python 2.6 on the default path, add
+the following value::
+
+    ;C:\Python26\Scripts
+
+Then you are done.  To check if it worked, open the cmd and execute
+""easy_install"".  If you have UAC enabled it should prompt you for admin
+privileges.
+
+
+.. _ez_setup.py: http://peak.telecommunity.com/dist/ez_setup.py
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Heavily improved documentation,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 45a3f0f6..429d7ab3 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -23,9 +23,14 @@ A minimal Flask application looks something like that::
     if __name__ == '__main__':
         app.run()
 
-If you now start that application with your Python interpreter and head
-over to `http://localhost:5000/ <http://localhost:5000/>`_, you should see
-your hello world application.
+Just save it as `hello.py` or something similar and run it with your
+Python interpreter::
+
+    $ python hello.py
+     * Running on http://localhost:5000/
+
+Head over to `http://localhost:5000/ <http://localhost:5000/>`_, you should
+see your hello world greeting.
 
 So what did that code do?
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 45a3f0f6..429d7ab3 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -23,9 +23,14 @@ A minimal Flask application looks something like that::
     if __name__ == '__main__':
         app.run()
 
-If you now start that application with your Python interpreter and head
-over to `http://localhost:5000/ <http://localhost:5000/>`_, you should see
-your hello world application.
+Just save it as `hello.py` or something similar and run it with your
+Python interpreter::
+
+    $ python hello.py
+     * Running on http://localhost:5000/
+
+Head over to `http://localhost:5000/ <http://localhost:5000/>`_, you should
+see your hello world greeting.
 
 So what did that code do?
 
"
4e1b3e1134eb478563bc434d794085d0a412cb84,05f36c7f7e2df36ee28f90d99632162579b1287c,flask.py,flask.py,flask.py,Heavily improved documentation,"diff --git a/flask.py b/flask.py
index 344cae3b..1ea239f8 100644
--- a/flask.py
+++ b/flask.py
@@ -79,6 +79,8 @@ def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
+
+    :param message: the message to be flashed.
     """"""
     session['_flashes'] = (session.get('_flashes', [])) + [message]
 
@@ -98,6 +100,10 @@ def get_flashed_messages():
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
+
+    :param template_name: the name of the template to be rendered
+    :param context: the variables that should be available in the
+                    context of the template.
     """"""
     current_app.update_template_context(context)
     return current_app.jinja_env.get_template(template_name).render(context)
@@ -106,6 +112,11 @@ def render_template(template_name, **context):
 def render_template_string(source, **context):
     """"""Renders a template from the given template source string
     with the given context.
+
+    :param template_name: the sourcecode of the template to be
+                          rendered
+    :param context: the variables that should be available in the
+                    context of the template.
     """"""
     current_app.update_template_context(context)
     return current_app.jinja_env.from_string(source).render(context)
@@ -222,6 +233,9 @@ class Flask(object):
     def update_template_context(self, context):
         """"""Update the template context with some commonly used variables.
         This injects request, session and g into the template context.
+
+        :param context: the context as a dictionary that is updated in place
+                        to add extra variables.
         """"""
         reqctx = _request_ctx_stack.top
         context['request'] = reqctx.request
@@ -232,6 +246,13 @@ class Flask(object):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
         for code changes and show a debugger in case an exception happened.
+
+        :param host: the hostname to listen on.  set this to ``'0.0.0.0'``
+                     to have the server available externally as well.
+        :param port: the port of the webserver
+        :param options: the options to be forwarded to the underlying
+                        Werkzeug server.  See :func:`werkzeug.run_simple`
+                        for more information.
         """"""
         from werkzeug import run_simple
         if 'debug' in options:
@@ -268,6 +289,9 @@ class Flask(object):
             with app.open_resource('schema.sql') as f:
                 contents = f.read()
                 do_something_with(contents)
+
+        :param resource: the name of the resource.  To access resources within
+                         subfolders use forward slashes as separator.
         """"""
         return pkg_resources.resource_stream(self.package_name, resource)
 
@@ -275,6 +299,8 @@ class Flask(object):
         """"""Creates or opens a new session.  Default implementation stores all
         session data in a signed cookie.  This requires that the
         :attr:`secret_key` is set.
+
+        :param request: an instance of :attr:`request_class`.
         """"""
         key = self.secret_key
         if key is not None:
@@ -284,6 +310,11 @@ class Flask(object):
     def save_session(self, session, response):
         """"""Saves the session if it needs updates.  For the default
         implementation, check :meth:`open_session`.
+
+        :param session: the session to be saved (a
+                        :class:`~werkzeug.contrib.securecookie.SecureCookie`
+                        object)
+        :param request: an instance of :attr:`response_class`
         """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
@@ -304,6 +335,13 @@ class Flask(object):
                 pass
             app.add_url_rule('index', '/')
             app.view_functions['index'] = index
+
+        :param rule: the URL rule as string
+        :param endpoint: the endpoint for the registered URL rule.  Flask
+                         itself assumes the name of the view function as
+                         endpoint
+        :param options: the options to be forwarded to the underlying
+                        :class:`~werkzeug.routing.Rule` object
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
@@ -363,6 +401,7 @@ class Flask(object):
         The :meth:`route` decorator accepts a couple of other arguments
         as well:
 
+        :param rule: the URL rule as string
         :param methods: a list of methods this rule should be limited
                         to (``GET``, ``POST`` etc.).  By default a rule
                         just listens for ``GET`` (and implicitly ``HEAD``).
@@ -370,6 +409,8 @@ class Flask(object):
                           subdomain matching is in use.
         :param strict_slashes: can be used to disable the strict slashes
                                setting for this rule.  See above.
+        :param options: other options to be forwarded to the underlying
+                        :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, **options)
@@ -392,6 +433,8 @@ class Flask(object):
             def page_not_found():
                 return 'This page does not exist', 404
             app.error_handlers[404] = page_not_found
+
+        :param code: the code as integer for the handler
         """"""
         def decorator(f):
             self.error_handlers[code] = f
@@ -440,6 +483,22 @@ class Flask(object):
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
         response object that is an instance of :attr:`response_class`.
+
+        The following types are allowd for `rv`:
+
+        ======================= ===========================================
+        :attr:`response_class`  the object is returned unchanged
+        :class:`str`            a response object is created with the
+                                string as body
+        :class:`unicode`        a response object is created with the
+                                string encoded to utf-8 as body
+        :class:`tuple`          the response object is created with the
+                                contents of the tuple as arguments
+        a WSGI function         the function is called as WSGI application
+                                and buffered as response object
+        ======================= ===========================================
+
+        :param rv: the return value from the view function
         """"""
         if isinstance(rv, self.response_class):
             return rv
@@ -464,6 +523,10 @@ class Flask(object):
     def process_response(self, response):
         """"""Can be overridden in order to modify the response object
         before it's sent to the WSGI server.
+
+        :param response: a :attr:`response_class` object.
+        :return: a new response object or the same, has to be an
+                 instance of :attr:`response_class`.
         """"""
         session = _request_ctx_stack.top.session
         if session is not None:
@@ -477,6 +540,11 @@ class Flask(object):
         `__call__` so that middlewares can be applied:
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
+
+        :param environ: a WSGI environment
+        :param start_response: a callable accepting a status code,
+                               a list of headers and an optional
+                               exception context to start the response
         """"""
         with self.request_context(environ):
             rv = self.preprocess_request()
@@ -497,6 +565,8 @@ class Flask(object):
 
             with app.request_context(environ):
                 do_something_with(request)
+
+        :params environ: a WSGI environment
         """"""
         _request_ctx_stack.push(_RequestContext(self, environ))
         try:
@@ -506,7 +576,8 @@ class Flask(object):
 
     def test_request_context(self, *args, **kwargs):
         """"""Creates a WSGI environment from the given values (see
-        :func:`werkzeug.create_environ` for more information).
+        :func:`werkzeug.create_environ` for more information, this
+        function accepts the same arguments).
         """"""
         return self.request_context(create_environ(*args, **kwargs))
 
","diff --git a/flask.py b/flask.py
index 344cae3b..1ea239f8 100644
--- a/flask.py
+++ b/flask.py
@@ -79,6 +79,8 @@ def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
+
+    :param message: the message to be flashed.
     """"""
     session['_flashes'] = (session.get('_flashes', [])) + [message]
 
@@ -98,6 +100,10 @@ def get_flashed_messages():
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
+
+    :param template_name: the name of the template to be rendered
+    :param context: the variables that should be available in the
+                    context of the template.
     """"""
     current_app.update_template_context(context)
     return current_app.jinja_env.get_template(template_name).render(context)
@@ -106,6 +112,11 @@ def render_template(template_name, **context):
 def render_template_string(source, **context):
     """"""Renders a template from the given template source string
     with the given context.
+
+    :param template_name: the sourcecode of the template to be
+                          rendered
+    :param context: the variables that should be available in the
+                    context of the template.
     """"""
     current_app.update_template_context(context)
     return current_app.jinja_env.from_string(source).render(context)
@@ -222,6 +233,9 @@ class Flask(object):
     def update_template_context(self, context):
         """"""Update the template context with some commonly used variables.
         This injects request, session and g into the template context.
+
+        :param context: the context as a dictionary that is updated in place
+                        to add extra variables.
         """"""
         reqctx = _request_ctx_stack.top
         context['request'] = reqctx.request
@@ -232,6 +246,13 @@ class Flask(object):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
         for code changes and show a debugger in case an exception happened.
+
+        :param host: the hostname to listen on.  set this to ``'0.0.0.0'``
+                     to have the server available externally as well.
+        :param port: the port of the webserver
+        :param options: the options to be forwarded to the underlying
+                        Werkzeug server.  See :func:`werkzeug.run_simple`
+                        for more information.
         """"""
         from werkzeug import run_simple
         if 'debug' in options:
@@ -268,6 +289,9 @@ class Flask(object):
             with app.open_resource('schema.sql') as f:
                 contents = f.read()
                 do_something_with(contents)
+
+        :param resource: the name of the resource.  To access resources within
+                         subfolders use forward slashes as separator.
         """"""
         return pkg_resources.resource_stream(self.package_name, resource)
 
@@ -275,6 +299,8 @@ class Flask(object):
         """"""Creates or opens a new session.  Default implementation stores all
         session data in a signed cookie.  This requires that the
         :attr:`secret_key` is set.
+
+        :param request: an instance of :attr:`request_class`.
         """"""
         key = self.secret_key
         if key is not None:
@@ -284,6 +310,11 @@ class Flask(object):
     def save_session(self, session, response):
         """"""Saves the session if it needs updates.  For the default
         implementation, check :meth:`open_session`.
+
+        :param session: the session to be saved (a
+                        :class:`~werkzeug.contrib.securecookie.SecureCookie`
+                        object)
+        :param request: an instance of :attr:`response_class`
         """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
@@ -304,6 +335,13 @@ class Flask(object):
                 pass
             app.add_url_rule('index', '/')
             app.view_functions['index'] = index
+
+        :param rule: the URL rule as string
+        :param endpoint: the endpoint for the registered URL rule.  Flask
+                         itself assumes the name of the view function as
+                         endpoint
+        :param options: the options to be forwarded to the underlying
+                        :class:`~werkzeug.routing.Rule` object
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
@@ -363,6 +401,7 @@ class Flask(object):
         The :meth:`route` decorator accepts a couple of other arguments
         as well:
 
+        :param rule: the URL rule as string
         :param methods: a list of methods this rule should be limited
                         to (``GET``, ``POST`` etc.).  By default a rule
                         just listens for ``GET`` (and implicitly ``HEAD``).
@@ -370,6 +409,8 @@ class Flask(object):
                           subdomain matching is in use.
         :param strict_slashes: can be used to disable the strict slashes
                                setting for this rule.  See above.
+        :param options: other options to be forwarded to the underlying
+                        :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, **options)
@@ -392,6 +433,8 @@ class Flask(object):
             def page_not_found():
                 return 'This page does not exist', 404
             app.error_handlers[404] = page_not_found
+
+        :param code: the code as integer for the handler
         """"""
         def decorator(f):
             self.error_handlers[code] = f
@@ -440,6 +483,22 @@ class Flask(object):
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
         response object that is an instance of :attr:`response_class`.
+
+        The following types are allowd for `rv`:
+
+        ======================= ===========================================
+        :attr:`response_class`  the object is returned unchanged
+        :class:`str`            a response object is created with the
+                                string as body
+        :class:`unicode`        a response object is created with the
+                                string encoded to utf-8 as body
+        :class:`tuple`          the response object is created with the
+                                contents of the tuple as arguments
+        a WSGI function         the function is called as WSGI application
+                                and buffered as response object
+        ======================= ===========================================
+
+        :param rv: the return value from the view function
         """"""
         if isinstance(rv, self.response_class):
             return rv
@@ -464,6 +523,10 @@ class Flask(object):
     def process_response(self, response):
         """"""Can be overridden in order to modify the response object
         before it's sent to the WSGI server.
+
+        :param response: a :attr:`response_class` object.
+        :return: a new response object or the same, has to be an
+                 instance of :attr:`response_class`.
         """"""
         session = _request_ctx_stack.top.session
         if session is not None:
@@ -477,6 +540,11 @@ class Flask(object):
         `__call__` so that middlewares can be applied:
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
+
+        :param environ: a WSGI environment
+        :param start_response: a callable accepting a status code,
+                               a list of headers and an optional
+                               exception context to start the response
         """"""
         with self.request_context(environ):
             rv = self.preprocess_request()
@@ -497,6 +565,8 @@ class Flask(object):
 
             with app.request_context(environ):
                 do_something_with(request)
+
+        :params environ: a WSGI environment
         """"""
         _request_ctx_stack.push(_RequestContext(self, environ))
         try:
@@ -506,7 +576,8 @@ class Flask(object):
 
     def test_request_context(self, *args, **kwargs):
         """"""Creates a WSGI environment from the given values (see
-        :func:`werkzeug.create_environ` for more information).
+        :func:`werkzeug.create_environ` for more information, this
+        function accepts the same arguments).
         """"""
         return self.request_context(create_environ(*args, **kwargs))
 
"
05f36c7f7e2df36ee28f90d99632162579b1287c,1fff3e598126a084348ec2c112fdd3bc6b9a1ee0,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Fixed a doc display bug and setup.py workaround for dev version.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index bd829c0c..b77f3c30 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -86,7 +86,7 @@ div.sphinxsidebarwrapper p.logo {
  
 div.sphinxsidebar h3,
 div.sphinxsidebar h4 {
-    font-family: 'Georgia', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     color: #222;
     font-size: 1.2em;
     font-weight: normal;
@@ -151,12 +151,12 @@ div.body h3,
 div.body h4,
 div.body h5,
 div.body h6 {
-    font-family: 'Georiga', serif;
+    font-family: 'Garamond', 'Georiga', serif;
     background-color: #bbb;
     font-weight: normal;
     color: #212224;
     margin: 30px 0px 10px 0px;
-    padding: 8px 0 5px 10px;
+    padding: 5px 0 5px 10px;
     text-shadow: 0px 1px 0 white;
 }
  
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index bd829c0c..b77f3c30 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -86,7 +86,7 @@ div.sphinxsidebarwrapper p.logo {
  
 div.sphinxsidebar h3,
 div.sphinxsidebar h4 {
-    font-family: 'Georgia', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     color: #222;
     font-size: 1.2em;
     font-weight: normal;
@@ -151,12 +151,12 @@ div.body h3,
 div.body h4,
 div.body h5,
 div.body h6 {
-    font-family: 'Georiga', serif;
+    font-family: 'Garamond', 'Georiga', serif;
     background-color: #bbb;
     font-weight: normal;
     color: #212224;
     margin: 30px 0px 10px 0px;
-    padding: 8px 0 5px 10px;
+    padding: 5px 0 5px 10px;
     text-shadow: 0px 1px 0 white;
 }
  
"
05f36c7f7e2df36ee28f90d99632162579b1287c,1fff3e598126a084348ec2c112fdd3bc6b9a1ee0,docs/deploying.rst,docs/deploying.rst,docs/deploying.rst,Fixed a doc display bug and setup.py workaround for dev version.,"diff --git a/docs/deploying.rst b/docs/deploying.rst
index 345d7ee9..ea812c17 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -67,7 +67,8 @@ A basic FastCGI configuration for lighttpd looks like that::
 
 This configuration binds the application to `/yourapplication`.  If you
 want the application to work in the URL root you have to work around a
-lighttpd bug with the `~werkzeug.contrib.fixers.LighttpdCGIRootFix` middleware.
+lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
+middleware.
 
 Make sure to apply it only if you are mounting the application the URL
 root.
","diff --git a/docs/deploying.rst b/docs/deploying.rst
index 345d7ee9..ea812c17 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -67,7 +67,8 @@ A basic FastCGI configuration for lighttpd looks like that::
 
 This configuration binds the application to `/yourapplication`.  If you
 want the application to work in the URL root you have to work around a
-lighttpd bug with the `~werkzeug.contrib.fixers.LighttpdCGIRootFix` middleware.
+lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
+middleware.
 
 Make sure to apply it only if you are mounting the application the URL
 root.
"
05f36c7f7e2df36ee28f90d99632162579b1287c,1fff3e598126a084348ec2c112fdd3bc6b9a1ee0,setup.py,setup.py,setup.py,Fixed a doc display bug and setup.py workaround for dev version.,"diff --git a/setup.py b/setup.py
index 72ef584e..c4aee59d 100644
--- a/setup.py
+++ b/setup.py
@@ -12,8 +12,9 @@ setup(
     modules=['flask'],
     zip_safe=False,
     platforms='any',
-    install_requires=[ # yes, as of now we need the development versions
-        'Werkzeug==dev',
-        'Jinja2==dev',
+    install_requires=[
+        ## disabled until release, install yourself
+        # 'Werkzeug',
+        # 'Jinja2'
     ]
 )
","diff --git a/setup.py b/setup.py
index 72ef584e..c4aee59d 100644
--- a/setup.py
+++ b/setup.py
@@ -12,8 +12,9 @@ setup(
     modules=['flask'],
     zip_safe=False,
     platforms='any',
-    install_requires=[ # yes, as of now we need the development versions
-        'Werkzeug==dev',
-        'Jinja2==dev',
+    install_requires=[
+        ## disabled until release, install yourself
+        # 'Werkzeug',
+        # 'Jinja2'
     ]
 )
"
1fff3e598126a084348ec2c112fdd3bc6b9a1ee0,574e81f9c8bbdc41958e1e7a7613633b091101f8,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Fixed a bug in setup.py,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 429d7ab3..c5bb19d3 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -24,7 +24,10 @@ A minimal Flask application looks something like that::
         app.run()
 
 Just save it as `hello.py` or something similar and run it with your
-Python interpreter::
+Python interpreter.  Make sure to not call your application `flask.py`
+because this would conflict with Flask itself.
+
+::
 
     $ python hello.py
      * Running on http://localhost:5000/
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 429d7ab3..c5bb19d3 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -24,7 +24,10 @@ A minimal Flask application looks something like that::
         app.run()
 
 Just save it as `hello.py` or something similar and run it with your
-Python interpreter::
+Python interpreter.  Make sure to not call your application `flask.py`
+because this would conflict with Flask itself.
+
+::
 
     $ python hello.py
      * Running on http://localhost:5000/
"
1fff3e598126a084348ec2c112fdd3bc6b9a1ee0,574e81f9c8bbdc41958e1e7a7613633b091101f8,setup.py,setup.py,setup.py,Fixed a bug in setup.py,"diff --git a/setup.py b/setup.py
index c4aee59d..a0bddf4e 100644
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ setup(
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
     description='A microframework based on Werkzeug, Jinja2 and good intentions',
-    modules=['flask'],
+    py_modules=['flask'],
     zip_safe=False,
     platforms='any',
     install_requires=[
","diff --git a/setup.py b/setup.py
index c4aee59d..a0bddf4e 100644
--- a/setup.py
+++ b/setup.py
@@ -9,7 +9,7 @@ setup(
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
     description='A microframework based on Werkzeug, Jinja2 and good intentions',
-    modules=['flask'],
+    py_modules=['flask'],
     zip_safe=False,
     platforms='any',
     install_requires=[
"
574e81f9c8bbdc41958e1e7a7613633b091101f8,df929c6c77ea5490a969275e45075c29711a498c,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,further improved documentation,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index c5bb19d3..f271d9a1 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -52,6 +52,30 @@ So what did that code do?
    makes sure the server only runs if the script is executed directly from
    the Python interpreter and not used as imported module.
 
+To stop the server, hit control-C.
+
+
+Debug Mode
+----------
+
+Now that :meth:`~flask.Flask.run` method is nice to start a local
+development server, but you would have to restart it manually after each
+change you do to code.  That is not very nice and Flask can do better.  If
+you enable the debug support the server will reload itself on code changes
+and also provide you with a helpful debugger if things go wrong.
+
+There are two ways to enable debugging.  Either set that flag on the
+applciation object::
+
+    app.debug = True
+    app.run()
+
+Or pass it to run::
+
+    app.run(debug=True)
+
+Both will have exactly the same effect.
+
 
 Routing
 -------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index c5bb19d3..f271d9a1 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -52,6 +52,30 @@ So what did that code do?
    makes sure the server only runs if the script is executed directly from
    the Python interpreter and not used as imported module.
 
+To stop the server, hit control-C.
+
+
+Debug Mode
+----------
+
+Now that :meth:`~flask.Flask.run` method is nice to start a local
+development server, but you would have to restart it manually after each
+change you do to code.  That is not very nice and Flask can do better.  If
+you enable the debug support the server will reload itself on code changes
+and also provide you with a helpful debugger if things go wrong.
+
+There are two ways to enable debugging.  Either set that flag on the
+applciation object::
+
+    app.debug = True
+    app.run()
+
+Or pass it to run::
+
+    app.run(debug=True)
+
+Both will have exactly the same effect.
+
 
 Routing
 -------
"
df929c6c77ea5490a969275e45075c29711a498c,8171da88a49eba769d313a51591ee8575be59762,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Described HTTP methods,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f271d9a1..f1715498 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -161,6 +161,18 @@ explained below.  It basically tells flask to think we are handling a
 request even though we are not, we are in an interactive Python shell.
 Have a look at the explanation below. :ref:`context-locals`).
 
+Why would you want to build URLs instead of hardcoding them in your
+templates?  There are three good reasons for this:
+
+1. reversing is often more descriptive than hardcoding the URLs.  Also and
+   more importantly you can change URLs in one go without having to change
+   the URLs all over the place.
+2. URL building will handle escaping of special characters and unicode
+   data transparently for you, you don't have to deal with that.
+3. If your application is placed outside the URL root (so say in
+   ``/myapplication`` instead of ``/``), :func:`~flask.url_for` will
+   handle that properly for you.
+
 
 HTTP Methods
 ````````````
@@ -182,6 +194,51 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+You have no idea what an HTTP method is?  Worry not, here quick
+introduction in HTTP methods and why they matter:
+
+The HTTP method (also often called ""the verb"") tells the server what the
+clients wants to *do* with the requested page.  The following methods are
+very common:
+
+`GET`
+    The Browser tells the server: just *get* me the information stored on
+    that page and send them to me.  This is probably the most common
+    method.
+
+`HEAD`
+    The Browser tells the server: get me the information, but I am only
+    interested in the *headers*, not the content of the page.  An
+    application is supposed to handle that as if a `GET` request was
+    received but not deliver the actual contents.  In Flask you don't have
+    to deal with that at all, the underlying Werkzeug library handles that
+    for you.
+
+`POST`
+    The browser tells the server that it wants to *post* some new
+    information to that URL and that the server must ensure the data is
+    stored and only stored once.
+
+`PUT`
+    Similar to `POST` but the server might trigger the store procedure
+    multiple times by overwriting the old values more than once.  Now you
+    might be asking why this is any useful, but there are some good
+    reasons to do that.  Consider the connection is lost during
+    transmission, in that situation a system between the browser and the
+    server might sent the request safely a second time without breaking
+    things.  With `POST` that would not be possible because it might only
+    be triggered once.
+
+`DELETE`
+    Remove the information that the given location.
+
+Now the interesting part is that in HTML4 and XHTML1, the only methods a
+form might submit to the server are `GET` and `POST`.  But with JavaScript
+and future HTML standards you can use other methods as well.  Furthermore
+HTTP became quite popular lately and there are more things than browsers
+that are speaking HTTP.  (Your revision control system for instance might
+speak HTTP)
+
 Static Files
 ------------
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f271d9a1..f1715498 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -161,6 +161,18 @@ explained below.  It basically tells flask to think we are handling a
 request even though we are not, we are in an interactive Python shell.
 Have a look at the explanation below. :ref:`context-locals`).
 
+Why would you want to build URLs instead of hardcoding them in your
+templates?  There are three good reasons for this:
+
+1. reversing is often more descriptive than hardcoding the URLs.  Also and
+   more importantly you can change URLs in one go without having to change
+   the URLs all over the place.
+2. URL building will handle escaping of special characters and unicode
+   data transparently for you, you don't have to deal with that.
+3. If your application is placed outside the URL root (so say in
+   ``/myapplication`` instead of ``/``), :func:`~flask.url_for` will
+   handle that properly for you.
+
 
 HTTP Methods
 ````````````
@@ -182,6 +194,51 @@ don't have to deal with that.  It will also make sure that ``HEAD``
 requests are handled like the RFC demands, so you can completely ignore
 that part of the HTTP specification.
 
+You have no idea what an HTTP method is?  Worry not, here quick
+introduction in HTTP methods and why they matter:
+
+The HTTP method (also often called ""the verb"") tells the server what the
+clients wants to *do* with the requested page.  The following methods are
+very common:
+
+`GET`
+    The Browser tells the server: just *get* me the information stored on
+    that page and send them to me.  This is probably the most common
+    method.
+
+`HEAD`
+    The Browser tells the server: get me the information, but I am only
+    interested in the *headers*, not the content of the page.  An
+    application is supposed to handle that as if a `GET` request was
+    received but not deliver the actual contents.  In Flask you don't have
+    to deal with that at all, the underlying Werkzeug library handles that
+    for you.
+
+`POST`
+    The browser tells the server that it wants to *post* some new
+    information to that URL and that the server must ensure the data is
+    stored and only stored once.
+
+`PUT`
+    Similar to `POST` but the server might trigger the store procedure
+    multiple times by overwriting the old values more than once.  Now you
+    might be asking why this is any useful, but there are some good
+    reasons to do that.  Consider the connection is lost during
+    transmission, in that situation a system between the browser and the
+    server might sent the request safely a second time without breaking
+    things.  With `POST` that would not be possible because it might only
+    be triggered once.
+
+`DELETE`
+    Remove the information that the given location.
+
+Now the interesting part is that in HTML4 and XHTML1, the only methods a
+form might submit to the server are `GET` and `POST`.  But with JavaScript
+and future HTML standards you can use other methods as well.  Furthermore
+HTTP became quite popular lately and there are more things than browsers
+that are speaking HTTP.  (Your revision control system for instance might
+speak HTTP)
+
 Static Files
 ------------
 
"
8171da88a49eba769d313a51591ee8575be59762,85ca089dde8814c4a42ad4574cddce25d60e5e25,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,might -> must,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f1715498..49700fa7 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -217,7 +217,8 @@ very common:
 `POST`
     The browser tells the server that it wants to *post* some new
     information to that URL and that the server must ensure the data is
-    stored and only stored once.
+    stored and only stored once.  This is how HTML forms are usually
+    transmitting data to the server.
 
 `PUT`
     Similar to `POST` but the server might trigger the store procedure
@@ -226,7 +227,7 @@ very common:
     reasons to do that.  Consider the connection is lost during
     transmission, in that situation a system between the browser and the
     server might sent the request safely a second time without breaking
-    things.  With `POST` that would not be possible because it might only
+    things.  With `POST` that would not be possible because it must only
     be triggered once.
 
 `DELETE`
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f1715498..49700fa7 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -217,7 +217,8 @@ very common:
 `POST`
     The browser tells the server that it wants to *post* some new
     information to that URL and that the server must ensure the data is
-    stored and only stored once.
+    stored and only stored once.  This is how HTML forms are usually
+    transmitting data to the server.
 
 `PUT`
     Similar to `POST` but the server might trigger the store procedure
@@ -226,7 +227,7 @@ very common:
     reasons to do that.  Consider the connection is lost during
     transmission, in that situation a system between the browser and the
     server might sent the request safely a second time without breaking
-    things.  With `POST` that would not be possible because it might only
+    things.  With `POST` that would not be possible because it must only
     be triggered once.
 
 `DELETE`
"
85ca089dde8814c4a42ad4574cddce25d60e5e25,4e7aa9e7f7a86ee0ea4b6801694c13151518cb52,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Linked HTTP,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 49700fa7..e6f2e153 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -177,10 +177,10 @@ templates?  There are three good reasons for this:
 HTTP Methods
 ````````````
 
-HTTP knows different methods to access URLs.  By default a route only
-answers to ``GET`` requests, but that can be changed by providing the
-`methods` argument to the :meth:`~flask.Flask.route` decorator.  Here some
-examples::
+HTTP (the protocol web applications are speaking) knows different methods
+to access URLs.  By default a route only answers to `GET` requests, but
+that can be changed by providing the `methods` argument to the
+:meth:`~flask.Flask.route` decorator.  Here some examples::
 
     @app.route('/login', methods=['GET', 'POST'])
     def login():
@@ -189,10 +189,11 @@ examples::
         else:
             show_the_login_form()
 
-If ``GET`` is present, ``HEAD`` will be added automatically for you.  You
-don't have to deal with that.  It will also make sure that ``HEAD``
-requests are handled like the RFC demands, so you can completely ignore
-that part of the HTTP specification.
+If `GET` is present, `HEAD` will be added automatically for you.  You
+don't have to deal with that.  It will also make sure that `HEAD` requests
+are handled like the `HTTP RFC`_ (the document describing the HTTP
+protocol) demands, so you can completely ignore that part of the HTTP
+specification.
 
 You have no idea what an HTTP method is?  Worry not, here quick
 introduction in HTTP methods and why they matter:
@@ -240,6 +241,8 @@ HTTP became quite popular lately and there are more things than browsers
 that are speaking HTTP.  (Your revision control system for instance might
 speak HTTP)
 
+.. _HTTP RFC: http://www.ietf.org/rfc/rfc2068.txt
+
 Static Files
 ------------
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 49700fa7..e6f2e153 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -177,10 +177,10 @@ templates?  There are three good reasons for this:
 HTTP Methods
 ````````````
 
-HTTP knows different methods to access URLs.  By default a route only
-answers to ``GET`` requests, but that can be changed by providing the
-`methods` argument to the :meth:`~flask.Flask.route` decorator.  Here some
-examples::
+HTTP (the protocol web applications are speaking) knows different methods
+to access URLs.  By default a route only answers to `GET` requests, but
+that can be changed by providing the `methods` argument to the
+:meth:`~flask.Flask.route` decorator.  Here some examples::
 
     @app.route('/login', methods=['GET', 'POST'])
     def login():
@@ -189,10 +189,11 @@ examples::
         else:
             show_the_login_form()
 
-If ``GET`` is present, ``HEAD`` will be added automatically for you.  You
-don't have to deal with that.  It will also make sure that ``HEAD``
-requests are handled like the RFC demands, so you can completely ignore
-that part of the HTTP specification.
+If `GET` is present, `HEAD` will be added automatically for you.  You
+don't have to deal with that.  It will also make sure that `HEAD` requests
+are handled like the `HTTP RFC`_ (the document describing the HTTP
+protocol) demands, so you can completely ignore that part of the HTTP
+specification.
 
 You have no idea what an HTTP method is?  Worry not, here quick
 introduction in HTTP methods and why they matter:
@@ -240,6 +241,8 @@ HTTP became quite popular lately and there are more things than browsers
 that are speaking HTTP.  (Your revision control system for instance might
 speak HTTP)
 
+.. _HTTP RFC: http://www.ietf.org/rfc/rfc2068.txt
+
 Static Files
 ------------
 
"
4e7aa9e7f7a86ee0ea4b6801694c13151518cb52,4671429a509094f36e2294055340197091d39979,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Added a security section to the foreword and a footnote to the g variable,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index b77f3c30..15495a06 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -243,12 +243,18 @@ table.docutils td, table.docutils th {
     padding: 0.25em 0.7em;
 }
 
-table.field-list {
+table.field-list, table.footnote {
     border: none;
     -webkit-box-shadow: none;
     -moz-box-shadow: none;
 }
 
+table.footnote {
+    border: 1px solid #eee;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+
 table.field-list th {
     padding: 0 0.8em 0 0;
 }
@@ -257,6 +263,10 @@ table.field-list td {
     padding: 0;
 }
 
+table.footnote td {
+    padding: 0.5em;
+}
+ 
 pre {
     background: #FDFDFD;
     padding: 10px;
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index b77f3c30..15495a06 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -243,12 +243,18 @@ table.docutils td, table.docutils th {
     padding: 0.25em 0.7em;
 }
 
-table.field-list {
+table.field-list, table.footnote {
     border: none;
     -webkit-box-shadow: none;
     -moz-box-shadow: none;
 }
 
+table.footnote {
+    border: 1px solid #eee;
+    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
+    -moz-box-shadow: 1px 1px 1px #d8d8d8;
+}
+
 table.field-list th {
     padding: 0 0.8em 0 0;
 }
@@ -257,6 +263,10 @@ table.field-list td {
     padding: 0;
 }
 
+table.footnote td {
+    padding: 0.5em;
+}
+ 
 pre {
     background: #FDFDFD;
     padding: 10px;
"
4e7aa9e7f7a86ee0ea4b6801694c13151518cb52,4671429a509094f36e2294055340197091d39979,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Added a security section to the foreword and a footnote to the g variable,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index 580cf37d..6b40921f 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -45,6 +45,34 @@ framework.  Flask itself is just one way to implement a framework on top
 of existing libraries.  Unlike many other microframeworks Flask does not
 try to implement anything on its own, it reuses existing code.
 
+Web Development is Dangerous
+----------------------------
+
+I'm not even joking.  Well, maybe a little.  If you write a web
+application you are probably allowing users to register and leave their
+data on your server.  The users are entrusting you with data.  And even if
+you are the only user that might leave data in your application, you still
+want that data to be stored in a secure manner.
+
+Unfortunately there are many ways security of a web application can be
+compromised.  Flask protects you against one of the most common security
+problems of modern web applications: cross site scripting (XSS).  Unless
+you deliberately mark insecure HTML as secure Flask (and the underlying
+Jinja2 template engine) have you covered.  But there are many more ways to
+cause security problems.
+
+Whenever something is dangerous where you have to watch out, the
+documentation will tell you so.  Some of the security concerns of web
+development are far more complex than one might think and often we all end
+up in situations where we think ""well, this is just far fetched, how could
+that possibly be exploited"" and then an intelligent guy comes along and
+figures a way out to exploit that application.  And don't think, your
+application is not important enough for hackers to take notice.  Depending
+ont he kind of attack, chances are there are automated botnets out there
+trying to figure out how to fill your database with viagra adverisments.
+
+So always keep that in mind when doing web development.
+
 Target Audience
 ---------------
 
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index 580cf37d..6b40921f 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -45,6 +45,34 @@ framework.  Flask itself is just one way to implement a framework on top
 of existing libraries.  Unlike many other microframeworks Flask does not
 try to implement anything on its own, it reuses existing code.
 
+Web Development is Dangerous
+----------------------------
+
+I'm not even joking.  Well, maybe a little.  If you write a web
+application you are probably allowing users to register and leave their
+data on your server.  The users are entrusting you with data.  And even if
+you are the only user that might leave data in your application, you still
+want that data to be stored in a secure manner.
+
+Unfortunately there are many ways security of a web application can be
+compromised.  Flask protects you against one of the most common security
+problems of modern web applications: cross site scripting (XSS).  Unless
+you deliberately mark insecure HTML as secure Flask (and the underlying
+Jinja2 template engine) have you covered.  But there are many more ways to
+cause security problems.
+
+Whenever something is dangerous where you have to watch out, the
+documentation will tell you so.  Some of the security concerns of web
+development are far more complex than one might think and often we all end
+up in situations where we think ""well, this is just far fetched, how could
+that possibly be exploited"" and then an intelligent guy comes along and
+figures a way out to exploit that application.  And don't think, your
+application is not important enough for hackers to take notice.  Depending
+ont he kind of attack, chances are there are automated botnets out there
+trying to figure out how to fill your database with viagra adverisments.
+
+So always keep that in mind when doing web development.
+
 Target Audience
 ---------------
 
"
4e7aa9e7f7a86ee0ea4b6801694c13151518cb52,4671429a509094f36e2294055340197091d39979,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,Added a security section to the foreword and a footnote to the g variable,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index 3809f754..c7b4769a 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -16,6 +16,8 @@ In Flask you can implement such things with the
 special :class:`~flask.g` object.
 
 
+.. _database-pattern:
+
 Using SQLite 3 with Flask
 -------------------------
 
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 3809f754..c7b4769a 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -16,6 +16,8 @@ In Flask you can implement such things with the
 special :class:`~flask.g` object.
 
 
+.. _database-pattern:
+
 Using SQLite 3 with Flask
 -------------------------
 
"
4e7aa9e7f7a86ee0ea4b6801694c13151518cb52,4671429a509094f36e2294055340197091d39979,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Added a security section to the foreword and a footnote to the g variable,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e6f2e153..de8ce039 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -313,8 +313,8 @@ Here an example template:
     {% endif %}
 
 Inside templates you also have access to the :class:`~flask.request`,
-:class:`~flask.session` and :class:`~flask.g` objects as well as the
-:func:`~flask.get_flashed_messages` function.
+:class:`~flask.session` and :class:`~flask.g` [#]_ objects
+as well as the :func:`~flask.get_flashed_messages` function.
 
 Templates are especially useful if inheritance is used.  If you want to
 know how that works, head over to the :ref:`template-inheritance` pattern
@@ -338,6 +338,11 @@ Markup(u'&lt;blink&gt;hacker&lt;/blink&gt;')
 >>> Markup('<em>Marked up</em> &raquo; HTML').striptags()
 u'Marked up \xbb HTML'
 
+.. [#] Unsure what that :class:`~flask.g` object is? It's something you
+   can store information on yourself, check the documentation of that
+   object (:class:`~flask.g`) and the :ref:`database-pattern` for more
+   information.
+
 
 Accessing Request Data
 ----------------------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e6f2e153..de8ce039 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -313,8 +313,8 @@ Here an example template:
     {% endif %}
 
 Inside templates you also have access to the :class:`~flask.request`,
-:class:`~flask.session` and :class:`~flask.g` objects as well as the
-:func:`~flask.get_flashed_messages` function.
+:class:`~flask.session` and :class:`~flask.g` [#]_ objects
+as well as the :func:`~flask.get_flashed_messages` function.
 
 Templates are especially useful if inheritance is used.  If you want to
 know how that works, head over to the :ref:`template-inheritance` pattern
@@ -338,6 +338,11 @@ Markup(u'&lt;blink&gt;hacker&lt;/blink&gt;')
 >>> Markup('<em>Marked up</em> &raquo; HTML').striptags()
 u'Marked up \xbb HTML'
 
+.. [#] Unsure what that :class:`~flask.g` object is? It's something you
+   can store information on yourself, check the documentation of that
+   object (:class:`~flask.g`) and the :ref:`database-pattern` for more
+   information.
+
 
 Accessing Request Data
 ----------------------
"
4671429a509094f36e2294055340197091d39979,d78b04a3fca8d8887382606897d4a97e55062fda,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Footnotes are 100% in width,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 15495a06..7046e24f 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -250,6 +250,7 @@ table.field-list, table.footnote {
 }
 
 table.footnote {
+    width: 100%;
     border: 1px solid #eee;
     -webkit-box-shadow: 1px 1px 1px #d8d8d8;
     -moz-box-shadow: 1px 1px 1px #d8d8d8;
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 15495a06..7046e24f 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -250,6 +250,7 @@ table.field-list, table.footnote {
 }
 
 table.footnote {
+    width: 100%;
     border: 1px solid #eee;
     -webkit-box-shadow: 1px 1px 1px #d8d8d8;
     -moz-box-shadow: 1px 1px 1px #d8d8d8;
"
d78b04a3fca8d8887382606897d4a97e55062fda,6a3a046f55755f0691568431e68a8bfea8d89df0,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Another doc improvement,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index de8ce039..38e37f26 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -534,7 +534,11 @@ you want to customize the error page, you can use the
 
     @app.errorhandler(404)
     def page_not_found(error):
-        return render_template('page_not_found.html')
+        return render_template('page_not_found.html'), 404
+
+Note the ``404`` after the :func:`~flask.render_template` call.  This
+tells Flask that the status code of that page should be 404 which means
+not found.  By default 200 is assumed which translats to: all went well.
 
 .. _sessions:
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index de8ce039..38e37f26 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -534,7 +534,11 @@ you want to customize the error page, you can use the
 
     @app.errorhandler(404)
     def page_not_found(error):
-        return render_template('page_not_found.html')
+        return render_template('page_not_found.html'), 404
+
+Note the ``404`` after the :func:`~flask.render_template` call.  This
+tells Flask that the status code of that page should be 404 which means
+not found.  By default 200 is assumed which translats to: all went well.
 
 .. _sessions:
 
"
6a3a046f55755f0691568431e68a8bfea8d89df0,0b8e01b4450d0ba8cb65751d866568fddc155fa4,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Linked escape,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 38e37f26..91ac4255 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -583,6 +583,9 @@ sessions work::
     # set the secret key.  keep this really secret:
     app.secret_key = 'the secret key'
 
+The here mentioned :func:`~flask.escape` does escaping for you if you are
+not using the template engine (like in this example).
+
 Message Flashing
 ----------------
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 38e37f26..91ac4255 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -583,6 +583,9 @@ sessions work::
     # set the secret key.  keep this really secret:
     app.secret_key = 'the secret key'
 
+The here mentioned :func:`~flask.escape` does escaping for you if you are
+not using the template engine (like in this example).
+
 Message Flashing
 ----------------
 
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/apishowcase.py,examples/apishowcase/apishowcase.py,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/apishowcase.py b/examples/apishowcase/apishowcase.py
deleted file mode 100644
index b3ab2dd1..00000000
--- a/examples/apishowcase/apishowcase.py
+++ /dev/null
@@ -1,30 +0,0 @@
-from flask import Flask, abort, redirect, request, session, \
-     render_template, url_for
-
-#: create a new flask applications.  We pass it the name of our module
-#: so that flask knows where to look for templates and static files.
-app = Flask(__name__)
-
-
-@app.route('/', methods=['GET'])
-def index():
-    """"""Show an overview page""""""
-    return render_template('index.html')
-
-
-@app.route('/hello/', methods=['GET', 'POST'])
-def hello_user():
-    """"""Ask the user for a name and redirect to :func:`hello`""""""
-    if request.method == 'POST':
-        return redirect(url_for('hello', name=request.form['name']))
-    return render_template('hello.html', name=None)
-
-
-@app.route('/hello/<name>', methods=['GET'])
-def hello(name):
-    """"""Greet name friendly""""""
-    return render_template('hello.html', name=name)
-
-
-if __name__ == '__main__':
-    app.run(debug=True)
","diff --git a/examples/apishowcase/apishowcase.py b/examples/apishowcase/apishowcase.py
deleted file mode 100644
index b3ab2dd1..00000000
--- a/examples/apishowcase/apishowcase.py
+++ /dev/null
@@ -1,30 +0,0 @@
-from flask import Flask, abort, redirect, request, session, \
-     render_template, url_for
-
-#: create a new flask applications.  We pass it the name of our module
-#: so that flask knows where to look for templates and static files.
-app = Flask(__name__)
-
-
-@app.route('/', methods=['GET'])
-def index():
-    """"""Show an overview page""""""
-    return render_template('index.html')
-
-
-@app.route('/hello/', methods=['GET', 'POST'])
-def hello_user():
-    """"""Ask the user for a name and redirect to :func:`hello`""""""
-    if request.method == 'POST':
-        return redirect(url_for('hello', name=request.form['name']))
-    return render_template('hello.html', name=None)
-
-
-@app.route('/hello/<name>', methods=['GET'])
-def hello(name):
-    """"""Greet name friendly""""""
-    return render_template('hello.html', name=name)
-
-
-if __name__ == '__main__':
-    app.run(debug=True)
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/static/style.css,examples/apishowcase/static/style.css,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/static/style.css b/examples/apishowcase/static/style.css
deleted file mode 100644
index 65a9ec14..00000000
--- a/examples/apishowcase/static/style.css
+++ /dev/null
@@ -1,7 +0,0 @@
-body {
-    font-family: 'Trebuchet MS', sans-serif;
-}
-
-a {
-    color: #44AD80;
-}
","diff --git a/examples/apishowcase/static/style.css b/examples/apishowcase/static/style.css
deleted file mode 100644
index 65a9ec14..00000000
--- a/examples/apishowcase/static/style.css
+++ /dev/null
@@ -1,7 +0,0 @@
-body {
-    font-family: 'Trebuchet MS', sans-serif;
-}
-
-a {
-    color: #44AD80;
-}
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/templates/counter.html,examples/apishowcase/templates/counter.html,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/templates/counter.html b/examples/apishowcase/templates/counter.html
deleted file mode 100644
index ef888995..00000000
--- a/examples/apishowcase/templates/counter.html
+++ /dev/null
@@ -1,12 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-<p>
-  This is an example application that shows how
-  the Werkzeug powered Flask microframework works.
-<p>
-  The various parts of the example application:
-<ul>
-  <li><a href=""{{ url_for('hello_user') }}"">Hello World</a>
-  <li><a href=""{{ url_for('counter') }}"">Counter</a>
-</ul>
-{% endblock %}
","diff --git a/examples/apishowcase/templates/counter.html b/examples/apishowcase/templates/counter.html
deleted file mode 100644
index ef888995..00000000
--- a/examples/apishowcase/templates/counter.html
+++ /dev/null
@@ -1,12 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-<p>
-  This is an example application that shows how
-  the Werkzeug powered Flask microframework works.
-<p>
-  The various parts of the example application:
-<ul>
-  <li><a href=""{{ url_for('hello_user') }}"">Hello World</a>
-  <li><a href=""{{ url_for('counter') }}"">Counter</a>
-</ul>
-{% endblock %}
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/templates/hello.html,examples/apishowcase/templates/hello.html,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/templates/hello.html b/examples/apishowcase/templates/hello.html
deleted file mode 100644
index dc86737c..00000000
--- a/examples/apishowcase/templates/hello.html
+++ /dev/null
@@ -1,13 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-  {% if name %}
-  <h2>Hello {{ name }}!</h2>
-  {% else %}
-  <h3>Hello Stranger …</h3>
-  <form action=""{{ url_for('hello_user') }}"" method=""post"">
-    <p>… What's your name?
-    <p><input type=text name=name size=30>
-       <input type=submit value=""That's me"">
-  </form>
-  {% endif %}
-{% endblock %}
","diff --git a/examples/apishowcase/templates/hello.html b/examples/apishowcase/templates/hello.html
deleted file mode 100644
index dc86737c..00000000
--- a/examples/apishowcase/templates/hello.html
+++ /dev/null
@@ -1,13 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-  {% if name %}
-  <h2>Hello {{ name }}!</h2>
-  {% else %}
-  <h3>Hello Stranger …</h3>
-  <form action=""{{ url_for('hello_user') }}"" method=""post"">
-    <p>… What's your name?
-    <p><input type=text name=name size=30>
-       <input type=submit value=""That's me"">
-  </form>
-  {% endif %}
-{% endblock %}
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/templates/index.html,examples/apishowcase/templates/index.html,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/templates/index.html b/examples/apishowcase/templates/index.html
deleted file mode 100644
index d210d54f..00000000
--- a/examples/apishowcase/templates/index.html
+++ /dev/null
@@ -1,11 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-<p>
-  This is an example application that shows how
-  the Werkzeug powered Flask microframework works.
-<p>
-  The various parts of the example application:
-<ul>
-  <li><a href=""{{ url_for('hello_user') }}"">Hello World</a>
-</ul>
-{% endblock %}
","diff --git a/examples/apishowcase/templates/index.html b/examples/apishowcase/templates/index.html
deleted file mode 100644
index d210d54f..00000000
--- a/examples/apishowcase/templates/index.html
+++ /dev/null
@@ -1,11 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-<p>
-  This is an example application that shows how
-  the Werkzeug powered Flask microframework works.
-<p>
-  The various parts of the example application:
-<ul>
-  <li><a href=""{{ url_for('hello_user') }}"">Hello World</a>
-</ul>
-{% endblock %}
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/apishowcase/templates/layout.html,examples/apishowcase/templates/layout.html,,Removed the useless apishowcase example,"diff --git a/examples/apishowcase/templates/layout.html b/examples/apishowcase/templates/layout.html
deleted file mode 100644
index 166d39ec..00000000
--- a/examples/apishowcase/templates/layout.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<!doctype html>
-<title>Flask API Showcase</title>
-<link rel=stylesheet href=""{{ url_for('static', filename='style.css') }}"" type=text/css>
-<h1>Flask API Showcase</h1>
-{% if request.endpoint != 'index' %}
-<div class=backlink><a href=""{{ url_for('index') }}"">&laquo; back to index</a></div>
-{% endif %}
-{% block body %}{% endblock %}
","diff --git a/examples/apishowcase/templates/layout.html b/examples/apishowcase/templates/layout.html
deleted file mode 100644
index 166d39ec..00000000
--- a/examples/apishowcase/templates/layout.html
+++ /dev/null
@@ -1,8 +0,0 @@
-<!doctype html>
-<title>Flask API Showcase</title>
-<link rel=stylesheet href=""{{ url_for('static', filename='style.css') }}"" type=text/css>
-<h1>Flask API Showcase</h1>
-{% if request.endpoint != 'index' %}
-<div class=backlink><a href=""{{ url_for('index') }}"">&laquo; back to index</a></div>
-{% endif %}
-{% block body %}{% endblock %}
"
0b8e01b4450d0ba8cb65751d866568fddc155fa4,03168a5d53457fdb8676a4ac9fca0f76a23c6852,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Removed the useless apishowcase example,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 06168746..f3bbe7c3 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -1,4 +1,13 @@
 # -*- coding: utf-8 -*-
+""""""
+    MiniTwit
+    ~~~~~~~~
+
+    A microblogging application written with Flask and sqlite3.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
 from __future__ import with_statement
 import re
 import time
@@ -66,21 +75,26 @@ def before_request():
     up the current user so that we know he's there.
     """"""
     g.db = connect_db()
+    g.user = None
     if 'user_id' in session:
         g.user = query_db('select * from user where user_id = ?',
                           [session['user_id']], one=True)
 
 
 @app.request_shutdown
-def after_request(request):
+def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
-    return request
+    return response
 
 
 @app.route('/')
 def timeline():
-    if not 'user_id' in session:
+    """"""Shows a users timeline or if no user is logged in it will
+    redirect to the public timeline.  This timeline shows the user's
+    messages as well as all the messages of followed users.
+    """"""
+    if not g.user:
         return redirect(url_for('public_timeline'))
     offset = request.args.get('offset', type=int)
     return render_template('timeline.html', messages=query_db('''
@@ -95,6 +109,7 @@ def timeline():
 
 @app.route('/public')
 def public_timeline():
+    """"""Displays the latest messages of all users.""""""
     return render_template('timeline.html', messages=query_db('''
         select message.*, user.* from message, user
         where message.author_id = user.user_id
@@ -103,12 +118,13 @@ def public_timeline():
 
 @app.route('/<username>')
 def user_timeline(username):
+    """"""Display's a users tweets.""""""
     profile_user = query_db('select * from user where username = ?',
                             [username], one=True)
     if profile_user is None:
         abort(404)
     followd = False
-    if 'user_id' in session:
+    if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']], one=True) is not None
@@ -122,7 +138,8 @@ def user_timeline(username):
 
 @app.route('/<username>/follow')
 def follow_user(username):
-    if not 'user_id' in session:
+    """"""Adds the current user as follower of the given user""""""
+    if not g.user:
         abort(401)
     whom_id = get_user_id(username)
     if whom_id is None:
@@ -136,7 +153,8 @@ def follow_user(username):
 
 @app.route('/<username>/unfollow')
 def unfollow_user(username):
-    if not 'user_id' in session:
+    """"""Removes the current user as follower of the given user""""""
+    if not g.user:
         abort(401)
     whom_id = get_user_id(username)
     if whom_id is None:
@@ -150,6 +168,7 @@ def unfollow_user(username):
 
 @app.route('/add_message', methods=['POST'])
 def add_message():
+    """"""Registers a new message for the user""""""
     if 'user_id' not in session:
         abort(401)
     if request.form['text']:
@@ -163,7 +182,8 @@ def add_message():
 
 @app.route('/login', methods=['GET', 'POST'])
 def login():
-    if 'user_id' in session:
+    """"""Logs the user in""""""
+    if g.user:
         return redirect(url_for('timeline'))
     error = None
     if request.method == 'POST':
@@ -183,7 +203,8 @@ def login():
 
 @app.route('/register', methods=['GET', 'POST'])
 def register():
-    if 'user_id' in session:
+    """"""Registers the user""""""
+    if g.user:
         return redirect(url_for('timeline'))
     error = None
     if request.method == 'POST':
@@ -211,6 +232,7 @@ def register():
 
 @app.route('/logout')
 def logout():
+    """"""Logs the user out""""""
     flash('You were logged out')
     session.pop('user_id', None)
     return redirect(url_for('public_timeline'))
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 06168746..f3bbe7c3 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -1,4 +1,13 @@
 # -*- coding: utf-8 -*-
+""""""
+    MiniTwit
+    ~~~~~~~~
+
+    A microblogging application written with Flask and sqlite3.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
 from __future__ import with_statement
 import re
 import time
@@ -66,21 +75,26 @@ def before_request():
     up the current user so that we know he's there.
     """"""
     g.db = connect_db()
+    g.user = None
     if 'user_id' in session:
         g.user = query_db('select * from user where user_id = ?',
                           [session['user_id']], one=True)
 
 
 @app.request_shutdown
-def after_request(request):
+def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
-    return request
+    return response
 
 
 @app.route('/')
 def timeline():
-    if not 'user_id' in session:
+    """"""Shows a users timeline or if no user is logged in it will
+    redirect to the public timeline.  This timeline shows the user's
+    messages as well as all the messages of followed users.
+    """"""
+    if not g.user:
         return redirect(url_for('public_timeline'))
     offset = request.args.get('offset', type=int)
     return render_template('timeline.html', messages=query_db('''
@@ -95,6 +109,7 @@ def timeline():
 
 @app.route('/public')
 def public_timeline():
+    """"""Displays the latest messages of all users.""""""
     return render_template('timeline.html', messages=query_db('''
         select message.*, user.* from message, user
         where message.author_id = user.user_id
@@ -103,12 +118,13 @@ def public_timeline():
 
 @app.route('/<username>')
 def user_timeline(username):
+    """"""Display's a users tweets.""""""
     profile_user = query_db('select * from user where username = ?',
                             [username], one=True)
     if profile_user is None:
         abort(404)
     followd = False
-    if 'user_id' in session:
+    if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']], one=True) is not None
@@ -122,7 +138,8 @@ def user_timeline(username):
 
 @app.route('/<username>/follow')
 def follow_user(username):
-    if not 'user_id' in session:
+    """"""Adds the current user as follower of the given user""""""
+    if not g.user:
         abort(401)
     whom_id = get_user_id(username)
     if whom_id is None:
@@ -136,7 +153,8 @@ def follow_user(username):
 
 @app.route('/<username>/unfollow')
 def unfollow_user(username):
-    if not 'user_id' in session:
+    """"""Removes the current user as follower of the given user""""""
+    if not g.user:
         abort(401)
     whom_id = get_user_id(username)
     if whom_id is None:
@@ -150,6 +168,7 @@ def unfollow_user(username):
 
 @app.route('/add_message', methods=['POST'])
 def add_message():
+    """"""Registers a new message for the user""""""
     if 'user_id' not in session:
         abort(401)
     if request.form['text']:
@@ -163,7 +182,8 @@ def add_message():
 
 @app.route('/login', methods=['GET', 'POST'])
 def login():
-    if 'user_id' in session:
+    """"""Logs the user in""""""
+    if g.user:
         return redirect(url_for('timeline'))
     error = None
     if request.method == 'POST':
@@ -183,7 +203,8 @@ def login():
 
 @app.route('/register', methods=['GET', 'POST'])
 def register():
-    if 'user_id' in session:
+    """"""Registers the user""""""
+    if g.user:
         return redirect(url_for('timeline'))
     error = None
     if request.method == 'POST':
@@ -211,6 +232,7 @@ def register():
 
 @app.route('/logout')
 def logout():
+    """"""Logs the user out""""""
     flash('You were logged out')
     session.pop('user_id', None)
     return redirect(url_for('public_timeline'))
"
03168a5d53457fdb8676a4ac9fca0f76a23c6852,f2dc38cda61f76c64b97ab9f730accc986a4b188,examples/minitwit/README,examples/minitwit/README,examples/minitwit/README,Added tests for minitwit.  Testing with Flask is awesome,"diff --git a/examples/minitwit/README b/examples/minitwit/README
index f054fd8f..e47c8792 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -19,3 +19,8 @@
       3. now you can run the minitwit.py file with your
          python interpreter and the application will
          greet you on http://localhost:5000/
+	
+    ~ Is it tested?
+
+      You betcha.  Run the `minitwit_tests.py` file to
+      see the tests pass.
","diff --git a/examples/minitwit/README b/examples/minitwit/README
index f054fd8f..e47c8792 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -19,3 +19,8 @@
       3. now you can run the minitwit.py file with your
          python interpreter and the application will
          greet you on http://localhost:5000/
+	
+    ~ Is it tested?
+
+      You betcha.  Run the `minitwit_tests.py` file to
+      see the tests pass.
"
03168a5d53457fdb8676a4ac9fca0f76a23c6852,f2dc38cda61f76c64b97ab9f730accc986a4b188,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Added tests for minitwit.  Testing with Flask is awesome,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index f3bbe7c3..05f0689d 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -216,7 +216,7 @@ def register():
         elif not request.form['password']:
             error = 'You have to enter a password'
         elif request.form['password'] != request.form['password2']:
-            error = 'The two passwords to not match'
+            error = 'The two passwords do not match'
         elif get_user_id(request.form['username']) is not None:
             error = 'The username is already taken'
         else:
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index f3bbe7c3..05f0689d 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -216,7 +216,7 @@ def register():
         elif not request.form['password']:
             error = 'You have to enter a password'
         elif request.form['password'] != request.form['password2']:
-            error = 'The two passwords to not match'
+            error = 'The two passwords do not match'
         elif get_user_id(request.form['username']) is not None:
             error = 'The username is already taken'
         else:
"
03168a5d53457fdb8676a4ac9fca0f76a23c6852,f2dc38cda61f76c64b97ab9f730accc986a4b188,examples/minitwit/minitwit_tests.py,,examples/minitwit/minitwit_tests.py,Added tests for minitwit.  Testing with Flask is awesome,"diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
new file mode 100644
index 00000000..a3502f64
--- /dev/null
+++ b/examples/minitwit/minitwit_tests.py
@@ -0,0 +1,145 @@
+# -*- coding: utf-8 -*-
+""""""
+    MiniTwit Tests
+    ~~~~~~~~~~~~~~
+
+    Tests the MiniTwit application.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+import minitwit
+import unittest
+import tempfile
+from contextlib import closing
+
+
+class MiniTwitTestCase(unittest.TestCase):
+
+    def setUp(self):
+        """"""Before each test, set up a blank database""""""
+        self.db = tempfile.NamedTemporaryFile()
+        self.app = minitwit.app.test_client()
+        minitwit.DATABASE = self.db.name
+        minitwit.init_db()
+
+    # helper functions
+
+    def register(self, username, password, password2=None, email=None):
+        """"""Helper function to register a user""""""
+        if password2 is None:
+            password2 = password
+        if email is None:
+            email = username + '@example.com'
+        return self.app.post('/register', data={
+            'username':     username,
+            'password':     password,
+            'password2':    password2,
+            'email':        email,
+        }, follow_redirects=True)
+
+    def login(self, username, password):
+        """"""Helper function to login""""""
+        return self.app.post('/login', data={
+            'username': username,
+            'password': password
+        }, follow_redirects=True)
+
+    def register_and_login(self, username, password):
+        """"""Registers and logs in in one go""""""
+        self.register(username, password)
+        return self.login(username, password)
+
+    def logout(self):
+        """"""Helper function to logout""""""
+        return self.app.get('/logout', follow_redirects=True)
+
+    def add_message(self, text):
+        """"""Records a message""""""
+        rv = self.app.post('/add_message', data={'text': text},
+                                    follow_redirects=True)
+        if text:
+            assert 'Your message was recorded' in rv.data
+        return rv
+
+    # testing functions
+
+    def test_register(self):
+        """"""Make sure registering works""""""
+        rv = self.register('user1', 'default')
+        assert 'You were successfully registered ' \
+               'and can login now' in rv.data
+        rv = self.register('user1', 'default')
+        assert 'The username is already taken' in rv.data
+        rv = self.register('', 'default')
+        assert 'You have to enter a username' in rv.data
+        rv = self.register('meh', '')
+        assert 'You have to enter a password' in rv.data
+        rv = self.register('meh', 'x', 'y')
+        assert 'The two passwords do not match' in rv.data
+        rv = self.register('meh', 'foo', email='broken')
+        assert 'You have to enter a valid email address' in rv.data
+
+    def test_login_logout(self):
+        """"""Make sure logging in and logging out works""""""
+        rv = self.register_and_login('user1', 'default')
+        assert 'You were logged in' in rv.data
+        rv = self.logout()
+        assert 'You were logged out' in rv.data
+        rv = self.login('user1', 'wrongpassword')
+        assert 'Invalid password' in rv.data
+        rv = self.login('user2', 'wrongpassword')
+        assert 'Invalid username' in rv.data
+
+    def test_message_recording(self):
+        """"""Check if adding messages works""""""
+        self.register_and_login('foo', 'default')
+        self.add_message('test message 1')
+        self.add_message('<test message 2>')
+        rv = self.app.get('/')
+        assert 'test message 1' in rv.data
+        assert '&lt;test message 2&gt;' in rv.data
+
+    def test_timelines(self):
+        """"""Make sure that timelines work""""""
+        self.register_and_login('foo', 'default')
+        self.add_message('the message by foo')
+        self.logout()
+        self.register_and_login('bar', 'default')
+        self.add_message('the message by bar')
+        rv = self.app.get('/public')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' in rv.data
+
+        # bar's timeline should just show bar's message
+        rv = self.app.get('/')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+
+        # now let's follow foo
+        rv = self.app.get('/foo/follow', follow_redirects=True)
+        assert 'You are now following &#34;foo&#34;' in rv.data
+
+        # we should now see foo's message
+        rv = self.app.get('/')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' in rv.data
+
+        # but on the user's page we only want the user's message
+        rv = self.app.get('/bar')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+        rv = self.app.get('/foo')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' not in rv.data
+
+        # now unfollow and check if that worked
+        rv = self.app.get('/foo/unfollow', follow_redirects=True)
+        assert 'You are no longer following &#34;foo&#34;' in rv.data
+        rv = self.app.get('/')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+
+
+if __name__ == '__main__':
+    unittest.main()
","diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
new file mode 100644
index 00000000..a3502f64
--- /dev/null
+++ b/examples/minitwit/minitwit_tests.py
@@ -0,0 +1,145 @@
+# -*- coding: utf-8 -*-
+""""""
+    MiniTwit Tests
+    ~~~~~~~~~~~~~~
+
+    Tests the MiniTwit application.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+import minitwit
+import unittest
+import tempfile
+from contextlib import closing
+
+
+class MiniTwitTestCase(unittest.TestCase):
+
+    def setUp(self):
+        """"""Before each test, set up a blank database""""""
+        self.db = tempfile.NamedTemporaryFile()
+        self.app = minitwit.app.test_client()
+        minitwit.DATABASE = self.db.name
+        minitwit.init_db()
+
+    # helper functions
+
+    def register(self, username, password, password2=None, email=None):
+        """"""Helper function to register a user""""""
+        if password2 is None:
+            password2 = password
+        if email is None:
+            email = username + '@example.com'
+        return self.app.post('/register', data={
+            'username':     username,
+            'password':     password,
+            'password2':    password2,
+            'email':        email,
+        }, follow_redirects=True)
+
+    def login(self, username, password):
+        """"""Helper function to login""""""
+        return self.app.post('/login', data={
+            'username': username,
+            'password': password
+        }, follow_redirects=True)
+
+    def register_and_login(self, username, password):
+        """"""Registers and logs in in one go""""""
+        self.register(username, password)
+        return self.login(username, password)
+
+    def logout(self):
+        """"""Helper function to logout""""""
+        return self.app.get('/logout', follow_redirects=True)
+
+    def add_message(self, text):
+        """"""Records a message""""""
+        rv = self.app.post('/add_message', data={'text': text},
+                                    follow_redirects=True)
+        if text:
+            assert 'Your message was recorded' in rv.data
+        return rv
+
+    # testing functions
+
+    def test_register(self):
+        """"""Make sure registering works""""""
+        rv = self.register('user1', 'default')
+        assert 'You were successfully registered ' \
+               'and can login now' in rv.data
+        rv = self.register('user1', 'default')
+        assert 'The username is already taken' in rv.data
+        rv = self.register('', 'default')
+        assert 'You have to enter a username' in rv.data
+        rv = self.register('meh', '')
+        assert 'You have to enter a password' in rv.data
+        rv = self.register('meh', 'x', 'y')
+        assert 'The two passwords do not match' in rv.data
+        rv = self.register('meh', 'foo', email='broken')
+        assert 'You have to enter a valid email address' in rv.data
+
+    def test_login_logout(self):
+        """"""Make sure logging in and logging out works""""""
+        rv = self.register_and_login('user1', 'default')
+        assert 'You were logged in' in rv.data
+        rv = self.logout()
+        assert 'You were logged out' in rv.data
+        rv = self.login('user1', 'wrongpassword')
+        assert 'Invalid password' in rv.data
+        rv = self.login('user2', 'wrongpassword')
+        assert 'Invalid username' in rv.data
+
+    def test_message_recording(self):
+        """"""Check if adding messages works""""""
+        self.register_and_login('foo', 'default')
+        self.add_message('test message 1')
+        self.add_message('<test message 2>')
+        rv = self.app.get('/')
+        assert 'test message 1' in rv.data
+        assert '&lt;test message 2&gt;' in rv.data
+
+    def test_timelines(self):
+        """"""Make sure that timelines work""""""
+        self.register_and_login('foo', 'default')
+        self.add_message('the message by foo')
+        self.logout()
+        self.register_and_login('bar', 'default')
+        self.add_message('the message by bar')
+        rv = self.app.get('/public')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' in rv.data
+
+        # bar's timeline should just show bar's message
+        rv = self.app.get('/')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+
+        # now let's follow foo
+        rv = self.app.get('/foo/follow', follow_redirects=True)
+        assert 'You are now following &#34;foo&#34;' in rv.data
+
+        # we should now see foo's message
+        rv = self.app.get('/')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' in rv.data
+
+        # but on the user's page we only want the user's message
+        rv = self.app.get('/bar')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+        rv = self.app.get('/foo')
+        assert 'the message by foo' in rv.data
+        assert 'the message by bar' not in rv.data
+
+        # now unfollow and check if that worked
+        rv = self.app.get('/foo/unfollow', follow_redirects=True)
+        assert 'You are no longer following &#34;foo&#34;' in rv.data
+        rv = self.app.get('/')
+        assert 'the message by foo' not in rv.data
+        assert 'the message by bar' in rv.data
+
+
+if __name__ == '__main__':
+    unittest.main()
"
03168a5d53457fdb8676a4ac9fca0f76a23c6852,f2dc38cda61f76c64b97ab9f730accc986a4b188,flask.py,flask.py,flask.py,Added tests for minitwit.  Testing with Flask is awesome,"diff --git a/flask.py b/flask.py
index 1ea239f8..21858f5e 100644
--- a/flask.py
+++ b/flask.py
@@ -265,9 +265,8 @@ class Flask(object):
         options.setdefault('use_debugger', self.debug)
         return run_simple(host, port, self, **options)
 
-    @cached_property
-    def test(self):
-        """"""A test client for this application""""""
+    def test_client(self):
+        """"""Creates a test client for this application""""""
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
","diff --git a/flask.py b/flask.py
index 1ea239f8..21858f5e 100644
--- a/flask.py
+++ b/flask.py
@@ -265,9 +265,8 @@ class Flask(object):
         options.setdefault('use_debugger', self.debug)
         return run_simple(host, port, self, **options)
 
-    @cached_property
-    def test(self):
-        """"""A test client for this application""""""
+    def test_client(self):
+        """"""Creates a test client for this application""""""
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
"
f2dc38cda61f76c64b97ab9f730accc986a4b188,ef524f2cfd65377b3b9ce896e7a710472b13c0f6,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,No need for the closing import,"diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index a3502f64..cd761aa6 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -11,7 +11,6 @@
 import minitwit
 import unittest
 import tempfile
-from contextlib import closing
 
 
 class MiniTwitTestCase(unittest.TestCase):
","diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index a3502f64..cd761aa6 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -11,7 +11,6 @@
 import minitwit
 import unittest
 import tempfile
-from contextlib import closing
 
 
 class MiniTwitTestCase(unittest.TestCase):
"
ef524f2cfd65377b3b9ce896e7a710472b13c0f6,03148dba6b26a2694da1d466584f50189c52e7b3,docs/api.rst,docs/api.rst,docs/api.rst,Added testing documentation,"diff --git a/docs/api.rst b/docs/api.rst
index 98614ead..e3439393 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -19,6 +19,8 @@ Application Object
 Incoming Request Data
 ---------------------
 
+.. autoclass:: Request
+
 .. class:: request
 
    To access incoming request data, you can use the global `request`
@@ -104,6 +106,20 @@ Incoming Request Data
       `root_url`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
+Response Objects
+----------------
+
+.. autoclass:: flask.Response
+   :members: set_cookie, data, mimetype
+
+   .. attribute:: headers
+
+      A :class:`Headers` object representing the response headers.
+
+   .. attribute:: status_code
+
+      The response status as integer.
+
 
 Sessions
 --------
","diff --git a/docs/api.rst b/docs/api.rst
index 98614ead..e3439393 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -19,6 +19,8 @@ Application Object
 Incoming Request Data
 ---------------------
 
+.. autoclass:: Request
+
 .. class:: request
 
    To access incoming request data, you can use the global `request`
@@ -104,6 +106,20 @@ Incoming Request Data
       `root_url`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
+Response Objects
+----------------
+
+.. autoclass:: flask.Response
+   :members: set_cookie, data, mimetype
+
+   .. attribute:: headers
+
+      A :class:`Headers` object representing the response headers.
+
+   .. attribute:: status_code
+
+      The response status as integer.
+
 
 Sessions
 --------
"
ef524f2cfd65377b3b9ce896e7a710472b13c0f6,03148dba6b26a2694da1d466584f50189c52e7b3,docs/index.rst,docs/index.rst,docs/index.rst,Added testing documentation,"diff --git a/docs/index.rst b/docs/index.rst
index 81528203..5c622fe6 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -21,4 +21,5 @@ you want to dive into all the internal parts of Flask, check out the
    patterns
    api
    deploying
+   testing
    becomingbig
","diff --git a/docs/index.rst b/docs/index.rst
index 81528203..5c622fe6 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -21,4 +21,5 @@ you want to dive into all the internal parts of Flask, check out the
    patterns
    api
    deploying
+   testing
    becomingbig
"
ef524f2cfd65377b3b9ce896e7a710472b13c0f6,03148dba6b26a2694da1d466584f50189c52e7b3,flask.py,flask.py,flask.py,Added testing documentation,"diff --git a/flask.py b/flask.py
index 21858f5e..0c3a8b32 100644
--- a/flask.py
+++ b/flask.py
@@ -15,8 +15,8 @@ import pkg_resources
 from threading import local
 from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
-from werkzeug import Request, Response, LocalStack, LocalProxy, \
-     create_environ, cached_property
+from werkzeug import Request as RequestBase, Response as ResponseBase, \
+     LocalStack, LocalProxy, create_environ, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -27,21 +27,29 @@ from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
 
-class FlaskRequest(Request):
+class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
+
+    It is what ends up as :class:`~flask.request`.  If you want to replace
+    the request object used you can subclass this and set
+    :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
     def __init__(self, environ):
-        Request.__init__(self, environ)
+        RequestBase.__init__(self, environ)
         self.endpoint = None
         self.view_args = None
 
 
-class FlaskResponse(Response):
+class Response(ResponseBase):
     """"""The response object that is used by default in flask.  Works like the
     response object from Werkzeug but is set to have a HTML mimetype by
-    default.
+    default.  Quite often you don't have to create this object yourself because
+    :meth:`~flask.Flask.make_response` will take care of that for you.
+
+    If you want to replace the response object used you can subclass this and
+    set :attr:`~flask.Flask.request_class` to your subclass.
     """"""
     default_mimetype = 'text/html'
 
@@ -142,11 +150,13 @@ class Flask(object):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects
-    request_class = FlaskRequest
+    #: the class that is used for request objects.  See :class:`~flask.request`
+    #: for more information.
+    request_class = Request
 
-    #: the class that is used for response objects
-    response_class = FlaskResponse
+    #: the class that is used for response objects.  See
+    #: :class:`~flask.Response` for more information.
+    response_class = Response
 
     #: path for the static files.  If you don't want to use static files
     #: you can set this value to `None` in which case no URL rule is added
@@ -266,7 +276,9 @@ class Flask(object):
         return run_simple(host, port, self, **options)
 
     def test_client(self):
-        """"""Creates a test client for this application""""""
+        """"""Creates a test client for this application.  For information
+        about unit testing head over to :ref:`testing`.
+        """"""
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
@@ -356,7 +368,7 @@ class Flask(object):
 
         Variables parts in the route can be specified with angular
         brackets (``/user/<username>``).  By default a variable part
-        in the URL accepts any string without a slash however a differnt
+        in the URL accepts any string without a slash however a different
         converter can be specified as well by using ``<converter:name>``.
 
         Variable parts are passed to the view function as keyword
","diff --git a/flask.py b/flask.py
index 21858f5e..0c3a8b32 100644
--- a/flask.py
+++ b/flask.py
@@ -15,8 +15,8 @@ import pkg_resources
 from threading import local
 from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
-from werkzeug import Request, Response, LocalStack, LocalProxy, \
-     create_environ, cached_property
+from werkzeug import Request as RequestBase, Response as ResponseBase, \
+     LocalStack, LocalProxy, create_environ, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -27,21 +27,29 @@ from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
 
-class FlaskRequest(Request):
+class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
+
+    It is what ends up as :class:`~flask.request`.  If you want to replace
+    the request object used you can subclass this and set
+    :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
     def __init__(self, environ):
-        Request.__init__(self, environ)
+        RequestBase.__init__(self, environ)
         self.endpoint = None
         self.view_args = None
 
 
-class FlaskResponse(Response):
+class Response(ResponseBase):
     """"""The response object that is used by default in flask.  Works like the
     response object from Werkzeug but is set to have a HTML mimetype by
-    default.
+    default.  Quite often you don't have to create this object yourself because
+    :meth:`~flask.Flask.make_response` will take care of that for you.
+
+    If you want to replace the response object used you can subclass this and
+    set :attr:`~flask.Flask.request_class` to your subclass.
     """"""
     default_mimetype = 'text/html'
 
@@ -142,11 +150,13 @@ class Flask(object):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects
-    request_class = FlaskRequest
+    #: the class that is used for request objects.  See :class:`~flask.request`
+    #: for more information.
+    request_class = Request
 
-    #: the class that is used for response objects
-    response_class = FlaskResponse
+    #: the class that is used for response objects.  See
+    #: :class:`~flask.Response` for more information.
+    response_class = Response
 
     #: path for the static files.  If you don't want to use static files
     #: you can set this value to `None` in which case no URL rule is added
@@ -266,7 +276,9 @@ class Flask(object):
         return run_simple(host, port, self, **options)
 
     def test_client(self):
-        """"""Creates a test client for this application""""""
+        """"""Creates a test client for this application.  For information
+        about unit testing head over to :ref:`testing`.
+        """"""
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
@@ -356,7 +368,7 @@ class Flask(object):
 
         Variables parts in the route can be specified with angular
         brackets (``/user/<username>``).  By default a variable part
-        in the URL accepts any string without a slash however a differnt
+        in the URL accepts any string without a slash however a different
         converter can be specified as well by using ``<converter:name>``.
 
         Variable parts are passed to the view function as keyword
"
03148dba6b26a2694da1d466584f50189c52e7b3,2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,docs/testing.rst,,docs/testing.rst,Doc updates and typo fixes,"diff --git a/docs/testing.rst b/docs/testing.rst
new file mode 100644
index 00000000..4c04414d
--- /dev/null
+++ b/docs/testing.rst
@@ -0,0 +1,116 @@
+.. _testing:
+
+Testing Flask Applications
+==========================
+
+   **Something that is untested is broken.**
+
+Not sure where that is coming from, and it's not entirely correct, but
+also not that far from the truth.  Untested applications make it hard to
+improve existing code and developers of untested applications tend to
+become pretty paranoid.  If an application however has automated tests you
+can savely change things and you will instantly know if your change broke
+something.
+
+Flask gives you a couple of ways to test applications.  It mainly does
+that by exposing the Werkzeug test :class:`~werkzeug.Client` class to your
+code and handling the context locals for you.  You can then use that with
+your favourite testing solution.  In this documentation we will us the
+:mod:`unittest` package that comes preinstalled with each Python
+installation.
+
+The Application
+---------------
+
+First we need an application to test for functionality.  Let's start
+simple with a Hello World application (`hello.py`)::
+
+    from flask import Flask, render_template_string
+    app = Flask(__name__)
+
+    @app.route('/')
+    @app.route('/<name>')
+    def hello(name='World'):
+        return render_template_string('''
+            <!doctype html>
+            <title>Hello {{ name }}!</title>
+            <h1>Hello {{ name }}!</h1>
+        ''', name=name)
+
+The Testing Skeleton
+--------------------
+
+In order to test that, we add a second module (
+`hello_tests.py`) and create a unittest skeleton there::
+
+    import unittest
+    import hello
+
+    class HelloWorldTestCase(unittest.TestCase):
+
+        def setUp(self):
+            self.app = hello.app.test_client()
+
+    if __name__ == '__main__':
+        unittest.main()
+
+The code in the `setUp` function creates a new test client.  That function
+is called before each individual test function.  What the test client does
+for us is giving us a simple interface to the application.  We can trigger
+test requests to the application and the client will also keep track of
+cookies for us.
+
+If we now run that testsuite, we should see the following output::
+
+    $ python hello_tests.py
+
+    ----------------------------------------------------------------------
+    Ran 0 tests in 0.000s
+    
+    OK
+
+Even though it did not run any tests, we already know that our hello
+application is syntactically valid, otherwise the import would have died
+with an exception.
+
+The First Test
+--------------
+
+Now we can add the first test.  Let's check that the application greets us
+with ""Hello World"" if we access it on ``/``.  For that we modify our
+created test case class so that it looks like this::
+
+    class HelloWorldTestCase(unittest.TestCase):
+
+        def setUp(self):
+            self.app = hello.app.test_client()
+
+        def test_hello_world(self):
+            rv = self.app.get('/')
+            assert 'Hello World!' in rv.data
+
+Test functions begin with the word `test`.  Every function named like that
+will be picked up automatically.  By using `self.app.get` we can send an
+HTTP `GET` request to the application with the given path.  The return
+value will be a :class:`~flask.Flask.response_class` object.  We can now
+use the :attr:`~werkzeug.BaseResponse.data` attribute to inspect the
+return value (as string) from the application.  In this case, we ensure
+that ``'Hello World!'`` is part of the output.
+
+Run it again and you should see one passing test.  Let's add a second test
+here::
+
+        def test_hello_name(self):
+            rv = self.app.get('/Peter')
+            assert 'Hello Peter!' in rv.data
+
+Of course you can submit forms with the test client as well.  For that and
+other features of the test client, check the documentation of the Werkzeug
+test :class:`~werkzeug.Client` and the tests of the MiniTwit example
+application:
+
+-   Werkzeug Test :class:`~werkzeug.Client`
+-   `MiniTwit Example`_
+
+.. _MiniTwit Example:
+   http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
","diff --git a/docs/testing.rst b/docs/testing.rst
new file mode 100644
index 00000000..4c04414d
--- /dev/null
+++ b/docs/testing.rst
@@ -0,0 +1,116 @@
+.. _testing:
+
+Testing Flask Applications
+==========================
+
+   **Something that is untested is broken.**
+
+Not sure where that is coming from, and it's not entirely correct, but
+also not that far from the truth.  Untested applications make it hard to
+improve existing code and developers of untested applications tend to
+become pretty paranoid.  If an application however has automated tests you
+can savely change things and you will instantly know if your change broke
+something.
+
+Flask gives you a couple of ways to test applications.  It mainly does
+that by exposing the Werkzeug test :class:`~werkzeug.Client` class to your
+code and handling the context locals for you.  You can then use that with
+your favourite testing solution.  In this documentation we will us the
+:mod:`unittest` package that comes preinstalled with each Python
+installation.
+
+The Application
+---------------
+
+First we need an application to test for functionality.  Let's start
+simple with a Hello World application (`hello.py`)::
+
+    from flask import Flask, render_template_string
+    app = Flask(__name__)
+
+    @app.route('/')
+    @app.route('/<name>')
+    def hello(name='World'):
+        return render_template_string('''
+            <!doctype html>
+            <title>Hello {{ name }}!</title>
+            <h1>Hello {{ name }}!</h1>
+        ''', name=name)
+
+The Testing Skeleton
+--------------------
+
+In order to test that, we add a second module (
+`hello_tests.py`) and create a unittest skeleton there::
+
+    import unittest
+    import hello
+
+    class HelloWorldTestCase(unittest.TestCase):
+
+        def setUp(self):
+            self.app = hello.app.test_client()
+
+    if __name__ == '__main__':
+        unittest.main()
+
+The code in the `setUp` function creates a new test client.  That function
+is called before each individual test function.  What the test client does
+for us is giving us a simple interface to the application.  We can trigger
+test requests to the application and the client will also keep track of
+cookies for us.
+
+If we now run that testsuite, we should see the following output::
+
+    $ python hello_tests.py
+
+    ----------------------------------------------------------------------
+    Ran 0 tests in 0.000s
+    
+    OK
+
+Even though it did not run any tests, we already know that our hello
+application is syntactically valid, otherwise the import would have died
+with an exception.
+
+The First Test
+--------------
+
+Now we can add the first test.  Let's check that the application greets us
+with ""Hello World"" if we access it on ``/``.  For that we modify our
+created test case class so that it looks like this::
+
+    class HelloWorldTestCase(unittest.TestCase):
+
+        def setUp(self):
+            self.app = hello.app.test_client()
+
+        def test_hello_world(self):
+            rv = self.app.get('/')
+            assert 'Hello World!' in rv.data
+
+Test functions begin with the word `test`.  Every function named like that
+will be picked up automatically.  By using `self.app.get` we can send an
+HTTP `GET` request to the application with the given path.  The return
+value will be a :class:`~flask.Flask.response_class` object.  We can now
+use the :attr:`~werkzeug.BaseResponse.data` attribute to inspect the
+return value (as string) from the application.  In this case, we ensure
+that ``'Hello World!'`` is part of the output.
+
+Run it again and you should see one passing test.  Let's add a second test
+here::
+
+        def test_hello_name(self):
+            rv = self.app.get('/Peter')
+            assert 'Hello Peter!' in rv.data
+
+Of course you can submit forms with the test client as well.  For that and
+other features of the test client, check the documentation of the Werkzeug
+test :class:`~werkzeug.Client` and the tests of the MiniTwit example
+application:
+
+-   Werkzeug Test :class:`~werkzeug.Client`
+-   `MiniTwit Example`_
+
+.. _MiniTwit Example:
+   http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
"
03148dba6b26a2694da1d466584f50189c52e7b3,2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,examples/minitwit/README,examples/minitwit/README,examples/minitwit/README,Doc updates and typo fixes,"diff --git a/examples/minitwit/README b/examples/minitwit/README
index e47c8792..065674a9 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -10,7 +10,7 @@
 
     ~ How do I use it?
 
-      1. edit the configurtion in the minitwit.py file
+      1. edit the configuration in the minitwit.py file
 
       2. fire up a python shell and run this:
 
","diff --git a/examples/minitwit/README b/examples/minitwit/README
index e47c8792..065674a9 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -10,7 +10,7 @@
 
     ~ How do I use it?
 
-      1. edit the configurtion in the minitwit.py file
+      1. edit the configuration in the minitwit.py file
 
       2. fire up a python shell and run this:
 
"
03148dba6b26a2694da1d466584f50189c52e7b3,2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Doc updates and typo fixes,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 05f0689d..37e6cb5c 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -31,7 +31,7 @@ app = Flask(__name__)
 
 
 def connect_db():
-    """"""Returns a new database connection to the database.""""""
+    """"""Returns a new connection to the database.""""""
     return sqlite3.connect(DATABASE)
 
 
@@ -52,19 +52,19 @@ def query_db(query, args=(), one=False):
 
 
 def get_user_id(username):
-    """"""Convenience method to look up the id for a username""""""
+    """"""Convenience method to look up the id for a username.""""""
     rv = g.db.execute('select user_id from user where username = ?',
                        [username]).fetchone()
     return rv[0] if rv else None
 
 
 def format_datetime(timestamp):
-    """"""Format a timestamp for display""""""
+    """"""Format a timestamp for display.""""""
     return datetime.utcfromtimestamp(timestamp).strftime('%Y-%m-%d @ %H:%M')
 
 
 def gravatar_url(email, size=80):
-    """"""Return the gravatar image for the given email address""""""
+    """"""Return the gravatar image for the given email address.""""""
     return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \
         (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
@@ -138,7 +138,7 @@ def user_timeline(username):
 
 @app.route('/<username>/follow')
 def follow_user(username):
-    """"""Adds the current user as follower of the given user""""""
+    """"""Adds the current user as follower of the given user.""""""
     if not g.user:
         abort(401)
     whom_id = get_user_id(username)
@@ -153,7 +153,7 @@ def follow_user(username):
 
 @app.route('/<username>/unfollow')
 def unfollow_user(username):
-    """"""Removes the current user as follower of the given user""""""
+    """"""Removes the current user as follower of the given user.""""""
     if not g.user:
         abort(401)
     whom_id = get_user_id(username)
@@ -168,7 +168,7 @@ def unfollow_user(username):
 
 @app.route('/add_message', methods=['POST'])
 def add_message():
-    """"""Registers a new message for the user""""""
+    """"""Registers a new message for the user.""""""
     if 'user_id' not in session:
         abort(401)
     if request.form['text']:
@@ -182,7 +182,7 @@ def add_message():
 
 @app.route('/login', methods=['GET', 'POST'])
 def login():
-    """"""Logs the user in""""""
+    """"""Logs the user in.""""""
     if g.user:
         return redirect(url_for('timeline'))
     error = None
@@ -203,7 +203,7 @@ def login():
 
 @app.route('/register', methods=['GET', 'POST'])
 def register():
-    """"""Registers the user""""""
+    """"""Registers the user.""""""
     if g.user:
         return redirect(url_for('timeline'))
     error = None
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 05f0689d..37e6cb5c 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -31,7 +31,7 @@ app = Flask(__name__)
 
 
 def connect_db():
-    """"""Returns a new database connection to the database.""""""
+    """"""Returns a new connection to the database.""""""
     return sqlite3.connect(DATABASE)
 
 
@@ -52,19 +52,19 @@ def query_db(query, args=(), one=False):
 
 
 def get_user_id(username):
-    """"""Convenience method to look up the id for a username""""""
+    """"""Convenience method to look up the id for a username.""""""
     rv = g.db.execute('select user_id from user where username = ?',
                        [username]).fetchone()
     return rv[0] if rv else None
 
 
 def format_datetime(timestamp):
-    """"""Format a timestamp for display""""""
+    """"""Format a timestamp for display.""""""
     return datetime.utcfromtimestamp(timestamp).strftime('%Y-%m-%d @ %H:%M')
 
 
 def gravatar_url(email, size=80):
-    """"""Return the gravatar image for the given email address""""""
+    """"""Return the gravatar image for the given email address.""""""
     return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \
         (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
@@ -138,7 +138,7 @@ def user_timeline(username):
 
 @app.route('/<username>/follow')
 def follow_user(username):
-    """"""Adds the current user as follower of the given user""""""
+    """"""Adds the current user as follower of the given user.""""""
     if not g.user:
         abort(401)
     whom_id = get_user_id(username)
@@ -153,7 +153,7 @@ def follow_user(username):
 
 @app.route('/<username>/unfollow')
 def unfollow_user(username):
-    """"""Removes the current user as follower of the given user""""""
+    """"""Removes the current user as follower of the given user.""""""
     if not g.user:
         abort(401)
     whom_id = get_user_id(username)
@@ -168,7 +168,7 @@ def unfollow_user(username):
 
 @app.route('/add_message', methods=['POST'])
 def add_message():
-    """"""Registers a new message for the user""""""
+    """"""Registers a new message for the user.""""""
     if 'user_id' not in session:
         abort(401)
     if request.form['text']:
@@ -182,7 +182,7 @@ def add_message():
 
 @app.route('/login', methods=['GET', 'POST'])
 def login():
-    """"""Logs the user in""""""
+    """"""Logs the user in.""""""
     if g.user:
         return redirect(url_for('timeline'))
     error = None
@@ -203,7 +203,7 @@ def login():
 
 @app.route('/register', methods=['GET', 'POST'])
 def register():
-    """"""Registers the user""""""
+    """"""Registers the user.""""""
     if g.user:
         return redirect(url_for('timeline'))
     error = None
"
03148dba6b26a2694da1d466584f50189c52e7b3,2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,examples/minitwit/templates/timeline.html,examples/minitwit/templates/timeline.html,examples/minitwit/templates/timeline.html,Doc updates and typo fixes,"diff --git a/examples/minitwit/templates/timeline.html b/examples/minitwit/templates/timeline.html
index 892b8fcc..ea7d751b 100644
--- a/examples/minitwit/templates/timeline.html
+++ b/examples/minitwit/templates/timeline.html
@@ -43,7 +43,7 @@
       {{ message.text }}
       <small>&mdash; {{ message.pub_date|datetimeformat }}</small>
   {% else %}
-    <li><em>There are no messages so far.</em>
+    <li><em>There's no message so far.</em>
   {% endfor %}
   </ul>
 {% endblock %}
","diff --git a/examples/minitwit/templates/timeline.html b/examples/minitwit/templates/timeline.html
index 892b8fcc..ea7d751b 100644
--- a/examples/minitwit/templates/timeline.html
+++ b/examples/minitwit/templates/timeline.html
@@ -43,7 +43,7 @@
       {{ message.text }}
       <small>&mdash; {{ message.pub_date|datetimeformat }}</small>
   {% else %}
-    <li><em>There are no messages so far.</em>
+    <li><em>There's no message so far.</em>
   {% endfor %}
   </ul>
 {% endblock %}
"
2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,51c9829a9cdfa2bf301431f686d7a404cc7c5083,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Fixed couple of errors in docs.,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index 6b40921f..deeff8ca 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -9,7 +9,7 @@ What does Micro Mean?
 ---------------------
 
 The micro in microframework for me means on the one hand being small in
-size, complexity but on the other hand also that the complexity of the
+size and complexity but on the other hand also that the complexity of the
 applications that are written with these frameworks do not exceed a
 certain size.  A microframework like Flask sacrifices a few things in
 order to be approachable and to be as concise as possible.
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index 6b40921f..deeff8ca 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -9,7 +9,7 @@ What does Micro Mean?
 ---------------------
 
 The micro in microframework for me means on the one hand being small in
-size, complexity but on the other hand also that the complexity of the
+size and complexity but on the other hand also that the complexity of the
 applications that are written with these frameworks do not exceed a
 certain size.  A microframework like Flask sacrifices a few things in
 order to be approachable and to be as concise as possible.
"
2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,51c9829a9cdfa2bf301431f686d7a404cc7c5083,docs/index.rst,docs/index.rst,docs/index.rst,Fixed couple of errors in docs.,"diff --git a/docs/index.rst b/docs/index.rst
index 5c622fe6..cb7abf96 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -5,7 +5,7 @@ Welcome to Flask
    :alt: The Flask Logo with Subtitle
    :align: right
 
-Welcome to Flask's documentation.  This documentation is divided into
+Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
 you want to dive into all the internal parts of Flask, check out the
","diff --git a/docs/index.rst b/docs/index.rst
index 5c622fe6..cb7abf96 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -5,7 +5,7 @@ Welcome to Flask
    :alt: The Flask Logo with Subtitle
    :align: right
 
-Welcome to Flask's documentation.  This documentation is divided into
+Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
 :ref:`installation` and then heading over to the :ref:`quickstart`.  If
 you want to dive into all the internal parts of Flask, check out the
"
2f5a4f8dbc832b0daebcd66ea8b3969589191fa7,51c9829a9cdfa2bf301431f686d7a404cc7c5083,docs/installation.rst,docs/installation.rst,docs/installation.rst,Fixed couple of errors in docs.,"diff --git a/docs/installation.rst b/docs/installation.rst
index 89e5a680..f83d9c28 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -14,7 +14,7 @@ templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
 is behaving in a specific way that you can run it on different
 environments (for example on a local development server, on an Apache2, on
-lighttpd, on Google's appengine or whatever you have in mind).
+lighttpd, on Google's App Engine or whatever you have in mind).
 
 So how do you get all that on your computer in no time?  The most kick-ass
 method is virtualenv, so let's look at that first.
","diff --git a/docs/installation.rst b/docs/installation.rst
index 89e5a680..f83d9c28 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -14,7 +14,7 @@ templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
 is behaving in a specific way that you can run it on different
 environments (for example on a local development server, on an Apache2, on
-lighttpd, on Google's appengine or whatever you have in mind).
+lighttpd, on Google's App Engine or whatever you have in mind).
 
 So how do you get all that on your computer in no time?  The most kick-ass
 method is virtualenv, so let's look at that first.
"
51c9829a9cdfa2bf301431f686d7a404cc7c5083,36071ca1f42a26ef327e9d14e4909a8c92cd4fae,docs/deploying.rst,docs/deploying.rst,docs/deploying.rst,added in example tornado and gevent usage for flask integration,"diff --git a/docs/deploying.rst b/docs/deploying.rst
index ea812c17..7045e51e 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -223,6 +223,44 @@ For more information consult the `mod_wsgi wiki`_.
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
 
 
+
+Tornado
+--------
+
+`Tornado`_ is an open source version of the scalable, non-blocking web server and tools that power `FriendFeed`_.
+Because it is non-blocking and uses epoll, it can handle thousands of simultaneous standing connections, which means it is ideal for real-time web services.
+Integrating this service with Flask is a trivial task::
+
+    
+    from tornado.wsgi import WSGIContainer
+    from tornado.httpserver import HTTPServer
+    from tornado.ioloop import IOLoop
+    from yourapplication import app
+    
+    http_server = HTTPServer(WSGIContainer(app))
+    http_server.listen(5000)
+    IOLoop.instance().start()
+
+
+.. _Tornado: http://www.tornadoweb.org/
+.. _FriendFeed: http://friendfeed.com/
+
+
+Gevent
+-------
+
+`Gevent`_ is a coroutine-based Python networking library that uses `greenlet`_ to provide a high-level synchronous API on top of `libevent`_ event loop::
+
+    from gevent.wsgi import WSGIServer
+    from yourapplication import app
+
+    http_server = WSGIServer(('', 5000), app)
+    http_server.serve_forever()
+
+.. _Gevent: http://www.gevent.org/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+.. _libevent: http://monkey.org/~provos/libevent/
+
 CGI
 ---
 
@@ -265,3 +303,4 @@ In Apache for example you can put a like like this into the config:
     ScriptName /app /path/to/the/application.cgi
 
 For more information consult the documentation of your webserver.
+
","diff --git a/docs/deploying.rst b/docs/deploying.rst
index ea812c17..7045e51e 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -223,6 +223,44 @@ For more information consult the `mod_wsgi wiki`_.
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
 
 
+
+Tornado
+--------
+
+`Tornado`_ is an open source version of the scalable, non-blocking web server and tools that power `FriendFeed`_.
+Because it is non-blocking and uses epoll, it can handle thousands of simultaneous standing connections, which means it is ideal for real-time web services.
+Integrating this service with Flask is a trivial task::
+
+    
+    from tornado.wsgi import WSGIContainer
+    from tornado.httpserver import HTTPServer
+    from tornado.ioloop import IOLoop
+    from yourapplication import app
+    
+    http_server = HTTPServer(WSGIContainer(app))
+    http_server.listen(5000)
+    IOLoop.instance().start()
+
+
+.. _Tornado: http://www.tornadoweb.org/
+.. _FriendFeed: http://friendfeed.com/
+
+
+Gevent
+-------
+
+`Gevent`_ is a coroutine-based Python networking library that uses `greenlet`_ to provide a high-level synchronous API on top of `libevent`_ event loop::
+
+    from gevent.wsgi import WSGIServer
+    from yourapplication import app
+
+    http_server = WSGIServer(('', 5000), app)
+    http_server.serve_forever()
+
+.. _Gevent: http://www.gevent.org/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+.. _libevent: http://monkey.org/~provos/libevent/
+
 CGI
 ---
 
@@ -265,3 +303,4 @@ In Apache for example you can put a like like this into the config:
     ScriptName /app /path/to/the/application.cgi
 
 For more information consult the documentation of your webserver.
+
"
36071ca1f42a26ef327e9d14e4909a8c92cd4fae,a01e8b49ca66608f0bd46134ff02deeb5724c799,flask.py,flask.py,flask.py,Fixed a documentation error and implemented template context processors.,"diff --git a/flask.py b/flask.py
index 0c3a8b32..b45c49a4 100644
--- a/flask.py
+++ b/flask.py
@@ -130,6 +130,18 @@ def render_template_string(source, **context):
     return current_app.jinja_env.from_string(source).render(context)
 
 
+def _default_template_ctx_processor():
+    """"""Default template context processor.  Injects `request`,
+    `session` and `g`.
+    """"""
+    reqctx = _request_ctx_stack.top
+    return dict(
+        request=reqctx.request,
+        session=reqctx.session,
+        g=reqctx.g
+    )
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -216,6 +228,14 @@ class Flask(object):
         #: To register a function here use the :meth:`request_shtdown`
         #: decorator.
         self.request_shutdown_funcs = []
+
+        #: a list of functions that are called without arguments
+        #: to populate the template context.  Each returns a dictionary
+        #: that the template context is updated with.
+        #: To register a function here, use the :meth:`context_processor`
+        #: decorator.
+        self.template_context_processors = [_default_template_ctx_processor]
+
         self.url_map = Map()
 
         if self.static_path is not None:
@@ -248,9 +268,8 @@ class Flask(object):
                         to add extra variables.
         """"""
         reqctx = _request_ctx_stack.top
-        context['request'] = reqctx.request
-        context['session'] = reqctx.session
-        context['g'] = reqctx.g
+        for func in self.template_context_processors:
+            context.update(func())
 
     def run(self, host='localhost', port=5000, **options):
         """"""Runs the application on a local development server.  If the
@@ -325,7 +344,7 @@ class Flask(object):
         :param session: the session to be saved (a
                         :class:`~werkzeug.contrib.securecookie.SecureCookie`
                         object)
-        :param request: an instance of :attr:`response_class`
+        :param response: an instance of :attr:`response_class`
         """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
@@ -462,6 +481,11 @@ class Flask(object):
         self.request_shutdown_funcs.append(f)
         return f
 
+    def context_processor(self, f):
+        """"""Registers a template context processor function.""""""
+        self.template_context_processors.append(f)
+        return f
+
     def match_request(self):
         """"""Matches the current request against the URL map and also
         stores the endpoint and view arguments on the request object
","diff --git a/flask.py b/flask.py
index 0c3a8b32..b45c49a4 100644
--- a/flask.py
+++ b/flask.py
@@ -130,6 +130,18 @@ def render_template_string(source, **context):
     return current_app.jinja_env.from_string(source).render(context)
 
 
+def _default_template_ctx_processor():
+    """"""Default template context processor.  Injects `request`,
+    `session` and `g`.
+    """"""
+    reqctx = _request_ctx_stack.top
+    return dict(
+        request=reqctx.request,
+        session=reqctx.session,
+        g=reqctx.g
+    )
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -216,6 +228,14 @@ class Flask(object):
         #: To register a function here use the :meth:`request_shtdown`
         #: decorator.
         self.request_shutdown_funcs = []
+
+        #: a list of functions that are called without arguments
+        #: to populate the template context.  Each returns a dictionary
+        #: that the template context is updated with.
+        #: To register a function here, use the :meth:`context_processor`
+        #: decorator.
+        self.template_context_processors = [_default_template_ctx_processor]
+
         self.url_map = Map()
 
         if self.static_path is not None:
@@ -248,9 +268,8 @@ class Flask(object):
                         to add extra variables.
         """"""
         reqctx = _request_ctx_stack.top
-        context['request'] = reqctx.request
-        context['session'] = reqctx.session
-        context['g'] = reqctx.g
+        for func in self.template_context_processors:
+            context.update(func())
 
     def run(self, host='localhost', port=5000, **options):
         """"""Runs the application on a local development server.  If the
@@ -325,7 +344,7 @@ class Flask(object):
         :param session: the session to be saved (a
                         :class:`~werkzeug.contrib.securecookie.SecureCookie`
                         object)
-        :param request: an instance of :attr:`response_class`
+        :param response: an instance of :attr:`response_class`
         """"""
         if session is not None:
             session.save_cookie(response, self.session_cookie_name)
@@ -462,6 +481,11 @@ class Flask(object):
         self.request_shutdown_funcs.append(f)
         return f
 
+    def context_processor(self, f):
+        """"""Registers a template context processor function.""""""
+        self.template_context_processors.append(f)
+        return f
+
     def match_request(self):
         """"""Matches the current request against the URL map and also
         stores the endpoint and view arguments on the request object
"
a01e8b49ca66608f0bd46134ff02deeb5724c799,de03143f6ecf9a36dd32f16f07309c64d4de03b0,flask_tests.py,,flask_tests.py,Added some basic tests for flask itself,"diff --git a/flask_tests.py b/flask_tests.py
new file mode 100644
index 00000000..8308e19e
--- /dev/null
+++ b/flask_tests.py
@@ -0,0 +1,74 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flask Tests
+    ~~~~~~~~~~~
+
+    Tests Flask itself.  The majority of Flask is already tested
+    as part of Werkzeug.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import flask
+import unittest
+import tempfile
+
+
+class ContextTestCase(unittest.TestCase):
+
+    def test_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+        @app.route('/meh')
+        def meh():
+            return flask.request.url
+
+        with app.test_request_context('/?name=World'):
+            assert index() == 'Hello World!'
+        with app.test_request_context('/meh'):
+            assert meh() == 'http://localhost/meh'
+
+    def test_request_dispatching(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.request.method
+        @app.route('/more', methods=['GET', 'POST'])
+        def more():
+            return flask.request.method
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
+    def test_session(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/set', methods=['POST'])
+        def set():
+            flask.session['value'] = flask.request.form['value']
+            return 'value set'
+        @app.route('/get')
+        def get():
+            return flask.session['value']
+
+        c = app.test_client()
+        assert c.post('/set', data={'value': '42'}).data == 'value set'
+        assert c.get('/get').data == '42'
+
+
+if __name__ == '__main__':
+    unittest.main()
","diff --git a/flask_tests.py b/flask_tests.py
new file mode 100644
index 00000000..8308e19e
--- /dev/null
+++ b/flask_tests.py
@@ -0,0 +1,74 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flask Tests
+    ~~~~~~~~~~~
+
+    Tests Flask itself.  The majority of Flask is already tested
+    as part of Werkzeug.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import flask
+import unittest
+import tempfile
+
+
+class ContextTestCase(unittest.TestCase):
+
+    def test_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+        @app.route('/meh')
+        def meh():
+            return flask.request.url
+
+        with app.test_request_context('/?name=World'):
+            assert index() == 'Hello World!'
+        with app.test_request_context('/meh'):
+            assert meh() == 'http://localhost/meh'
+
+    def test_request_dispatching(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.request.method
+        @app.route('/more', methods=['GET', 'POST'])
+        def more():
+            return flask.request.method
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
+    def test_session(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/set', methods=['POST'])
+        def set():
+            flask.session['value'] = flask.request.form['value']
+            return 'value set'
+        @app.route('/get')
+        def get():
+            return flask.session['value']
+
+        c = app.test_client()
+        assert c.post('/set', data={'value': '42'}).data == 'value set'
+        assert c.get('/get').data == '42'
+
+
+if __name__ == '__main__':
+    unittest.main()
"
de03143f6ecf9a36dd32f16f07309c64d4de03b0,4affedec356ad8c9e6a107578f03fc7f5c615064,flask_tests.py,flask_tests.py,flask_tests.py,Testing URL generation,"diff --git a/flask_tests.py b/flask_tests.py
index 8308e19e..298f39b8 100644
--- a/flask_tests.py
+++ b/flask_tests.py
@@ -69,6 +69,14 @@ class ContextTestCase(unittest.TestCase):
         assert c.post('/set', data={'value': '42'}).data == 'value set'
         assert c.get('/get').data == '42'
 
+    def test_url_generation(self):
+        app = flask.Flask(__name__)
+        @app.route('/hello/<name>', methods=['POST'])
+        def hello():
+            pass
+        with app.test_request_context():
+            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+
 
 if __name__ == '__main__':
     unittest.main()
","diff --git a/flask_tests.py b/flask_tests.py
index 8308e19e..298f39b8 100644
--- a/flask_tests.py
+++ b/flask_tests.py
@@ -69,6 +69,14 @@ class ContextTestCase(unittest.TestCase):
         assert c.post('/set', data={'value': '42'}).data == 'value set'
         assert c.get('/get').data == '42'
 
+    def test_url_generation(self):
+        app = flask.Flask(__name__)
+        @app.route('/hello/<name>', methods=['POST'])
+        def hello():
+            pass
+        with app.test_request_context():
+            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+
 
 if __name__ == '__main__':
     unittest.main()
"
4affedec356ad8c9e6a107578f03fc7f5c615064,959b5df00431c436474c5abca304e631c0de7721,setup.py,setup.py,setup.py,Flask can depend on Jinja2 and Werkzeug now that they are relased.,"diff --git a/setup.py b/setup.py
index a0bddf4e..e5f160ad 100644
--- a/setup.py
+++ b/setup.py
@@ -13,8 +13,7 @@ setup(
     zip_safe=False,
     platforms='any',
     install_requires=[
-        ## disabled until release, install yourself
-        # 'Werkzeug',
-        # 'Jinja2'
+        'Werkzeug>=0.6.1',
+        'Jinja2>=2.4'
     ]
 )
","diff --git a/setup.py b/setup.py
index a0bddf4e..e5f160ad 100644
--- a/setup.py
+++ b/setup.py
@@ -13,8 +13,7 @@ setup(
     zip_safe=False,
     platforms='any',
     install_requires=[
-        ## disabled until release, install yourself
-        # 'Werkzeug',
-        # 'Jinja2'
+        'Werkzeug>=0.6.1',
+        'Jinja2>=2.4'
     ]
 )
"
959b5df00431c436474c5abca304e631c0de7721,a42728568e18bedf588be2357b56021ab85b9fad,README,README,README,Improved Flask README regarding Jinja2 and Werkzeug,"diff --git a/README b/README
index f3a8a03e..dc70692d 100644
--- a/README
+++ b/README
@@ -18,10 +18,10 @@
 
     ~ What do I need?
 
-      Currently the development versions of Jinja2 and Werkzeug.
-      Because of Flask I did some refactoring in Werkzeug and
-      Jinja2 and the next versions (out April 10th) will contain
-      these changes.
+      Jinja 2.4 and Werkzeug 0.6.1.  `easy_install` will
+      install them for you if you do `easy_install Flask==dev`.
+      I encourage you to use a virtualenv.  Check the docs for
+      complete installation and usage instructions.
 
     ~ Where are the docs?
 
","diff --git a/README b/README
index f3a8a03e..dc70692d 100644
--- a/README
+++ b/README
@@ -18,10 +18,10 @@
 
     ~ What do I need?
 
-      Currently the development versions of Jinja2 and Werkzeug.
-      Because of Flask I did some refactoring in Werkzeug and
-      Jinja2 and the next versions (out April 10th) will contain
-      these changes.
+      Jinja 2.4 and Werkzeug 0.6.1.  `easy_install` will
+      install them for you if you do `easy_install Flask==dev`.
+      I encourage you to use a virtualenv.  Check the docs for
+      complete installation and usage instructions.
 
     ~ Where are the docs?
 
"
a42728568e18bedf588be2357b56021ab85b9fad,8009bd986940378bba1399dbfce90d03e441467b,docs/deploying.rst,docs/deploying.rst,docs/deploying.rst,Fixed the mod_wsgi docs. Thanks Graham,"diff --git a/docs/deploying.rst b/docs/deploying.rst
index 7045e51e..e04112f0 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -204,7 +204,7 @@ application under a different user for security reasons:
     <VirtualHost *>
         ServerName example.com
 
-        WSGIDaemonProcess yourapplication user=user1 group=group1 processes=1 threads=5
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
         WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
 
         <Directory /var/www/yourapplication>
","diff --git a/docs/deploying.rst b/docs/deploying.rst
index 7045e51e..e04112f0 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -204,7 +204,7 @@ application under a different user for security reasons:
     <VirtualHost *>
         ServerName example.com
 
-        WSGIDaemonProcess yourapplication user=user1 group=group1 processes=1 threads=5
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
         WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
 
         <Directory /var/www/yourapplication>
"
8009bd986940378bba1399dbfce90d03e441467b,08f1f0dc32004fae01cf96d1eed84e6461e698e5,Makefile,,Makefile,Added more Flask tests,"diff --git a/Makefile b/Makefile
new file mode 100644
index 00000000..0eabe5d8
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,11 @@
+.PHONY: clean-pyc test
+
+all: clean-pyc test
+
+test:
+	python tests/flask_tests.py
+
+clean-pyc:
+	find . -name '*.pyc' -exec rm -f {} +
+	find . -name '*.pyo' -exec rm -f {} +
+	find . -name '*~' -exec rm -f {} +
","diff --git a/Makefile b/Makefile
new file mode 100644
index 00000000..0eabe5d8
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,11 @@
+.PHONY: clean-pyc test
+
+all: clean-pyc test
+
+test:
+	python tests/flask_tests.py
+
+clean-pyc:
+	find . -name '*.pyc' -exec rm -f {} +
+	find . -name '*.pyo' -exec rm -f {} +
+	find . -name '*~' -exec rm -f {} +
"
8009bd986940378bba1399dbfce90d03e441467b,08f1f0dc32004fae01cf96d1eed84e6461e698e5,flask_tests.py,flask_tests.py,,Added more Flask tests,"diff --git a/flask_tests.py b/flask_tests.py
deleted file mode 100644
index 298f39b8..00000000
--- a/flask_tests.py
+++ /dev/null
@@ -1,82 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    Flask Tests
-    ~~~~~~~~~~~
-
-    Tests Flask itself.  The majority of Flask is already tested
-    as part of Werkzeug.
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from __future__ import with_statement
-import flask
-import unittest
-import tempfile
-
-
-class ContextTestCase(unittest.TestCase):
-
-    def test_context_binding(self):
-        app = flask.Flask(__name__)
-        @app.route('/')
-        def index():
-            return 'Hello %s!' % flask.request.args['name']
-        @app.route('/meh')
-        def meh():
-            return flask.request.url
-
-        with app.test_request_context('/?name=World'):
-            assert index() == 'Hello World!'
-        with app.test_request_context('/meh'):
-            assert meh() == 'http://localhost/meh'
-
-    def test_request_dispatching(self):
-        app = flask.Flask(__name__)
-        @app.route('/')
-        def index():
-            return flask.request.method
-        @app.route('/more', methods=['GET', 'POST'])
-        def more():
-            return flask.request.method
-
-        c = app.test_client()
-        assert c.get('/').data == 'GET'
-        rv = c.post('/')
-        assert rv.status_code == 405
-        assert sorted(rv.allow) == ['GET', 'HEAD']
-        rv = c.head('/')
-        assert rv.status_code == 200
-        assert not rv.data # head truncates
-        assert c.post('/more').data == 'POST'
-        assert c.get('/more').data == 'GET'
-        rv = c.delete('/more')
-        assert rv.status_code == 405
-        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
-
-    def test_session(self):
-        app = flask.Flask(__name__)
-        app.secret_key = 'testkey'
-        @app.route('/set', methods=['POST'])
-        def set():
-            flask.session['value'] = flask.request.form['value']
-            return 'value set'
-        @app.route('/get')
-        def get():
-            return flask.session['value']
-
-        c = app.test_client()
-        assert c.post('/set', data={'value': '42'}).data == 'value set'
-        assert c.get('/get').data == '42'
-
-    def test_url_generation(self):
-        app = flask.Flask(__name__)
-        @app.route('/hello/<name>', methods=['POST'])
-        def hello():
-            pass
-        with app.test_request_context():
-            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
-
-
-if __name__ == '__main__':
-    unittest.main()
","diff --git a/flask_tests.py b/flask_tests.py
deleted file mode 100644
index 298f39b8..00000000
--- a/flask_tests.py
+++ /dev/null
@@ -1,82 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    Flask Tests
-    ~~~~~~~~~~~
-
-    Tests Flask itself.  The majority of Flask is already tested
-    as part of Werkzeug.
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from __future__ import with_statement
-import flask
-import unittest
-import tempfile
-
-
-class ContextTestCase(unittest.TestCase):
-
-    def test_context_binding(self):
-        app = flask.Flask(__name__)
-        @app.route('/')
-        def index():
-            return 'Hello %s!' % flask.request.args['name']
-        @app.route('/meh')
-        def meh():
-            return flask.request.url
-
-        with app.test_request_context('/?name=World'):
-            assert index() == 'Hello World!'
-        with app.test_request_context('/meh'):
-            assert meh() == 'http://localhost/meh'
-
-    def test_request_dispatching(self):
-        app = flask.Flask(__name__)
-        @app.route('/')
-        def index():
-            return flask.request.method
-        @app.route('/more', methods=['GET', 'POST'])
-        def more():
-            return flask.request.method
-
-        c = app.test_client()
-        assert c.get('/').data == 'GET'
-        rv = c.post('/')
-        assert rv.status_code == 405
-        assert sorted(rv.allow) == ['GET', 'HEAD']
-        rv = c.head('/')
-        assert rv.status_code == 200
-        assert not rv.data # head truncates
-        assert c.post('/more').data == 'POST'
-        assert c.get('/more').data == 'GET'
-        rv = c.delete('/more')
-        assert rv.status_code == 405
-        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
-
-    def test_session(self):
-        app = flask.Flask(__name__)
-        app.secret_key = 'testkey'
-        @app.route('/set', methods=['POST'])
-        def set():
-            flask.session['value'] = flask.request.form['value']
-            return 'value set'
-        @app.route('/get')
-        def get():
-            return flask.session['value']
-
-        c = app.test_client()
-        assert c.post('/set', data={'value': '42'}).data == 'value set'
-        assert c.get('/get').data == '42'
-
-    def test_url_generation(self):
-        app = flask.Flask(__name__)
-        @app.route('/hello/<name>', methods=['POST'])
-        def hello():
-            pass
-        with app.test_request_context():
-            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
-
-
-if __name__ == '__main__':
-    unittest.main()
"
8009bd986940378bba1399dbfce90d03e441467b,08f1f0dc32004fae01cf96d1eed84e6461e698e5,tests/flask_tests.py,,tests/flask_tests.py,Added more Flask tests,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
new file mode 100644
index 00000000..515a25c3
--- /dev/null
+++ b/tests/flask_tests.py
@@ -0,0 +1,179 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flask Tests
+    ~~~~~~~~~~~
+
+    Tests Flask itself.  The majority of Flask is already tested
+    as part of Werkzeug.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import flask
+import unittest
+import tempfile
+
+
+class ContextTestCase(unittest.TestCase):
+
+    def test_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+        @app.route('/meh')
+        def meh():
+            return flask.request.url
+
+        with app.test_request_context('/?name=World'):
+            assert index() == 'Hello World!'
+        with app.test_request_context('/meh'):
+            assert meh() == 'http://localhost/meh'
+
+
+class BasicFunctionality(unittest.TestCase):
+
+    def test_request_dispatching(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.request.method
+        @app.route('/more', methods=['GET', 'POST'])
+        def more():
+            return flask.request.method
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
+    def test_session(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/set', methods=['POST'])
+        def set():
+            flask.session['value'] = flask.request.form['value']
+            return 'value set'
+        @app.route('/get')
+        def get():
+            return flask.session['value']
+
+        c = app.test_client()
+        assert c.post('/set', data={'value': '42'}).data == 'value set'
+        assert c.get('/get').data == '42'
+
+    def test_request_processing(self):
+        app = flask.Flask(__name__)
+        evts = []
+        @app.request_init
+        def before_request():
+            evts.append('before')
+        @app.request_shutdown
+        def after_request(response):
+            response.data += '|after'
+            evts.append('after')
+            return response
+        @app.route('/')
+        def index():
+            assert 'before' in evts
+            assert 'after' not in evts
+            return 'request'
+        assert 'after' not in evts
+        rv = app.test_client().get('/').data
+        assert 'after' in evts
+        assert rv == 'request|after'
+
+    def test_error_handling(self):
+        app = flask.Flask(__name__)
+        @app.errorhandler(404)
+        def not_found(e):
+            return 'not found', 404
+        @app.errorhandler(500)
+        def internal_server_error(e):
+            return 'internal server error', 500
+        @app.route('/')
+        def index():
+            flask.abort(404)
+        @app.route('/error')
+        def error():
+            1/0
+        c = app.test_client()
+        rv = c.get('/')
+        assert rv.status_code == 404
+        assert rv.data == 'not found'
+        rv = c.get('/error')
+        assert rv.status_code == 500
+        assert 'internal server error' in rv.data
+
+    def test_response_creation(self):
+        app = flask.Flask(__name__)
+        @app.route('/unicode')
+        def from_unicode():
+            return u'Hällo Wörld'
+        @app.route('/string')
+        def from_string():
+            return u'Hällo Wörld'.encode('utf-8')
+        @app.route('/args')
+        def from_tuple():
+            return 'Meh', 400, {'X-Foo': 'Testing'}, 'text/plain'
+        c = app.test_client()
+        assert c.get('/unicode').data == u'Hällo Wörld'.encode('utf-8')
+        assert c.get('/string').data == u'Hällo Wörld'.encode('utf-8')
+        rv = c.get('/args')
+        assert rv.data == 'Meh'
+        assert rv.headers['X-Foo'] == 'Testing'
+        assert rv.status_code == 400
+        assert rv.mimetype == 'text/plain'
+
+    def test_url_generation(self):
+        app = flask.Flask(__name__)
+        @app.route('/hello/<name>', methods=['POST'])
+        def hello():
+            pass
+        with app.test_request_context():
+            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+
+
+class Templating(unittest.TestCase):
+
+    def test_context_processing(self):
+        app = flask.Flask(__name__)
+        @app.context_processor
+        def context_processor():
+            return {'injected_value': 42}
+        @app.route('/')
+        def index():
+            return flask.render_template('context_template.html', value=23)
+        rv = app.test_client().get('/')
+        assert rv.data == '<p>23|42'
+
+    def test_escaping(self):
+        text = '<p>Hello World!'
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.render_template('escaping_template.html', text=text,
+                                         html=flask.Markup(text))
+        lines = app.test_client().get('/').data.splitlines()
+        assert lines == [
+            '&lt;p&gt;Hello World!',
+            '<p>Hello World!',
+            '<p>Hello World!',
+            '<p>Hello World!',
+            '&lt;p&gt;Hello World!',
+            '<p>Hello World!'
+        ]
+
+
+if __name__ == '__main__':
+    unittest.main()
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
new file mode 100644
index 00000000..515a25c3
--- /dev/null
+++ b/tests/flask_tests.py
@@ -0,0 +1,179 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flask Tests
+    ~~~~~~~~~~~
+
+    Tests Flask itself.  The majority of Flask is already tested
+    as part of Werkzeug.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import flask
+import unittest
+import tempfile
+
+
+class ContextTestCase(unittest.TestCase):
+
+    def test_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+        @app.route('/meh')
+        def meh():
+            return flask.request.url
+
+        with app.test_request_context('/?name=World'):
+            assert index() == 'Hello World!'
+        with app.test_request_context('/meh'):
+            assert meh() == 'http://localhost/meh'
+
+
+class BasicFunctionality(unittest.TestCase):
+
+    def test_request_dispatching(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.request.method
+        @app.route('/more', methods=['GET', 'POST'])
+        def more():
+            return flask.request.method
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
+    def test_session(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/set', methods=['POST'])
+        def set():
+            flask.session['value'] = flask.request.form['value']
+            return 'value set'
+        @app.route('/get')
+        def get():
+            return flask.session['value']
+
+        c = app.test_client()
+        assert c.post('/set', data={'value': '42'}).data == 'value set'
+        assert c.get('/get').data == '42'
+
+    def test_request_processing(self):
+        app = flask.Flask(__name__)
+        evts = []
+        @app.request_init
+        def before_request():
+            evts.append('before')
+        @app.request_shutdown
+        def after_request(response):
+            response.data += '|after'
+            evts.append('after')
+            return response
+        @app.route('/')
+        def index():
+            assert 'before' in evts
+            assert 'after' not in evts
+            return 'request'
+        assert 'after' not in evts
+        rv = app.test_client().get('/').data
+        assert 'after' in evts
+        assert rv == 'request|after'
+
+    def test_error_handling(self):
+        app = flask.Flask(__name__)
+        @app.errorhandler(404)
+        def not_found(e):
+            return 'not found', 404
+        @app.errorhandler(500)
+        def internal_server_error(e):
+            return 'internal server error', 500
+        @app.route('/')
+        def index():
+            flask.abort(404)
+        @app.route('/error')
+        def error():
+            1/0
+        c = app.test_client()
+        rv = c.get('/')
+        assert rv.status_code == 404
+        assert rv.data == 'not found'
+        rv = c.get('/error')
+        assert rv.status_code == 500
+        assert 'internal server error' in rv.data
+
+    def test_response_creation(self):
+        app = flask.Flask(__name__)
+        @app.route('/unicode')
+        def from_unicode():
+            return u'Hällo Wörld'
+        @app.route('/string')
+        def from_string():
+            return u'Hällo Wörld'.encode('utf-8')
+        @app.route('/args')
+        def from_tuple():
+            return 'Meh', 400, {'X-Foo': 'Testing'}, 'text/plain'
+        c = app.test_client()
+        assert c.get('/unicode').data == u'Hällo Wörld'.encode('utf-8')
+        assert c.get('/string').data == u'Hällo Wörld'.encode('utf-8')
+        rv = c.get('/args')
+        assert rv.data == 'Meh'
+        assert rv.headers['X-Foo'] == 'Testing'
+        assert rv.status_code == 400
+        assert rv.mimetype == 'text/plain'
+
+    def test_url_generation(self):
+        app = flask.Flask(__name__)
+        @app.route('/hello/<name>', methods=['POST'])
+        def hello():
+            pass
+        with app.test_request_context():
+            assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+
+
+class Templating(unittest.TestCase):
+
+    def test_context_processing(self):
+        app = flask.Flask(__name__)
+        @app.context_processor
+        def context_processor():
+            return {'injected_value': 42}
+        @app.route('/')
+        def index():
+            return flask.render_template('context_template.html', value=23)
+        rv = app.test_client().get('/')
+        assert rv.data == '<p>23|42'
+
+    def test_escaping(self):
+        text = '<p>Hello World!'
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return flask.render_template('escaping_template.html', text=text,
+                                         html=flask.Markup(text))
+        lines = app.test_client().get('/').data.splitlines()
+        assert lines == [
+            '&lt;p&gt;Hello World!',
+            '<p>Hello World!',
+            '<p>Hello World!',
+            '<p>Hello World!',
+            '&lt;p&gt;Hello World!',
+            '<p>Hello World!'
+        ]
+
+
+if __name__ == '__main__':
+    unittest.main()
"
8009bd986940378bba1399dbfce90d03e441467b,08f1f0dc32004fae01cf96d1eed84e6461e698e5,tests/templates/context_template.html,,tests/templates/context_template.html,Added more Flask tests,"diff --git a/tests/templates/context_template.html b/tests/templates/context_template.html
new file mode 100644
index 00000000..fadf3e5d
--- /dev/null
+++ b/tests/templates/context_template.html
@@ -0,0 +1 @@
+<p>{{ value }}|{{ injected_value }}
","diff --git a/tests/templates/context_template.html b/tests/templates/context_template.html
new file mode 100644
index 00000000..fadf3e5d
--- /dev/null
+++ b/tests/templates/context_template.html
@@ -0,0 +1 @@
+<p>{{ value }}|{{ injected_value }}
"
8009bd986940378bba1399dbfce90d03e441467b,08f1f0dc32004fae01cf96d1eed84e6461e698e5,tests/templates/escaping_template.html,,tests/templates/escaping_template.html,Added more Flask tests,"diff --git a/tests/templates/escaping_template.html b/tests/templates/escaping_template.html
new file mode 100644
index 00000000..dc47644d
--- /dev/null
+++ b/tests/templates/escaping_template.html
@@ -0,0 +1,6 @@
+{{ text }}
+{{ html }}
+{% autoescape false %}{{ text }}
+{{ html }}{% endautoescape %}
+{% autoescape true %}{{ text }}
+{{ html }}{% endautoescape %}
","diff --git a/tests/templates/escaping_template.html b/tests/templates/escaping_template.html
new file mode 100644
index 00000000..dc47644d
--- /dev/null
+++ b/tests/templates/escaping_template.html
@@ -0,0 +1,6 @@
+{{ text }}
+{{ html }}
+{% autoescape false %}{{ text }}
+{{ html }}{% endautoescape %}
+{% autoescape true %}{{ text }}
+{{ html }}{% endautoescape %}
"
08f1f0dc32004fae01cf96d1eed84e6461e698e5,ca520fb7e4c29afccc637e61c11429a0f3e8d5ad,flask.py,flask.py,flask.py,"Static files are active in the WSGI app now, not just the server.","diff --git a/flask.py b/flask.py
index b45c49a4..68e25ade 100644
--- a/flask.py
+++ b/flask.py
@@ -16,7 +16,8 @@ from threading import local
 from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, cached_property
+     LocalStack, LocalProxy, create_environ, cached_property, \
+     SharedDataMiddleware
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -241,6 +242,9 @@ class Flask(object):
         if self.static_path is not None:
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
+            self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
+                self.static_path: (self.package_name, 'static')
+            })
 
         #: the Jinja2 environment.  It is created from the
         #: :attr:`jinja_options` and the loader that is returned
@@ -286,10 +290,6 @@ class Flask(object):
         from werkzeug import run_simple
         if 'debug' in options:
             self.debug = options.pop('debug')
-        if self.static_path is not None:
-            options['static_files'] = {
-                self.static_path:   (self.package_name, 'static')
-            }
         options.setdefault('use_reloader', self.debug)
         options.setdefault('use_debugger', self.debug)
         return run_simple(host, port, self, **options)
","diff --git a/flask.py b/flask.py
index b45c49a4..68e25ade 100644
--- a/flask.py
+++ b/flask.py
@@ -16,7 +16,8 @@ from threading import local
 from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, cached_property
+     LocalStack, LocalProxy, create_environ, cached_property, \
+     SharedDataMiddleware
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -241,6 +242,9 @@ class Flask(object):
         if self.static_path is not None:
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
+            self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
+                self.static_path: (self.package_name, 'static')
+            })
 
         #: the Jinja2 environment.  It is created from the
         #: :attr:`jinja_options` and the loader that is returned
@@ -286,10 +290,6 @@ class Flask(object):
         from werkzeug import run_simple
         if 'debug' in options:
             self.debug = options.pop('debug')
-        if self.static_path is not None:
-            options['static_files'] = {
-                self.static_path:   (self.package_name, 'static')
-            }
         options.setdefault('use_reloader', self.debug)
         options.setdefault('use_debugger', self.debug)
         return run_simple(host, port, self, **options)
"
08f1f0dc32004fae01cf96d1eed84e6461e698e5,ca520fb7e4c29afccc637e61c11429a0f3e8d5ad,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Static files are active in the WSGI app now, not just the server.","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 515a25c3..dec05bea 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -143,6 +143,15 @@ class BasicFunctionality(unittest.TestCase):
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
 
+    def test_static_files(self):
+        app = flask.Flask(__name__)
+        rv = app.test_client().get('/static/index.html')
+        assert rv.status_code == 200
+        assert rv.data.strip() == '<h1>Hello World!</h1>'
+        with app.test_request_context():
+            assert flask.url_for('static', filename='index.html') \
+                == '/static/index.html'
+
 
 class Templating(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 515a25c3..dec05bea 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -143,6 +143,15 @@ class BasicFunctionality(unittest.TestCase):
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
 
+    def test_static_files(self):
+        app = flask.Flask(__name__)
+        rv = app.test_client().get('/static/index.html')
+        assert rv.status_code == 200
+        assert rv.data.strip() == '<h1>Hello World!</h1>'
+        with app.test_request_context():
+            assert flask.url_for('static', filename='index.html') \
+                == '/static/index.html'
+
 
 class Templating(unittest.TestCase):
 
"
08f1f0dc32004fae01cf96d1eed84e6461e698e5,ca520fb7e4c29afccc637e61c11429a0f3e8d5ad,tests/static/index.html,,tests/static/index.html,"Static files are active in the WSGI app now, not just the server.","diff --git a/tests/static/index.html b/tests/static/index.html
new file mode 100644
index 00000000..de8b69b6
--- /dev/null
+++ b/tests/static/index.html
@@ -0,0 +1 @@
+<h1>Hello World!</h1>
","diff --git a/tests/static/index.html b/tests/static/index.html
new file mode 100644
index 00000000..de8b69b6
--- /dev/null
+++ b/tests/static/index.html
@@ -0,0 +1 @@
+<h1>Hello World!</h1>
"
ca520fb7e4c29afccc637e61c11429a0f3e8d5ad,2d9bb692728fd76b19e467499caa4f5fcb07aede,flask.py,flask.py,flask.py,Flask now runs without the presence of pkg_resources as well.,"diff --git a/flask.py b/flask.py
index 68e25ade..08376993 100644
--- a/flask.py
+++ b/flask.py
@@ -11,10 +11,10 @@
 """"""
 import os
 import sys
-import pkg_resources
+
 from threading import local
 from contextlib import contextmanager
-from jinja2 import Environment, PackageLoader
+from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
      SharedDataMiddleware
@@ -27,6 +27,15 @@ from werkzeug.contrib.securecookie import SecureCookie
 from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
+# use pkg_resource if that works, otherwise fall back to cwd.  The
+# current working directory is generally not reliable with the notable
+# exception of google appengine.
+try:
+    import pkg_resources
+    pkg_resources.resource_stream
+except (ImportError, AttributeError):
+    pkg_resources = None
+
 
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
@@ -202,6 +211,10 @@ class Flask(object):
         #: it was set by the constructor.
         self.package_name = package_name
 
+        #: where is the app root located?
+        self.root_path = os.path.abspath(os.path.dirname(
+            sys.modules[self.package_name].__file__))
+
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -242,8 +255,12 @@ class Flask(object):
         if self.static_path is not None:
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
+            if pkg_resources is not None:
+                target = (self.package_name, 'static')
+            else:
+                target = os.path.join(self.root_path, 'static')
             self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
-                self.static_path: (self.package_name, 'static')
+                self.static_path: target
             })
 
         #: the Jinja2 environment.  It is created from the
@@ -262,6 +279,8 @@ class Flask(object):
         `templates` folder.  To add other loaders it's possible to
         override this method.
         """"""
+        if pkg_resources is None:
+            return FileSystemLoader(os.path.join(self.root_path, 'templates'))
         return PackageLoader(self.package_name)
 
     def update_template_context(self, context):
@@ -323,6 +342,8 @@ class Flask(object):
         :param resource: the name of the resource.  To access resources within
                          subfolders use forward slashes as separator.
         """"""
+        if pkg_resources is None:
+            return open(os.path.join(self.root_path, resource), 'rb')
         return pkg_resources.resource_stream(self.package_name, resource)
 
     def open_session(self, request):
","diff --git a/flask.py b/flask.py
index 68e25ade..08376993 100644
--- a/flask.py
+++ b/flask.py
@@ -11,10 +11,10 @@
 """"""
 import os
 import sys
-import pkg_resources
+
 from threading import local
 from contextlib import contextmanager
-from jinja2 import Environment, PackageLoader
+from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
      SharedDataMiddleware
@@ -27,6 +27,15 @@ from werkzeug.contrib.securecookie import SecureCookie
 from werkzeug import abort, redirect
 from jinja2 import Markup, escape
 
+# use pkg_resource if that works, otherwise fall back to cwd.  The
+# current working directory is generally not reliable with the notable
+# exception of google appengine.
+try:
+    import pkg_resources
+    pkg_resources.resource_stream
+except (ImportError, AttributeError):
+    pkg_resources = None
+
 
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
@@ -202,6 +211,10 @@ class Flask(object):
         #: it was set by the constructor.
         self.package_name = package_name
 
+        #: where is the app root located?
+        self.root_path = os.path.abspath(os.path.dirname(
+            sys.modules[self.package_name].__file__))
+
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -242,8 +255,12 @@ class Flask(object):
         if self.static_path is not None:
             self.url_map.add(Rule(self.static_path + '/<filename>',
                                   build_only=True, endpoint='static'))
+            if pkg_resources is not None:
+                target = (self.package_name, 'static')
+            else:
+                target = os.path.join(self.root_path, 'static')
             self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
-                self.static_path: (self.package_name, 'static')
+                self.static_path: target
             })
 
         #: the Jinja2 environment.  It is created from the
@@ -262,6 +279,8 @@ class Flask(object):
         `templates` folder.  To add other loaders it's possible to
         override this method.
         """"""
+        if pkg_resources is None:
+            return FileSystemLoader(os.path.join(self.root_path, 'templates'))
         return PackageLoader(self.package_name)
 
     def update_template_context(self, context):
@@ -323,6 +342,8 @@ class Flask(object):
         :param resource: the name of the resource.  To access resources within
                          subfolders use forward slashes as separator.
         """"""
+        if pkg_resources is None:
+            return open(os.path.join(self.root_path, resource), 'rb')
         return pkg_resources.resource_stream(self.package_name, resource)
 
     def open_session(self, request):
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/flaskr.py,,examples/flaskr/flaskr.py,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
new file mode 100644
index 00000000..10a6ff8b
--- /dev/null
+++ b/examples/flaskr/flaskr.py
@@ -0,0 +1,103 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flaskr
+    ~~~~~~
+
+    A microblog example application written as Flask tutorial with
+    Flask and sqlite3.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import time
+import sqlite3
+from contextlib import closing
+from flask import Flask, request, session, g, redirect, url_for, abort, \
+     render_template, flash
+from werkzeug import secure_filename
+
+# configuration
+DATABASE = '/tmp/flaskr.db'
+DEBUG = True
+SECRET_KEY = 'development key'
+USERNAME = 'admin'
+PASSWORD = 'default'
+
+# create our little application :)
+app = Flask(__name__)
+app.secret_key = SECRET_KEY
+app.debug = DEBUG
+
+
+def connect_db():
+    """"""Returns a new connection to the database.""""""
+    return sqlite3.connect(DATABASE)
+
+
+def init_db():
+    """"""Creates the database tables.""""""
+    with closing(connect_db()) as db:
+        with app.open_resource('schema.sql') as f:
+            db.cursor().executescript(f.read())
+        db.commit()
+
+
+@app.request_init
+def before_request():
+    """"""Make sure we are connected to the database each request.  Also
+    set `g.logged_in` to `True` if we are logged in.
+    """"""
+    g.db = connect_db()
+    g.logged_in = session.get('logged_in', False)
+
+
+@app.request_shutdown
+def after_request(response):
+    """"""Closes the database again at the end of the request.""""""
+    g.db.close()
+    return response
+
+
+@app.route('/')
+def show_entries():
+    cur = g.db.execute('select title, text from entries order by id desc')
+    entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+    return render_template('show_entries.html', entries=entries)
+
+
+@app.route('/add', methods=['POST'])
+def add_entry():
+    if not g.logged_in:
+        abort(401)
+    g.db.execute('insert into entries (title, text) values (?, ?)',
+                 [request.form['title'], request.form['text']])
+    g.db.commit()
+    flash('New entry was successfully posted')
+    return redirect(url_for('show_entries'))
+
+
+@app.route('/login', methods=['GET', 'POST'])
+def login():
+    error = None
+    if request.method == 'POST':
+        if request.form['username'] != USERNAME:
+            error = 'Invalid username'
+        elif request.form['password'] != PASSWORD:
+            error = 'Invalid password'
+        else:
+            session['logged_in'] = True
+            flash('You were logged in')
+            return redirect(url_for('show_entries'))
+    return render_template('login.html', error=error)
+
+
+@app.route('/logout')
+def logout():
+    session.pop('logged_in', None)
+    flash('You were logged out')
+    return redirect(url_for('show_entries'))
+
+
+if __name__ == '__main__':
+    app.run()
","diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
new file mode 100644
index 00000000..10a6ff8b
--- /dev/null
+++ b/examples/flaskr/flaskr.py
@@ -0,0 +1,103 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flaskr
+    ~~~~~~
+
+    A microblog example application written as Flask tutorial with
+    Flask and sqlite3.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from __future__ import with_statement
+import time
+import sqlite3
+from contextlib import closing
+from flask import Flask, request, session, g, redirect, url_for, abort, \
+     render_template, flash
+from werkzeug import secure_filename
+
+# configuration
+DATABASE = '/tmp/flaskr.db'
+DEBUG = True
+SECRET_KEY = 'development key'
+USERNAME = 'admin'
+PASSWORD = 'default'
+
+# create our little application :)
+app = Flask(__name__)
+app.secret_key = SECRET_KEY
+app.debug = DEBUG
+
+
+def connect_db():
+    """"""Returns a new connection to the database.""""""
+    return sqlite3.connect(DATABASE)
+
+
+def init_db():
+    """"""Creates the database tables.""""""
+    with closing(connect_db()) as db:
+        with app.open_resource('schema.sql') as f:
+            db.cursor().executescript(f.read())
+        db.commit()
+
+
+@app.request_init
+def before_request():
+    """"""Make sure we are connected to the database each request.  Also
+    set `g.logged_in` to `True` if we are logged in.
+    """"""
+    g.db = connect_db()
+    g.logged_in = session.get('logged_in', False)
+
+
+@app.request_shutdown
+def after_request(response):
+    """"""Closes the database again at the end of the request.""""""
+    g.db.close()
+    return response
+
+
+@app.route('/')
+def show_entries():
+    cur = g.db.execute('select title, text from entries order by id desc')
+    entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+    return render_template('show_entries.html', entries=entries)
+
+
+@app.route('/add', methods=['POST'])
+def add_entry():
+    if not g.logged_in:
+        abort(401)
+    g.db.execute('insert into entries (title, text) values (?, ?)',
+                 [request.form['title'], request.form['text']])
+    g.db.commit()
+    flash('New entry was successfully posted')
+    return redirect(url_for('show_entries'))
+
+
+@app.route('/login', methods=['GET', 'POST'])
+def login():
+    error = None
+    if request.method == 'POST':
+        if request.form['username'] != USERNAME:
+            error = 'Invalid username'
+        elif request.form['password'] != PASSWORD:
+            error = 'Invalid password'
+        else:
+            session['logged_in'] = True
+            flash('You were logged in')
+            return redirect(url_for('show_entries'))
+    return render_template('login.html', error=error)
+
+
+@app.route('/logout')
+def logout():
+    session.pop('logged_in', None)
+    flash('You were logged out')
+    return redirect(url_for('show_entries'))
+
+
+if __name__ == '__main__':
+    app.run()
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/flaskr_tests.py,,examples/flaskr/flaskr_tests.py,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
new file mode 100644
index 00000000..f8a05976
--- /dev/null
+++ b/examples/flaskr/flaskr_tests.py
@@ -0,0 +1,64 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flaskr Tests
+    ~~~~~~~~~~~~
+
+    Tests the Flaskr application.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+import flaskr
+import unittest
+import tempfile
+
+
+class FlaskrTestCase(unittest.TestCase):
+
+    def setUp(self):
+        """"""Before each test, set up a blank database""""""
+        self.db = tempfile.NamedTemporaryFile()
+        self.app = flaskr.app.test_client()
+        flaskr.DATABASE = self.db.name
+        flaskr.init_db()
+
+    def login(self, username, password):
+        return self.app.post('/login', data=dict(
+            username=username,
+            password=password
+        ), follow_redirects=True)
+
+    def logout(self):
+        return self.app.get('/logout', follow_redirects=True)
+
+    # testing functions
+
+    def test_login_logout(self):
+        """"""Make sure login and logout works""""""
+        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert 'You were logged in' in rv.data
+        rv = self.logout()
+        assert 'You were logged out' in rv.data
+        rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+        assert 'Invalid username' in rv.data
+        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+        assert 'Invalid password' in rv.data
+
+    def test_messages(self):
+        """"""Test that messages work""""""
+        # start with a blank state
+        rv = self.app.get('/')
+        assert 'No entries here so far' in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.app.post('/add', data=dict(
+            title='<Hello>',
+            text='<strong>HTML</strong> allowed here'
+        ), follow_redirects=True)
+        assert 'No entries here so far' not in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert '&lt;Hello&gt' in rv.data
+        assert '<strong>HTML</strong> allowed here' in rv.data
+
+
+if __name__ == '__main__':
+    unittest.main()
","diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
new file mode 100644
index 00000000..f8a05976
--- /dev/null
+++ b/examples/flaskr/flaskr_tests.py
@@ -0,0 +1,64 @@
+# -*- coding: utf-8 -*-
+""""""
+    Flaskr Tests
+    ~~~~~~~~~~~~
+
+    Tests the Flaskr application.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+import flaskr
+import unittest
+import tempfile
+
+
+class FlaskrTestCase(unittest.TestCase):
+
+    def setUp(self):
+        """"""Before each test, set up a blank database""""""
+        self.db = tempfile.NamedTemporaryFile()
+        self.app = flaskr.app.test_client()
+        flaskr.DATABASE = self.db.name
+        flaskr.init_db()
+
+    def login(self, username, password):
+        return self.app.post('/login', data=dict(
+            username=username,
+            password=password
+        ), follow_redirects=True)
+
+    def logout(self):
+        return self.app.get('/logout', follow_redirects=True)
+
+    # testing functions
+
+    def test_login_logout(self):
+        """"""Make sure login and logout works""""""
+        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert 'You were logged in' in rv.data
+        rv = self.logout()
+        assert 'You were logged out' in rv.data
+        rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+        assert 'Invalid username' in rv.data
+        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+        assert 'Invalid password' in rv.data
+
+    def test_messages(self):
+        """"""Test that messages work""""""
+        # start with a blank state
+        rv = self.app.get('/')
+        assert 'No entries here so far' in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.app.post('/add', data=dict(
+            title='<Hello>',
+            text='<strong>HTML</strong> allowed here'
+        ), follow_redirects=True)
+        assert 'No entries here so far' not in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert '&lt;Hello&gt' in rv.data
+        assert '<strong>HTML</strong> allowed here' in rv.data
+
+
+if __name__ == '__main__':
+    unittest.main()
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/schema.sql,,examples/flaskr/schema.sql,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/schema.sql b/examples/flaskr/schema.sql
new file mode 100644
index 00000000..970cca77
--- /dev/null
+++ b/examples/flaskr/schema.sql
@@ -0,0 +1,6 @@
+drop table if exists entries;
+create table entries (
+  id integer primary key autoincrement,
+  title string not null,
+  text string not null
+);
","diff --git a/examples/flaskr/schema.sql b/examples/flaskr/schema.sql
new file mode 100644
index 00000000..970cca77
--- /dev/null
+++ b/examples/flaskr/schema.sql
@@ -0,0 +1,6 @@
+drop table if exists entries;
+create table entries (
+  id integer primary key autoincrement,
+  title string not null,
+  text string not null
+);
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/static/style.css,,examples/flaskr/static/style.css,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
new file mode 100644
index 00000000..b0f38774
--- /dev/null
+++ b/examples/flaskr/static/style.css
@@ -0,0 +1,16 @@
+body { font-family: sans-serif; background: #eee; }
+a, h1, h2 { color: #377BA8; }
+h1, h2 { font-family: 'Georgia', serif; margin: 0; }
+h1 { border-bottom: 2px solid #eee; }
+h2 { font-size: 1.2em; }
+div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
+              padding: 0.3em; margin-bottom: 1em; }
+ul.entries { list-style: none; margin: 0; padding: 0; }
+ul.entries li { margin: 0.8em 1.2em; }
+ul.entries li h2 { margin-left: -1em; }
+div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+           padding: 0.8em; background: white; }
+form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+form.add-entry dl { font-weight: bold; }
+div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
+p.error { background: #F0D6D6; padding: 0.5em; }
","diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
new file mode 100644
index 00000000..b0f38774
--- /dev/null
+++ b/examples/flaskr/static/style.css
@@ -0,0 +1,16 @@
+body { font-family: sans-serif; background: #eee; }
+a, h1, h2 { color: #377BA8; }
+h1, h2 { font-family: 'Georgia', serif; margin: 0; }
+h1 { border-bottom: 2px solid #eee; }
+h2 { font-size: 1.2em; }
+div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
+              padding: 0.3em; margin-bottom: 1em; }
+ul.entries { list-style: none; margin: 0; padding: 0; }
+ul.entries li { margin: 0.8em 1.2em; }
+ul.entries li h2 { margin-left: -1em; }
+div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+           padding: 0.8em; background: white; }
+form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+form.add-entry dl { font-weight: bold; }
+div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
+p.error { background: #F0D6D6; padding: 0.5em; }
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/templates/layout.html,,examples/flaskr/templates/layout.html,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/templates/layout.html b/examples/flaskr/templates/layout.html
new file mode 100644
index 00000000..eafcefa9
--- /dev/null
+++ b/examples/flaskr/templates/layout.html
@@ -0,0 +1,17 @@
+<!doctype html>
+<title>Flaskr</title>
+<link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+<div class=page>
+  <h1>Flaskr</h1>
+  <div class=metanav>
+  {% if not g.logged_in %}
+    <a href=""{{ url_for('login') }}"">log in</a>
+  {% else %}
+    <a href=""{{ url_for('logout') }}"">log out</a>
+  {% endif %}
+  </div>
+  {% for message in get_flashed_messages() %}
+    <div class=flash>{{ message }}</div>
+  {% endfor %}
+  {% block body %}{% endblock %}
+</div>
","diff --git a/examples/flaskr/templates/layout.html b/examples/flaskr/templates/layout.html
new file mode 100644
index 00000000..eafcefa9
--- /dev/null
+++ b/examples/flaskr/templates/layout.html
@@ -0,0 +1,17 @@
+<!doctype html>
+<title>Flaskr</title>
+<link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+<div class=page>
+  <h1>Flaskr</h1>
+  <div class=metanav>
+  {% if not g.logged_in %}
+    <a href=""{{ url_for('login') }}"">log in</a>
+  {% else %}
+    <a href=""{{ url_for('logout') }}"">log out</a>
+  {% endif %}
+  </div>
+  {% for message in get_flashed_messages() %}
+    <div class=flash>{{ message }}</div>
+  {% endfor %}
+  {% block body %}{% endblock %}
+</div>
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/templates/login.html,,examples/flaskr/templates/login.html,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/templates/login.html b/examples/flaskr/templates/login.html
new file mode 100644
index 00000000..568e9e84
--- /dev/null
+++ b/examples/flaskr/templates/login.html
@@ -0,0 +1,14 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  <h2>Login</h2>
+  {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+  <form action=""{{ url_for('login') }}"" method=post>
+    <dl>
+      <dt>Username:
+      <dd><input type=text name=username>
+      <dt>Password:
+      <dd><input type=passowrd name=password>
+      <dd><input type=submit value=Login>
+    </dl>
+  </form>
+{% endblock %}
","diff --git a/examples/flaskr/templates/login.html b/examples/flaskr/templates/login.html
new file mode 100644
index 00000000..568e9e84
--- /dev/null
+++ b/examples/flaskr/templates/login.html
@@ -0,0 +1,14 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  <h2>Login</h2>
+  {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+  <form action=""{{ url_for('login') }}"" method=post>
+    <dl>
+      <dt>Username:
+      <dd><input type=text name=username>
+      <dt>Password:
+      <dd><input type=passowrd name=password>
+      <dd><input type=submit value=Login>
+    </dl>
+  </form>
+{% endblock %}
"
2d9bb692728fd76b19e467499caa4f5fcb07aede,c33675f0251071ea47ce166b81ce8c637842f091,examples/flaskr/templates/show_entries.html,,examples/flaskr/templates/show_entries.html,Added mini blogging application as Flask example.  This should become the tutorial.,"diff --git a/examples/flaskr/templates/show_entries.html b/examples/flaskr/templates/show_entries.html
new file mode 100644
index 00000000..55940ee7
--- /dev/null
+++ b/examples/flaskr/templates/show_entries.html
@@ -0,0 +1,21 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  {% if g.logged_in %}
+    <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+      <dl>
+        <dt>Title:
+        <dd><input type=text size=30 name=title>
+        <dt>Text:
+        <dd><textarea name=text rows=5 cols=40></textarea>
+        <dd><input type=submit value=Share>
+      </dl>
+    </form>
+  {% endif %}
+  <ul class=entries>
+  {% for entry in entries %}
+    <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+  {% else %}
+    <li><em>Unbelievable.  No entries here so far</em>
+  {% endfor %}
+  </ul>
+{% endblock %}
","diff --git a/examples/flaskr/templates/show_entries.html b/examples/flaskr/templates/show_entries.html
new file mode 100644
index 00000000..55940ee7
--- /dev/null
+++ b/examples/flaskr/templates/show_entries.html
@@ -0,0 +1,21 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  {% if g.logged_in %}
+    <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+      <dl>
+        <dt>Title:
+        <dd><input type=text size=30 name=title>
+        <dt>Text:
+        <dd><textarea name=text rows=5 cols=40></textarea>
+        <dd><input type=submit value=Share>
+      </dl>
+    </form>
+  {% endif %}
+  <ul class=entries>
+  {% for entry in entries %}
+    <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+  {% else %}
+    <li><em>Unbelievable.  No entries here so far</em>
+  {% endfor %}
+  </ul>
+{% endblock %}
"
c33675f0251071ea47ce166b81ce8c637842f091,fc94599285aa1aec50b3c9426697249e55edda0a,examples/flaskr/README,,examples/flaskr/README,Removed useless imports and added README,"diff --git a/examples/flaskr/README b/examples/flaskr/README
new file mode 100644
index 00000000..ae1bb51c
--- /dev/null
+++ b/examples/flaskr/README
@@ -0,0 +1,26 @@
+
+                         / Flaskr /
+
+                 a minimal blog application
+
+
+    ~ What is Flask?
+
+      A sqlite powered thumble blog application
+
+    ~ How do I use it?
+
+      1. edit the configuration in the flaskr.py file
+
+      2. fire up a python shell and run this:
+
+         >>> from flaskr import init_db; init_db()
+
+      3. now you can run the flaskr.py file with your
+         python interpreter and the application will
+         greet you on http://localhost:5000/
+	
+    ~ Is it tested?
+
+      You betcha.  Run the `flaskr_tests.py` file to see
+      the tests pass.
","diff --git a/examples/flaskr/README b/examples/flaskr/README
new file mode 100644
index 00000000..ae1bb51c
--- /dev/null
+++ b/examples/flaskr/README
@@ -0,0 +1,26 @@
+
+                         / Flaskr /
+
+                 a minimal blog application
+
+
+    ~ What is Flask?
+
+      A sqlite powered thumble blog application
+
+    ~ How do I use it?
+
+      1. edit the configuration in the flaskr.py file
+
+      2. fire up a python shell and run this:
+
+         >>> from flaskr import init_db; init_db()
+
+      3. now you can run the flaskr.py file with your
+         python interpreter and the application will
+         greet you on http://localhost:5000/
+	
+    ~ Is it tested?
+
+      You betcha.  Run the `flaskr_tests.py` file to see
+      the tests pass.
"
c33675f0251071ea47ce166b81ce8c637842f091,fc94599285aa1aec50b3c9426697249e55edda0a,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,Removed useless imports and added README,"diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 10a6ff8b..02db8afd 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -10,12 +10,10 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import time
 import sqlite3
 from contextlib import closing
 from flask import Flask, request, session, g, redirect, url_for, abort, \
      render_template, flash
-from werkzeug import secure_filename
 
 # configuration
 DATABASE = '/tmp/flaskr.db'
","diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 10a6ff8b..02db8afd 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -10,12 +10,10 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import time
 import sqlite3
 from contextlib import closing
 from flask import Flask, request, session, g, redirect, url_for, abort, \
      render_template, flash
-from werkzeug import secure_filename
 
 # configuration
 DATABASE = '/tmp/flaskr.db'
"
fc94599285aa1aec50b3c9426697249e55edda0a,1d8432ebfd1637eacab79a15e9b7963bf061371c,flask.py,flask.py,flask.py,Can't believe I forgot that future import.,"diff --git a/flask.py b/flask.py
index 08376993..eaafa310 100644
--- a/flask.py
+++ b/flask.py
@@ -9,6 +9,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+from __future__ import with_statement
 import os
 import sys
 
","diff --git a/flask.py b/flask.py
index 08376993..eaafa310 100644
--- a/flask.py
+++ b/flask.py
@@ -9,6 +9,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+from __future__ import with_statement
 import os
 import sys
 
"
1d8432ebfd1637eacab79a15e9b7963bf061371c,c4f5c2fb9afc1679c085500830bd53fab93ad885,examples/flaskr/README,examples/flaskr/README,examples/flaskr/README,Fixed a typo,"diff --git a/examples/flaskr/README b/examples/flaskr/README
index ae1bb51c..4a9a02c6 100644
--- a/examples/flaskr/README
+++ b/examples/flaskr/README
@@ -4,7 +4,7 @@
                  a minimal blog application
 
 
-    ~ What is Flask?
+    ~ What is Flaskr?
 
       A sqlite powered thumble blog application
 
","diff --git a/examples/flaskr/README b/examples/flaskr/README
index ae1bb51c..4a9a02c6 100644
--- a/examples/flaskr/README
+++ b/examples/flaskr/README
@@ -4,7 +4,7 @@
                  a minimal blog application
 
 
-    ~ What is Flask?
+    ~ What is Flaskr?
 
       A sqlite powered thumble blog application
 
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,docs/_static/flaskr.png,docs/_static/flaskr.png,docs/_static/flaskr.png,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/docs/_static/flaskr.png b/docs/_static/flaskr.png
new file mode 100644
index 00000000..07d027dd
Binary files /dev/null and b/docs/_static/flaskr.png differ
","diff --git a/docs/_static/flaskr.png b/docs/_static/flaskr.png
new file mode 100644
index 00000000..07d027dd
Binary files /dev/null and b/docs/_static/flaskr.png differ
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 7046e24f..a006b9b1 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -182,6 +182,13 @@ div.body p, div.body dd, div.body li {
     line-height: 1.5em;
 }
 
+div.admonition {
+    border: 1px solid #ddd;
+    background: white;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+ 
 div.admonition p.admonition-title + p {
     display: inline;
 }
@@ -222,6 +229,11 @@ pre, tt {
     font-size: 0.9em;
 }
 
+img.screenshot {
+    -webkit-box-shadow: 4px 4px 3px #cdcdcd;
+    -moz-box-shadow: 4px 4px 3px #cdcdcd;
+}
+
 tt.descname, tt.descclassname {
     font-size: 0.95em;
     -webkit-box-shadow: none;
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 7046e24f..a006b9b1 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -182,6 +182,13 @@ div.body p, div.body dd, div.body li {
     line-height: 1.5em;
 }
 
+div.admonition {
+    border: 1px solid #ddd;
+    background: white;
+    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+ 
 div.admonition p.admonition-title + p {
     display: inline;
 }
@@ -222,6 +229,11 @@ pre, tt {
     font-size: 0.9em;
 }
 
+img.screenshot {
+    -webkit-box-shadow: 4px 4px 3px #cdcdcd;
+    -moz-box-shadow: 4px 4px 3px #cdcdcd;
+}
+
 tt.descname, tt.descclassname {
     font-size: 0.95em;
     -webkit-box-shadow: none;
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,docs/index.rst,docs/index.rst,docs/index.rst,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/docs/index.rst b/docs/index.rst
index cb7abf96..864a3a35 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -7,9 +7,11 @@ Welcome to Flask
 
 Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
-:ref:`installation` and then heading over to the :ref:`quickstart`.  If
-you want to dive into all the internal parts of Flask, check out the
-:ref:`api` documentation.  Common patterns are described in the
+:ref:`installation` and then heading over to the :ref:`quickstart`.
+Besides the quickstart there is also a more detailed :ref:`tutorial` that
+shows how to create a complete (albeit small) application with Flask.  If
+you rather want to dive into all the internal parts of Flask, check out
+the :ref:`api` documentation.  Common patterns are described in the
 :ref:`patterns` section.
 
 .. toctree::
@@ -18,6 +20,7 @@ you want to dive into all the internal parts of Flask, check out the
    foreword
    installation
    quickstart
+   tutorial
    patterns
    api
    deploying
","diff --git a/docs/index.rst b/docs/index.rst
index cb7abf96..864a3a35 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -7,9 +7,11 @@ Welcome to Flask
 
 Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
-:ref:`installation` and then heading over to the :ref:`quickstart`.  If
-you want to dive into all the internal parts of Flask, check out the
-:ref:`api` documentation.  Common patterns are described in the
+:ref:`installation` and then heading over to the :ref:`quickstart`.
+Besides the quickstart there is also a more detailed :ref:`tutorial` that
+shows how to create a complete (albeit small) application with Flask.  If
+you rather want to dive into all the internal parts of Flask, check out
+the :ref:`api` documentation.  Common patterns are described in the
 :ref:`patterns` section.
 
 .. toctree::
@@ -18,6 +20,7 @@ you want to dive into all the internal parts of Flask, check out the
    foreword
    installation
    quickstart
+   tutorial
    patterns
    api
    deploying
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 91ac4255..df476867 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -54,6 +54,19 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
+.. admonition:: Troubleshooting
+
+   The browser is unable to access the server?  Sometimes this is
+   unfortunately caused by broken IPv6 support in your operating system,
+   browser or a combination.  For example on Snow Leopard Google Chrome is
+   known to exhibit this behaviour.
+
+   If the browser does not load up the page, you can change the `app.run`
+   call to force IPv4 usage::
+
+      if __name__ == '__main__':
+          app.run(host='127.0.0.1')
+
 
 Debug Mode
 ----------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 91ac4255..df476867 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -54,6 +54,19 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
+.. admonition:: Troubleshooting
+
+   The browser is unable to access the server?  Sometimes this is
+   unfortunately caused by broken IPv6 support in your operating system,
+   browser or a combination.  For example on Snow Leopard Google Chrome is
+   known to exhibit this behaviour.
+
+   If the browser does not load up the page, you can change the `app.run`
+   call to force IPv4 usage::
+
+      if __name__ == '__main__':
+          app.run(host='127.0.0.1')
+
 
 Debug Mode
 ----------
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,docs/tutorial.rst,,docs/tutorial.rst,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/docs/tutorial.rst b/docs/tutorial.rst
new file mode 100644
index 00000000..bbf9fa6c
--- /dev/null
+++ b/docs/tutorial.rst
@@ -0,0 +1,354 @@
+.. _tutorial:
+
+Tutorial
+========
+
+You want to develop an application with Python and Flask?  Here you have
+the chance to learn that by example.  In this tutorial we will create a
+simple microblog application.  It only supports one user that can create
+text-only entries and there are no feeds or comments, but it still
+features everything you need to get started.  We will use Flask and SQLite
+as database which comes out of the box with Python, so there is nothing
+else you need.
+
+If you want the full sourcecode in advance or for comparison, check out
+the `example source`_.
+
+.. _example source:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
+
+Introducing Flaskr
+------------------
+
+We will call our blogging application flaskr here, feel free to chose a
+less web-2.0-ish name ;)  Basically we want it to do the following things:
+
+1. let the user sign in and out with credentials specified in the
+   configuration.  Only one user is supported.
+2. when the user is logged in he or she can add new entries to the page
+   consisting of a text-only title and some HTML for the text.  This HTML
+   is not sanitized because we trust the user here.
+3. the page shows all entries so far in reverse order (newest on top) and
+   the user can add new ones from there if logged in.
+
+Here a screenshot from the final application:
+
+.. image:: _static/flaskr.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of the final application
+
+Step 0: Creating The Folders
+----------------------------
+
+Before we get started, let's create the folders needed for this
+application::
+
+    /flaskr
+        /static
+        /templates
+
+The `flaskr` folder is not a python package, but just something where we
+drop our files.  Directly into this folder we will then put our database
+schema as well as main module in the following steps.
+
+Step 1: Database Schema
+-----------------------
+
+First we want to create the database schema.  For this application only a
+single table is needed and we only want to support SQLite so that is quite
+easy.  Just put the following contents into a file named `schema.sql` in
+the just created `flaskr` folder:
+
+.. sourcecode:: sql
+
+    drop table if exists entries;
+    create table entries (
+      id integer primary key autoincrement,
+      title string not null,
+      text string not null
+    );
+
+This schema consists of a single table called `entries` and each row in
+this table has an `id`, a `title` and a `text`.  The `id` is an
+automatically incrementing integer and a primary key, the other two are
+strings that must not be null.
+
+Step 2: Application Setup Code
+------------------------------
+
+Now that we have the schema in place we can create the application module.
+Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
+will add the imports we will need as well as the config section::
+
+    # all the imports
+    import sqlite3
+    from flask import Flask, request, session, g, redirect, url_for, abort, \
+         render_template, flash
+
+    # configuration
+    DATABASE = '/tmp/flaskr.db'
+    DEBUG = True
+    SECRET_KEY = 'development key'
+    USERNAME = 'admin'
+    PASSWORD = 'default'
+
+The `with_statement` and :func:`~contextlib.closing` function are used to
+make dealing with the database connection easier later on for setting up
+the initial database.  Next we can create our actual application and
+initialize it with the config::
+
+    # create our little application :)
+    app = Flask(__name__)
+    app.secret_key = SECRET_KEY
+    app.debug = DEBUG
+
+We can also add a method to easily connect to the database sepcified::
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+Finally we just add a line to the bottom of the file that fires up the
+server if we run that file as standalone application::
+
+    if __name__ == '__main__':
+        app.run()
+
+.. admonition:: Troubleshooting
+
+   If you notice later that the browser cannot connect to the server
+   during development, you might want to try this line instead::
+
+       app.run(host='127.0.0.1')
+
+   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
+   default and not every browser is happy with that.  This forces IPv4
+   usage.
+
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
+Step 3: Creating The Database
+-----------------------------
+
+Flaskr is a database powered application as outlined earlier, and more
+precisely, an application powered by a relational database system.  Such
+systems need a schema that tells them how to store that information. So
+before starting the server for the first time it's important to create
+that schema.
+
+Such a schema can be created by piping the `schema.sql` file into the
+`sqlite3` command as follows::
+
+    sqlite3 /tmp/flaskr.db < schema.sql
+
+The downside of this is that it requires the sqlite3 command to be
+installed which is not necessarily the case on every system.  Also one has
+to provide the path to the database there which leaves some place for
+errors.  It's a good idea to add a function that initializes the database
+for you to the application.
+
+If you want to do that, you first have to import the
+:func:`contextlib.closing` function from the contextlib package.  If you
+want to use Python 2.5 it's also necessary to enable the `with` statement
+first (`__future__` imports must be the very first import)::
+
+    from __future__ import with_statement
+    from contextlib import closing
+
+Next we can create a function called `init_db` that initializes the
+database::
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+Now it is possible to create a database by starting up a Python shell and
+importing and calling that function::
+
+>>> from flaskr import init_db
+>>> init_db()
+
+The :meth:`~flask.Flask.open_resource` function opens a file from the
+resource location (your flaskr folder) and allows you to read from it.  We
+are using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes and
+close the transaction.
+
+Step 4: Request Database Connections
+------------------------------------
+
+Now we know how we can open database connections and use them for scripts,
+but how can we elegantly do that for requests?  We will need the database
+connection in all our functions so it makes sense to initialize them
+before each request and shut them down afterwards.
+
+Flask allows us to do that with the :meth:`~flask.Flask.request_init` and
+:meth:`~flask.Flask.request_shutdown` decorators::
+
+    @app.request_init
+    def before_request():
+        g.db = connect_db()
+
+    @app.request_shutdown
+    def after_request(response):
+        g.db.close()
+        return response
+
+Functions marked with :meth:`~flask.Flask.request_init` are called before
+a request and passed no arguments, functions marked with
+:meth:`~flask.Flask.request_shutdown` are called after a request and
+passed the response that will be sent to the client.  They have to return
+that response object or a different one.  In this case we just return it
+unchanged.
+
+We store our current database connection on the special :data:`~flask.g`
+object that flask provides for us.  This object stores information for one
+request only and is available from within each function.  Never store such
+things on other objects because this would not work with threaded
+environments.  That special :data:`~flask.g` object does some magic behind
+the scenes to ensure it does the right thing.
+
+Step 5: The View Functions
+--------------------------
+
+Now that the database connections are working we can start writing the
+view functions.  We will need for of them:
+
+Show Entries
+````````````
+
+This view shows all the entries stored in the database::
+
+    @app.route('/')
+    def show_entries():
+        cur = g.db.execute('select title, text from entries order by id desc')
+        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+        return render_template('show_entries.html', entries=entries)
+
+Add New Entry
+`````````````
+
+This view lets the user add new entries if he's logged in.  This only
+responds to `POST` requests, the actual form is shown on the
+`show_entries` page::
+
+    @app.route('/add', methods=['POST'])
+    def add_entry():
+        if not session.get('logged_in'):
+            abort(401)
+        g.db.execute('insert into entries (title, text) values (?, ?)',
+                     [request.form['title'], request.form['text']])
+        g.db.commit()
+        flash('New entry was successfully posted')
+        return redirect(url_for('show_entries'))
+
+Login and Logout
+````````````````
+
+These functions are used to sign the user in and out::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != USERNAME:
+                error = 'Invalid username'
+            elif request.form['password'] != PASSWORD:
+                error = 'Invalid password'
+            else:
+                session['logged_in'] = True
+                flash('You were logged in')
+                return redirect(url_for('show_entries'))
+        return render_template('login.html', error=error)
+
+    @app.route('/logout')
+    def logout():
+        session.pop('logged_in', None)
+        flash('You were logged out')
+        return redirect(url_for('show_entries'))
+
+Step 6: The Templates
+---------------------
+
+Now we should start working on the templates.  If we request the URLs now
+we would only get an exception that Flask cannot find the templates.
+
+Put the following templates into the `templates` folder:
+
+layout.html
+```````````
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Flaskr</title>
+    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+    <div class=page>
+      <h1>Flaskr</h1>
+      <div class=metanav>
+      {% if not session.logged_in %}
+        <a href=""{{ url_for('login') }}"">log in</a>
+      {% else %}
+        <a href=""{{ url_for('logout') }}"">log out</a>
+      {% endif %}
+      </div>
+      {% for message in get_flashed_messages() %}
+        <div class=flash>{{ message }}</div>
+      {% endfor %}
+      {% block body %}{% endblock %}
+    </div>
+
+show_entries.html
+`````````````````
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      {% if g.logged_in %}
+        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+          <dl>
+            <dt>Title:
+            <dd><input type=text size=30 name=title>
+            <dt>Text:
+            <dd><textarea name=text rows=5 cols=40></textarea>
+            <dd><input type=submit value=Share>
+          </dl>
+        </form>
+      {% endif %}
+      <ul class=entries>
+      {% for entry in entries %}
+        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+      {% else %}
+        <li><em>Unbelievable.  No entries here so far</em>
+      {% endfor %}
+      </ul>
+    {% endblock %}
+
+login.html
+``````````
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      <h2>Login</h2>
+      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+      <form action=""{{ url_for('login') }}"" method=post>
+        <dl>
+          <dt>Username:
+          <dd><input type=text name=username>
+          <dt>Password:
+          <dd><input type=password name=password>
+          <dd><input type=submit value=Login>
+        </dl>
+      </form>
+    {% endblock %}
","diff --git a/docs/tutorial.rst b/docs/tutorial.rst
new file mode 100644
index 00000000..bbf9fa6c
--- /dev/null
+++ b/docs/tutorial.rst
@@ -0,0 +1,354 @@
+.. _tutorial:
+
+Tutorial
+========
+
+You want to develop an application with Python and Flask?  Here you have
+the chance to learn that by example.  In this tutorial we will create a
+simple microblog application.  It only supports one user that can create
+text-only entries and there are no feeds or comments, but it still
+features everything you need to get started.  We will use Flask and SQLite
+as database which comes out of the box with Python, so there is nothing
+else you need.
+
+If you want the full sourcecode in advance or for comparison, check out
+the `example source`_.
+
+.. _example source:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
+
+Introducing Flaskr
+------------------
+
+We will call our blogging application flaskr here, feel free to chose a
+less web-2.0-ish name ;)  Basically we want it to do the following things:
+
+1. let the user sign in and out with credentials specified in the
+   configuration.  Only one user is supported.
+2. when the user is logged in he or she can add new entries to the page
+   consisting of a text-only title and some HTML for the text.  This HTML
+   is not sanitized because we trust the user here.
+3. the page shows all entries so far in reverse order (newest on top) and
+   the user can add new ones from there if logged in.
+
+Here a screenshot from the final application:
+
+.. image:: _static/flaskr.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of the final application
+
+Step 0: Creating The Folders
+----------------------------
+
+Before we get started, let's create the folders needed for this
+application::
+
+    /flaskr
+        /static
+        /templates
+
+The `flaskr` folder is not a python package, but just something where we
+drop our files.  Directly into this folder we will then put our database
+schema as well as main module in the following steps.
+
+Step 1: Database Schema
+-----------------------
+
+First we want to create the database schema.  For this application only a
+single table is needed and we only want to support SQLite so that is quite
+easy.  Just put the following contents into a file named `schema.sql` in
+the just created `flaskr` folder:
+
+.. sourcecode:: sql
+
+    drop table if exists entries;
+    create table entries (
+      id integer primary key autoincrement,
+      title string not null,
+      text string not null
+    );
+
+This schema consists of a single table called `entries` and each row in
+this table has an `id`, a `title` and a `text`.  The `id` is an
+automatically incrementing integer and a primary key, the other two are
+strings that must not be null.
+
+Step 2: Application Setup Code
+------------------------------
+
+Now that we have the schema in place we can create the application module.
+Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
+will add the imports we will need as well as the config section::
+
+    # all the imports
+    import sqlite3
+    from flask import Flask, request, session, g, redirect, url_for, abort, \
+         render_template, flash
+
+    # configuration
+    DATABASE = '/tmp/flaskr.db'
+    DEBUG = True
+    SECRET_KEY = 'development key'
+    USERNAME = 'admin'
+    PASSWORD = 'default'
+
+The `with_statement` and :func:`~contextlib.closing` function are used to
+make dealing with the database connection easier later on for setting up
+the initial database.  Next we can create our actual application and
+initialize it with the config::
+
+    # create our little application :)
+    app = Flask(__name__)
+    app.secret_key = SECRET_KEY
+    app.debug = DEBUG
+
+We can also add a method to easily connect to the database sepcified::
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+Finally we just add a line to the bottom of the file that fires up the
+server if we run that file as standalone application::
+
+    if __name__ == '__main__':
+        app.run()
+
+.. admonition:: Troubleshooting
+
+   If you notice later that the browser cannot connect to the server
+   during development, you might want to try this line instead::
+
+       app.run(host='127.0.0.1')
+
+   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
+   default and not every browser is happy with that.  This forces IPv4
+   usage.
+
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
+Step 3: Creating The Database
+-----------------------------
+
+Flaskr is a database powered application as outlined earlier, and more
+precisely, an application powered by a relational database system.  Such
+systems need a schema that tells them how to store that information. So
+before starting the server for the first time it's important to create
+that schema.
+
+Such a schema can be created by piping the `schema.sql` file into the
+`sqlite3` command as follows::
+
+    sqlite3 /tmp/flaskr.db < schema.sql
+
+The downside of this is that it requires the sqlite3 command to be
+installed which is not necessarily the case on every system.  Also one has
+to provide the path to the database there which leaves some place for
+errors.  It's a good idea to add a function that initializes the database
+for you to the application.
+
+If you want to do that, you first have to import the
+:func:`contextlib.closing` function from the contextlib package.  If you
+want to use Python 2.5 it's also necessary to enable the `with` statement
+first (`__future__` imports must be the very first import)::
+
+    from __future__ import with_statement
+    from contextlib import closing
+
+Next we can create a function called `init_db` that initializes the
+database::
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+Now it is possible to create a database by starting up a Python shell and
+importing and calling that function::
+
+>>> from flaskr import init_db
+>>> init_db()
+
+The :meth:`~flask.Flask.open_resource` function opens a file from the
+resource location (your flaskr folder) and allows you to read from it.  We
+are using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes and
+close the transaction.
+
+Step 4: Request Database Connections
+------------------------------------
+
+Now we know how we can open database connections and use them for scripts,
+but how can we elegantly do that for requests?  We will need the database
+connection in all our functions so it makes sense to initialize them
+before each request and shut them down afterwards.
+
+Flask allows us to do that with the :meth:`~flask.Flask.request_init` and
+:meth:`~flask.Flask.request_shutdown` decorators::
+
+    @app.request_init
+    def before_request():
+        g.db = connect_db()
+
+    @app.request_shutdown
+    def after_request(response):
+        g.db.close()
+        return response
+
+Functions marked with :meth:`~flask.Flask.request_init` are called before
+a request and passed no arguments, functions marked with
+:meth:`~flask.Flask.request_shutdown` are called after a request and
+passed the response that will be sent to the client.  They have to return
+that response object or a different one.  In this case we just return it
+unchanged.
+
+We store our current database connection on the special :data:`~flask.g`
+object that flask provides for us.  This object stores information for one
+request only and is available from within each function.  Never store such
+things on other objects because this would not work with threaded
+environments.  That special :data:`~flask.g` object does some magic behind
+the scenes to ensure it does the right thing.
+
+Step 5: The View Functions
+--------------------------
+
+Now that the database connections are working we can start writing the
+view functions.  We will need for of them:
+
+Show Entries
+````````````
+
+This view shows all the entries stored in the database::
+
+    @app.route('/')
+    def show_entries():
+        cur = g.db.execute('select title, text from entries order by id desc')
+        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+        return render_template('show_entries.html', entries=entries)
+
+Add New Entry
+`````````````
+
+This view lets the user add new entries if he's logged in.  This only
+responds to `POST` requests, the actual form is shown on the
+`show_entries` page::
+
+    @app.route('/add', methods=['POST'])
+    def add_entry():
+        if not session.get('logged_in'):
+            abort(401)
+        g.db.execute('insert into entries (title, text) values (?, ?)',
+                     [request.form['title'], request.form['text']])
+        g.db.commit()
+        flash('New entry was successfully posted')
+        return redirect(url_for('show_entries'))
+
+Login and Logout
+````````````````
+
+These functions are used to sign the user in and out::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != USERNAME:
+                error = 'Invalid username'
+            elif request.form['password'] != PASSWORD:
+                error = 'Invalid password'
+            else:
+                session['logged_in'] = True
+                flash('You were logged in')
+                return redirect(url_for('show_entries'))
+        return render_template('login.html', error=error)
+
+    @app.route('/logout')
+    def logout():
+        session.pop('logged_in', None)
+        flash('You were logged out')
+        return redirect(url_for('show_entries'))
+
+Step 6: The Templates
+---------------------
+
+Now we should start working on the templates.  If we request the URLs now
+we would only get an exception that Flask cannot find the templates.
+
+Put the following templates into the `templates` folder:
+
+layout.html
+```````````
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Flaskr</title>
+    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+    <div class=page>
+      <h1>Flaskr</h1>
+      <div class=metanav>
+      {% if not session.logged_in %}
+        <a href=""{{ url_for('login') }}"">log in</a>
+      {% else %}
+        <a href=""{{ url_for('logout') }}"">log out</a>
+      {% endif %}
+      </div>
+      {% for message in get_flashed_messages() %}
+        <div class=flash>{{ message }}</div>
+      {% endfor %}
+      {% block body %}{% endblock %}
+    </div>
+
+show_entries.html
+`````````````````
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      {% if g.logged_in %}
+        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+          <dl>
+            <dt>Title:
+            <dd><input type=text size=30 name=title>
+            <dt>Text:
+            <dd><textarea name=text rows=5 cols=40></textarea>
+            <dd><input type=submit value=Share>
+          </dl>
+        </form>
+      {% endif %}
+      <ul class=entries>
+      {% for entry in entries %}
+        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+      {% else %}
+        <li><em>Unbelievable.  No entries here so far</em>
+      {% endfor %}
+      </ul>
+    {% endblock %}
+
+login.html
+``````````
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      <h2>Login</h2>
+      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+      <form action=""{{ url_for('login') }}"" method=post>
+        <dl>
+          <dt>Username:
+          <dd><input type=text name=username>
+          <dt>Password:
+          <dd><input type=password name=password>
+          <dd><input type=submit value=Login>
+        </dl>
+      </form>
+    {% endblock %}
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 02db8afd..1158e158 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -43,11 +43,8 @@ def init_db():
 
 @app.request_init
 def before_request():
-    """"""Make sure we are connected to the database each request.  Also
-    set `g.logged_in` to `True` if we are logged in.
-    """"""
+    """"""Make sure we are connected to the database each request.""""""
     g.db = connect_db()
-    g.logged_in = session.get('logged_in', False)
 
 
 @app.request_shutdown
@@ -66,7 +63,7 @@ def show_entries():
 
 @app.route('/add', methods=['POST'])
 def add_entry():
-    if not g.logged_in:
+    if not session.get('logged_in'):
         abort(401)
     g.db.execute('insert into entries (title, text) values (?, ?)',
                  [request.form['title'], request.form['text']])
","diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 02db8afd..1158e158 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -43,11 +43,8 @@ def init_db():
 
 @app.request_init
 def before_request():
-    """"""Make sure we are connected to the database each request.  Also
-    set `g.logged_in` to `True` if we are logged in.
-    """"""
+    """"""Make sure we are connected to the database each request.""""""
     g.db = connect_db()
-    g.logged_in = session.get('logged_in', False)
 
 
 @app.request_shutdown
@@ -66,7 +63,7 @@ def show_entries():
 
 @app.route('/add', methods=['POST'])
 def add_entry():
-    if not g.logged_in:
+    if not session.get('logged_in'):
         abort(401)
     g.db.execute('insert into entries (title, text) values (?, ?)',
                  [request.form['title'], request.form['text']])
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,examples/flaskr/static/style.css,examples/flaskr/static/style.css,examples/flaskr/static/style.css,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
index b0f38774..39e0a8e7 100644
--- a/examples/flaskr/static/style.css
+++ b/examples/flaskr/static/style.css
@@ -3,14 +3,15 @@ a, h1, h2 { color: #377BA8; }
 h1, h2 { font-family: 'Georgia', serif; margin: 0; }
 h1 { border-bottom: 2px solid #eee; }
 h2 { font-size: 1.2em; }
-div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
-              padding: 0.3em; margin-bottom: 1em; }
+
+div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+           padding: 0.8em; background: white; }
 ul.entries { list-style: none; margin: 0; padding: 0; }
 ul.entries li { margin: 0.8em 1.2em; }
 ul.entries li h2 { margin-left: -1em; }
-div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
-           padding: 0.8em; background: white; }
 form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
 form.add-entry dl { font-weight: bold; }
+div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
+              padding: 0.3em; margin-bottom: 1em; }
 div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
 p.error { background: #F0D6D6; padding: 0.5em; }
","diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
index b0f38774..39e0a8e7 100644
--- a/examples/flaskr/static/style.css
+++ b/examples/flaskr/static/style.css
@@ -3,14 +3,15 @@ a, h1, h2 { color: #377BA8; }
 h1, h2 { font-family: 'Georgia', serif; margin: 0; }
 h1 { border-bottom: 2px solid #eee; }
 h2 { font-size: 1.2em; }
-div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
-              padding: 0.3em; margin-bottom: 1em; }
+
+div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+           padding: 0.8em; background: white; }
 ul.entries { list-style: none; margin: 0; padding: 0; }
 ul.entries li { margin: 0.8em 1.2em; }
 ul.entries li h2 { margin-left: -1em; }
-div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
-           padding: 0.8em; background: white; }
 form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
 form.add-entry dl { font-weight: bold; }
+div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
+              padding: 0.3em; margin-bottom: 1em; }
 div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
 p.error { background: #F0D6D6; padding: 0.5em; }
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,examples/flaskr/templates/layout.html,examples/flaskr/templates/layout.html,examples/flaskr/templates/layout.html,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/examples/flaskr/templates/layout.html b/examples/flaskr/templates/layout.html
index eafcefa9..cbdb9650 100644
--- a/examples/flaskr/templates/layout.html
+++ b/examples/flaskr/templates/layout.html
@@ -4,7 +4,7 @@
 <div class=page>
   <h1>Flaskr</h1>
   <div class=metanav>
-  {% if not g.logged_in %}
+  {% if not session.logged_in %}
     <a href=""{{ url_for('login') }}"">log in</a>
   {% else %}
     <a href=""{{ url_for('logout') }}"">log out</a>
","diff --git a/examples/flaskr/templates/layout.html b/examples/flaskr/templates/layout.html
index eafcefa9..cbdb9650 100644
--- a/examples/flaskr/templates/layout.html
+++ b/examples/flaskr/templates/layout.html
@@ -4,7 +4,7 @@
 <div class=page>
   <h1>Flaskr</h1>
   <div class=metanav>
-  {% if not g.logged_in %}
+  {% if not session.logged_in %}
     <a href=""{{ url_for('login') }}"">log in</a>
   {% else %}
     <a href=""{{ url_for('logout') }}"">log out</a>
"
c4f5c2fb9afc1679c085500830bd53fab93ad885,1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,examples/flaskr/templates/login.html,examples/flaskr/templates/login.html,examples/flaskr/templates/login.html,First part of the tutorial.  Many explanations missing but it's a start.,"diff --git a/examples/flaskr/templates/login.html b/examples/flaskr/templates/login.html
index 568e9e84..6f70bb76 100644
--- a/examples/flaskr/templates/login.html
+++ b/examples/flaskr/templates/login.html
@@ -7,7 +7,7 @@
       <dt>Username:
       <dd><input type=text name=username>
       <dt>Password:
-      <dd><input type=passowrd name=password>
+      <dd><input type=password name=password>
       <dd><input type=submit value=Login>
     </dl>
   </form>
","diff --git a/examples/flaskr/templates/login.html b/examples/flaskr/templates/login.html
index 568e9e84..6f70bb76 100644
--- a/examples/flaskr/templates/login.html
+++ b/examples/flaskr/templates/login.html
@@ -7,7 +7,7 @@
       <dt>Username:
       <dd><input type=text name=username>
       <dt>Password:
-      <dd><input type=passowrd name=password>
+      <dd><input type=password name=password>
       <dd><input type=submit value=Login>
     </dl>
   </form>
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,Beefed up the tutorial,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index c7b4769a..acb6788f 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -40,6 +40,8 @@ So here a simple example how you can use SQLite 3 with Flask::
         g.db.close()
         return response
 
+.. _easy-querying:
+
 Easy Querying
 `````````````
 
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index c7b4769a..acb6788f 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -40,6 +40,8 @@ So here a simple example how you can use SQLite 3 with Flask::
         g.db.close()
         return response
 
+.. _easy-querying:
+
 Easy Querying
 `````````````
 
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Beefed up the tutorial,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index df476867..1733b301 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -89,6 +89,14 @@ Or pass it to run::
 
 Both will have exactly the same effect.
 
+.. admonition:: Attention
+
+   The interactive debugger however does not work in forking environments
+   which makes it nearly impossible to use on production servers but the
+   debugger still allows the execution of arbitrary code which makes it a
+   major security risk and **must never be used on production machines**
+   because of that.
+
 
 Routing
 -------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index df476867..1733b301 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -89,6 +89,14 @@ Or pass it to run::
 
 Both will have exactly the same effect.
 
+.. admonition:: Attention
+
+   The interactive debugger however does not work in forking environments
+   which makes it nearly impossible to use on production servers but the
+   debugger still allows the execution of arbitrary code which makes it a
+   major security risk and **must never be used on production machines**
+   because of that.
+
 
 Routing
 -------
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,docs/testing.rst,docs/testing.rst,docs/testing.rst,Beefed up the tutorial,"diff --git a/docs/testing.rst b/docs/testing.rst
index 4c04414d..62b309ce 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -22,72 +22,78 @@ installation.
 The Application
 ---------------
 
-First we need an application to test for functionality.  Let's start
-simple with a Hello World application (`hello.py`)::
+First we need an application to test for functionality.  For the testing
+we will use the application from the :ref:`tutorial`.  If you don't have
+that application yet, get the sources from `the examples`_.
 
-    from flask import Flask, render_template_string
-    app = Flask(__name__)
-
-    @app.route('/')
-    @app.route('/<name>')
-    def hello(name='World'):
-        return render_template_string('''
-            <!doctype html>
-            <title>Hello {{ name }}!</title>
-            <h1>Hello {{ name }}!</h1>
-        ''', name=name)
+.. _the examples:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
 
 The Testing Skeleton
 --------------------
 
 In order to test that, we add a second module (
-`hello_tests.py`) and create a unittest skeleton there::
+`flaskr_tests.py`) and create a unittest skeleton there::
 
     import unittest
-    import hello
+    import flaskr
+    import tempfile
 
-    class HelloWorldTestCase(unittest.TestCase):
+    class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.app = hello.app.test_client()
+            self.db = tempfile.NamedTemporaryFile()
+            self.app = flaskr.app.test_client()
+            flaskr.DATABASE = self.db.name
+            flaskr.init_db()
 
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client.  That function
-is called before each individual test function.  What the test client does
-for us is giving us a simple interface to the application.  We can trigger
-test requests to the application and the client will also keep track of
-cookies for us.
+The code in the `setUp` function creates a new test client and initialize
+a new database.  That function is called before each individual test function.
+What the test client does for us is giving us a simple interface to the
+application.  We can trigger test requests to the application and the
+client will also keep track of cookies for us.
+
+Because SQLite3 is filesystem based we can easily use the tempfile module
+to create a temporary database and initialize it.  Just make sure that you
+keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
+store it as `self.db` because of that) so that the garbage collector does
+not remove that object and with it the database from the filesystem.
 
 If we now run that testsuite, we should see the following output::
 
-    $ python hello_tests.py
+    $ python flaskr_tests.py
 
     ----------------------------------------------------------------------
     Ran 0 tests in 0.000s
     
     OK
 
-Even though it did not run any tests, we already know that our hello
+Even though it did not run any tests, we already know that our flaskr
 application is syntactically valid, otherwise the import would have died
 with an exception.
 
 The First Test
 --------------
 
-Now we can add the first test.  Let's check that the application greets us
-with ""Hello World"" if we access it on ``/``.  For that we modify our
-created test case class so that it looks like this::
+Now we can add the first test.  Let's check that the application shows
+""No entries here so far"" if we access the root of the application (``/``).
+For that we modify our created test case class so that it looks like
+this::
 
-    class HelloWorldTestCase(unittest.TestCase):
+    class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.app = hello.app.test_client()
+            self.db = tempfile.NamedTemporaryFile()
+            self.app = flaskr.app.test_client()
+            flaskr.DATABASE = self.db.name
+            flaskr.init_db()
 
-        def test_hello_world(self):
+        def test_empty_db(self):
             rv = self.app.get('/')
-            assert 'Hello World!' in rv.data
+            assert 'No entries here so far' in rv.data
 
 Test functions begin with the word `test`.  Every function named like that
 will be picked up automatically.  By using `self.app.get` we can send an
@@ -95,22 +101,87 @@ HTTP `GET` request to the application with the given path.  The return
 value will be a :class:`~flask.Flask.response_class` object.  We can now
 use the :attr:`~werkzeug.BaseResponse.data` attribute to inspect the
 return value (as string) from the application.  In this case, we ensure
-that ``'Hello World!'`` is part of the output.
+that ``'No entries here so far'`` is part of the output.
+
+Run it again and you should see one passing test::
+
+    $ python flaskr_tests.py
+    .
+    ----------------------------------------------------------------------
+    Ran 1 test in 0.034s
+
+    OK
+
+Of course you can submit forms with the test client as well which we will
+use now to log our user in.
+
+Logging In and Out
+------------------
+
+The majority of the functionality of our application is only available for
+the administration user.  So we need a way to log our test client into the
+application and out of it again.  For that we fire some requests to the
+login and logout pages with the required form data (username and
+password).  Because the login and logout pages redirect, we tell the
+client to `follow_redirects`.
+
+Add the following two methods do your `FlaskrTestCase` class::
+
+   def login(self, username, password):
+       return self.app.post('/login', data=dict(
+           username=username,
+           password=password
+       ), follow_redirects=True)
 
-Run it again and you should see one passing test.  Let's add a second test
-here::
+   def logout(self):
+       return self.app.get('/logout', follow_redirects=True)
 
-        def test_hello_name(self):
-            rv = self.app.get('/Peter')
-            assert 'Hello Peter!' in rv.data
+Now we can easily test if logging in and out works and that it fails with
+invalid credentials.  Add this as new test to the class::
+
+   def test_login_logout(self):
+       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+       assert 'You were logged in' in rv.data
+       rv = self.logout()
+       assert 'You were logged out' in rv.data
+       rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+       assert 'Invalid username' in rv.data
+       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+       assert 'Invalid password' in rv.data
+
+Test Adding Messages
+--------------------
+
+Now we can also test that adding messages works.  Add a new test method
+like this::
+
+    def test_messages(self):
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.app.post('/add', data=dict(
+            title='<Hello>',
+            text='<strong>HTML</strong> allowed here'
+        ), follow_redirects=True)
+        assert 'No entries here so far' not in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert '&lt;Hello&gt' in rv.data
+        assert '<strong>HTML</strong> allowed here' in rv.data
+
+Here we also check that HTML is allowed in the text but not in the title
+which is the intended behavior.
+
+Running that should now give us three passing tests::
+
+    $ python flaskr_tests.py 
+    ...
+    ----------------------------------------------------------------------
+    Ran 3 tests in 0.332s
+    
+    OK
 
-Of course you can submit forms with the test client as well.  For that and
-other features of the test client, check the documentation of the Werkzeug
-test :class:`~werkzeug.Client` and the tests of the MiniTwit example
-application:
+For more complex tests with headers and status codes, check out the
+`MiniTwit Example`_ from the sources.  That one contains a larger test
+suite.
 
--   Werkzeug Test :class:`~werkzeug.Client`
--   `MiniTwit Example`_
 
 .. _MiniTwit Example:
    http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
","diff --git a/docs/testing.rst b/docs/testing.rst
index 4c04414d..62b309ce 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -22,72 +22,78 @@ installation.
 The Application
 ---------------
 
-First we need an application to test for functionality.  Let's start
-simple with a Hello World application (`hello.py`)::
+First we need an application to test for functionality.  For the testing
+we will use the application from the :ref:`tutorial`.  If you don't have
+that application yet, get the sources from `the examples`_.
 
-    from flask import Flask, render_template_string
-    app = Flask(__name__)
-
-    @app.route('/')
-    @app.route('/<name>')
-    def hello(name='World'):
-        return render_template_string('''
-            <!doctype html>
-            <title>Hello {{ name }}!</title>
-            <h1>Hello {{ name }}!</h1>
-        ''', name=name)
+.. _the examples:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
 
 The Testing Skeleton
 --------------------
 
 In order to test that, we add a second module (
-`hello_tests.py`) and create a unittest skeleton there::
+`flaskr_tests.py`) and create a unittest skeleton there::
 
     import unittest
-    import hello
+    import flaskr
+    import tempfile
 
-    class HelloWorldTestCase(unittest.TestCase):
+    class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.app = hello.app.test_client()
+            self.db = tempfile.NamedTemporaryFile()
+            self.app = flaskr.app.test_client()
+            flaskr.DATABASE = self.db.name
+            flaskr.init_db()
 
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client.  That function
-is called before each individual test function.  What the test client does
-for us is giving us a simple interface to the application.  We can trigger
-test requests to the application and the client will also keep track of
-cookies for us.
+The code in the `setUp` function creates a new test client and initialize
+a new database.  That function is called before each individual test function.
+What the test client does for us is giving us a simple interface to the
+application.  We can trigger test requests to the application and the
+client will also keep track of cookies for us.
+
+Because SQLite3 is filesystem based we can easily use the tempfile module
+to create a temporary database and initialize it.  Just make sure that you
+keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
+store it as `self.db` because of that) so that the garbage collector does
+not remove that object and with it the database from the filesystem.
 
 If we now run that testsuite, we should see the following output::
 
-    $ python hello_tests.py
+    $ python flaskr_tests.py
 
     ----------------------------------------------------------------------
     Ran 0 tests in 0.000s
     
     OK
 
-Even though it did not run any tests, we already know that our hello
+Even though it did not run any tests, we already know that our flaskr
 application is syntactically valid, otherwise the import would have died
 with an exception.
 
 The First Test
 --------------
 
-Now we can add the first test.  Let's check that the application greets us
-with ""Hello World"" if we access it on ``/``.  For that we modify our
-created test case class so that it looks like this::
+Now we can add the first test.  Let's check that the application shows
+""No entries here so far"" if we access the root of the application (``/``).
+For that we modify our created test case class so that it looks like
+this::
 
-    class HelloWorldTestCase(unittest.TestCase):
+    class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.app = hello.app.test_client()
+            self.db = tempfile.NamedTemporaryFile()
+            self.app = flaskr.app.test_client()
+            flaskr.DATABASE = self.db.name
+            flaskr.init_db()
 
-        def test_hello_world(self):
+        def test_empty_db(self):
             rv = self.app.get('/')
-            assert 'Hello World!' in rv.data
+            assert 'No entries here so far' in rv.data
 
 Test functions begin with the word `test`.  Every function named like that
 will be picked up automatically.  By using `self.app.get` we can send an
@@ -95,22 +101,87 @@ HTTP `GET` request to the application with the given path.  The return
 value will be a :class:`~flask.Flask.response_class` object.  We can now
 use the :attr:`~werkzeug.BaseResponse.data` attribute to inspect the
 return value (as string) from the application.  In this case, we ensure
-that ``'Hello World!'`` is part of the output.
+that ``'No entries here so far'`` is part of the output.
 
-Run it again and you should see one passing test.  Let's add a second test
-here::
+Run it again and you should see one passing test::
 
-        def test_hello_name(self):
-            rv = self.app.get('/Peter')
-            assert 'Hello Peter!' in rv.data
+    $ python flaskr_tests.py
+    .
+    ----------------------------------------------------------------------
+    Ran 1 test in 0.034s
 
-Of course you can submit forms with the test client as well.  For that and
-other features of the test client, check the documentation of the Werkzeug
-test :class:`~werkzeug.Client` and the tests of the MiniTwit example
-application:
+    OK
+
+Of course you can submit forms with the test client as well which we will
+use now to log our user in.
+
+Logging In and Out
+------------------
+
+The majority of the functionality of our application is only available for
+the administration user.  So we need a way to log our test client into the
+application and out of it again.  For that we fire some requests to the
+login and logout pages with the required form data (username and
+password).  Because the login and logout pages redirect, we tell the
+client to `follow_redirects`.
+
+Add the following two methods do your `FlaskrTestCase` class::
+
+   def login(self, username, password):
+       return self.app.post('/login', data=dict(
+           username=username,
+           password=password
+       ), follow_redirects=True)
+
+   def logout(self):
+       return self.app.get('/logout', follow_redirects=True)
+
+Now we can easily test if logging in and out works and that it fails with
+invalid credentials.  Add this as new test to the class::
+
+   def test_login_logout(self):
+       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+       assert 'You were logged in' in rv.data
+       rv = self.logout()
+       assert 'You were logged out' in rv.data
+       rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+       assert 'Invalid username' in rv.data
+       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+       assert 'Invalid password' in rv.data
+
+Test Adding Messages
+--------------------
+
+Now we can also test that adding messages works.  Add a new test method
+like this::
+
+    def test_messages(self):
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.app.post('/add', data=dict(
+            title='<Hello>',
+            text='<strong>HTML</strong> allowed here'
+        ), follow_redirects=True)
+        assert 'No entries here so far' not in rv.data
+        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        assert '&lt;Hello&gt' in rv.data
+        assert '<strong>HTML</strong> allowed here' in rv.data
+
+Here we also check that HTML is allowed in the text but not in the title
+which is the intended behavior.
+
+Running that should now give us three passing tests::
+
+    $ python flaskr_tests.py 
+    ...
+    ----------------------------------------------------------------------
+    Ran 3 tests in 0.332s
+    
+    OK
+
+For more complex tests with headers and status codes, check out the
+`MiniTwit Example`_ from the sources.  That one contains a larger test
+suite.
 
--   Werkzeug Test :class:`~werkzeug.Client`
--   `MiniTwit Example`_
 
 .. _MiniTwit Example:
    http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,docs/tutorial.rst,docs/tutorial.rst,docs/tutorial.rst,Beefed up the tutorial,"diff --git a/docs/tutorial.rst b/docs/tutorial.rst
index bbf9fa6c..bdd624c0 100644
--- a/docs/tutorial.rst
+++ b/docs/tutorial.rst
@@ -31,6 +31,13 @@ less web-2.0-ish name ;)  Basically we want it to do the following things:
 3. the page shows all entries so far in reverse order (newest on top) and
    the user can add new ones from there if logged in.
 
+We will be using SQlite3 directly for that application because it's good
+enough for an application of that size.  For larger applications however
+it makes a lot of sense to use `SQLAlchemy`_ that handles database
+connections in a more intelligent way, allows you to target different
+relational databases at once and more.  You might also want to consider
+one of the popular NoSQL databases if your data is more suited for those.
+
 Here a screenshot from the final application:
 
 .. image:: _static/flaskr.png
@@ -38,6 +45,8 @@ Here a screenshot from the final application:
    :class: screenshot
    :alt: screenshot of the final application
 
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+
 Step 0: Creating The Folders
 ----------------------------
 
@@ -50,7 +59,13 @@ application::
 
 The `flaskr` folder is not a python package, but just something where we
 drop our files.  Directly into this folder we will then put our database
-schema as well as main module in the following steps.
+schema as well as main module in the following steps.  The files inside
+the `static` folder are available to users of the application via `HTTP`.
+This is the place where css and javascript files go.  Inside the
+`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
+templates there.
+
+.. _Jinja2: http://jinja.pocoo.org/2/
 
 Step 1: Database Schema
 -----------------------
@@ -79,12 +94,18 @@ Step 2: Application Setup Code
 
 Now that we have the schema in place we can create the application module.
 Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
-will add the imports we will need as well as the config section::
+will add the imports we will need as well as the config section.  For
+small applications it's a possibility to drop the configuration directly
+into the module which we will be doing here.  However a cleaner solution
+would be to create a separate `.ini` or `.py` file and load that or import
+the values from there.
+
+::
 
     # all the imports
     import sqlite3
-    from flask import Flask, request, session, g, redirect, url_for, abort, \
-         render_template, flash
+    from flask import Flask, request, session, g, redirect, url_for, \
+         abort, render_template, flash
 
     # configuration
     DATABASE = '/tmp/flaskr.db'
@@ -93,17 +114,25 @@ will add the imports we will need as well as the config section::
     USERNAME = 'admin'
     PASSWORD = 'default'
 
-The `with_statement` and :func:`~contextlib.closing` function are used to
-make dealing with the database connection easier later on for setting up
-the initial database.  Next we can create our actual application and
-initialize it with the config::
+Next we can create our actual application and initialize it with the
+config::
 
     # create our little application :)
     app = Flask(__name__)
     app.secret_key = SECRET_KEY
     app.debug = DEBUG
 
-We can also add a method to easily connect to the database sepcified::
+The `secret_key` is needed to keep the client-side sessions secure.
+Choose that key wisely and as hard to guess and complex as possible.  The
+debug flag enables or disables the interactive debugger.  Never leave
+debug mode activated in a production system because it will allow users to
+executed code on the server!
+
+We also add a method to easily connect to the database specified.  That
+can be used to open a connection on request and also from the interactive
+Python shell or a script.  This will come in handy later
+
+::
 
     def connect_db():
         return sqlite3.connect(DATABASE)
@@ -114,6 +143,11 @@ server if we run that file as standalone application::
     if __name__ == '__main__':
         app.run()
 
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
 .. admonition:: Troubleshooting
 
    If you notice later that the browser cannot connect to the server
@@ -125,11 +159,6 @@ server if we run that file as standalone application::
    default and not every browser is happy with that.  This forces IPv4
    usage.
 
-With that out of the way you should be able to start up the application
-without problems.  When you head over to the server you will get an 404
-page not found error because we don't have any views yet.  But we will
-focus on that a little later.  First we should get the database working.
-
 Step 3: Creating The Database
 -----------------------------
 
@@ -159,7 +188,8 @@ first (`__future__` imports must be the very first import)::
     from contextlib import closing
 
 Next we can create a function called `init_db` that initializes the
-database::
+database.  For this we can use the `connect_db` function we defined
+earlier.  Just add that function below the `connect_db` function::
     
     def init_db():
         with closing(connect_db()) as db:
@@ -167,21 +197,26 @@ database::
                 db.cursor().executescript(f.read())
             db.commit()
 
+The :func:`~contextlib.closing` helper function allows us to keep a
+connection open for the duration of the `with` block.  The
+:func:`~flask.Flask.open_resource` method of the application object
+supports that functionality out of the box, so it can be used in the
+`with` block directly.  This function opens a file from the resource
+location (your `flaskr` folder) and allows you to read from it.  We are
+using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes.
+SQLite 3 and other transactional databases will not commit unless you
+explicitly tell it to.
+
 Now it is possible to create a database by starting up a Python shell and
 importing and calling that function::
 
 >>> from flaskr import init_db
 >>> init_db()
 
-The :meth:`~flask.Flask.open_resource` function opens a file from the
-resource location (your flaskr folder) and allows you to read from it.  We
-are using this here to execute a script on the database connection.
-
-When we connect to a database we get a connection object (here called
-`db`) that can give us a cursor.  On that cursor there is a method to
-execute a complete script.  Finally we only have to commit the changes and
-close the transaction.
-
 Step 4: Request Database Connections
 ------------------------------------
 
@@ -225,7 +260,16 @@ view functions.  We will need for of them:
 Show Entries
 ````````````
 
-This view shows all the entries stored in the database::
+This view shows all the entries stored in the database.  It listens on the
+root of the application and will select title and text from the database.
+The one with the highest id (the newest entry) on top.  The rows returned
+from the cursor are tuples with the columns ordered like specified in the
+select statement.  This is good enough for small applications like here,
+but you might want to convert them into a dict.  If you are interested how
+to do that, check out the :ref:`easy-querying` example.
+
+The view function will pass the entries as dicts to the
+`show_entries.html` template and return the rendered one::
 
     @app.route('/')
     def show_entries():
@@ -238,7 +282,9 @@ Add New Entry
 
 This view lets the user add new entries if he's logged in.  This only
 responds to `POST` requests, the actual form is shown on the
-`show_entries` page::
+`show_entries` page.  If everything worked out well we will
+:func:`~flask.flash` an information message to the next request and
+redirect back to the `show_entries` page::
 
     @app.route('/add', methods=['POST'])
     def add_entry():
@@ -250,10 +296,19 @@ responds to `POST` requests, the actual form is shown on the
         flash('New entry was successfully posted')
         return redirect(url_for('show_entries'))
 
+Note that we check that the user is logged in here (the `logged_in` key is
+present in the session and `True`).
+
 Login and Logout
 ````````````````
 
-These functions are used to sign the user in and out::
+These functions are used to sign the user in and out.  Login checks the
+username and password against the ones from the configuration and sets the
+`logged_in` key in the session.  If the user logged in successfully that
+key is set to `True` and the user is redirected back to the `show_entries`
+page.  In that case also a message is flashed that informs the user he or
+she was logged in successfully.  If an error occoured the template is
+notified about that and the user asked again::
 
     @app.route('/login', methods=['GET', 'POST'])
     def login():
@@ -269,6 +324,15 @@ These functions are used to sign the user in and out::
                 return redirect(url_for('show_entries'))
         return render_template('login.html', error=error)
 
+The logout function on the other hand removes that key from the session
+again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
+of the dict and pass a second parameter to it (the default) the method
+will delete the key from the dictionary if present or do nothing when that
+key was not in there.  This is helpful because we don't have to check in
+that case if the user was logged in.
+
+::
+
     @app.route('/logout')
     def logout():
         session.pop('logged_in', None)
@@ -279,13 +343,32 @@ Step 6: The Templates
 ---------------------
 
 Now we should start working on the templates.  If we request the URLs now
-we would only get an exception that Flask cannot find the templates.
+we would only get an exception that Flask cannot find the templates.  The
+templates are using `Jinja2`_ syntax and have autoescaping enabled by
+default.  This means that unless you mark a value in the code with
+:class:`~flask.Markup` or with the ``|safe`` filter in the template,
+Jinja2 will ensure that special characters such as ``<`` or ``>`` are
+escaped with their XML equivalents.
+
+We are also using template inheritance which makes it possible to reuse
+the layout of the website in all pages.
 
 Put the following templates into the `templates` folder:
 
 layout.html
 ```````````
 
+This template contains the HTML skeleton, the header and a link to log in
+(or log out if the user was already logged in).  It also displays the
+flashed messages if there are any.  The ``{% block body %}`` block can be
+replaced by a block of the same name (``body``) in a child template.
+
+The :class:`~flask.session` dict is available in the template as well and
+you can use that to check if the user is logged in or not.  Note that in
+Jinja you can access missing attributes and items of objects / dicts which
+makes the following code work, even if there is no ``'logged_in'`` key in
+the session:
+
 .. sourcecode:: html+jinja
 
     <!doctype html>
@@ -309,11 +392,17 @@ layout.html
 show_entries.html
 `````````````````
 
+This template extends the `layout.html` template from above to display the
+messages.  Note that the `for` loop iterates over the messages we passed
+in with the :func:`~flask.render_template` function.  We also tell the
+form to submit to your `add_entry` function and use `POST` as `HTTP`
+method:
+
 .. sourcecode:: html+jinja
 
     {% extends ""layout.html"" %}
     {% block body %}
-      {% if g.logged_in %}
+      {% if session.logged_in %}
         <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
           <dl>
             <dt>Title:
@@ -336,6 +425,9 @@ show_entries.html
 login.html
 ``````````
 
+Finally the login template which basically just displays a form to allow
+the user to login:
+
 .. sourcecode:: html+jinja
 
     {% extends ""layout.html"" %}
@@ -352,3 +444,41 @@ login.html
         </dl>
       </form>
     {% endblock %}
+
+Step 7: Adding Style
+--------------------
+
+Now that everything else works, it's time to add some style to the
+application.  Just create a stylesheet called `style.css` in the `static`
+folder we created before:
+
+.. sourcecode:: css
+
+    body            { font-family: sans-serif; background: #eee; }
+    a, h1, h2       { color: #377BA8; }
+    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
+    h1              { border-bottom: 2px solid #eee; }
+    h2              { font-size: 1.2em; }
+    
+    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+                      padding: 0.8em; background: white; }
+    .entries        { list-style: none; margin: 0; padding: 0; }
+    .entries li     { margin: 0.8em 1.2em; }
+    .entries li h2  { margin-left: -1em; }
+    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+    .add-entry dl   { font-weight: bold; }
+    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                      margin-bottom: 1em; background: #fafafa; }
+    .flash          { background: #CEE5F5; padding: 0.5em;
+                      border: 1px solid #AACBE2; }
+    .error          { background: #F0D6D6; padding: 0.5em; }
+
+Bonus: Testing the Application
+-------------------------------
+
+Now that you have finished the application and everything works as
+expected, it's probably not the best idea to add automated tests to
+simplify modifications in the future.  The application above is used as a
+basic example of how to perform unittesting in the :ref:`testing` section
+of the documentation.  Go there to see how easy it is to test Flask
+applications.
","diff --git a/docs/tutorial.rst b/docs/tutorial.rst
index bbf9fa6c..bdd624c0 100644
--- a/docs/tutorial.rst
+++ b/docs/tutorial.rst
@@ -31,6 +31,13 @@ less web-2.0-ish name ;)  Basically we want it to do the following things:
 3. the page shows all entries so far in reverse order (newest on top) and
    the user can add new ones from there if logged in.
 
+We will be using SQlite3 directly for that application because it's good
+enough for an application of that size.  For larger applications however
+it makes a lot of sense to use `SQLAlchemy`_ that handles database
+connections in a more intelligent way, allows you to target different
+relational databases at once and more.  You might also want to consider
+one of the popular NoSQL databases if your data is more suited for those.
+
 Here a screenshot from the final application:
 
 .. image:: _static/flaskr.png
@@ -38,6 +45,8 @@ Here a screenshot from the final application:
    :class: screenshot
    :alt: screenshot of the final application
 
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+
 Step 0: Creating The Folders
 ----------------------------
 
@@ -50,7 +59,13 @@ application::
 
 The `flaskr` folder is not a python package, but just something where we
 drop our files.  Directly into this folder we will then put our database
-schema as well as main module in the following steps.
+schema as well as main module in the following steps.  The files inside
+the `static` folder are available to users of the application via `HTTP`.
+This is the place where css and javascript files go.  Inside the
+`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
+templates there.
+
+.. _Jinja2: http://jinja.pocoo.org/2/
 
 Step 1: Database Schema
 -----------------------
@@ -79,12 +94,18 @@ Step 2: Application Setup Code
 
 Now that we have the schema in place we can create the application module.
 Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
-will add the imports we will need as well as the config section::
+will add the imports we will need as well as the config section.  For
+small applications it's a possibility to drop the configuration directly
+into the module which we will be doing here.  However a cleaner solution
+would be to create a separate `.ini` or `.py` file and load that or import
+the values from there.
+
+::
 
     # all the imports
     import sqlite3
-    from flask import Flask, request, session, g, redirect, url_for, abort, \
-         render_template, flash
+    from flask import Flask, request, session, g, redirect, url_for, \
+         abort, render_template, flash
 
     # configuration
     DATABASE = '/tmp/flaskr.db'
@@ -93,17 +114,25 @@ will add the imports we will need as well as the config section::
     USERNAME = 'admin'
     PASSWORD = 'default'
 
-The `with_statement` and :func:`~contextlib.closing` function are used to
-make dealing with the database connection easier later on for setting up
-the initial database.  Next we can create our actual application and
-initialize it with the config::
+Next we can create our actual application and initialize it with the
+config::
 
     # create our little application :)
     app = Flask(__name__)
     app.secret_key = SECRET_KEY
     app.debug = DEBUG
 
-We can also add a method to easily connect to the database sepcified::
+The `secret_key` is needed to keep the client-side sessions secure.
+Choose that key wisely and as hard to guess and complex as possible.  The
+debug flag enables or disables the interactive debugger.  Never leave
+debug mode activated in a production system because it will allow users to
+executed code on the server!
+
+We also add a method to easily connect to the database specified.  That
+can be used to open a connection on request and also from the interactive
+Python shell or a script.  This will come in handy later
+
+::
 
     def connect_db():
         return sqlite3.connect(DATABASE)
@@ -114,6 +143,11 @@ server if we run that file as standalone application::
     if __name__ == '__main__':
         app.run()
 
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
 .. admonition:: Troubleshooting
 
    If you notice later that the browser cannot connect to the server
@@ -125,11 +159,6 @@ server if we run that file as standalone application::
    default and not every browser is happy with that.  This forces IPv4
    usage.
 
-With that out of the way you should be able to start up the application
-without problems.  When you head over to the server you will get an 404
-page not found error because we don't have any views yet.  But we will
-focus on that a little later.  First we should get the database working.
-
 Step 3: Creating The Database
 -----------------------------
 
@@ -159,7 +188,8 @@ first (`__future__` imports must be the very first import)::
     from contextlib import closing
 
 Next we can create a function called `init_db` that initializes the
-database::
+database.  For this we can use the `connect_db` function we defined
+earlier.  Just add that function below the `connect_db` function::
     
     def init_db():
         with closing(connect_db()) as db:
@@ -167,21 +197,26 @@ database::
                 db.cursor().executescript(f.read())
             db.commit()
 
+The :func:`~contextlib.closing` helper function allows us to keep a
+connection open for the duration of the `with` block.  The
+:func:`~flask.Flask.open_resource` method of the application object
+supports that functionality out of the box, so it can be used in the
+`with` block directly.  This function opens a file from the resource
+location (your `flaskr` folder) and allows you to read from it.  We are
+using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes.
+SQLite 3 and other transactional databases will not commit unless you
+explicitly tell it to.
+
 Now it is possible to create a database by starting up a Python shell and
 importing and calling that function::
 
 >>> from flaskr import init_db
 >>> init_db()
 
-The :meth:`~flask.Flask.open_resource` function opens a file from the
-resource location (your flaskr folder) and allows you to read from it.  We
-are using this here to execute a script on the database connection.
-
-When we connect to a database we get a connection object (here called
-`db`) that can give us a cursor.  On that cursor there is a method to
-execute a complete script.  Finally we only have to commit the changes and
-close the transaction.
-
 Step 4: Request Database Connections
 ------------------------------------
 
@@ -225,7 +260,16 @@ view functions.  We will need for of them:
 Show Entries
 ````````````
 
-This view shows all the entries stored in the database::
+This view shows all the entries stored in the database.  It listens on the
+root of the application and will select title and text from the database.
+The one with the highest id (the newest entry) on top.  The rows returned
+from the cursor are tuples with the columns ordered like specified in the
+select statement.  This is good enough for small applications like here,
+but you might want to convert them into a dict.  If you are interested how
+to do that, check out the :ref:`easy-querying` example.
+
+The view function will pass the entries as dicts to the
+`show_entries.html` template and return the rendered one::
 
     @app.route('/')
     def show_entries():
@@ -238,7 +282,9 @@ Add New Entry
 
 This view lets the user add new entries if he's logged in.  This only
 responds to `POST` requests, the actual form is shown on the
-`show_entries` page::
+`show_entries` page.  If everything worked out well we will
+:func:`~flask.flash` an information message to the next request and
+redirect back to the `show_entries` page::
 
     @app.route('/add', methods=['POST'])
     def add_entry():
@@ -250,10 +296,19 @@ responds to `POST` requests, the actual form is shown on the
         flash('New entry was successfully posted')
         return redirect(url_for('show_entries'))
 
+Note that we check that the user is logged in here (the `logged_in` key is
+present in the session and `True`).
+
 Login and Logout
 ````````````````
 
-These functions are used to sign the user in and out::
+These functions are used to sign the user in and out.  Login checks the
+username and password against the ones from the configuration and sets the
+`logged_in` key in the session.  If the user logged in successfully that
+key is set to `True` and the user is redirected back to the `show_entries`
+page.  In that case also a message is flashed that informs the user he or
+she was logged in successfully.  If an error occoured the template is
+notified about that and the user asked again::
 
     @app.route('/login', methods=['GET', 'POST'])
     def login():
@@ -269,6 +324,15 @@ These functions are used to sign the user in and out::
                 return redirect(url_for('show_entries'))
         return render_template('login.html', error=error)
 
+The logout function on the other hand removes that key from the session
+again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
+of the dict and pass a second parameter to it (the default) the method
+will delete the key from the dictionary if present or do nothing when that
+key was not in there.  This is helpful because we don't have to check in
+that case if the user was logged in.
+
+::
+
     @app.route('/logout')
     def logout():
         session.pop('logged_in', None)
@@ -279,13 +343,32 @@ Step 6: The Templates
 ---------------------
 
 Now we should start working on the templates.  If we request the URLs now
-we would only get an exception that Flask cannot find the templates.
+we would only get an exception that Flask cannot find the templates.  The
+templates are using `Jinja2`_ syntax and have autoescaping enabled by
+default.  This means that unless you mark a value in the code with
+:class:`~flask.Markup` or with the ``|safe`` filter in the template,
+Jinja2 will ensure that special characters such as ``<`` or ``>`` are
+escaped with their XML equivalents.
+
+We are also using template inheritance which makes it possible to reuse
+the layout of the website in all pages.
 
 Put the following templates into the `templates` folder:
 
 layout.html
 ```````````
 
+This template contains the HTML skeleton, the header and a link to log in
+(or log out if the user was already logged in).  It also displays the
+flashed messages if there are any.  The ``{% block body %}`` block can be
+replaced by a block of the same name (``body``) in a child template.
+
+The :class:`~flask.session` dict is available in the template as well and
+you can use that to check if the user is logged in or not.  Note that in
+Jinja you can access missing attributes and items of objects / dicts which
+makes the following code work, even if there is no ``'logged_in'`` key in
+the session:
+
 .. sourcecode:: html+jinja
 
     <!doctype html>
@@ -309,11 +392,17 @@ layout.html
 show_entries.html
 `````````````````
 
+This template extends the `layout.html` template from above to display the
+messages.  Note that the `for` loop iterates over the messages we passed
+in with the :func:`~flask.render_template` function.  We also tell the
+form to submit to your `add_entry` function and use `POST` as `HTTP`
+method:
+
 .. sourcecode:: html+jinja
 
     {% extends ""layout.html"" %}
     {% block body %}
-      {% if g.logged_in %}
+      {% if session.logged_in %}
         <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
           <dl>
             <dt>Title:
@@ -336,6 +425,9 @@ show_entries.html
 login.html
 ``````````
 
+Finally the login template which basically just displays a form to allow
+the user to login:
+
 .. sourcecode:: html+jinja
 
     {% extends ""layout.html"" %}
@@ -352,3 +444,41 @@ login.html
         </dl>
       </form>
     {% endblock %}
+
+Step 7: Adding Style
+--------------------
+
+Now that everything else works, it's time to add some style to the
+application.  Just create a stylesheet called `style.css` in the `static`
+folder we created before:
+
+.. sourcecode:: css
+
+    body            { font-family: sans-serif; background: #eee; }
+    a, h1, h2       { color: #377BA8; }
+    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
+    h1              { border-bottom: 2px solid #eee; }
+    h2              { font-size: 1.2em; }
+    
+    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+                      padding: 0.8em; background: white; }
+    .entries        { list-style: none; margin: 0; padding: 0; }
+    .entries li     { margin: 0.8em 1.2em; }
+    .entries li h2  { margin-left: -1em; }
+    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+    .add-entry dl   { font-weight: bold; }
+    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                      margin-bottom: 1em; background: #fafafa; }
+    .flash          { background: #CEE5F5; padding: 0.5em;
+                      border: 1px solid #AACBE2; }
+    .error          { background: #F0D6D6; padding: 0.5em; }
+
+Bonus: Testing the Application
+-------------------------------
+
+Now that you have finished the application and everything works as
+expected, it's probably not the best idea to add automated tests to
+simplify modifications in the future.  The application above is used as a
+basic example of how to perform unittesting in the :ref:`testing` section
+of the documentation.  Go there to see how easy it is to test Flask
+applications.
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,Beefed up the tutorial,"diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index f8a05976..e8f01437 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -33,6 +33,11 @@ class FlaskrTestCase(unittest.TestCase):
 
     # testing functions
 
+    def test_empty_db(self):
+        """"""Start with a blank database.""""""
+        rv = self.app.get('/')
+        assert 'No entries here so far' in rv.data
+
     def test_login_logout(self):
         """"""Make sure login and logout works""""""
         rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
@@ -46,9 +51,6 @@ class FlaskrTestCase(unittest.TestCase):
 
     def test_messages(self):
         """"""Test that messages work""""""
-        # start with a blank state
-        rv = self.app.get('/')
-        assert 'No entries here so far' in rv.data
         self.login(flaskr.USERNAME, flaskr.PASSWORD)
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
","diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index f8a05976..e8f01437 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -33,6 +33,11 @@ class FlaskrTestCase(unittest.TestCase):
 
     # testing functions
 
+    def test_empty_db(self):
+        """"""Start with a blank database.""""""
+        rv = self.app.get('/')
+        assert 'No entries here so far' in rv.data
+
     def test_login_logout(self):
         """"""Make sure login and logout works""""""
         rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
@@ -46,9 +51,6 @@ class FlaskrTestCase(unittest.TestCase):
 
     def test_messages(self):
         """"""Test that messages work""""""
-        # start with a blank state
-        rv = self.app.get('/')
-        assert 'No entries here so far' in rv.data
         self.login(flaskr.USERNAME, flaskr.PASSWORD)
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,examples/flaskr/static/style.css,examples/flaskr/static/style.css,examples/flaskr/static/style.css,Beefed up the tutorial,"diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
index 39e0a8e7..4f3b71d8 100644
--- a/examples/flaskr/static/style.css
+++ b/examples/flaskr/static/style.css
@@ -4,14 +4,15 @@ h1, h2 { font-family: 'Georgia', serif; margin: 0; }
 h1              { border-bottom: 2px solid #eee; }
 h2              { font-size: 1.2em; }
 
-div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+.page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
                   padding: 0.8em; background: white; }
-ul.entries { list-style: none; margin: 0; padding: 0; }
-ul.entries li { margin: 0.8em 1.2em; }
-ul.entries li h2 { margin-left: -1em; }
-form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
-form.add-entry dl { font-weight: bold; }
-div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
-              padding: 0.3em; margin-bottom: 1em; }
-div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
-p.error { background: #F0D6D6; padding: 0.5em; }
+.entries        { list-style: none; margin: 0; padding: 0; }
+.entries li     { margin: 0.8em 1.2em; }
+.entries li h2  { margin-left: -1em; }
+.add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+.add-entry dl   { font-weight: bold; }
+.metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                  margin-bottom: 1em; background: #fafafa; }
+.flash          { background: #CEE5F5; padding: 0.5em;
+                  border: 1px solid #AACBE2; }
+.error          { background: #F0D6D6; padding: 0.5em; }
","diff --git a/examples/flaskr/static/style.css b/examples/flaskr/static/style.css
index 39e0a8e7..4f3b71d8 100644
--- a/examples/flaskr/static/style.css
+++ b/examples/flaskr/static/style.css
@@ -4,14 +4,15 @@ h1, h2 { font-family: 'Georgia', serif; margin: 0; }
 h1              { border-bottom: 2px solid #eee; }
 h2              { font-size: 1.2em; }
 
-div.page { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+.page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
                   padding: 0.8em; background: white; }
-ul.entries { list-style: none; margin: 0; padding: 0; }
-ul.entries li { margin: 0.8em 1.2em; }
-ul.entries li h2 { margin-left: -1em; }
-form.add-entry { font-size: 0.9em; border-bottom: 1px solid #ccc; }
-form.add-entry dl { font-weight: bold; }
-div.metanav { text-align: right; font-size: 0.8em; background: #fafafa;
-              padding: 0.3em; margin-bottom: 1em; }
-div.flash { background: #CEE5F5; padding: 0.5em; border: 1px solid #AACBE2; }
-p.error { background: #F0D6D6; padding: 0.5em; }
+.entries        { list-style: none; margin: 0; padding: 0; }
+.entries li     { margin: 0.8em 1.2em; }
+.entries li h2  { margin-left: -1em; }
+.add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+.add-entry dl   { font-weight: bold; }
+.metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                  margin-bottom: 1em; background: #fafafa; }
+.flash          { background: #CEE5F5; padding: 0.5em;
+                  border: 1px solid #AACBE2; }
+.error          { background: #F0D6D6; padding: 0.5em; }
"
1246f4088a4fdc00a79f8029ff5d77bfe4fc9b14,6dd92ae4b32c336564231e10db12458a8b9261ca,examples/flaskr/templates/show_entries.html,examples/flaskr/templates/show_entries.html,examples/flaskr/templates/show_entries.html,Beefed up the tutorial,"diff --git a/examples/flaskr/templates/show_entries.html b/examples/flaskr/templates/show_entries.html
index 55940ee7..fabe65ec 100644
--- a/examples/flaskr/templates/show_entries.html
+++ b/examples/flaskr/templates/show_entries.html
@@ -1,6 +1,6 @@
 {% extends ""layout.html"" %}
 {% block body %}
-  {% if g.logged_in %}
+  {% if session.logged_in %}
     <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
       <dl>
         <dt>Title:
","diff --git a/examples/flaskr/templates/show_entries.html b/examples/flaskr/templates/show_entries.html
index 55940ee7..fabe65ec 100644
--- a/examples/flaskr/templates/show_entries.html
+++ b/examples/flaskr/templates/show_entries.html
@@ -1,6 +1,6 @@
 {% extends ""layout.html"" %}
 {% block body %}
-  {% if g.logged_in %}
+  {% if session.logged_in %}
     <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
       <dl>
         <dt>Title:
"
6dd92ae4b32c336564231e10db12458a8b9261ca,40e0024d7b87150ed694829a5335bd2435962225,docs/_static/debugger.png,docs/_static/debugger.png,docs/_static/debugger.png,Added screenshot of the debugger to Flask docs.  Flask now runs from the shell again.,"diff --git a/docs/_static/debugger.png b/docs/_static/debugger.png
new file mode 100644
index 00000000..4f47229d
Binary files /dev/null and b/docs/_static/debugger.png differ
","diff --git a/docs/_static/debugger.png b/docs/_static/debugger.png
new file mode 100644
index 00000000..4f47229d
Binary files /dev/null and b/docs/_static/debugger.png differ
"
6dd92ae4b32c336564231e10db12458a8b9261ca,40e0024d7b87150ed694829a5335bd2435962225,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Added screenshot of the debugger to Flask docs.  Flask now runs from the shell again.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 1733b301..944b3955 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -97,6 +97,13 @@ Both will have exactly the same effect.
    major security risk and **must never be used on production machines**
    because of that.
 
+Screenshot of the debugger in action:
+
+.. image:: _static/debugger.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of debugger in action
+
 
 Routing
 -------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 1733b301..944b3955 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -97,6 +97,13 @@ Both will have exactly the same effect.
    major security risk and **must never be used on production machines**
    because of that.
 
+Screenshot of the debugger in action:
+
+.. image:: _static/debugger.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of debugger in action
+
 
 Routing
 -------
"
6dd92ae4b32c336564231e10db12458a8b9261ca,40e0024d7b87150ed694829a5335bd2435962225,flask.py,flask.py,flask.py,Added screenshot of the debugger to Flask docs.  Flask now runs from the shell again.,"diff --git a/flask.py b/flask.py
index eaafa310..30a0977f 100644
--- a/flask.py
+++ b/flask.py
@@ -153,6 +153,14 @@ def _default_template_ctx_processor():
     )
 
 
+def _get_package_path(name):
+    """"""Returns the path to a package or cwd if that cannot be found.""""""
+    try:
+        return os.path.abspath(os.path.dirname(sys.modules[name].__file__))
+    except (KeyError, AttributeError):
+        return os.getcwd()
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -213,8 +221,7 @@ class Flask(object):
         self.package_name = package_name
 
         #: where is the app root located?
-        self.root_path = os.path.abspath(os.path.dirname(
-            sys.modules[self.package_name].__file__))
+        self.root_path = _get_package_path(self.package_name)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
","diff --git a/flask.py b/flask.py
index eaafa310..30a0977f 100644
--- a/flask.py
+++ b/flask.py
@@ -153,6 +153,14 @@ def _default_template_ctx_processor():
     )
 
 
+def _get_package_path(name):
+    """"""Returns the path to a package or cwd if that cannot be found.""""""
+    try:
+        return os.path.abspath(os.path.dirname(sys.modules[name].__file__))
+    except (KeyError, AttributeError):
+        return os.getcwd()
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -213,8 +221,7 @@ class Flask(object):
         self.package_name = package_name
 
         #: where is the app root located?
-        self.root_path = os.path.abspath(os.path.dirname(
-            sys.modules[self.package_name].__file__))
+        self.root_path = _get_package_path(self.package_name)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
"
40e0024d7b87150ed694829a5335bd2435962225,7b5015010bc8c2a2d56c7c50b37e5b9facdad102,flask.py,flask.py,flask.py,Preserve the request context in debug mode.  This makes it possible to access request information in the interactive debugger.  Closes #8.,"diff --git a/flask.py b/flask.py
index 30a0977f..ad62e947 100644
--- a/flask.py
+++ b/flask.py
@@ -14,7 +14,6 @@ import os
 import sys
 
 from threading import local
-from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
@@ -84,6 +83,16 @@ class _RequestContext(object):
         self.g = _RequestGlobals()
         self.flashes = None
 
+    def __enter__(self):
+        _request_ctx_stack.push(self)
+
+    def __exit__(self, exc_type, exc_value, tb):
+        # do not pop the request stack if we are in debug mode and an
+        # exception happened.  This will allow the debugger to still
+        # access the request object in the interactive shell.
+        if tb is None or not self.app.debug:
+            _request_ctx_stack.pop()
+
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
@@ -618,7 +627,6 @@ class Flask(object):
             response = self.process_response(response)
             return response(environ, start_response)
 
-    @contextmanager
     def request_context(self, environ):
         """"""Creates a request context from the given environment and binds
         it to the current context.  This must be used in combination with
@@ -632,11 +640,7 @@ class Flask(object):
 
         :params environ: a WSGI environment
         """"""
-        _request_ctx_stack.push(_RequestContext(self, environ))
-        try:
-            yield
-        finally:
-            _request_ctx_stack.pop()
+        return _RequestContext(self, environ)
 
     def test_request_context(self, *args, **kwargs):
         """"""Creates a WSGI environment from the given values (see
","diff --git a/flask.py b/flask.py
index 30a0977f..ad62e947 100644
--- a/flask.py
+++ b/flask.py
@@ -14,7 +14,6 @@ import os
 import sys
 
 from threading import local
-from contextlib import contextmanager
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
@@ -84,6 +83,16 @@ class _RequestContext(object):
         self.g = _RequestGlobals()
         self.flashes = None
 
+    def __enter__(self):
+        _request_ctx_stack.push(self)
+
+    def __exit__(self, exc_type, exc_value, tb):
+        # do not pop the request stack if we are in debug mode and an
+        # exception happened.  This will allow the debugger to still
+        # access the request object in the interactive shell.
+        if tb is None or not self.app.debug:
+            _request_ctx_stack.pop()
+
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
@@ -618,7 +627,6 @@ class Flask(object):
             response = self.process_response(response)
             return response(environ, start_response)
 
-    @contextmanager
     def request_context(self, environ):
         """"""Creates a request context from the given environment and binds
         it to the current context.  This must be used in combination with
@@ -632,11 +640,7 @@ class Flask(object):
 
         :params environ: a WSGI environment
         """"""
-        _request_ctx_stack.push(_RequestContext(self, environ))
-        try:
-            yield
-        finally:
-            _request_ctx_stack.pop()
+        return _RequestContext(self, environ)
 
     def test_request_context(self, *args, **kwargs):
         """"""Creates a WSGI environment from the given values (see
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index acb6788f..d6bfe2ef 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -11,8 +11,8 @@ request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
 In Flask you can implement such things with the
-:meth:`~flask.Flask.request_init` and
-:meth:`~flask.Flask.request_shutdown` decorators in combination with the
+:meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators in combination with the
 special :class:`~flask.g` object.
 
 
@@ -31,11 +31,11 @@ So here a simple example how you can use SQLite 3 with Flask::
     def connect_db():
         return sqlite3.connect(DATABASE)
 
-    @app.request_init
+    @app.before_request
     def before_request():
         g.db = connect_db()
 
-    @app.request_shutdown
+    @app.after_request
     def after_request(response):
         g.db.close()
         return response
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index acb6788f..d6bfe2ef 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -11,8 +11,8 @@ request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
 In Flask you can implement such things with the
-:meth:`~flask.Flask.request_init` and
-:meth:`~flask.Flask.request_shutdown` decorators in combination with the
+:meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators in combination with the
 special :class:`~flask.g` object.
 
 
@@ -31,11 +31,11 @@ So here a simple example how you can use SQLite 3 with Flask::
     def connect_db():
         return sqlite3.connect(DATABASE)
 
-    @app.request_init
+    @app.before_request
     def before_request():
         g.db = connect_db()
 
-    @app.request_shutdown
+    @app.after_request
     def after_request(response):
         g.db.close()
         return response
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,docs/tutorial.rst,docs/tutorial.rst,docs/tutorial.rst,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/docs/tutorial.rst b/docs/tutorial.rst
index bdd624c0..f642423f 100644
--- a/docs/tutorial.rst
+++ b/docs/tutorial.rst
@@ -225,21 +225,21 @@ but how can we elegantly do that for requests?  We will need the database
 connection in all our functions so it makes sense to initialize them
 before each request and shut them down afterwards.
 
-Flask allows us to do that with the :meth:`~flask.Flask.request_init` and
-:meth:`~flask.Flask.request_shutdown` decorators::
+Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators::
 
-    @app.request_init
+    @app.before_request
     def before_request():
         g.db = connect_db()
 
-    @app.request_shutdown
+    @app.after_request
     def after_request(response):
         g.db.close()
         return response
 
-Functions marked with :meth:`~flask.Flask.request_init` are called before
+Functions marked with :meth:`~flask.Flask.before_request` are called before
 a request and passed no arguments, functions marked with
-:meth:`~flask.Flask.request_shutdown` are called after a request and
+:meth:`~flask.Flask.after_request` are called after a request and
 passed the response that will be sent to the client.  They have to return
 that response object or a different one.  In this case we just return it
 unchanged.
@@ -255,7 +255,7 @@ Step 5: The View Functions
 --------------------------
 
 Now that the database connections are working we can start writing the
-view functions.  We will need for of them:
+view functions.  We will need four of them:
 
 Show Entries
 ````````````
","diff --git a/docs/tutorial.rst b/docs/tutorial.rst
index bdd624c0..f642423f 100644
--- a/docs/tutorial.rst
+++ b/docs/tutorial.rst
@@ -225,21 +225,21 @@ but how can we elegantly do that for requests?  We will need the database
 connection in all our functions so it makes sense to initialize them
 before each request and shut them down afterwards.
 
-Flask allows us to do that with the :meth:`~flask.Flask.request_init` and
-:meth:`~flask.Flask.request_shutdown` decorators::
+Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators::
 
-    @app.request_init
+    @app.before_request
     def before_request():
         g.db = connect_db()
 
-    @app.request_shutdown
+    @app.after_request
     def after_request(response):
         g.db.close()
         return response
 
-Functions marked with :meth:`~flask.Flask.request_init` are called before
+Functions marked with :meth:`~flask.Flask.before_request` are called before
 a request and passed no arguments, functions marked with
-:meth:`~flask.Flask.request_shutdown` are called after a request and
+:meth:`~flask.Flask.after_request` are called after a request and
 passed the response that will be sent to the client.  They have to return
 that response object or a different one.  In this case we just return it
 unchanged.
@@ -255,7 +255,7 @@ Step 5: The View Functions
 --------------------------
 
 Now that the database connections are working we can start writing the
-view functions.  We will need for of them:
+view functions.  We will need four of them:
 
 Show Entries
 ````````````
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 1158e158..f2a8b341 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -41,13 +41,13 @@ def init_db():
         db.commit()
 
 
-@app.request_init
+@app.before_request
 def before_request():
     """"""Make sure we are connected to the database each request.""""""
     g.db = connect_db()
 
 
-@app.request_shutdown
+@app.after_request
 def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
","diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index 1158e158..f2a8b341 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -41,13 +41,13 @@ def init_db():
         db.commit()
 
 
-@app.request_init
+@app.before_request
 def before_request():
     """"""Make sure we are connected to the database each request.""""""
     g.db = connect_db()
 
 
-@app.request_shutdown
+@app.after_request
 def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 37e6cb5c..c053e27f 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -69,7 +69,7 @@ def gravatar_url(email, size=80):
         (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
 
-@app.request_init
+@app.before_request
 def before_request():
     """"""Make sure we are connected to the database each request and look
     up the current user so that we know he's there.
@@ -81,7 +81,7 @@ def before_request():
                           [session['user_id']], one=True)
 
 
-@app.request_shutdown
+@app.after_request
 def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 37e6cb5c..c053e27f 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -69,7 +69,7 @@ def gravatar_url(email, size=80):
         (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)
 
 
-@app.request_init
+@app.before_request
 def before_request():
     """"""Make sure we are connected to the database each request and look
     up the current user so that we know he's there.
@@ -81,7 +81,7 @@ def before_request():
                           [session['user_id']], one=True)
 
 
-@app.request_shutdown
+@app.after_request
 def after_request(response):
     """"""Closes the database again at the end of the request.""""""
     g.db.close()
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,flask.py,flask.py,flask.py,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/flask.py b/flask.py
index ad62e947..f7ba22e6 100644
--- a/flask.py
+++ b/flask.py
@@ -249,16 +249,16 @@ class Flask(object):
         #: of the request before request dispatching kicks in.  This
         #: can for example be used to open database connections or
         #: getting hold of the currently logged in user.
-        #: To register a function here, use the :meth:`request_init`
+        #: To register a function here, use the :meth:`before_request`
         #: decorator.
-        self.request_init_funcs = []
+        self.before_request_funcs = []
 
         #: a list of functions that are called at the end of the
         #: request.  Tha function is passed the current response
         #: object and modify it in place or replace it.
-        #: To register a function here use the :meth:`request_shtdown`
+        #: To register a function here use the :meth:`after_request`
         #: decorator.
-        self.request_shutdown_funcs = []
+        self.after_request_funcs = []
 
         #: a list of functions that are called without arguments
         #: to populate the template context.  Each returns a dictionary
@@ -509,14 +509,14 @@ class Flask(object):
             return f
         return decorator
 
-    def request_init(self, f):
+    def before_request(self, f):
         """"""Registers a function to run before each request.""""""
-        self.request_init_funcs.append(f)
+        self.before_request_funcs.append(f)
         return f
 
-    def request_shutdown(self, f):
+    def after_request(self, f):
         """"""Register a function to be run after each request.""""""
-        self.request_shutdown_funcs.append(f)
+        self.after_request_funcs.append(f)
         return f
 
     def context_processor(self, f):
@@ -583,19 +583,20 @@ class Flask(object):
 
     def preprocess_request(self):
         """"""Called before the actual request dispatching and will
-        call every as :func:`request_init` decorated function.
+        call every as :meth:`before_request` decorated function.
         If any of these function returns a value it's handled as
         if it was the return value from the view and further
         request handling is stopped.
         """"""
-        for func in self.request_init_funcs:
+        for func in self.before_request_funcs:
             rv = func()
             if rv is not None:
                 return rv
 
     def process_response(self, response):
         """"""Can be overridden in order to modify the response object
-        before it's sent to the WSGI server.
+        before it's sent to the WSGI server.  By default this will
+        call all the :meth:`after_request` decorated functions.
 
         :param response: a :attr:`response_class` object.
         :return: a new response object or the same, has to be an
@@ -604,7 +605,7 @@ class Flask(object):
         session = _request_ctx_stack.top.session
         if session is not None:
             self.save_session(session, response)
-        for handler in self.request_shutdown_funcs:
+        for handler in self.after_request_funcs:
             response = handler(response)
         return response
 
","diff --git a/flask.py b/flask.py
index ad62e947..f7ba22e6 100644
--- a/flask.py
+++ b/flask.py
@@ -249,16 +249,16 @@ class Flask(object):
         #: of the request before request dispatching kicks in.  This
         #: can for example be used to open database connections or
         #: getting hold of the currently logged in user.
-        #: To register a function here, use the :meth:`request_init`
+        #: To register a function here, use the :meth:`before_request`
         #: decorator.
-        self.request_init_funcs = []
+        self.before_request_funcs = []
 
         #: a list of functions that are called at the end of the
         #: request.  Tha function is passed the current response
         #: object and modify it in place or replace it.
-        #: To register a function here use the :meth:`request_shtdown`
+        #: To register a function here use the :meth:`after_request`
         #: decorator.
-        self.request_shutdown_funcs = []
+        self.after_request_funcs = []
 
         #: a list of functions that are called without arguments
         #: to populate the template context.  Each returns a dictionary
@@ -509,14 +509,14 @@ class Flask(object):
             return f
         return decorator
 
-    def request_init(self, f):
+    def before_request(self, f):
         """"""Registers a function to run before each request.""""""
-        self.request_init_funcs.append(f)
+        self.before_request_funcs.append(f)
         return f
 
-    def request_shutdown(self, f):
+    def after_request(self, f):
         """"""Register a function to be run after each request.""""""
-        self.request_shutdown_funcs.append(f)
+        self.after_request_funcs.append(f)
         return f
 
     def context_processor(self, f):
@@ -583,19 +583,20 @@ class Flask(object):
 
     def preprocess_request(self):
         """"""Called before the actual request dispatching and will
-        call every as :func:`request_init` decorated function.
+        call every as :meth:`before_request` decorated function.
         If any of these function returns a value it's handled as
         if it was the return value from the view and further
         request handling is stopped.
         """"""
-        for func in self.request_init_funcs:
+        for func in self.before_request_funcs:
             rv = func()
             if rv is not None:
                 return rv
 
     def process_response(self, response):
         """"""Can be overridden in order to modify the response object
-        before it's sent to the WSGI server.
+        before it's sent to the WSGI server.  By default this will
+        call all the :meth:`after_request` decorated functions.
 
         :param response: a :attr:`response_class` object.
         :return: a new response object or the same, has to be an
@@ -604,7 +605,7 @@ class Flask(object):
         session = _request_ctx_stack.top.session
         if session is not None:
             self.save_session(session, response)
-        for handler in self.request_shutdown_funcs:
+        for handler in self.after_request_funcs:
             response = handler(response)
         return response
 
"
7b5015010bc8c2a2d56c7c50b37e5b9facdad102,fb2d2e446bdd806ea3de7b869c7371e2dae57a23,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,request_init -> before_request and request_shutdown -> after_request  This fixes #9.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index dec05bea..0d73c954 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -75,10 +75,10 @@ class BasicFunctionality(unittest.TestCase):
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
-        @app.request_init
+        @app.before_request
         def before_request():
             evts.append('before')
-        @app.request_shutdown
+        @app.after_request
         def after_request(response):
             response.data += '|after'
             evts.append('after')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index dec05bea..0d73c954 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -75,10 +75,10 @@ class BasicFunctionality(unittest.TestCase):
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
-        @app.request_init
+        @app.before_request
         def before_request():
             evts.append('before')
-        @app.request_shutdown
+        @app.after_request
         def after_request(response):
             response.data += '|after'
             evts.append('after')
"
fb2d2e446bdd806ea3de7b869c7371e2dae57a23,26f86b1d4954dd7512684130ee803b42eca8d72e,docs/index.rst,docs/index.rst,docs/index.rst,Restructured documentation a bit.,"diff --git a/docs/index.rst b/docs/index.rst
index 864a3a35..1879070a 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -14,6 +14,24 @@ you rather want to dive into all the internal parts of Flask, check out
 the :ref:`api` documentation.  Common patterns are described in the
 :ref:`patterns` section.
 
+Flask also depends on two external libraries: the `Jinja2`_ template
+engine and the `Werkzeug`_ WSGI toolkit.  both of which are not documented
+here.  If you want to dive into their documentation check out the
+following links:
+
+-   `Jinja2 Documentation <http://jinja.pocoo.org/2/documentation/>`_
+-   `Werkzeug Documentation <http://werkzeug.pocoo.org/documentation/>`_
+
+.. _Jinja2: http://jinja.pocoo.org/2/
+.. _Werkzeug: http://werkzeug.pocoo.org/
+
+Textual Documentation
+---------------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
 .. toctree::
    :maxdepth: 2
 
@@ -21,8 +39,18 @@ the :ref:`api` documentation.  Common patterns are described in the
    installation
    quickstart
    tutorial
+   testing
    patterns
-   api
    deploying
-   testing
    becomingbig
+
+Reference
+---------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
","diff --git a/docs/index.rst b/docs/index.rst
index 864a3a35..1879070a 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -14,6 +14,24 @@ you rather want to dive into all the internal parts of Flask, check out
 the :ref:`api` documentation.  Common patterns are described in the
 :ref:`patterns` section.
 
+Flask also depends on two external libraries: the `Jinja2`_ template
+engine and the `Werkzeug`_ WSGI toolkit.  both of which are not documented
+here.  If you want to dive into their documentation check out the
+following links:
+
+-   `Jinja2 Documentation <http://jinja.pocoo.org/2/documentation/>`_
+-   `Werkzeug Documentation <http://werkzeug.pocoo.org/documentation/>`_
+
+.. _Jinja2: http://jinja.pocoo.org/2/
+.. _Werkzeug: http://werkzeug.pocoo.org/
+
+Textual Documentation
+---------------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
 .. toctree::
    :maxdepth: 2
 
@@ -21,8 +39,18 @@ the :ref:`api` documentation.  Common patterns are described in the
    installation
    quickstart
    tutorial
-   patterns
-   api
-   deploying
    testing
+   patterns
+   deploying
    becomingbig
+
+Reference
+---------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
"
fb2d2e446bdd806ea3de7b869c7371e2dae57a23,26f86b1d4954dd7512684130ee803b42eca8d72e,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,Restructured documentation a bit.,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index d6bfe2ef..91e0d5b6 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -1,7 +1,7 @@
 .. _patterns:
 
-Patterns in Flask
-=================
+Patterns for Flask
+==================
 
 Certain things are common enough that the changes are high you will find
 them in most web applications.  For example quite a lot of applications
@@ -10,10 +10,93 @@ changes are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
-In Flask you can implement such things with the
-:meth:`~flask.Flask.before_request` and
-:meth:`~flask.Flask.after_request` decorators in combination with the
-special :class:`~flask.g` object.
+
+.. _larger-applications:
+
+Larger Applications
+-------------------
+
+For larger applications it's a good idea to use a package instead of a
+module.  That is quite simple.  Imagine a small application looks like
+this::
+
+    /yourapplication
+        /yourapplication.py
+        /static
+            /style.css
+        /templates
+            layout.html
+            index.html
+            login.html
+            ...
+
+To convert that into a larger one, just create a new folder
+`yourapplication` inside the existing one and move everything below it.
+Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
+all `.pyc` files first, otherwise things would most likely break)
+
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+But how do you run your application now?  The naive ``python
+yourapplication/__init__.py`` will not work.  Let's just say that Python
+does not want modules in packages to be the startup file.  But that is not
+a big problem, just add a new file called `runserver.py` next to the inner
+`yourapplication` folder with the following contents::
+
+    from yourapplication import app
+    app.run(debug=True)
+
+What did we gain from this?  Now we can restructure the application a bit
+into multiple modules.  The only thing you have to remember is the
+following quick checklist:
+
+1. the `Flask` application object creation have to be in the
+   `__init__.py` file.  That way each module can import it safely and the
+   `__name__` variable will resole to the correct package.
+2. all the view functions (the ones with a :meth:`~flask.Flask.route`
+   decorator on top) have to be imported when in the `__init__.py` file.
+   Not the objects itself, but the module it is in.  Do the importing at
+   the *bottom* of the file.
+
+Here an example `__init__.py`::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    import yourapplication.views
+
+And this is what `views.py` would look like::
+
+    from yourapplication import app
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+.. admonition:: Circular Imports
+
+   Every Python programmer hates it, and yet we just did that: circular
+   imports (That's when one module depends on another one.  In this case
+   `views.py` depends on `__init__.py`).  Be advised that this is a bad
+   idea in general but here it is actually fine.  The reason for this is
+   that we are not actually using the views in `__init__.py` and just
+   ensuring the module is imported and we are doing that at the bottom of
+   the file.
+
+   There are still some problems with that approach but if you want to use
+   decorators there is no way around that.  Check out the
+   :ref:`becomingbig` section for some inspiration how to deal with that.
 
 
 .. _database-pattern:
@@ -21,6 +104,11 @@ special :class:`~flask.g` object.
 Using SQLite 3 with Flask
 -------------------------
 
+In Flask you can implement opening of dabase connections at the beginning
+of the request and closing at the end with the
+:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
+decorators in combination with the special :class:`~flask.g` object.
+
 So here a simple example how you can use SQLite 3 with Flask::
 
     import sqlite3
@@ -99,6 +187,95 @@ You can then create such a database from the python shell:
 >>> from yourapplication import init_db
 >>> init_db()
 
+
+.. _sqlalchemy-pattern:
+
+SQLAlchemy in Flask
+-------------------
+
+Many people prefer `SQLAlchemy`_ for database access.  In this case it's
+encouraged to use a package instead of a module for your flask application
+and drop the modules into a separate module (:ref:`larger-applications`).
+Although that is not necessary but makes a lot of sense.
+
+There are three very common ways to use SQLAlchemy.  I will outline each
+of them here:
+
+Declarative
+```````````
+
+The declarative extension in SQLAlchemy is the most recent method of using
+SQLAlchemy.  It allows you to define tables and models in one go, similar
+to how Django works.  In addition to the following text I recommend the
+official documentation on the `declarative`_ extension.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine
+    from sqlalchemy.orm import scoped_session, sessionmaker
+    from sqlalchemy.ext.declarative import declarative_base
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    Base = declarative_base()
+    Base.query = db_session.query_property()
+
+    def init_db():
+        Base.metadata.create_all(bind=engine)
+
+To define your models, subclass the `Base` class the above code generated.
+
+To use SQLAlchemy in a declarative way with your application, you just
+have to put the following code into your application module  Flask will
+automatically remove database sessions at the end of the request for you::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Column, Integer, String
+    from yourapplication.database import Base
+
+    class User(Base):
+        __tablename__ = 'users'
+        id = Column(Integer, primary_key=True)
+        name = Column(String(50), unique=True)
+        email = Column(String(120), unique=True)
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+You can insert entries into the database like this then:
+
+>>> from yourapplication.database import db_session
+>>> from yourapplication.models import User
+>>> u = User('admin', 'admin@localhost')
+>>> db_session.add(u)
+>>> db_session.commit()
+
+Querying is simple as well:
+
+>>> User.query.all()
+[<User u'admin'>]
+>>> User.query.filter(User.name == 'admin').first()
+<User u'admin'>
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+.. _declarative:
+   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
+
+
 .. _template-inheritance:
 
 Template Inheritance
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index d6bfe2ef..91e0d5b6 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -1,7 +1,7 @@
 .. _patterns:
 
-Patterns in Flask
-=================
+Patterns for Flask
+==================
 
 Certain things are common enough that the changes are high you will find
 them in most web applications.  For example quite a lot of applications
@@ -10,10 +10,93 @@ changes are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
-In Flask you can implement such things with the
-:meth:`~flask.Flask.before_request` and
-:meth:`~flask.Flask.after_request` decorators in combination with the
-special :class:`~flask.g` object.
+
+.. _larger-applications:
+
+Larger Applications
+-------------------
+
+For larger applications it's a good idea to use a package instead of a
+module.  That is quite simple.  Imagine a small application looks like
+this::
+
+    /yourapplication
+        /yourapplication.py
+        /static
+            /style.css
+        /templates
+            layout.html
+            index.html
+            login.html
+            ...
+
+To convert that into a larger one, just create a new folder
+`yourapplication` inside the existing one and move everything below it.
+Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
+all `.pyc` files first, otherwise things would most likely break)
+
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+But how do you run your application now?  The naive ``python
+yourapplication/__init__.py`` will not work.  Let's just say that Python
+does not want modules in packages to be the startup file.  But that is not
+a big problem, just add a new file called `runserver.py` next to the inner
+`yourapplication` folder with the following contents::
+
+    from yourapplication import app
+    app.run(debug=True)
+
+What did we gain from this?  Now we can restructure the application a bit
+into multiple modules.  The only thing you have to remember is the
+following quick checklist:
+
+1. the `Flask` application object creation have to be in the
+   `__init__.py` file.  That way each module can import it safely and the
+   `__name__` variable will resole to the correct package.
+2. all the view functions (the ones with a :meth:`~flask.Flask.route`
+   decorator on top) have to be imported when in the `__init__.py` file.
+   Not the objects itself, but the module it is in.  Do the importing at
+   the *bottom* of the file.
+
+Here an example `__init__.py`::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    import yourapplication.views
+
+And this is what `views.py` would look like::
+
+    from yourapplication import app
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+.. admonition:: Circular Imports
+
+   Every Python programmer hates it, and yet we just did that: circular
+   imports (That's when one module depends on another one.  In this case
+   `views.py` depends on `__init__.py`).  Be advised that this is a bad
+   idea in general but here it is actually fine.  The reason for this is
+   that we are not actually using the views in `__init__.py` and just
+   ensuring the module is imported and we are doing that at the bottom of
+   the file.
+
+   There are still some problems with that approach but if you want to use
+   decorators there is no way around that.  Check out the
+   :ref:`becomingbig` section for some inspiration how to deal with that.
 
 
 .. _database-pattern:
@@ -21,6 +104,11 @@ special :class:`~flask.g` object.
 Using SQLite 3 with Flask
 -------------------------
 
+In Flask you can implement opening of dabase connections at the beginning
+of the request and closing at the end with the
+:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
+decorators in combination with the special :class:`~flask.g` object.
+
 So here a simple example how you can use SQLite 3 with Flask::
 
     import sqlite3
@@ -99,6 +187,95 @@ You can then create such a database from the python shell:
 >>> from yourapplication import init_db
 >>> init_db()
 
+
+.. _sqlalchemy-pattern:
+
+SQLAlchemy in Flask
+-------------------
+
+Many people prefer `SQLAlchemy`_ for database access.  In this case it's
+encouraged to use a package instead of a module for your flask application
+and drop the modules into a separate module (:ref:`larger-applications`).
+Although that is not necessary but makes a lot of sense.
+
+There are three very common ways to use SQLAlchemy.  I will outline each
+of them here:
+
+Declarative
+```````````
+
+The declarative extension in SQLAlchemy is the most recent method of using
+SQLAlchemy.  It allows you to define tables and models in one go, similar
+to how Django works.  In addition to the following text I recommend the
+official documentation on the `declarative`_ extension.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine
+    from sqlalchemy.orm import scoped_session, sessionmaker
+    from sqlalchemy.ext.declarative import declarative_base
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    Base = declarative_base()
+    Base.query = db_session.query_property()
+
+    def init_db():
+        Base.metadata.create_all(bind=engine)
+
+To define your models, subclass the `Base` class the above code generated.
+
+To use SQLAlchemy in a declarative way with your application, you just
+have to put the following code into your application module  Flask will
+automatically remove database sessions at the end of the request for you::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Column, Integer, String
+    from yourapplication.database import Base
+
+    class User(Base):
+        __tablename__ = 'users'
+        id = Column(Integer, primary_key=True)
+        name = Column(String(50), unique=True)
+        email = Column(String(120), unique=True)
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+You can insert entries into the database like this then:
+
+>>> from yourapplication.database import db_session
+>>> from yourapplication.models import User
+>>> u = User('admin', 'admin@localhost')
+>>> db_session.add(u)
+>>> db_session.commit()
+
+Querying is simple as well:
+
+>>> User.query.all()
+[<User u'admin'>]
+>>> User.query.filter(User.name == 'admin').first()
+<User u'admin'>
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+.. _declarative:
+   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
+
+
 .. _template-inheritance:
 
 Template Inheritance
"
26f86b1d4954dd7512684130ee803b42eca8d72e,b608785801ce819037cb6cca04c70fd398519c08,README,README,README,Recentered README,,
b608785801ce819037cb6cca04c70fd398519c08,61d07b8be9beae54d1c367adfc845dcf30a1512a,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,Added note about decorators to becomingbig.,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 90cc0138..c964fe27 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -31,7 +31,10 @@ scale applications:
 -   get rid of the decorator function registering which causes a lot
     of troubles for applications that have circular dependencies.  It
     also requires that the whole application is imported when the system
-    initializes or certain URLs will not be available right away.
+    initializes or certain URLs will not be available right away.   A
+    better solution would be to have one module with all URLs in there and
+    specifing the target functions explictliy or by name and importing
+    them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 90cc0138..c964fe27 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -31,7 +31,10 @@ scale applications:
 -   get rid of the decorator function registering which causes a lot
     of troubles for applications that have circular dependencies.  It
     also requires that the whole application is imported when the system
-    initializes or certain URLs will not be available right away.
+    initializes or certain URLs will not be available right away.   A
+    better solution would be to have one module with all URLs in there and
+    specifing the target functions explictliy or by name and importing
+    them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
"
61d07b8be9beae54d1c367adfc845dcf30a1512a,f54c4fd04f326d94684c7fcbf12df5cecae653c4,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,Fixed wording for circular imports,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index 91e0d5b6..5956ab83 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -87,7 +87,7 @@ And this is what `views.py` would look like::
 .. admonition:: Circular Imports
 
    Every Python programmer hates it, and yet we just did that: circular
-   imports (That's when one module depends on another one.  In this case
+   imports (That's when two module depend on each one.  In this case
    `views.py` depends on `__init__.py`).  Be advised that this is a bad
    idea in general but here it is actually fine.  The reason for this is
    that we are not actually using the views in `__init__.py` and just
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 91e0d5b6..5956ab83 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -87,7 +87,7 @@ And this is what `views.py` would look like::
 .. admonition:: Circular Imports
 
    Every Python programmer hates it, and yet we just did that: circular
-   imports (That's when one module depends on another one.  In this case
+   imports (That's when two module depend on each one.  In this case
    `views.py` depends on `__init__.py`).  Be advised that this is a bad
    idea in general but here it is actually fine.  The reason for this is
    that we are not actually using the views in `__init__.py` and just
"
f54c4fd04f326d94684c7fcbf12df5cecae653c4,6418551efb1d24320c261b1e24c186d5394e6dcf,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,More typo fixes,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index c964fe27..82d8c4a0 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -33,7 +33,7 @@ scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explictliy or by name and importing
+    specifing the target functions explictly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index c964fe27..82d8c4a0 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -33,7 +33,7 @@ scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explictliy or by name and importing
+    specifing the target functions explictly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
"
f54c4fd04f326d94684c7fcbf12df5cecae653c4,6418551efb1d24320c261b1e24c186d5394e6dcf,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,More typo fixes,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index 5956ab83..7c2c85c6 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -195,7 +195,7 @@ SQLAlchemy in Flask
 
 Many people prefer `SQLAlchemy`_ for database access.  In this case it's
 encouraged to use a package instead of a module for your flask application
-and drop the modules into a separate module (:ref:`larger-applications`).
+and drop the models into a separate module (:ref:`larger-applications`).
 Although that is not necessary but makes a lot of sense.
 
 There are three very common ways to use SQLAlchemy.  I will outline each
@@ -225,10 +225,11 @@ Here the example `database.py` module for your application::
     def init_db():
         Base.metadata.create_all(bind=engine)
 
-To define your models, subclass the `Base` class the above code generated.
+To define your models, just subclass the `Base` class that was created by
+the code above.
 
 To use SQLAlchemy in a declarative way with your application, you just
-have to put the following code into your application module  Flask will
+have to put the following code into your application module.  Flask will
 automatically remove database sessions at the end of the request for you::
 
     from yourapplication.database import db_session
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 5956ab83..7c2c85c6 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -195,7 +195,7 @@ SQLAlchemy in Flask
 
 Many people prefer `SQLAlchemy`_ for database access.  In this case it's
 encouraged to use a package instead of a module for your flask application
-and drop the modules into a separate module (:ref:`larger-applications`).
+and drop the models into a separate module (:ref:`larger-applications`).
 Although that is not necessary but makes a lot of sense.
 
 There are three very common ways to use SQLAlchemy.  I will outline each
@@ -225,10 +225,11 @@ Here the example `database.py` module for your application::
     def init_db():
         Base.metadata.create_all(bind=engine)
 
-To define your models, subclass the `Base` class the above code generated.
+To define your models, just subclass the `Base` class that was created by
+the code above.
 
 To use SQLAlchemy in a declarative way with your application, you just
-have to put the following code into your application module  Flask will
+have to put the following code into your application module.  Flask will
 automatically remove database sessions at the end of the request for you::
 
     from yourapplication.database import db_session
"
6418551efb1d24320c261b1e24c186d5394e6dcf,7c9303b7502403c372171e1e045433b57259a56b,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,More typo fixes,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 82d8c4a0..c3c4a0b6 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -33,12 +33,12 @@ scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explictly or by name and importing
+    specifing the target functions explicitly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
--   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directl into the
+-   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directly into the
     core framework.
 
 .. _Babel: http://babel.edgewall.org/
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 82d8c4a0..c3c4a0b6 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -33,12 +33,12 @@ scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explictly or by name and importing
+    specifing the target functions explicitly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This makes it more to type
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
--   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directl into the
+-   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directly into the
     core framework.
 
 .. _Babel: http://babel.edgewall.org/
"
7c9303b7502403c372171e1e045433b57259a56b,6d556acb3fcaa6eeff4bda8cf704ad5f0cf5b5ac,docs/conf.py,docs/conf.py,docs/conf.py,"added coming soon to parts of the docs, linked scoped_session","diff --git a/docs/conf.py b/docs/conf.py
index 9f417120..98db7c51 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -241,5 +241,6 @@ latex_documents = [
 
 intersphinx_mapping = {
     'http://docs.python.org/dev': None,
-    'http://werkzeug.pocoo.org/documentation/dev/': None
+    'http://werkzeug.pocoo.org/documentation/dev/': None,
+    'http://www.sqlalchemy.org/docs/': None
 }
","diff --git a/docs/conf.py b/docs/conf.py
index 9f417120..98db7c51 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -241,5 +241,6 @@ latex_documents = [
 
 intersphinx_mapping = {
     'http://docs.python.org/dev': None,
-    'http://werkzeug.pocoo.org/documentation/dev/': None
+    'http://werkzeug.pocoo.org/documentation/dev/': None,
+    'http://www.sqlalchemy.org/docs/': None
 }
"
7c9303b7502403c372171e1e045433b57259a56b,6d556acb3fcaa6eeff4bda8cf704ad5f0cf5b5ac,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,"added coming soon to parts of the docs, linked scoped_session","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 7c2c85c6..e6bfc6c3 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -226,7 +226,10 @@ Here the example `database.py` module for your application::
         Base.metadata.create_all(bind=engine)
 
 To define your models, just subclass the `Base` class that was created by
-the code above.
+the code above.  If you are wondering why we don't have to care about
+threads here (like we did in the SQLite3 example above with the
+:data:`~flask.g` object): that's because SQLAlchemy does that for us
+already with the :class:`~sqlalchemy.orm.scoped_session`.
 
 To use SQLAlchemy in a declarative way with your application, you just
 have to put the following code into your application module.  Flask will
@@ -276,6 +279,16 @@ Querying is simple as well:
 .. _declarative:
    http://www.sqlalchemy.org/docs/reference/ext/declarative.html
 
+Manual Object Relational Mapping
+--------------------------------
+
+*coming soon*
+
+SQL Abstraction Layer
+---------------------
+
+*coming soon*
+
 
 .. _template-inheritance:
 
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index 7c2c85c6..e6bfc6c3 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -226,7 +226,10 @@ Here the example `database.py` module for your application::
         Base.metadata.create_all(bind=engine)
 
 To define your models, just subclass the `Base` class that was created by
-the code above.
+the code above.  If you are wondering why we don't have to care about
+threads here (like we did in the SQLite3 example above with the
+:data:`~flask.g` object): that's because SQLAlchemy does that for us
+already with the :class:`~sqlalchemy.orm.scoped_session`.
 
 To use SQLAlchemy in a declarative way with your application, you just
 have to put the following code into your application module.  Flask will
@@ -276,6 +279,16 @@ Querying is simple as well:
 .. _declarative:
    http://www.sqlalchemy.org/docs/reference/ext/declarative.html
 
+Manual Object Relational Mapping
+--------------------------------
+
+*coming soon*
+
+SQL Abstraction Layer
+---------------------
+
+*coming soon*
+
 
 .. _template-inheritance:
 
"
6d556acb3fcaa6eeff4bda8cf704ad5f0cf5b5ac,5348eff4457a528cd605bbbd5e0152c282819962,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,fixed headers,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index e6bfc6c3..f226b78d 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -280,12 +280,12 @@ Querying is simple as well:
    http://www.sqlalchemy.org/docs/reference/ext/declarative.html
 
 Manual Object Relational Mapping
---------------------------------
+````````````````````````````````
 
 *coming soon*
 
 SQL Abstraction Layer
----------------------
+`````````````````````
 
 *coming soon*
 
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index e6bfc6c3..f226b78d 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -280,12 +280,12 @@ Querying is simple as well:
    http://www.sqlalchemy.org/docs/reference/ext/declarative.html
 
 Manual Object Relational Mapping
---------------------------------
+````````````````````````````````
 
 *coming soon*
 
 SQL Abstraction Layer
----------------------
+`````````````````````
 
 *coming soon*
 
"
5348eff4457a528cd605bbbd5e0152c282819962,855e7e9327c0095f39b34bd56b08aa63c87f9dfd,LICENSE,,LICENSE,Added license file,"diff --git a/LICENSE b/LICENSE
new file mode 100644
index 00000000..6ed65ec8
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,31 @@
+Copyright (c) 2010 by Armin Ronacher.
+
+Some rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are
+met:
+
+    * Redistributions of source code must retain the above copyright
+      notice, this list of conditions and the following disclaimer.
+
+    * Redistributions in binary form must reproduce the above
+      copyright notice, this list of conditions and the following
+      disclaimer in the documentation and/or other materials provided
+      with the distribution.
+
+    * The names of the contributors may not be used to endorse or
+      promote products derived from this software without specific
+      prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
","diff --git a/LICENSE b/LICENSE
new file mode 100644
index 00000000..6ed65ec8
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,31 @@
+Copyright (c) 2010 by Armin Ronacher.
+
+Some rights reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are
+met:
+
+    * Redistributions of source code must retain the above copyright
+      notice, this list of conditions and the following disclaimer.
+
+    * Redistributions in binary form must reproduce the above
+      copyright notice, this list of conditions and the following
+      disclaimer in the documentation and/or other materials provided
+      with the distribution.
+
+    * The names of the contributors may not be used to endorse or
+      promote products derived from this software without specific
+      prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
+OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
+OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"
855e7e9327c0095f39b34bd56b08aa63c87f9dfd,f769e15fecf6e06c190133d85a3de6b703e4d1a1,website/index.html,,website/index.html,Added website sources,"diff --git a/website/index.html b/website/index.html
new file mode 100755
index 00000000..220b10ef
--- /dev/null
+++ b/website/index.html
@@ -0,0 +1,56 @@
+<!doctype html>
+<title>Flask (A Python Microframework)</title>
+<style type=text/css>
+  body  { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
+  a     { color: #444; font-weight: bold; }
+  .box  { width: 540px; margin: 40px auto; }
+  h1    { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
+  h2    { font-size: 26px; margin: 15px 0 5px 0; font-variant: small-caps; }
+  code,
+  pre   { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
+          monospace; font-size: 15px; background: #eee; }
+  pre   { padding: 7px 30px; margin: 15px -30px; }
+  .ig   { color: #888; }
+  ul    { margin: 15px 0; padding: 0; }
+  h1 span, p.tagline { display: none; }
+  blockquote { margin: 0; font-style: italic; color: #444; }
+  .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
+  pre a, blockquote a, .footer a { font-weight: normal; color: inherit; }
+</style>
+<div class=box>
+  <h1><span>Flask</span></h1>
+  <p class=tagline>because sometimes a pocket knife is not enough
+  <blockquote>
+    Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
+    And before you ask: It's <a href=http://github.com/mitsuhiko/flask/blob/master/LICENSE>BSD licensed</a>!
+  </blockquote>
+  <h2>Flask is Fun</h2>
+  <pre><span class=ig>from flask import Flask
+app = Flask(__name__)</span>
+
+@app.route(""/"")
+def hello():
+    return ""Hello World!""
+
+<span class=ig>if __name__ == ""__main__"":
+    app.run()</span></pre>
+  <h2>And Easy to Setup</h2>
+  <pre><span class=ig>$ </span>easy_install Flask
+<span class=ig>$ </span>python hello.py
+<span class=ig> * Running on <a href=http://localhost:5000/>http://localhost:5000/</a></span></pre>
+  <h2>Interested?</h2>
+  <ul>
+    <li><a href=docs/>Read the documentation</a>
+    <li><a href=http://github.com/mitsuhiko/flask>fork it on github</a>
+    <li><a href=http://pypi.python.org/pypi/Flask>download it from PyPI</a>
+  </ul>
+  <h2>Contribute</h2>
+  <p>Found a bug? Have a good idea for improving Flask? Head over to
+    <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
+    create a new ticket or fork.  If you just want to chat with the
+    developers, go to <code>#pocoo</code> on irc.freenode.net 
+  <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
+</div>
+
+<a href=""http://github.com/mitsuhiko/flask""><img style=""position: fixed; top: 0; right: 0; border: 0;""
+  src=""http://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"" alt=""Fork me on GitHub""></a>
","diff --git a/website/index.html b/website/index.html
new file mode 100755
index 00000000..220b10ef
--- /dev/null
+++ b/website/index.html
@@ -0,0 +1,56 @@
+<!doctype html>
+<title>Flask (A Python Microframework)</title>
+<style type=text/css>
+  body  { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
+  a     { color: #444; font-weight: bold; }
+  .box  { width: 540px; margin: 40px auto; }
+  h1    { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
+  h2    { font-size: 26px; margin: 15px 0 5px 0; font-variant: small-caps; }
+  code,
+  pre   { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
+          monospace; font-size: 15px; background: #eee; }
+  pre   { padding: 7px 30px; margin: 15px -30px; }
+  .ig   { color: #888; }
+  ul    { margin: 15px 0; padding: 0; }
+  h1 span, p.tagline { display: none; }
+  blockquote { margin: 0; font-style: italic; color: #444; }
+  .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
+  pre a, blockquote a, .footer a { font-weight: normal; color: inherit; }
+</style>
+<div class=box>
+  <h1><span>Flask</span></h1>
+  <p class=tagline>because sometimes a pocket knife is not enough
+  <blockquote>
+    Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
+    And before you ask: It's <a href=http://github.com/mitsuhiko/flask/blob/master/LICENSE>BSD licensed</a>!
+  </blockquote>
+  <h2>Flask is Fun</h2>
+  <pre><span class=ig>from flask import Flask
+app = Flask(__name__)</span>
+
+@app.route(""/"")
+def hello():
+    return ""Hello World!""
+
+<span class=ig>if __name__ == ""__main__"":
+    app.run()</span></pre>
+  <h2>And Easy to Setup</h2>
+  <pre><span class=ig>$ </span>easy_install Flask
+<span class=ig>$ </span>python hello.py
+<span class=ig> * Running on <a href=http://localhost:5000/>http://localhost:5000/</a></span></pre>
+  <h2>Interested?</h2>
+  <ul>
+    <li><a href=docs/>Read the documentation</a>
+    <li><a href=http://github.com/mitsuhiko/flask>fork it on github</a>
+    <li><a href=http://pypi.python.org/pypi/Flask>download it from PyPI</a>
+  </ul>
+  <h2>Contribute</h2>
+  <p>Found a bug? Have a good idea for improving Flask? Head over to
+    <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
+    create a new ticket or fork.  If you just want to chat with the
+    developers, go to <code>#pocoo</code> on irc.freenode.net 
+  <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
+</div>
+
+<a href=""http://github.com/mitsuhiko/flask""><img style=""position: fixed; top: 0; right: 0; border: 0;""
+  src=""http://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"" alt=""Fork me on GitHub""></a>
"
855e7e9327c0095f39b34bd56b08aa63c87f9dfd,f769e15fecf6e06c190133d85a3de6b703e4d1a1,website/logo.png,website/logo.png,website/logo.png,Added website sources,"diff --git a/website/logo.png b/website/logo.png
new file mode 100755
index 00000000..f255eece
Binary files /dev/null and b/website/logo.png differ
","diff --git a/website/logo.png b/website/logo.png
new file mode 100755
index 00000000..f255eece
Binary files /dev/null and b/website/logo.png differ
"
f769e15fecf6e06c190133d85a3de6b703e4d1a1,aae5de730113e843864c120cc0453efc0a90b49f,website/index.html,website/index.html,website/index.html,-x on files,"diff --git a/website/index.html b/website/index.html
old mode 100755
new mode 100644
","diff --git a/website/index.html b/website/index.html
old mode 100755
new mode 100644
"
f769e15fecf6e06c190133d85a3de6b703e4d1a1,aae5de730113e843864c120cc0453efc0a90b49f,website/logo.png,website/logo.png,website/logo.png,-x on files,"diff --git a/website/logo.png b/website/logo.png
old mode 100755
new mode 100644
","diff --git a/website/logo.png b/website/logo.png
old mode 100755
new mode 100644
"
aae5de730113e843864c120cc0453efc0a90b49f,0bb8b4f9a1c61fcf473e5ca7a10cc3ed4f30766f,setup.py,setup.py,setup.py,Beefed up setup.py,"diff --git a/setup.py b/setup.py
index e5f160ad..30b0e16f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,3 +1,42 @@
+""""""
+Flask
+-----
+
+Flask is a microframework for Python based on Werkzeug, Jinja 2 and good
+intentions. And before you ask: It's BSD licensed!
+
+Flask is Fun
+````````````
+
+::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route(""/"")
+    def hello():
+        return ""Hello World!""
+
+    if __name__ == ""__main__"":
+        app.run()
+
+And Easy to Setup
+`````````````````
+
+::
+
+    $ easy_install Flask
+    $ python hello.py
+     * Running on http://localhost:5000/
+
+Links
+`````
+
+* `website <http://flask.pocoo.org/>`_
+* `documentation <http://flask.pocoo.org/docs/>`_
+* `development version <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
+
+""""""
 from setuptools import setup
 
 
@@ -9,11 +48,22 @@ setup(
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
     description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    long_description=__doc__,
     py_modules=['flask'],
     zip_safe=False,
     platforms='any',
     install_requires=[
         'Werkzeug>=0.6.1',
         'Jinja2>=2.4'
+    ],
+    classifiers=[
+        'Development Status :: 3 - Alpha',
+        'Environment :: Web Environment',
+        'Intended Audience :: Developers',
+        'License :: OSI Approved :: BSD License',
+        'Operating System :: OS Independent',
+        'Programming Language :: Python',
+        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
+        'Topic :: Software Development :: Libraries :: Python Modules'
     ]
 )
","diff --git a/setup.py b/setup.py
index e5f160ad..30b0e16f 100644
--- a/setup.py
+++ b/setup.py
@@ -1,3 +1,42 @@
+""""""
+Flask
+-----
+
+Flask is a microframework for Python based on Werkzeug, Jinja 2 and good
+intentions. And before you ask: It's BSD licensed!
+
+Flask is Fun
+````````````
+
+::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route(""/"")
+    def hello():
+        return ""Hello World!""
+
+    if __name__ == ""__main__"":
+        app.run()
+
+And Easy to Setup
+`````````````````
+
+::
+
+    $ easy_install Flask
+    $ python hello.py
+     * Running on http://localhost:5000/
+
+Links
+`````
+
+* `website <http://flask.pocoo.org/>`_
+* `documentation <http://flask.pocoo.org/docs/>`_
+* `development version <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
+
+""""""
 from setuptools import setup
 
 
@@ -9,11 +48,22 @@ setup(
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
     description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    long_description=__doc__,
     py_modules=['flask'],
     zip_safe=False,
     platforms='any',
     install_requires=[
         'Werkzeug>=0.6.1',
         'Jinja2>=2.4'
+    ],
+    classifiers=[
+        'Development Status :: 3 - Alpha',
+        'Environment :: Web Environment',
+        'Intended Audience :: Developers',
+        'License :: OSI Approved :: BSD License',
+        'Operating System :: OS Independent',
+        'Programming Language :: Python',
+        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
+        'Topic :: Software Development :: Libraries :: Python Modules'
     ]
 )
"
0bb8b4f9a1c61fcf473e5ca7a10cc3ed4f30766f,8605cc310d260c3b08160881b09da26c2cc95f8d,.gitignore,.gitignore,.gitignore,ignore dist folder,"diff --git a/.gitignore b/.gitignore
index 0edef0e9..5250e072 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,4 +2,5 @@
 *.pyc
 *.pyo
 env
+dist
 *.egg-info
","diff --git a/.gitignore b/.gitignore
index 0edef0e9..5250e072 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,4 +2,5 @@
 *.pyc
 *.pyo
 env
+dist
 *.egg-info
"
8605cc310d260c3b08160881b09da26c2cc95f8d,9fbf9a062c11904b5022a5aa7941449e31340c32,setup.py,setup.py,setup.py,head is 0.2-dev,"diff --git a/setup.py b/setup.py
index 30b0e16f..1742542d 100644
--- a/setup.py
+++ b/setup.py
@@ -42,7 +42,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.1',
+    version='0.2',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
","diff --git a/setup.py b/setup.py
index 30b0e16f..1742542d 100644
--- a/setup.py
+++ b/setup.py
@@ -42,7 +42,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.1',
+    version='0.2',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
"
9fbf9a062c11904b5022a5aa7941449e31340c32,791cdb28f593d4d7649d88407fcd193834512219,website/index.html,website/index.html,website/index.html,Fixed capitalization on website,"diff --git a/website/index.html b/website/index.html
index 220b10ef..19c1f0b4 100644
--- a/website/index.html
+++ b/website/index.html
@@ -41,8 +41,8 @@ def hello():
   <h2>Interested?</h2>
   <ul>
     <li><a href=docs/>Read the documentation</a>
-    <li><a href=http://github.com/mitsuhiko/flask>fork it on github</a>
-    <li><a href=http://pypi.python.org/pypi/Flask>download it from PyPI</a>
+    <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
+    <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
   </ul>
   <h2>Contribute</h2>
   <p>Found a bug? Have a good idea for improving Flask? Head over to
","diff --git a/website/index.html b/website/index.html
index 220b10ef..19c1f0b4 100644
--- a/website/index.html
+++ b/website/index.html
@@ -41,8 +41,8 @@ def hello():
   <h2>Interested?</h2>
   <ul>
     <li><a href=docs/>Read the documentation</a>
-    <li><a href=http://github.com/mitsuhiko/flask>fork it on github</a>
-    <li><a href=http://pypi.python.org/pypi/Flask>download it from PyPI</a>
+    <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
+    <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
   </ul>
   <h2>Contribute</h2>
   <p>Found a bug? Have a good idea for improving Flask? Head over to
"
791cdb28f593d4d7649d88407fcd193834512219,5310fc38227b1907cb541f4a30ea8dfef46c2e19,flask.py,flask.py,flask.py,Session falls back to a dummy object now if secret_key is missing.  This makes it possible to still read-only access the empty session but requires the secret key to be set for write access.  The error message raised explains that.  This closes #10.,"diff --git a/flask.py b/flask.py
index f7ba22e6..18e4a446 100644
--- a/flask.py
+++ b/flask.py
@@ -68,6 +68,22 @@ class _RequestGlobals(object):
     pass
 
 
+class _NullSession(SecureCookie):
+    """"""Class used to generate nicer error messages if sessions are not
+    available.  Will still allow read-only access to the empty session
+    but fail on setting.
+    """"""
+
+    def _fail(self, *args, **kwargs):
+        raise RuntimeError('the session is unavailable because no secret '
+                           'key was set.  Set the secret_key on the '
+                           'application to something unique and secret')
+    __setitem__ = __delitem__ = clear = pop = popitem = \
+        update = setdefault = _fail
+    del _fail
+
+
+
 class _RequestContext(object):
     """"""The request context contains all request relevant information.  It is
     created at the beginning of the request and pushed to the
@@ -80,6 +96,8 @@ class _RequestContext(object):
         self.url_adapter = app.url_map.bind_to_environ(environ)
         self.request = app.request_class(environ)
         self.session = app.open_session(self.request)
+        if self.session is None:
+            self.session = _NullSession()
         self.g = _RequestGlobals()
         self.flashes = None
 
@@ -384,7 +402,6 @@ class Flask(object):
                         object)
         :param response: an instance of :attr:`response_class`
         """"""
-        if session is not None:
         session.save_cookie(response, self.session_cookie_name)
 
     def add_url_rule(self, rule, endpoint, **options):
@@ -603,7 +620,7 @@ class Flask(object):
                  instance of :attr:`response_class`.
         """"""
         session = _request_ctx_stack.top.session
-        if session is not None:
+        if not isinstance(session, _NullSession):
             self.save_session(session, response)
         for handler in self.after_request_funcs:
             response = handler(response)
","diff --git a/flask.py b/flask.py
index f7ba22e6..18e4a446 100644
--- a/flask.py
+++ b/flask.py
@@ -68,6 +68,22 @@ class _RequestGlobals(object):
     pass
 
 
+class _NullSession(SecureCookie):
+    """"""Class used to generate nicer error messages if sessions are not
+    available.  Will still allow read-only access to the empty session
+    but fail on setting.
+    """"""
+
+    def _fail(self, *args, **kwargs):
+        raise RuntimeError('the session is unavailable because no secret '
+                           'key was set.  Set the secret_key on the '
+                           'application to something unique and secret')
+    __setitem__ = __delitem__ = clear = pop = popitem = \
+        update = setdefault = _fail
+    del _fail
+
+
+
 class _RequestContext(object):
     """"""The request context contains all request relevant information.  It is
     created at the beginning of the request and pushed to the
@@ -80,6 +96,8 @@ class _RequestContext(object):
         self.url_adapter = app.url_map.bind_to_environ(environ)
         self.request = app.request_class(environ)
         self.session = app.open_session(self.request)
+        if self.session is None:
+            self.session = _NullSession()
         self.g = _RequestGlobals()
         self.flashes = None
 
@@ -384,7 +402,6 @@ class Flask(object):
                         object)
         :param response: an instance of :attr:`response_class`
         """"""
-        if session is not None:
         session.save_cookie(response, self.session_cookie_name)
 
     def add_url_rule(self, rule, endpoint, **options):
@@ -603,7 +620,7 @@ class Flask(object):
                  instance of :attr:`response_class`.
         """"""
         session = _request_ctx_stack.top.session
-        if session is not None:
+        if not isinstance(session, _NullSession):
             self.save_session(session, response)
         for handler in self.after_request_funcs:
             response = handler(response)
"
791cdb28f593d4d7649d88407fcd193834512219,5310fc38227b1907cb541f4a30ea8dfef46c2e19,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Session falls back to a dummy object now if secret_key is missing.  This makes it possible to still read-only access the empty session but requires the secret key to be set for write access.  The error message raised explains that.  This closes #10.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 0d73c954..b9edd366 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -72,6 +72,20 @@ class BasicFunctionality(unittest.TestCase):
         assert c.post('/set', data={'value': '42'}).data == 'value set'
         assert c.get('/get').data == '42'
 
+    def test_missing_session(self):
+        app = flask.Flask(__name__)
+        def expect_exception(f, *args, **kwargs):
+            try:
+                f(*args, **kwargs)
+            except RuntimeError, e:
+                assert e.args and 'session is unavailable' in e.args[0]
+            else:
+                assert False, 'expected exception'
+        with app.test_request_context():
+            assert flask.session.get('missing_key') is None
+            expect_exception(flask.session.__setitem__, 'foo', 42)
+            expect_exception(flask.session.pop, 'foo')
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 0d73c954..b9edd366 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -72,6 +72,20 @@ class BasicFunctionality(unittest.TestCase):
         assert c.post('/set', data={'value': '42'}).data == 'value set'
         assert c.get('/get').data == '42'
 
+    def test_missing_session(self):
+        app = flask.Flask(__name__)
+        def expect_exception(f, *args, **kwargs):
+            try:
+                f(*args, **kwargs)
+            except RuntimeError, e:
+                assert e.args and 'session is unavailable' in e.args[0]
+            else:
+                assert False, 'expected exception'
+        with app.test_request_context():
+            assert flask.session.get('missing_key') is None
+            expect_exception(flask.session.__setitem__, 'foo', 42)
+            expect_exception(flask.session.pop, 'foo')
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
"
5310fc38227b1907cb541f4a30ea8dfef46c2e19,b9cae3564ad31876d977c24a09d760e77ca992f3,docs/deploying.rst,docs/deploying.rst,docs/deploying.rst,Reordered deployment docs,"diff --git a/docs/deploying.rst b/docs/deploying.rst
index e04112f0..0d0ed19e 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -11,6 +11,133 @@ how to use a WSGI app with it.  Just remember that your application object
 is the actual WSGI application.
 
 
+mod_wsgi (Apache)
+-----------------
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+`````````````````````
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+```````````````````````
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+``````````````````
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+
+CGI
+---
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major servers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+``````````````````````
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+````````````
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptName /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
+
+
+
 FastCGI
 -------
 
@@ -141,88 +268,6 @@ path.  Common problems are:
 .. _flup: http://trac.saddi.com/flup
 
 
-mod_wsgi (Apache)
------------------
-
-If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
-
-.. _Apache: http://httpd.apache.org/
-
-Installing `mod_wsgi`
-`````````````````````
-
-If you don't have `mod_wsgi` installed yet you have to either install it using
-a package manager or compile it yourself.
-
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
-
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
-
-    # apt-get install libapache2-mod-wsgi
-
-On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
-
-    # pkg_add -r mod_wsgi
-
-If you are using pkgsrc you can install `mod_wsgi` by compiling the
-`www/ap2-wsgi` package.
-
-If you encounter segfaulting child processes after the first apache reload you
-can safely ignore them.  Just restart the server.
-
-Creating a `.wsgi` file
-```````````````````````
-
-To run your application you need a `yourapplication.wsgi` file.  This file
-contains the code `mod_wsgi` is executing on startup to get the application
-object.  The object called `application` in that file is then used as
-application.
-
-For most applications the following file should be sufficient::
-
-    from yourapplication import app as application
-
-If you don't have a factory function for application creation but a singleton
-instance you can directly import that one as `application`.
-
-Store that file somewhere where you will find it again (eg:
-`/var/www/yourapplication`) and make sure that `yourapplication` and all
-the libraries that are in use are on the python load path.  If you don't
-want to install it system wide consider using a `virtual python`_ instance.
-
-Configuring Apache
-``````````````````
-
-The last thing you have to do is to create an Apache configuration file for
-your application.  In this example we are telling `mod_wsgi` to execute the
-application under a different user for security reasons:
-
-.. sourcecode:: apache
-
-    <VirtualHost *>
-        ServerName example.com
-
-        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
-        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
-
-        <Directory /var/www/yourapplication>
-            WSGIProcessGroup yourapplication
-            WSGIApplicationGroup %{GLOBAL}
-            Order deny,allow
-            Allow from all
-        </Directory>
-    </VirtualHost>
-
-For more information consult the `mod_wsgi wiki`_.
-
-.. _mod_wsgi: http://code.google.com/p/modwsgi/
-.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
-.. _virtual python: http://pypi.python.org/pypi/virtualenv
-.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
-
-
 
 Tornado
 --------
@@ -260,47 +305,3 @@ Gevent
 .. _Gevent: http://www.gevent.org/
 .. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
 .. _libevent: http://monkey.org/~provos/libevent/
-
-CGI
----
-
-If all other deployment methods do not work, CGI will work for sure.  CGI
-is supported by all major browsers but usually has a less-than-optimal
-performance.
-
-This is also the way you can use a Flask application on Google's
-`AppEngine`_, there however the execution does happen in a CGI-like
-environment.  The application's performance is unaffected because of that.
-
-.. _AppEngine: http://code.google.com/appengine/
-
-Creating a `.cgi` file
-``````````````````````
-
-First you need to create the CGI application file.  Let's call it
-`yourapplication.cgi`::
-
-    #!/usr/bin/python
-    from wsgiref.handlers import CGIHandler
-    from yourapplication import app
-
-    CGIHandler().run(app)
-
-If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
-2.5 and higher ship this as part of the standard library.
-
-Server Setup
-````````````
-
-Usually there are two ways to configure the server.  Either just copy the
-`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
-rewrite the URL) or let the server point to the file directly.
-
-In Apache for example you can put a like like this into the config:
-
-.. sourcecode:: apache
-
-    ScriptName /app /path/to/the/application.cgi
-
-For more information consult the documentation of your webserver.
-
","diff --git a/docs/deploying.rst b/docs/deploying.rst
index e04112f0..0d0ed19e 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -11,6 +11,133 @@ how to use a WSGI app with it.  Just remember that your application object
 is the actual WSGI application.
 
 
+mod_wsgi (Apache)
+-----------------
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+`````````````````````
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+```````````````````````
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+``````````````````
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+
+CGI
+---
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major servers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+``````````````````````
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+````````````
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptName /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
+
+
+
 FastCGI
 -------
 
@@ -141,88 +268,6 @@ path.  Common problems are:
 .. _flup: http://trac.saddi.com/flup
 
 
-mod_wsgi (Apache)
------------------
-
-If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
-
-.. _Apache: http://httpd.apache.org/
-
-Installing `mod_wsgi`
-`````````````````````
-
-If you don't have `mod_wsgi` installed yet you have to either install it using
-a package manager or compile it yourself.
-
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
-
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
-
-    # apt-get install libapache2-mod-wsgi
-
-On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
-
-    # pkg_add -r mod_wsgi
-
-If you are using pkgsrc you can install `mod_wsgi` by compiling the
-`www/ap2-wsgi` package.
-
-If you encounter segfaulting child processes after the first apache reload you
-can safely ignore them.  Just restart the server.
-
-Creating a `.wsgi` file
-```````````````````````
-
-To run your application you need a `yourapplication.wsgi` file.  This file
-contains the code `mod_wsgi` is executing on startup to get the application
-object.  The object called `application` in that file is then used as
-application.
-
-For most applications the following file should be sufficient::
-
-    from yourapplication import app as application
-
-If you don't have a factory function for application creation but a singleton
-instance you can directly import that one as `application`.
-
-Store that file somewhere where you will find it again (eg:
-`/var/www/yourapplication`) and make sure that `yourapplication` and all
-the libraries that are in use are on the python load path.  If you don't
-want to install it system wide consider using a `virtual python`_ instance.
-
-Configuring Apache
-``````````````````
-
-The last thing you have to do is to create an Apache configuration file for
-your application.  In this example we are telling `mod_wsgi` to execute the
-application under a different user for security reasons:
-
-.. sourcecode:: apache
-
-    <VirtualHost *>
-        ServerName example.com
-
-        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
-        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
-
-        <Directory /var/www/yourapplication>
-            WSGIProcessGroup yourapplication
-            WSGIApplicationGroup %{GLOBAL}
-            Order deny,allow
-            Allow from all
-        </Directory>
-    </VirtualHost>
-
-For more information consult the `mod_wsgi wiki`_.
-
-.. _mod_wsgi: http://code.google.com/p/modwsgi/
-.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
-.. _virtual python: http://pypi.python.org/pypi/virtualenv
-.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
-
-
 
 Tornado
 --------
@@ -260,47 +305,3 @@ Gevent
 .. _Gevent: http://www.gevent.org/
 .. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
 .. _libevent: http://monkey.org/~provos/libevent/
-
-CGI
----
-
-If all other deployment methods do not work, CGI will work for sure.  CGI
-is supported by all major browsers but usually has a less-than-optimal
-performance.
-
-This is also the way you can use a Flask application on Google's
-`AppEngine`_, there however the execution does happen in a CGI-like
-environment.  The application's performance is unaffected because of that.
-
-.. _AppEngine: http://code.google.com/appengine/
-
-Creating a `.cgi` file
-``````````````````````
-
-First you need to create the CGI application file.  Let's call it
-`yourapplication.cgi`::
-
-    #!/usr/bin/python
-    from wsgiref.handlers import CGIHandler
-    from yourapplication import app
-
-    CGIHandler().run(app)
-
-If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
-2.5 and higher ship this as part of the standard library.
-
-Server Setup
-````````````
-
-Usually there are two ways to configure the server.  Either just copy the
-`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
-rewrite the URL) or let the server point to the file directly.
-
-In Apache for example you can put a like like this into the config:
-
-.. sourcecode:: apache
-
-    ScriptName /app /path/to/the/application.cgi
-
-For more information consult the documentation of your webserver.
-
"
b9cae3564ad31876d977c24a09d760e77ca992f3,74862dcbca052ea0a994da3f507c00e9cc18821c,Makefile,Makefile,Makefile,Added makefile target for website and doc updating.,"diff --git a/Makefile b/Makefile
index 0eabe5d8..7aaa77dc 100644
--- a/Makefile
+++ b/Makefile
@@ -9,3 +9,9 @@ clean-pyc:
 	find . -name '*.pyc' -exec rm -f {} +
 	find . -name '*.pyo' -exec rm -f {} +
 	find . -name '*~' -exec rm -f {} +
+
+upload-website:
+	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
+
+upload-docs:
+	$(MAKE) -C docs html && scp -r docs/_build/html/* pocoo.org:/var/www/flask.pocoo.org/docs/
","diff --git a/Makefile b/Makefile
index 0eabe5d8..7aaa77dc 100644
--- a/Makefile
+++ b/Makefile
@@ -9,3 +9,9 @@ clean-pyc:
 	find . -name '*.pyc' -exec rm -f {} +
 	find . -name '*.pyo' -exec rm -f {} +
 	find . -name '*~' -exec rm -f {} +
+
+upload-website:
+	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
+
+upload-docs:
+	$(MAKE) -C docs html && scp -r docs/_build/html/* pocoo.org:/var/www/flask.pocoo.org/docs/
"
74862dcbca052ea0a994da3f507c00e9cc18821c,0b9c2b5eb1b604cd76d9252e8e9628df731ea572,flask.py,flask.py,flask.py,removed refactoring leftover,"diff --git a/flask.py b/flask.py
index 18e4a446..93d1dd9a 100644
--- a/flask.py
+++ b/flask.py
@@ -325,7 +325,6 @@ class Flask(object):
         :param context: the context as a dictionary that is updated in place
                         to add extra variables.
         """"""
-        reqctx = _request_ctx_stack.top
         for func in self.template_context_processors:
             context.update(func())
 
","diff --git a/flask.py b/flask.py
index 18e4a446..93d1dd9a 100644
--- a/flask.py
+++ b/flask.py
@@ -325,7 +325,6 @@ class Flask(object):
         :param context: the context as a dictionary that is updated in place
                         to add extra variables.
         """"""
-        reqctx = _request_ctx_stack.top
         for func in self.template_context_processors:
             context.update(func())
 
"
0b9c2b5eb1b604cd76d9252e8e9628df731ea572,fe6c279df12294e590e87705b0ba8728a3ed54c4,README,README,README,Synched tagline :),"diff --git a/README b/README
index d4f57f2a..d648ef4e 100644
--- a/README
+++ b/README
@@ -1,8 +1,7 @@
 
                           // Flask //
 
-       because a pocket knife is not the only thing that
-                      might come in handy
+	 because sometimes a pocket knife is not enough
 
 
     ~ What is Flask?
","diff --git a/README b/README
index d4f57f2a..d648ef4e 100644
--- a/README
+++ b/README
@@ -1,8 +1,7 @@
 
                           // Flask //
 
-       because a pocket knife is not the only thing that
-                      might come in handy
+	 because sometimes a pocket knife is not enough
 
 
     ~ What is Flask?
"
fe6c279df12294e590e87705b0ba8728a3ed54c4,325dfa2469f86e03187b6d9e6aee4745b702c496,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,Larger fonts in the docs,"diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index 06bd737e..b8381d7d 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -7,6 +7,7 @@
 </p>
 <h3>Useful Links</h3>
 <ul>
+  <li><a href=""http://flask.pocoo.org/"">The Flask Website</a></li>
   <li><a href=""http://pypi.python.org/pypi/Flask"">Flask @ PyPI</a></li>
   <li><a href=""http://github.com/mitsuhiko/flask"">Flask @ github</a></li>
 </ul>
","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index 06bd737e..b8381d7d 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -7,6 +7,7 @@
 </p>
 <h3>Useful Links</h3>
 <ul>
+  <li><a href=""http://flask.pocoo.org/"">The Flask Website</a></li>
   <li><a href=""http://pypi.python.org/pypi/Flask"">Flask @ PyPI</a></li>
   <li><a href=""http://github.com/mitsuhiko/flask"">Flask @ github</a></li>
 </ul>
"
fe6c279df12294e590e87705b0ba8728a3ed54c4,325dfa2469f86e03187b6d9e6aee4745b702c496,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Larger fonts in the docs,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index a006b9b1..b7de089f 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -15,7 +15,7 @@
  
 body {
     font-family: 'Georgia', serif;
-    font-size: 100%;
+    font-size: 16px;
     background-color: #555;
     color: #555;
     margin: 0;
@@ -43,7 +43,6 @@ div.body {
     background-color: #ffffff;
     color: #3E4349;
     padding: 0 30px 30px 30px;
-    font-size: 0.9em;
 }
  
 div.footer {
@@ -70,7 +69,7 @@ div.related a {
 }
  
 div.sphinxsidebar {
-    font-size: 0.75em;
+    font-size: 0.85em;
     line-height: 1.5em;
 }
 
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index a006b9b1..b7de089f 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -15,7 +15,7 @@
  
 body {
     font-family: 'Georgia', serif;
-    font-size: 100%;
+    font-size: 16px;
     background-color: #555;
     color: #555;
     margin: 0;
@@ -43,7 +43,6 @@ div.body {
     background-color: #ffffff;
     color: #3E4349;
     padding: 0 30px 30px 30px;
-    font-size: 0.9em;
 }
  
 div.footer {
@@ -70,7 +69,7 @@ div.related a {
 }
  
 div.sphinxsidebar {
-    font-size: 0.75em;
+    font-size: 0.85em;
     line-height: 1.5em;
 }
 
"
fe6c279df12294e590e87705b0ba8728a3ed54c4,325dfa2469f86e03187b6d9e6aee4745b702c496,website/index.html,website/index.html,website/index.html,Larger fonts in the docs,"diff --git a/website/index.html b/website/index.html
index 19c1f0b4..0c1bd059 100644
--- a/website/index.html
+++ b/website/index.html
@@ -1,21 +1,24 @@
 <!doctype html>
 <title>Flask (A Python Microframework)</title>
+<meta charset=utf-8>
 <style type=text/css>
   body    { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
-  a     { color: #444; font-weight: bold; }
+  a       { color: #004B6B; }
+  a:hover { color: #6D4100; }
   .box    { width: 540px; margin: 40px auto; }
+  h1, h2  { font-family: 'Garamond', 'Georgia', serif; font-weight: normal; }
   h1      { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
-  h2    { font-size: 26px; margin: 15px 0 5px 0; font-variant: small-caps; }
+  h2      { font-size: 28px; margin: 15px 0 5px 0; }
   code,
   pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
           monospace; font-size: 15px; background: #eee; }
   pre     { padding: 7px 30px; margin: 15px -30px; }
   .ig     { color: #888; }
-  ul    { margin: 15px 0; padding: 0; }
+  ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
+  ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
   h1 span, p.tagline { display: none; }
   blockquote { margin: 0; font-style: italic; color: #444; }
   .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
-  pre a, blockquote a, .footer a { font-weight: normal; color: inherit; }
 </style>
 <div class=box>
   <h1><span>Flask</span></h1>
@@ -37,18 +40,39 @@ def hello():
   <h2>And Easy to Setup</h2>
   <pre><span class=ig>$ </span>easy_install Flask
 <span class=ig>$ </span>python hello.py
-<span class=ig> * Running on <a href=http://localhost:5000/>http://localhost:5000/</a></span></pre>
+<span class=ig> * Running on http://localhost:5000/</span></pre>
   <h2>Interested?</h2>
   <ul>
     <li><a href=docs/>Read the documentation</a>
     <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
     <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
   </ul>
+  <h2>What’s in the Box?</h2>
+  <ul>
+    <li>built in development server and <a href=docs/quickstart.html#debug-mode>debugger</a>
+    <li>integrated support for <a href=docs/testing.html>unittesting support</a>
+    <li>RESTful <a href=docs/quickstart.html#routing>request dispatching</a>
+    <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
+    <li>support for <a href=docs/quickstart.html#sessions>secure cookies</a> (client side sessions)
+    <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
+    <li>Unicode based
+  </ul>
+  <h2>What do Flask Apps look like?</h2>
+  <p>
+    If you are looking for some example code of applications written with Flask,
+    have a look at the sources of the examples on github:
+  <ul>
+    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/>flaskr</a>
+      — a microblog
+    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/>minitwit</a>
+      — a twitter clone
+  </ul>
   <h2>Contribute</h2>
   <p>Found a bug? Have a good idea for improving Flask? Head over to
     <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
-    create a new ticket or fork.  If you just want to chat with the
-    developers, go to <code>#pocoo</code> on irc.freenode.net 
+    create a new ticket or fork.  If you just want to chat with fellow
+    developers, go to <code>#pocoo</code> on irc.freenode.net.
+
   <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
 </div>
 
","diff --git a/website/index.html b/website/index.html
index 19c1f0b4..0c1bd059 100644
--- a/website/index.html
+++ b/website/index.html
@@ -1,21 +1,24 @@
 <!doctype html>
 <title>Flask (A Python Microframework)</title>
+<meta charset=utf-8>
 <style type=text/css>
   body    { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
-  a     { color: #444; font-weight: bold; }
+  a       { color: #004B6B; }
+  a:hover { color: #6D4100; }
   .box    { width: 540px; margin: 40px auto; }
+  h1, h2  { font-family: 'Garamond', 'Georgia', serif; font-weight: normal; }
   h1      { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
-  h2    { font-size: 26px; margin: 15px 0 5px 0; font-variant: small-caps; }
+  h2      { font-size: 28px; margin: 15px 0 5px 0; }
   code,
   pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
           monospace; font-size: 15px; background: #eee; }
   pre     { padding: 7px 30px; margin: 15px -30px; }
   .ig     { color: #888; }
-  ul    { margin: 15px 0; padding: 0; }
+  ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
+  ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
   h1 span, p.tagline { display: none; }
   blockquote { margin: 0; font-style: italic; color: #444; }
   .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
-  pre a, blockquote a, .footer a { font-weight: normal; color: inherit; }
 </style>
 <div class=box>
   <h1><span>Flask</span></h1>
@@ -37,18 +40,39 @@ def hello():
   <h2>And Easy to Setup</h2>
   <pre><span class=ig>$ </span>easy_install Flask
 <span class=ig>$ </span>python hello.py
-<span class=ig> * Running on <a href=http://localhost:5000/>http://localhost:5000/</a></span></pre>
+<span class=ig> * Running on http://localhost:5000/</span></pre>
   <h2>Interested?</h2>
   <ul>
     <li><a href=docs/>Read the documentation</a>
     <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
     <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
   </ul>
+  <h2>What’s in the Box?</h2>
+  <ul>
+    <li>built in development server and <a href=docs/quickstart.html#debug-mode>debugger</a>
+    <li>integrated support for <a href=docs/testing.html>unittesting support</a>
+    <li>RESTful <a href=docs/quickstart.html#routing>request dispatching</a>
+    <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
+    <li>support for <a href=docs/quickstart.html#sessions>secure cookies</a> (client side sessions)
+    <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
+    <li>Unicode based
+  </ul>
+  <h2>What do Flask Apps look like?</h2>
+  <p>
+    If you are looking for some example code of applications written with Flask,
+    have a look at the sources of the examples on github:
+  <ul>
+    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/>flaskr</a>
+      — a microblog
+    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/>minitwit</a>
+      — a twitter clone
+  </ul>
   <h2>Contribute</h2>
   <p>Found a bug? Have a good idea for improving Flask? Head over to
     <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
-    create a new ticket or fork.  If you just want to chat with the
-    developers, go to <code>#pocoo</code> on irc.freenode.net 
+    create a new ticket or fork.  If you just want to chat with fellow
+    developers, go to <code>#pocoo</code> on irc.freenode.net.
+
   <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
 </div>
 
"
325dfa2469f86e03187b6d9e6aee4745b702c496,b4cd70d054a1514adaed893663cfa22b73114d1e,website/404.html,,website/404.html,Updated website,"diff --git a/website/404.html b/website/404.html
new file mode 100644
index 00000000..7cc80b04
--- /dev/null
+++ b/website/404.html
@@ -0,0 +1,47 @@
+<!doctype html>
+<title>Awwww.  What you searched cannot be found</title>
+<style type=text/css>
+body, html {
+  height: 100%;
+  margin: 0;
+  padding: 0;
+}
+
+body {
+  background: url(/ship.png) no-repeat center right;
+}
+
+body:after {
+  content: """";
+  display: block;
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  width: 30px;
+  background: url(/mask.png) repeat-y left;
+}
+
+a { color: #004B6B; }
+a:hover { color: #6D4100; }
+
+h1 {
+  font-family: 'Garamond', 'Georgia', serif;
+  font-weight: normal;
+  color: #222;
+  font-size: 40px;
+  padding: 50px 0 10px 50px;
+  margin: 0;
+}
+
+p {
+  font-family: 'Georgia', serif;
+  color: #000;
+  font-size: 20px;
+  padding: 10px 0 0 90px;
+  margin: 0;
+  width: 360px;
+}
+</style>
+<h1>Chapter 404: The Lost Page</h1>
+<p>A careful and diligent search has been made for the desired page, but it just cannot be found.
+<p>And so they returned to <a href=/>familiar waters</a>.
","diff --git a/website/404.html b/website/404.html
new file mode 100644
index 00000000..7cc80b04
--- /dev/null
+++ b/website/404.html
@@ -0,0 +1,47 @@
+<!doctype html>
+<title>Awwww.  What you searched cannot be found</title>
+<style type=text/css>
+body, html {
+  height: 100%;
+  margin: 0;
+  padding: 0;
+}
+
+body {
+  background: url(/ship.png) no-repeat center right;
+}
+
+body:after {
+  content: """";
+  display: block;
+  position: absolute;
+  top: 0;
+  bottom: 0;
+  width: 30px;
+  background: url(/mask.png) repeat-y left;
+}
+
+a { color: #004B6B; }
+a:hover { color: #6D4100; }
+
+h1 {
+  font-family: 'Garamond', 'Georgia', serif;
+  font-weight: normal;
+  color: #222;
+  font-size: 40px;
+  padding: 50px 0 10px 50px;
+  margin: 0;
+}
+
+p {
+  font-family: 'Georgia', serif;
+  color: #000;
+  font-size: 20px;
+  padding: 10px 0 0 90px;
+  margin: 0;
+  width: 360px;
+}
+</style>
+<h1>Chapter 404: The Lost Page</h1>
+<p>A careful and diligent search has been made for the desired page, but it just cannot be found.
+<p>And so they returned to <a href=/>familiar waters</a>.
"
325dfa2469f86e03187b6d9e6aee4745b702c496,b4cd70d054a1514adaed893663cfa22b73114d1e,website/mask.png,website/mask.png,website/mask.png,Updated website,"diff --git a/website/mask.png b/website/mask.png
new file mode 100644
index 00000000..f2fdbe14
Binary files /dev/null and b/website/mask.png differ
","diff --git a/website/mask.png b/website/mask.png
new file mode 100644
index 00000000..f2fdbe14
Binary files /dev/null and b/website/mask.png differ
"
325dfa2469f86e03187b6d9e6aee4745b702c496,b4cd70d054a1514adaed893663cfa22b73114d1e,website/ship.png,website/ship.png,website/ship.png,Updated website,"diff --git a/website/ship.png b/website/ship.png
new file mode 100644
index 00000000..49eca5d4
Binary files /dev/null and b/website/ship.png differ
","diff --git a/website/ship.png b/website/ship.png
new file mode 100644
index 00000000..49eca5d4
Binary files /dev/null and b/website/ship.png differ
"
b4cd70d054a1514adaed893663cfa22b73114d1e,42dd94b7565052120423dbd86a5ab0f96938f8cc,website/404.html,website/404.html,website/404.html,Fixed title.,"diff --git a/website/404.html b/website/404.html
index 7cc80b04..c4de489d 100644
--- a/website/404.html
+++ b/website/404.html
@@ -1,5 +1,5 @@
 <!doctype html>
-<title>Awwww.  What you searched cannot be found</title>
+<title>Chapter 404: The Lost Page</title>
 <style type=text/css>
 body, html {
   height: 100%;
","diff --git a/website/404.html b/website/404.html
index 7cc80b04..c4de489d 100644
--- a/website/404.html
+++ b/website/404.html
@@ -1,5 +1,5 @@
 <!doctype html>
-<title>Awwww.  What you searched cannot be found</title>
+<title>Chapter 404: The Lost Page</title>
 <style type=text/css>
 body, html {
   height: 100%;
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index b7de089f..5a365fd9 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -15,13 +15,17 @@
  
 body {
     font-family: 'Georgia', serif;
-    font-size: 16px;
-    background-color: #555;
-    color: #555;
+    font-size: 17px;
+    background-color: #ddd;
+    color: #000;
     margin: 0;
     padding: 0;
 }
 
+div.document {
+    background: #fafafa;
+}
+
 div.documentwrapper {
     float: left;
     width: 100%;
@@ -35,50 +39,57 @@ hr {
     border: 1px solid #B1B4B6;
 }
  
-div.document {
-    background-color: #eee;
-}
- 
 div.body {
     background-color: #ffffff;
     color: #3E4349;
     padding: 0 30px 30px 30px;
+    min-height: 34em;
+}
+
+img.floatingflask {
+    padding: 0 0 10px 10px;
+    float: right;
 }
  
 div.footer {
-    color: #ccc;
+    position: absolute;
+    right: 0;
+    margin-top: -70px;
+    text-align: right;
+    color: #888;
     padding: 10px;
-    font-size: 0.8em;
+    font-size: 14px;
 }
  
 div.footer a {
-    color: white;
+    color: #888;
     text-decoration: underline;
 }
  
 div.related {
-    background-color: #774117;
     line-height: 32px;
-    color: #fff;
-    text-shadow: 0px 1px 0 #444;
-    font-size: 0.9em;
+    color: #888;
+}
+
+div.related ul {
+    padding: 0 0 0 10px;
 }
  
 div.related a {
-    color: #E9D1C1;
+    color: #444;
 }
  
 div.sphinxsidebar {
-    font-size: 0.85em;
-    line-height: 1.5em;
+    font-size: 14px;
+    line-height: 1.5;
 }
 
 div.sphinxsidebarwrapper {
-    padding: 20px 0 20px 0;
+    padding: 0 20px;
 }
 
 div.sphinxsidebarwrapper p.logo {
-    padding: 0 0 10px 0;
+    padding: 20px 0 10px 0;
     margin: 0;
     text-align: center;
 }
@@ -87,39 +98,38 @@ div.sphinxsidebar h3,
 div.sphinxsidebar h4 {
     font-family: 'Garamond', 'Georgia', serif;
     color: #222;
-    font-size: 1.2em;
+    font-size: 24px;
     font-weight: normal;
-    margin: 0;
-    padding: 5px 10px;
-    background-color: #ddd;
-    text-shadow: 1px 1px 0 white
+    margin: 20px 0 5px 0;
+    padding: 0;
 }
 
 div.sphinxsidebar h4 {
-    font-size: 1.1em;
+    font-size: 20px;
 }
  
 div.sphinxsidebar h3 a {
     color: #444;
 }
  
- 
 div.sphinxsidebar p {
     color: #555;
-    padding: 5px 20px;
-}
- 
-div.sphinxsidebar p.topless {
+    margin: 10px 0;
 }
  
 div.sphinxsidebar ul {
-    margin: 10px 20px;
+    margin: 10px 0;
     padding: 0;
     color: #000;
 }
  
 div.sphinxsidebar a {
     color: #444;
+    text-decoration: none;
+}
+
+div.sphinxsidebar a:hover {
+    text-decoration: underline;
 }
  
 div.sphinxsidebar input {
@@ -128,15 +138,11 @@ div.sphinxsidebar input {
     font-size: 1em;
 }
  
-div.sphinxsidebar input[type=text]{
-    margin-left: 20px;
-}
- 
 /* -- body styles ----------------------------------------------------------- */
  
 a {
     color: #004B6B;
-    text-decoration: none;
+    text-decoration: underline;
 }
  
 a:hover {
@@ -144,6 +150,10 @@ a:hover {
     text-decoration: underline;
 }
 
+div.body {
+    padding-bottom: 40px; /* saved for footer */
+}
+ 
 div.body h1,
 div.body h2,
 div.body h3,
@@ -151,20 +161,17 @@ div.body h4,
 div.body h5,
 div.body h6 {
     font-family: 'Garamond', 'Georiga', serif;
-    background-color: #bbb;
     font-weight: normal;
-    color: #212224;
     margin: 30px 0px 10px 0px;
-    padding: 5px 0 5px 10px;
-    text-shadow: 0px 1px 0 white;
+    padding: 0;
 }
  
-div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
-div.body h2 { font-size: 150%; background-color: #ddd; }
-div.body h3 { font-size: 120%; background-color: #eee; }
-div.body h4 { font-size: 110%; background-color: #eee; }
-div.body h5 { font-size: 100%; background-color: #eee; }
-div.body h6 { font-size: 100%; background-color: #eee; }
+div.body h1 { margin-top: 0; padding-top: 20px; font-size: 240%; }
+div.body h2 { font-size: 180%; }
+div.body h3 { font-size: 150%; }
+div.body h4 { font-size: 130%; }
+div.body h5 { font-size: 100%; }
+div.body h6 { font-size: 100%; }
  
 a.headerlink {
     color: white;
@@ -182,14 +189,24 @@ div.body p, div.body dd, div.body li {
 }
 
 div.admonition {
-    border: 1px solid #ddd;
-    background: white;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+    background: #fafafa;
+    margin: 20px -30px;
+    padding: 10px 30px;
+    border-top: 1px solid #ccc;
+    border-bottom: 1px solid #ccc;
 }
 
-div.admonition p.admonition-title + p {
-    display: inline;
+div.admonition p.admonition-title {
+    font-family: 'Garamond', 'Georiga', serif;
+    font-weight: normal;
+    font-size: 24px;
+    margin: 0 0 10px 0;
+    padding: 0;
+    line-height: 1;
+}
+
+div.admonition p.last {
+    margin-bottom: 0;
 }
 
 div.highlight{
@@ -229,24 +246,27 @@ pre, tt {
 }
 
 img.screenshot {
-    -webkit-box-shadow: 4px 4px 3px #cdcdcd;
-    -moz-box-shadow: 4px 4px 3px #cdcdcd;
 }
 
 tt.descname, tt.descclassname {
     font-size: 0.95em;
-    -webkit-box-shadow: none;
-    -moz-box-shadow: none;
 }
 
 tt.descname {
     padding-right: 0.08em;
 }
 
+img.screenshot {
+    -moz-box-shadow: 2px 2px 4px #eee;
+    -webkit-box-shadow: 2px 2px 4px #eee;
+    box-shadow: 2px 2px 4px #eee;
+}
+
 table.docutils {
     border: 1px solid #888;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 4px #eee;
+    -webkit-box-shadow: 2px 2px 4px #eee;
+    box-shadow: 2px 2px 4px #eee;
 }
 
 table.docutils td, table.docutils th {
@@ -256,15 +276,15 @@ table.docutils td, table.docutils th {
 
 table.field-list, table.footnote {
     border: none;
-    -webkit-box-shadow: none;
     -moz-box-shadow: none;
+    -webkit-box-shadow: none;
+    box-shadow: none;
 }
 
 table.footnote {
+    margin: 15px 0;
     width: 100%;
     border: 1px solid #eee;
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
 }
 
 table.field-list th {
@@ -279,23 +299,36 @@ table.footnote td {
     padding: 0.5em;
 }
 
+dl {
+    margin: 0;
+    padding: 0;
+}
+
+dl dd {
+    margin-left: 30px;
+}
+ 
 pre {
-    background: #FDFDFD;
-    padding: 10px;
-    color: #222;
+    background: #eee;
+    padding: 7px 30px;
+    margin: 15px -30px;
     line-height: 1.3em;
-    border: 1px solid #f9f9f9;
-    margin: 1.5em 3px 1.5em 0;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+
+dl pre {
+    margin-left: -60px;
+    padding-left: 60px;
+}
+
+dl dl pre {
+    margin-left: -90px;
+    padding-left: 90px;
 }
  
 tt {
     background-color: #ecf0f3;
     color: #222;
     /* padding: 1px 2px; */
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
 }
 
 tt.xref, a tt {
@@ -305,11 +338,3 @@ tt.xref, a tt {
 a:hover tt {
     background: #EEE;
 }
-
-div.document + div.related {
-    background: #aaa;
-}
-
-div.document + div.related a {
-    color: white;
-}
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index b7de089f..5a365fd9 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -15,13 +15,17 @@
  
 body {
     font-family: 'Georgia', serif;
-    font-size: 16px;
-    background-color: #555;
-    color: #555;
+    font-size: 17px;
+    background-color: #ddd;
+    color: #000;
     margin: 0;
     padding: 0;
 }
 
+div.document {
+    background: #fafafa;
+}
+
 div.documentwrapper {
     float: left;
     width: 100%;
@@ -35,50 +39,57 @@ hr {
     border: 1px solid #B1B4B6;
 }
  
-div.document {
-    background-color: #eee;
-}
- 
 div.body {
     background-color: #ffffff;
     color: #3E4349;
     padding: 0 30px 30px 30px;
+    min-height: 34em;
+}
+
+img.floatingflask {
+    padding: 0 0 10px 10px;
+    float: right;
 }
  
 div.footer {
-    color: #ccc;
+    position: absolute;
+    right: 0;
+    margin-top: -70px;
+    text-align: right;
+    color: #888;
     padding: 10px;
-    font-size: 0.8em;
+    font-size: 14px;
 }
  
 div.footer a {
-    color: white;
+    color: #888;
     text-decoration: underline;
 }
  
 div.related {
-    background-color: #774117;
     line-height: 32px;
-    color: #fff;
-    text-shadow: 0px 1px 0 #444;
-    font-size: 0.9em;
+    color: #888;
+}
+
+div.related ul {
+    padding: 0 0 0 10px;
 }
  
 div.related a {
-    color: #E9D1C1;
+    color: #444;
 }
  
 div.sphinxsidebar {
-    font-size: 0.85em;
-    line-height: 1.5em;
+    font-size: 14px;
+    line-height: 1.5;
 }
 
 div.sphinxsidebarwrapper {
-    padding: 20px 0 20px 0;
+    padding: 0 20px;
 }
 
 div.sphinxsidebarwrapper p.logo {
-    padding: 0 0 10px 0;
+    padding: 20px 0 10px 0;
     margin: 0;
     text-align: center;
 }
@@ -87,39 +98,38 @@ div.sphinxsidebar h3,
 div.sphinxsidebar h4 {
     font-family: 'Garamond', 'Georgia', serif;
     color: #222;
-    font-size: 1.2em;
+    font-size: 24px;
     font-weight: normal;
-    margin: 0;
-    padding: 5px 10px;
-    background-color: #ddd;
-    text-shadow: 1px 1px 0 white
+    margin: 20px 0 5px 0;
+    padding: 0;
 }
 
 div.sphinxsidebar h4 {
-    font-size: 1.1em;
+    font-size: 20px;
 }
  
 div.sphinxsidebar h3 a {
     color: #444;
 }
  
- 
 div.sphinxsidebar p {
     color: #555;
-    padding: 5px 20px;
-}
- 
-div.sphinxsidebar p.topless {
+    margin: 10px 0;
 }
  
 div.sphinxsidebar ul {
-    margin: 10px 20px;
+    margin: 10px 0;
     padding: 0;
     color: #000;
 }
  
 div.sphinxsidebar a {
     color: #444;
+    text-decoration: none;
+}
+
+div.sphinxsidebar a:hover {
+    text-decoration: underline;
 }
  
 div.sphinxsidebar input {
@@ -128,15 +138,11 @@ div.sphinxsidebar input {
     font-size: 1em;
 }
  
-div.sphinxsidebar input[type=text]{
-    margin-left: 20px;
-}
- 
 /* -- body styles ----------------------------------------------------------- */
  
 a {
     color: #004B6B;
-    text-decoration: none;
+    text-decoration: underline;
 }
  
 a:hover {
@@ -144,6 +150,10 @@ a:hover {
     text-decoration: underline;
 }
 
+div.body {
+    padding-bottom: 40px; /* saved for footer */
+}
+ 
 div.body h1,
 div.body h2,
 div.body h3,
@@ -151,20 +161,17 @@ div.body h4,
 div.body h5,
 div.body h6 {
     font-family: 'Garamond', 'Georiga', serif;
-    background-color: #bbb;
     font-weight: normal;
-    color: #212224;
     margin: 30px 0px 10px 0px;
-    padding: 5px 0 5px 10px;
-    text-shadow: 0px 1px 0 white;
+    padding: 0;
 }
  
-div.body h1 { border-top: 20px solid white; margin-top: 0; font-size: 200%; }
-div.body h2 { font-size: 150%; background-color: #ddd; }
-div.body h3 { font-size: 120%; background-color: #eee; }
-div.body h4 { font-size: 110%; background-color: #eee; }
-div.body h5 { font-size: 100%; background-color: #eee; }
-div.body h6 { font-size: 100%; background-color: #eee; }
+div.body h1 { margin-top: 0; padding-top: 20px; font-size: 240%; }
+div.body h2 { font-size: 180%; }
+div.body h3 { font-size: 150%; }
+div.body h4 { font-size: 130%; }
+div.body h5 { font-size: 100%; }
+div.body h6 { font-size: 100%; }
  
 a.headerlink {
     color: white;
@@ -182,14 +189,24 @@ div.body p, div.body dd, div.body li {
 }
 
 div.admonition {
-    border: 1px solid #ddd;
-    background: white;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+    background: #fafafa;
+    margin: 20px -30px;
+    padding: 10px 30px;
+    border-top: 1px solid #ccc;
+    border-bottom: 1px solid #ccc;
 }
 
-div.admonition p.admonition-title + p {
-    display: inline;
+div.admonition p.admonition-title {
+    font-family: 'Garamond', 'Georiga', serif;
+    font-weight: normal;
+    font-size: 24px;
+    margin: 0 0 10px 0;
+    padding: 0;
+    line-height: 1;
+}
+
+div.admonition p.last {
+    margin-bottom: 0;
 }
 
 div.highlight{
@@ -229,24 +246,27 @@ pre, tt {
 }
 
 img.screenshot {
-    -webkit-box-shadow: 4px 4px 3px #cdcdcd;
-    -moz-box-shadow: 4px 4px 3px #cdcdcd;
 }
 
 tt.descname, tt.descclassname {
     font-size: 0.95em;
-    -webkit-box-shadow: none;
-    -moz-box-shadow: none;
 }
 
 tt.descname {
     padding-right: 0.08em;
 }
 
+img.screenshot {
+    -moz-box-shadow: 2px 2px 4px #eee;
+    -webkit-box-shadow: 2px 2px 4px #eee;
+    box-shadow: 2px 2px 4px #eee;
+}
+
 table.docutils {
     border: 1px solid #888;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+    -moz-box-shadow: 2px 2px 4px #eee;
+    -webkit-box-shadow: 2px 2px 4px #eee;
+    box-shadow: 2px 2px 4px #eee;
 }
 
 table.docutils td, table.docutils th {
@@ -256,15 +276,15 @@ table.docutils td, table.docutils th {
 
 table.field-list, table.footnote {
     border: none;
-    -webkit-box-shadow: none;
     -moz-box-shadow: none;
+    -webkit-box-shadow: none;
+    box-shadow: none;
 }
 
 table.footnote {
+    margin: 15px 0;
     width: 100%;
     border: 1px solid #eee;
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
 }
 
 table.field-list th {
@@ -279,23 +299,36 @@ table.footnote td {
     padding: 0.5em;
 }
 
+dl {
+    margin: 0;
+    padding: 0;
+}
+
+dl dd {
+    margin-left: 30px;
+}
+ 
 pre {
-    background: #FDFDFD;
-    padding: 10px;
-    color: #222;
+    background: #eee;
+    padding: 7px 30px;
+    margin: 15px -30px;
     line-height: 1.3em;
-    border: 1px solid #f9f9f9;
-    margin: 1.5em 3px 1.5em 0;
-    -webkit-box-shadow: 2px 2px 1px #d8d8d8;
-    -moz-box-shadow: 2px 2px 1px #d8d8d8;
+}
+
+dl pre {
+    margin-left: -60px;
+    padding-left: 60px;
+}
+
+dl dl pre {
+    margin-left: -90px;
+    padding-left: 90px;
 }
  
 tt {
     background-color: #ecf0f3;
     color: #222;
     /* padding: 1px 2px; */
-    -webkit-box-shadow: 1px 1px 1px #d8d8d8;
-    -moz-box-shadow: 1px 1px 1px #d8d8d8;
 }
 
 tt.xref, a tt {
@@ -305,11 +338,3 @@ tt.xref, a tt {
 a:hover tt {
     background: #EEE;
 }
-
-div.document + div.related {
-    background: #aaa;
-}
-
-div.document + div.related a {
-    color: white;
-}
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/index.rst,docs/index.rst,docs/index.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/index.rst b/docs/index.rst
index 1879070a..c0369fc3 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -3,7 +3,7 @@ Welcome to Flask
 
 .. image:: _static/logo-full.png
    :alt: The Flask Logo with Subtitle
-   :align: right
+   :class: floatingflask
 
 Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
@@ -38,7 +38,7 @@ web development.
    foreword
    installation
    quickstart
-   tutorial
+   tutorial/index
    testing
    patterns
    deploying
","diff --git a/docs/index.rst b/docs/index.rst
index 1879070a..c0369fc3 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -3,7 +3,7 @@ Welcome to Flask
 
 .. image:: _static/logo-full.png
    :alt: The Flask Logo with Subtitle
-   :align: right
+   :class: floatingflask
 
 Welcome to Flask's documentation.  This documentation is divided in
 different parts.  I would suggest to get started with the
@@ -38,7 +38,7 @@ web development.
    foreword
    installation
    quickstart
-   tutorial
+   tutorial/index
    testing
    patterns
    deploying
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/patterns.rst,docs/patterns.rst,docs/patterns.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/patterns.rst b/docs/patterns.rst
index f226b78d..b0c731e3 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -86,10 +86,11 @@ And this is what `views.py` would look like::
 
 .. admonition:: Circular Imports
 
-   Every Python programmer hates it, and yet we just did that: circular
-   imports (That's when two module depend on each one.  In this case
-   `views.py` depends on `__init__.py`).  Be advised that this is a bad
-   idea in general but here it is actually fine.  The reason for this is
+   Every Python programmer hates them, and yet we just added some:
+   circular imports (That's when two module depend on each one.  In this
+   case `views.py` depends on `__init__.py`).  Be advised that this is a
+   bad idea in general but here it is actually fine.  The reason for this
+   is
    that we are not actually using the views in `__init__.py` and just
    ensuring the module is imported and we are doing that at the bottom of
    the file.
","diff --git a/docs/patterns.rst b/docs/patterns.rst
index f226b78d..b0c731e3 100644
--- a/docs/patterns.rst
+++ b/docs/patterns.rst
@@ -86,10 +86,11 @@ And this is what `views.py` would look like::
 
 .. admonition:: Circular Imports
 
-   Every Python programmer hates it, and yet we just did that: circular
-   imports (That's when two module depend on each one.  In this case
-   `views.py` depends on `__init__.py`).  Be advised that this is a bad
-   idea in general but here it is actually fine.  The reason for this is
+   Every Python programmer hates them, and yet we just added some:
+   circular imports (That's when two module depend on each one.  In this
+   case `views.py` depends on `__init__.py`).  Be advised that this is a
+   bad idea in general but here it is actually fine.  The reason for this
+   is
    that we are not actually using the views in `__init__.py` and just
    ensuring the module is imported and we are doing that at the bottom of
    the file.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial.rst,docs/tutorial.rst,,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial.rst b/docs/tutorial.rst
deleted file mode 100644
index f642423f..00000000
--- a/docs/tutorial.rst
+++ /dev/null
@@ -1,484 +0,0 @@
-.. _tutorial:
-
-Tutorial
-========
-
-You want to develop an application with Python and Flask?  Here you have
-the chance to learn that by example.  In this tutorial we will create a
-simple microblog application.  It only supports one user that can create
-text-only entries and there are no feeds or comments, but it still
-features everything you need to get started.  We will use Flask and SQLite
-as database which comes out of the box with Python, so there is nothing
-else you need.
-
-If you want the full sourcecode in advance or for comparison, check out
-the `example source`_.
-
-.. _example source:
-   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
-
-Introducing Flaskr
-------------------
-
-We will call our blogging application flaskr here, feel free to chose a
-less web-2.0-ish name ;)  Basically we want it to do the following things:
-
-1. let the user sign in and out with credentials specified in the
-   configuration.  Only one user is supported.
-2. when the user is logged in he or she can add new entries to the page
-   consisting of a text-only title and some HTML for the text.  This HTML
-   is not sanitized because we trust the user here.
-3. the page shows all entries so far in reverse order (newest on top) and
-   the user can add new ones from there if logged in.
-
-We will be using SQlite3 directly for that application because it's good
-enough for an application of that size.  For larger applications however
-it makes a lot of sense to use `SQLAlchemy`_ that handles database
-connections in a more intelligent way, allows you to target different
-relational databases at once and more.  You might also want to consider
-one of the popular NoSQL databases if your data is more suited for those.
-
-Here a screenshot from the final application:
-
-.. image:: _static/flaskr.png
-   :align: center
-   :class: screenshot
-   :alt: screenshot of the final application
-
-.. _SQLAlchemy: http://www.sqlalchemy.org/
-
-Step 0: Creating The Folders
-----------------------------
-
-Before we get started, let's create the folders needed for this
-application::
-
-    /flaskr
-        /static
-        /templates
-
-The `flaskr` folder is not a python package, but just something where we
-drop our files.  Directly into this folder we will then put our database
-schema as well as main module in the following steps.  The files inside
-the `static` folder are available to users of the application via `HTTP`.
-This is the place where css and javascript files go.  Inside the
-`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
-templates there.
-
-.. _Jinja2: http://jinja.pocoo.org/2/
-
-Step 1: Database Schema
------------------------
-
-First we want to create the database schema.  For this application only a
-single table is needed and we only want to support SQLite so that is quite
-easy.  Just put the following contents into a file named `schema.sql` in
-the just created `flaskr` folder:
-
-.. sourcecode:: sql
-
-    drop table if exists entries;
-    create table entries (
-      id integer primary key autoincrement,
-      title string not null,
-      text string not null
-    );
-
-This schema consists of a single table called `entries` and each row in
-this table has an `id`, a `title` and a `text`.  The `id` is an
-automatically incrementing integer and a primary key, the other two are
-strings that must not be null.
-
-Step 2: Application Setup Code
-------------------------------
-
-Now that we have the schema in place we can create the application module.
-Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
-will add the imports we will need as well as the config section.  For
-small applications it's a possibility to drop the configuration directly
-into the module which we will be doing here.  However a cleaner solution
-would be to create a separate `.ini` or `.py` file and load that or import
-the values from there.
-
-::
-
-    # all the imports
-    import sqlite3
-    from flask import Flask, request, session, g, redirect, url_for, \
-         abort, render_template, flash
-
-    # configuration
-    DATABASE = '/tmp/flaskr.db'
-    DEBUG = True
-    SECRET_KEY = 'development key'
-    USERNAME = 'admin'
-    PASSWORD = 'default'
-
-Next we can create our actual application and initialize it with the
-config::
-
-    # create our little application :)
-    app = Flask(__name__)
-    app.secret_key = SECRET_KEY
-    app.debug = DEBUG
-
-The `secret_key` is needed to keep the client-side sessions secure.
-Choose that key wisely and as hard to guess and complex as possible.  The
-debug flag enables or disables the interactive debugger.  Never leave
-debug mode activated in a production system because it will allow users to
-executed code on the server!
-
-We also add a method to easily connect to the database specified.  That
-can be used to open a connection on request and also from the interactive
-Python shell or a script.  This will come in handy later
-
-::
-
-    def connect_db():
-        return sqlite3.connect(DATABASE)
-
-Finally we just add a line to the bottom of the file that fires up the
-server if we run that file as standalone application::
-
-    if __name__ == '__main__':
-        app.run()
-
-With that out of the way you should be able to start up the application
-without problems.  When you head over to the server you will get an 404
-page not found error because we don't have any views yet.  But we will
-focus on that a little later.  First we should get the database working.
-
-.. admonition:: Troubleshooting
-
-   If you notice later that the browser cannot connect to the server
-   during development, you might want to try this line instead::
-
-       app.run(host='127.0.0.1')
-
-   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
-   default and not every browser is happy with that.  This forces IPv4
-   usage.
-
-Step 3: Creating The Database
------------------------------
-
-Flaskr is a database powered application as outlined earlier, and more
-precisely, an application powered by a relational database system.  Such
-systems need a schema that tells them how to store that information. So
-before starting the server for the first time it's important to create
-that schema.
-
-Such a schema can be created by piping the `schema.sql` file into the
-`sqlite3` command as follows::
-
-    sqlite3 /tmp/flaskr.db < schema.sql
-
-The downside of this is that it requires the sqlite3 command to be
-installed which is not necessarily the case on every system.  Also one has
-to provide the path to the database there which leaves some place for
-errors.  It's a good idea to add a function that initializes the database
-for you to the application.
-
-If you want to do that, you first have to import the
-:func:`contextlib.closing` function from the contextlib package.  If you
-want to use Python 2.5 it's also necessary to enable the `with` statement
-first (`__future__` imports must be the very first import)::
-
-    from __future__ import with_statement
-    from contextlib import closing
-
-Next we can create a function called `init_db` that initializes the
-database.  For this we can use the `connect_db` function we defined
-earlier.  Just add that function below the `connect_db` function::
-    
-    def init_db():
-        with closing(connect_db()) as db:
-            with app.open_resource('schema.sql') as f:
-                db.cursor().executescript(f.read())
-            db.commit()
-
-The :func:`~contextlib.closing` helper function allows us to keep a
-connection open for the duration of the `with` block.  The
-:func:`~flask.Flask.open_resource` method of the application object
-supports that functionality out of the box, so it can be used in the
-`with` block directly.  This function opens a file from the resource
-location (your `flaskr` folder) and allows you to read from it.  We are
-using this here to execute a script on the database connection.
-
-When we connect to a database we get a connection object (here called
-`db`) that can give us a cursor.  On that cursor there is a method to
-execute a complete script.  Finally we only have to commit the changes.
-SQLite 3 and other transactional databases will not commit unless you
-explicitly tell it to.
-
-Now it is possible to create a database by starting up a Python shell and
-importing and calling that function::
-
->>> from flaskr import init_db
->>> init_db()
-
-Step 4: Request Database Connections
-------------------------------------
-
-Now we know how we can open database connections and use them for scripts,
-but how can we elegantly do that for requests?  We will need the database
-connection in all our functions so it makes sense to initialize them
-before each request and shut them down afterwards.
-
-Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
-:meth:`~flask.Flask.after_request` decorators::
-
-    @app.before_request
-    def before_request():
-        g.db = connect_db()
-
-    @app.after_request
-    def after_request(response):
-        g.db.close()
-        return response
-
-Functions marked with :meth:`~flask.Flask.before_request` are called before
-a request and passed no arguments, functions marked with
-:meth:`~flask.Flask.after_request` are called after a request and
-passed the response that will be sent to the client.  They have to return
-that response object or a different one.  In this case we just return it
-unchanged.
-
-We store our current database connection on the special :data:`~flask.g`
-object that flask provides for us.  This object stores information for one
-request only and is available from within each function.  Never store such
-things on other objects because this would not work with threaded
-environments.  That special :data:`~flask.g` object does some magic behind
-the scenes to ensure it does the right thing.
-
-Step 5: The View Functions
---------------------------
-
-Now that the database connections are working we can start writing the
-view functions.  We will need four of them:
-
-Show Entries
-````````````
-
-This view shows all the entries stored in the database.  It listens on the
-root of the application and will select title and text from the database.
-The one with the highest id (the newest entry) on top.  The rows returned
-from the cursor are tuples with the columns ordered like specified in the
-select statement.  This is good enough for small applications like here,
-but you might want to convert them into a dict.  If you are interested how
-to do that, check out the :ref:`easy-querying` example.
-
-The view function will pass the entries as dicts to the
-`show_entries.html` template and return the rendered one::
-
-    @app.route('/')
-    def show_entries():
-        cur = g.db.execute('select title, text from entries order by id desc')
-        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
-        return render_template('show_entries.html', entries=entries)
-
-Add New Entry
-`````````````
-
-This view lets the user add new entries if he's logged in.  This only
-responds to `POST` requests, the actual form is shown on the
-`show_entries` page.  If everything worked out well we will
-:func:`~flask.flash` an information message to the next request and
-redirect back to the `show_entries` page::
-
-    @app.route('/add', methods=['POST'])
-    def add_entry():
-        if not session.get('logged_in'):
-            abort(401)
-        g.db.execute('insert into entries (title, text) values (?, ?)',
-                     [request.form['title'], request.form['text']])
-        g.db.commit()
-        flash('New entry was successfully posted')
-        return redirect(url_for('show_entries'))
-
-Note that we check that the user is logged in here (the `logged_in` key is
-present in the session and `True`).
-
-Login and Logout
-````````````````
-
-These functions are used to sign the user in and out.  Login checks the
-username and password against the ones from the configuration and sets the
-`logged_in` key in the session.  If the user logged in successfully that
-key is set to `True` and the user is redirected back to the `show_entries`
-page.  In that case also a message is flashed that informs the user he or
-she was logged in successfully.  If an error occoured the template is
-notified about that and the user asked again::
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != USERNAME:
-                error = 'Invalid username'
-            elif request.form['password'] != PASSWORD:
-                error = 'Invalid password'
-            else:
-                session['logged_in'] = True
-                flash('You were logged in')
-                return redirect(url_for('show_entries'))
-        return render_template('login.html', error=error)
-
-The logout function on the other hand removes that key from the session
-again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
-of the dict and pass a second parameter to it (the default) the method
-will delete the key from the dictionary if present or do nothing when that
-key was not in there.  This is helpful because we don't have to check in
-that case if the user was logged in.
-
-::
-
-    @app.route('/logout')
-    def logout():
-        session.pop('logged_in', None)
-        flash('You were logged out')
-        return redirect(url_for('show_entries'))
-
-Step 6: The Templates
----------------------
-
-Now we should start working on the templates.  If we request the URLs now
-we would only get an exception that Flask cannot find the templates.  The
-templates are using `Jinja2`_ syntax and have autoescaping enabled by
-default.  This means that unless you mark a value in the code with
-:class:`~flask.Markup` or with the ``|safe`` filter in the template,
-Jinja2 will ensure that special characters such as ``<`` or ``>`` are
-escaped with their XML equivalents.
-
-We are also using template inheritance which makes it possible to reuse
-the layout of the website in all pages.
-
-Put the following templates into the `templates` folder:
-
-layout.html
-```````````
-
-This template contains the HTML skeleton, the header and a link to log in
-(or log out if the user was already logged in).  It also displays the
-flashed messages if there are any.  The ``{% block body %}`` block can be
-replaced by a block of the same name (``body``) in a child template.
-
-The :class:`~flask.session` dict is available in the template as well and
-you can use that to check if the user is logged in or not.  Note that in
-Jinja you can access missing attributes and items of objects / dicts which
-makes the following code work, even if there is no ``'logged_in'`` key in
-the session:
-
-.. sourcecode:: html+jinja
-
-    <!doctype html>
-    <title>Flaskr</title>
-    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
-    <div class=page>
-      <h1>Flaskr</h1>
-      <div class=metanav>
-      {% if not session.logged_in %}
-        <a href=""{{ url_for('login') }}"">log in</a>
-      {% else %}
-        <a href=""{{ url_for('logout') }}"">log out</a>
-      {% endif %}
-      </div>
-      {% for message in get_flashed_messages() %}
-        <div class=flash>{{ message }}</div>
-      {% endfor %}
-      {% block body %}{% endblock %}
-    </div>
-
-show_entries.html
-`````````````````
-
-This template extends the `layout.html` template from above to display the
-messages.  Note that the `for` loop iterates over the messages we passed
-in with the :func:`~flask.render_template` function.  We also tell the
-form to submit to your `add_entry` function and use `POST` as `HTTP`
-method:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block body %}
-      {% if session.logged_in %}
-        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
-          <dl>
-            <dt>Title:
-            <dd><input type=text size=30 name=title>
-            <dt>Text:
-            <dd><textarea name=text rows=5 cols=40></textarea>
-            <dd><input type=submit value=Share>
-          </dl>
-        </form>
-      {% endif %}
-      <ul class=entries>
-      {% for entry in entries %}
-        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
-      {% else %}
-        <li><em>Unbelievable.  No entries here so far</em>
-      {% endfor %}
-      </ul>
-    {% endblock %}
-
-login.html
-``````````
-
-Finally the login template which basically just displays a form to allow
-the user to login:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block body %}
-      <h2>Login</h2>
-      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
-      <form action=""{{ url_for('login') }}"" method=post>
-        <dl>
-          <dt>Username:
-          <dd><input type=text name=username>
-          <dt>Password:
-          <dd><input type=password name=password>
-          <dd><input type=submit value=Login>
-        </dl>
-      </form>
-    {% endblock %}
-
-Step 7: Adding Style
---------------------
-
-Now that everything else works, it's time to add some style to the
-application.  Just create a stylesheet called `style.css` in the `static`
-folder we created before:
-
-.. sourcecode:: css
-
-    body            { font-family: sans-serif; background: #eee; }
-    a, h1, h2       { color: #377BA8; }
-    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
-    h1              { border-bottom: 2px solid #eee; }
-    h2              { font-size: 1.2em; }
-    
-    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
-                      padding: 0.8em; background: white; }
-    .entries        { list-style: none; margin: 0; padding: 0; }
-    .entries li     { margin: 0.8em 1.2em; }
-    .entries li h2  { margin-left: -1em; }
-    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
-    .add-entry dl   { font-weight: bold; }
-    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
-                      margin-bottom: 1em; background: #fafafa; }
-    .flash          { background: #CEE5F5; padding: 0.5em;
-                      border: 1px solid #AACBE2; }
-    .error          { background: #F0D6D6; padding: 0.5em; }
-
-Bonus: Testing the Application
--------------------------------
-
-Now that you have finished the application and everything works as
-expected, it's probably not the best idea to add automated tests to
-simplify modifications in the future.  The application above is used as a
-basic example of how to perform unittesting in the :ref:`testing` section
-of the documentation.  Go there to see how easy it is to test Flask
-applications.
","diff --git a/docs/tutorial.rst b/docs/tutorial.rst
deleted file mode 100644
index f642423f..00000000
--- a/docs/tutorial.rst
+++ /dev/null
@@ -1,484 +0,0 @@
-.. _tutorial:
-
-Tutorial
-========
-
-You want to develop an application with Python and Flask?  Here you have
-the chance to learn that by example.  In this tutorial we will create a
-simple microblog application.  It only supports one user that can create
-text-only entries and there are no feeds or comments, but it still
-features everything you need to get started.  We will use Flask and SQLite
-as database which comes out of the box with Python, so there is nothing
-else you need.
-
-If you want the full sourcecode in advance or for comparison, check out
-the `example source`_.
-
-.. _example source:
-   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
-
-Introducing Flaskr
-------------------
-
-We will call our blogging application flaskr here, feel free to chose a
-less web-2.0-ish name ;)  Basically we want it to do the following things:
-
-1. let the user sign in and out with credentials specified in the
-   configuration.  Only one user is supported.
-2. when the user is logged in he or she can add new entries to the page
-   consisting of a text-only title and some HTML for the text.  This HTML
-   is not sanitized because we trust the user here.
-3. the page shows all entries so far in reverse order (newest on top) and
-   the user can add new ones from there if logged in.
-
-We will be using SQlite3 directly for that application because it's good
-enough for an application of that size.  For larger applications however
-it makes a lot of sense to use `SQLAlchemy`_ that handles database
-connections in a more intelligent way, allows you to target different
-relational databases at once and more.  You might also want to consider
-one of the popular NoSQL databases if your data is more suited for those.
-
-Here a screenshot from the final application:
-
-.. image:: _static/flaskr.png
-   :align: center
-   :class: screenshot
-   :alt: screenshot of the final application
-
-.. _SQLAlchemy: http://www.sqlalchemy.org/
-
-Step 0: Creating The Folders
-----------------------------
-
-Before we get started, let's create the folders needed for this
-application::
-
-    /flaskr
-        /static
-        /templates
-
-The `flaskr` folder is not a python package, but just something where we
-drop our files.  Directly into this folder we will then put our database
-schema as well as main module in the following steps.  The files inside
-the `static` folder are available to users of the application via `HTTP`.
-This is the place where css and javascript files go.  Inside the
-`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
-templates there.
-
-.. _Jinja2: http://jinja.pocoo.org/2/
-
-Step 1: Database Schema
------------------------
-
-First we want to create the database schema.  For this application only a
-single table is needed and we only want to support SQLite so that is quite
-easy.  Just put the following contents into a file named `schema.sql` in
-the just created `flaskr` folder:
-
-.. sourcecode:: sql
-
-    drop table if exists entries;
-    create table entries (
-      id integer primary key autoincrement,
-      title string not null,
-      text string not null
-    );
-
-This schema consists of a single table called `entries` and each row in
-this table has an `id`, a `title` and a `text`.  The `id` is an
-automatically incrementing integer and a primary key, the other two are
-strings that must not be null.
-
-Step 2: Application Setup Code
-------------------------------
-
-Now that we have the schema in place we can create the application module.
-Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
-will add the imports we will need as well as the config section.  For
-small applications it's a possibility to drop the configuration directly
-into the module which we will be doing here.  However a cleaner solution
-would be to create a separate `.ini` or `.py` file and load that or import
-the values from there.
-
-::
-
-    # all the imports
-    import sqlite3
-    from flask import Flask, request, session, g, redirect, url_for, \
-         abort, render_template, flash
-
-    # configuration
-    DATABASE = '/tmp/flaskr.db'
-    DEBUG = True
-    SECRET_KEY = 'development key'
-    USERNAME = 'admin'
-    PASSWORD = 'default'
-
-Next we can create our actual application and initialize it with the
-config::
-
-    # create our little application :)
-    app = Flask(__name__)
-    app.secret_key = SECRET_KEY
-    app.debug = DEBUG
-
-The `secret_key` is needed to keep the client-side sessions secure.
-Choose that key wisely and as hard to guess and complex as possible.  The
-debug flag enables or disables the interactive debugger.  Never leave
-debug mode activated in a production system because it will allow users to
-executed code on the server!
-
-We also add a method to easily connect to the database specified.  That
-can be used to open a connection on request and also from the interactive
-Python shell or a script.  This will come in handy later
-
-::
-
-    def connect_db():
-        return sqlite3.connect(DATABASE)
-
-Finally we just add a line to the bottom of the file that fires up the
-server if we run that file as standalone application::
-
-    if __name__ == '__main__':
-        app.run()
-
-With that out of the way you should be able to start up the application
-without problems.  When you head over to the server you will get an 404
-page not found error because we don't have any views yet.  But we will
-focus on that a little later.  First we should get the database working.
-
-.. admonition:: Troubleshooting
-
-   If you notice later that the browser cannot connect to the server
-   during development, you might want to try this line instead::
-
-       app.run(host='127.0.0.1')
-
-   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
-   default and not every browser is happy with that.  This forces IPv4
-   usage.
-
-Step 3: Creating The Database
------------------------------
-
-Flaskr is a database powered application as outlined earlier, and more
-precisely, an application powered by a relational database system.  Such
-systems need a schema that tells them how to store that information. So
-before starting the server for the first time it's important to create
-that schema.
-
-Such a schema can be created by piping the `schema.sql` file into the
-`sqlite3` command as follows::
-
-    sqlite3 /tmp/flaskr.db < schema.sql
-
-The downside of this is that it requires the sqlite3 command to be
-installed which is not necessarily the case on every system.  Also one has
-to provide the path to the database there which leaves some place for
-errors.  It's a good idea to add a function that initializes the database
-for you to the application.
-
-If you want to do that, you first have to import the
-:func:`contextlib.closing` function from the contextlib package.  If you
-want to use Python 2.5 it's also necessary to enable the `with` statement
-first (`__future__` imports must be the very first import)::
-
-    from __future__ import with_statement
-    from contextlib import closing
-
-Next we can create a function called `init_db` that initializes the
-database.  For this we can use the `connect_db` function we defined
-earlier.  Just add that function below the `connect_db` function::
-    
-    def init_db():
-        with closing(connect_db()) as db:
-            with app.open_resource('schema.sql') as f:
-                db.cursor().executescript(f.read())
-            db.commit()
-
-The :func:`~contextlib.closing` helper function allows us to keep a
-connection open for the duration of the `with` block.  The
-:func:`~flask.Flask.open_resource` method of the application object
-supports that functionality out of the box, so it can be used in the
-`with` block directly.  This function opens a file from the resource
-location (your `flaskr` folder) and allows you to read from it.  We are
-using this here to execute a script on the database connection.
-
-When we connect to a database we get a connection object (here called
-`db`) that can give us a cursor.  On that cursor there is a method to
-execute a complete script.  Finally we only have to commit the changes.
-SQLite 3 and other transactional databases will not commit unless you
-explicitly tell it to.
-
-Now it is possible to create a database by starting up a Python shell and
-importing and calling that function::
-
->>> from flaskr import init_db
->>> init_db()
-
-Step 4: Request Database Connections
-------------------------------------
-
-Now we know how we can open database connections and use them for scripts,
-but how can we elegantly do that for requests?  We will need the database
-connection in all our functions so it makes sense to initialize them
-before each request and shut them down afterwards.
-
-Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
-:meth:`~flask.Flask.after_request` decorators::
-
-    @app.before_request
-    def before_request():
-        g.db = connect_db()
-
-    @app.after_request
-    def after_request(response):
-        g.db.close()
-        return response
-
-Functions marked with :meth:`~flask.Flask.before_request` are called before
-a request and passed no arguments, functions marked with
-:meth:`~flask.Flask.after_request` are called after a request and
-passed the response that will be sent to the client.  They have to return
-that response object or a different one.  In this case we just return it
-unchanged.
-
-We store our current database connection on the special :data:`~flask.g`
-object that flask provides for us.  This object stores information for one
-request only and is available from within each function.  Never store such
-things on other objects because this would not work with threaded
-environments.  That special :data:`~flask.g` object does some magic behind
-the scenes to ensure it does the right thing.
-
-Step 5: The View Functions
---------------------------
-
-Now that the database connections are working we can start writing the
-view functions.  We will need four of them:
-
-Show Entries
-````````````
-
-This view shows all the entries stored in the database.  It listens on the
-root of the application and will select title and text from the database.
-The one with the highest id (the newest entry) on top.  The rows returned
-from the cursor are tuples with the columns ordered like specified in the
-select statement.  This is good enough for small applications like here,
-but you might want to convert them into a dict.  If you are interested how
-to do that, check out the :ref:`easy-querying` example.
-
-The view function will pass the entries as dicts to the
-`show_entries.html` template and return the rendered one::
-
-    @app.route('/')
-    def show_entries():
-        cur = g.db.execute('select title, text from entries order by id desc')
-        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
-        return render_template('show_entries.html', entries=entries)
-
-Add New Entry
-`````````````
-
-This view lets the user add new entries if he's logged in.  This only
-responds to `POST` requests, the actual form is shown on the
-`show_entries` page.  If everything worked out well we will
-:func:`~flask.flash` an information message to the next request and
-redirect back to the `show_entries` page::
-
-    @app.route('/add', methods=['POST'])
-    def add_entry():
-        if not session.get('logged_in'):
-            abort(401)
-        g.db.execute('insert into entries (title, text) values (?, ?)',
-                     [request.form['title'], request.form['text']])
-        g.db.commit()
-        flash('New entry was successfully posted')
-        return redirect(url_for('show_entries'))
-
-Note that we check that the user is logged in here (the `logged_in` key is
-present in the session and `True`).
-
-Login and Logout
-````````````````
-
-These functions are used to sign the user in and out.  Login checks the
-username and password against the ones from the configuration and sets the
-`logged_in` key in the session.  If the user logged in successfully that
-key is set to `True` and the user is redirected back to the `show_entries`
-page.  In that case also a message is flashed that informs the user he or
-she was logged in successfully.  If an error occoured the template is
-notified about that and the user asked again::
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != USERNAME:
-                error = 'Invalid username'
-            elif request.form['password'] != PASSWORD:
-                error = 'Invalid password'
-            else:
-                session['logged_in'] = True
-                flash('You were logged in')
-                return redirect(url_for('show_entries'))
-        return render_template('login.html', error=error)
-
-The logout function on the other hand removes that key from the session
-again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
-of the dict and pass a second parameter to it (the default) the method
-will delete the key from the dictionary if present or do nothing when that
-key was not in there.  This is helpful because we don't have to check in
-that case if the user was logged in.
-
-::
-
-    @app.route('/logout')
-    def logout():
-        session.pop('logged_in', None)
-        flash('You were logged out')
-        return redirect(url_for('show_entries'))
-
-Step 6: The Templates
----------------------
-
-Now we should start working on the templates.  If we request the URLs now
-we would only get an exception that Flask cannot find the templates.  The
-templates are using `Jinja2`_ syntax and have autoescaping enabled by
-default.  This means that unless you mark a value in the code with
-:class:`~flask.Markup` or with the ``|safe`` filter in the template,
-Jinja2 will ensure that special characters such as ``<`` or ``>`` are
-escaped with their XML equivalents.
-
-We are also using template inheritance which makes it possible to reuse
-the layout of the website in all pages.
-
-Put the following templates into the `templates` folder:
-
-layout.html
-```````````
-
-This template contains the HTML skeleton, the header and a link to log in
-(or log out if the user was already logged in).  It also displays the
-flashed messages if there are any.  The ``{% block body %}`` block can be
-replaced by a block of the same name (``body``) in a child template.
-
-The :class:`~flask.session` dict is available in the template as well and
-you can use that to check if the user is logged in or not.  Note that in
-Jinja you can access missing attributes and items of objects / dicts which
-makes the following code work, even if there is no ``'logged_in'`` key in
-the session:
-
-.. sourcecode:: html+jinja
-
-    <!doctype html>
-    <title>Flaskr</title>
-    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
-    <div class=page>
-      <h1>Flaskr</h1>
-      <div class=metanav>
-      {% if not session.logged_in %}
-        <a href=""{{ url_for('login') }}"">log in</a>
-      {% else %}
-        <a href=""{{ url_for('logout') }}"">log out</a>
-      {% endif %}
-      </div>
-      {% for message in get_flashed_messages() %}
-        <div class=flash>{{ message }}</div>
-      {% endfor %}
-      {% block body %}{% endblock %}
-    </div>
-
-show_entries.html
-`````````````````
-
-This template extends the `layout.html` template from above to display the
-messages.  Note that the `for` loop iterates over the messages we passed
-in with the :func:`~flask.render_template` function.  We also tell the
-form to submit to your `add_entry` function and use `POST` as `HTTP`
-method:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block body %}
-      {% if session.logged_in %}
-        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
-          <dl>
-            <dt>Title:
-            <dd><input type=text size=30 name=title>
-            <dt>Text:
-            <dd><textarea name=text rows=5 cols=40></textarea>
-            <dd><input type=submit value=Share>
-          </dl>
-        </form>
-      {% endif %}
-      <ul class=entries>
-      {% for entry in entries %}
-        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
-      {% else %}
-        <li><em>Unbelievable.  No entries here so far</em>
-      {% endfor %}
-      </ul>
-    {% endblock %}
-
-login.html
-``````````
-
-Finally the login template which basically just displays a form to allow
-the user to login:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block body %}
-      <h2>Login</h2>
-      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
-      <form action=""{{ url_for('login') }}"" method=post>
-        <dl>
-          <dt>Username:
-          <dd><input type=text name=username>
-          <dt>Password:
-          <dd><input type=password name=password>
-          <dd><input type=submit value=Login>
-        </dl>
-      </form>
-    {% endblock %}
-
-Step 7: Adding Style
---------------------
-
-Now that everything else works, it's time to add some style to the
-application.  Just create a stylesheet called `style.css` in the `static`
-folder we created before:
-
-.. sourcecode:: css
-
-    body            { font-family: sans-serif; background: #eee; }
-    a, h1, h2       { color: #377BA8; }
-    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
-    h1              { border-bottom: 2px solid #eee; }
-    h2              { font-size: 1.2em; }
-    
-    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
-                      padding: 0.8em; background: white; }
-    .entries        { list-style: none; margin: 0; padding: 0; }
-    .entries li     { margin: 0.8em 1.2em; }
-    .entries li h2  { margin-left: -1em; }
-    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
-    .add-entry dl   { font-weight: bold; }
-    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
-                      margin-bottom: 1em; background: #fafafa; }
-    .flash          { background: #CEE5F5; padding: 0.5em;
-                      border: 1px solid #AACBE2; }
-    .error          { background: #F0D6D6; padding: 0.5em; }
-
-Bonus: Testing the Application
--------------------------------
-
-Now that you have finished the application and everything works as
-expected, it's probably not the best idea to add automated tests to
-simplify modifications in the future.  The application above is used as a
-basic example of how to perform unittesting in the :ref:`testing` section
-of the documentation.  Go there to see how easy it is to test Flask
-applications.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/css.rst,,docs/tutorial/css.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/css.rst b/docs/tutorial/css.rst
new file mode 100644
index 00000000..c2a6ba5b
--- /dev/null
+++ b/docs/tutorial/css.rst
@@ -0,0 +1,27 @@
+Step 7: Adding Style
+====================
+
+Now that everything else works, it's time to add some style to the
+application.  Just create a stylesheet called `style.css` in the `static`
+folder we created before:
+
+.. sourcecode:: css
+
+    body            { font-family: sans-serif; background: #eee; }
+    a, h1, h2       { color: #377BA8; }
+    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
+    h1              { border-bottom: 2px solid #eee; }
+    h2              { font-size: 1.2em; }
+    
+    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+                      padding: 0.8em; background: white; }
+    .entries        { list-style: none; margin: 0; padding: 0; }
+    .entries li     { margin: 0.8em 1.2em; }
+    .entries li h2  { margin-left: -1em; }
+    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+    .add-entry dl   { font-weight: bold; }
+    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                      margin-bottom: 1em; background: #fafafa; }
+    .flash          { background: #CEE5F5; padding: 0.5em;
+                      border: 1px solid #AACBE2; }
+    .error          { background: #F0D6D6; padding: 0.5em; }
","diff --git a/docs/tutorial/css.rst b/docs/tutorial/css.rst
new file mode 100644
index 00000000..c2a6ba5b
--- /dev/null
+++ b/docs/tutorial/css.rst
@@ -0,0 +1,27 @@
+Step 7: Adding Style
+====================
+
+Now that everything else works, it's time to add some style to the
+application.  Just create a stylesheet called `style.css` in the `static`
+folder we created before:
+
+.. sourcecode:: css
+
+    body            { font-family: sans-serif; background: #eee; }
+    a, h1, h2       { color: #377BA8; }
+    h1, h2          { font-family: 'Georgia', serif; margin: 0; }
+    h1              { border-bottom: 2px solid #eee; }
+    h2              { font-size: 1.2em; }
+    
+    .page           { margin: 2em auto; width: 35em; border: 5px solid #ccc;
+                      padding: 0.8em; background: white; }
+    .entries        { list-style: none; margin: 0; padding: 0; }
+    .entries li     { margin: 0.8em 1.2em; }
+    .entries li h2  { margin-left: -1em; }
+    .add-entry      { font-size: 0.9em; border-bottom: 1px solid #ccc; }
+    .add-entry dl   { font-weight: bold; }
+    .metanav        { text-align: right; font-size: 0.8em; padding: 0.3em;
+                      margin-bottom: 1em; background: #fafafa; }
+    .flash          { background: #CEE5F5; padding: 0.5em;
+                      border: 1px solid #AACBE2; }
+    .error          { background: #F0D6D6; padding: 0.5em; }
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/dbcon.rst,,docs/tutorial/dbcon.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/dbcon.rst b/docs/tutorial/dbcon.rst
new file mode 100644
index 00000000..9741dabb
--- /dev/null
+++ b/docs/tutorial/dbcon.rst
@@ -0,0 +1,33 @@
+Step 4: Request Database Connections
+------------------------------------
+
+Now we know how we can open database connections and use them for scripts,
+but how can we elegantly do that for requests?  We will need the database
+connection in all our functions so it makes sense to initialize them
+before each request and shut them down afterwards.
+
+Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators::
+
+    @app.before_request
+    def before_request():
+        g.db = connect_db()
+
+    @app.after_request
+    def after_request(response):
+        g.db.close()
+        return response
+
+Functions marked with :meth:`~flask.Flask.before_request` are called before
+a request and passed no arguments, functions marked with
+:meth:`~flask.Flask.after_request` are called after a request and
+passed the response that will be sent to the client.  They have to return
+that response object or a different one.  In this case we just return it
+unchanged.
+
+We store our current database connection on the special :data:`~flask.g`
+object that flask provides for us.  This object stores information for one
+request only and is available from within each function.  Never store such
+things on other objects because this would not work with threaded
+environments.  That special :data:`~flask.g` object does some magic behind
+the scenes to ensure it does the right thing.
","diff --git a/docs/tutorial/dbcon.rst b/docs/tutorial/dbcon.rst
new file mode 100644
index 00000000..9741dabb
--- /dev/null
+++ b/docs/tutorial/dbcon.rst
@@ -0,0 +1,33 @@
+Step 4: Request Database Connections
+------------------------------------
+
+Now we know how we can open database connections and use them for scripts,
+but how can we elegantly do that for requests?  We will need the database
+connection in all our functions so it makes sense to initialize them
+before each request and shut them down afterwards.
+
+Flask allows us to do that with the :meth:`~flask.Flask.before_request` and
+:meth:`~flask.Flask.after_request` decorators::
+
+    @app.before_request
+    def before_request():
+        g.db = connect_db()
+
+    @app.after_request
+    def after_request(response):
+        g.db.close()
+        return response
+
+Functions marked with :meth:`~flask.Flask.before_request` are called before
+a request and passed no arguments, functions marked with
+:meth:`~flask.Flask.after_request` are called after a request and
+passed the response that will be sent to the client.  They have to return
+that response object or a different one.  In this case we just return it
+unchanged.
+
+We store our current database connection on the special :data:`~flask.g`
+object that flask provides for us.  This object stores information for one
+request only and is available from within each function.  Never store such
+things on other objects because this would not work with threaded
+environments.  That special :data:`~flask.g` object does some magic behind
+the scenes to ensure it does the right thing.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/dbinit.rst,,docs/tutorial/dbinit.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
new file mode 100644
index 00000000..80341d63
--- /dev/null
+++ b/docs/tutorial/dbinit.rst
@@ -0,0 +1,57 @@
+Step 3: Creating The Database
+=============================
+
+Flaskr is a database powered application as outlined earlier, and more
+precisely, an application powered by a relational database system.  Such
+systems need a schema that tells them how to store that information. So
+before starting the server for the first time it's important to create
+that schema.
+
+Such a schema can be created by piping the `schema.sql` file into the
+`sqlite3` command as follows::
+
+    sqlite3 /tmp/flaskr.db < schema.sql
+
+The downside of this is that it requires the sqlite3 command to be
+installed which is not necessarily the case on every system.  Also one has
+to provide the path to the database there which leaves some place for
+errors.  It's a good idea to add a function that initializes the database
+for you to the application.
+
+If you want to do that, you first have to import the
+:func:`contextlib.closing` function from the contextlib package.  If you
+want to use Python 2.5 it's also necessary to enable the `with` statement
+first (`__future__` imports must be the very first import)::
+
+    from __future__ import with_statement
+    from contextlib import closing
+
+Next we can create a function called `init_db` that initializes the
+database.  For this we can use the `connect_db` function we defined
+earlier.  Just add that function below the `connect_db` function::
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+The :func:`~contextlib.closing` helper function allows us to keep a
+connection open for the duration of the `with` block.  The
+:func:`~flask.Flask.open_resource` method of the application object
+supports that functionality out of the box, so it can be used in the
+`with` block directly.  This function opens a file from the resource
+location (your `flaskr` folder) and allows you to read from it.  We are
+using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes.
+SQLite 3 and other transactional databases will not commit unless you
+explicitly tell it to.
+
+Now it is possible to create a database by starting up a Python shell and
+importing and calling that function::
+
+>>> from flaskr import init_db
+>>> init_db()
","diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
new file mode 100644
index 00000000..80341d63
--- /dev/null
+++ b/docs/tutorial/dbinit.rst
@@ -0,0 +1,57 @@
+Step 3: Creating The Database
+=============================
+
+Flaskr is a database powered application as outlined earlier, and more
+precisely, an application powered by a relational database system.  Such
+systems need a schema that tells them how to store that information. So
+before starting the server for the first time it's important to create
+that schema.
+
+Such a schema can be created by piping the `schema.sql` file into the
+`sqlite3` command as follows::
+
+    sqlite3 /tmp/flaskr.db < schema.sql
+
+The downside of this is that it requires the sqlite3 command to be
+installed which is not necessarily the case on every system.  Also one has
+to provide the path to the database there which leaves some place for
+errors.  It's a good idea to add a function that initializes the database
+for you to the application.
+
+If you want to do that, you first have to import the
+:func:`contextlib.closing` function from the contextlib package.  If you
+want to use Python 2.5 it's also necessary to enable the `with` statement
+first (`__future__` imports must be the very first import)::
+
+    from __future__ import with_statement
+    from contextlib import closing
+
+Next we can create a function called `init_db` that initializes the
+database.  For this we can use the `connect_db` function we defined
+earlier.  Just add that function below the `connect_db` function::
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+The :func:`~contextlib.closing` helper function allows us to keep a
+connection open for the duration of the `with` block.  The
+:func:`~flask.Flask.open_resource` method of the application object
+supports that functionality out of the box, so it can be used in the
+`with` block directly.  This function opens a file from the resource
+location (your `flaskr` folder) and allows you to read from it.  We are
+using this here to execute a script on the database connection.
+
+When we connect to a database we get a connection object (here called
+`db`) that can give us a cursor.  On that cursor there is a method to
+execute a complete script.  Finally we only have to commit the changes.
+SQLite 3 and other transactional databases will not commit unless you
+explicitly tell it to.
+
+Now it is possible to create a database by starting up a Python shell and
+importing and calling that function::
+
+>>> from flaskr import init_db
+>>> init_db()
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/folders.rst,,docs/tutorial/folders.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/folders.rst b/docs/tutorial/folders.rst
new file mode 100644
index 00000000..80697a94
--- /dev/null
+++ b/docs/tutorial/folders.rst
@@ -0,0 +1,19 @@
+Step 0: Creating The Folders
+============================
+
+Before we get started, let's create the folders needed for this
+application::
+
+    /flaskr
+        /static
+        /templates
+
+The `flaskr` folder is not a python package, but just something where we
+drop our files.  Directly into this folder we will then put our database
+schema as well as main module in the following steps.  The files inside
+the `static` folder are available to users of the application via `HTTP`.
+This is the place where css and javascript files go.  Inside the
+`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
+templates there.
+
+.. _Jinja2: http://jinja.pocoo.org/2/
","diff --git a/docs/tutorial/folders.rst b/docs/tutorial/folders.rst
new file mode 100644
index 00000000..80697a94
--- /dev/null
+++ b/docs/tutorial/folders.rst
@@ -0,0 +1,19 @@
+Step 0: Creating The Folders
+============================
+
+Before we get started, let's create the folders needed for this
+application::
+
+    /flaskr
+        /static
+        /templates
+
+The `flaskr` folder is not a python package, but just something where we
+drop our files.  Directly into this folder we will then put our database
+schema as well as main module in the following steps.  The files inside
+the `static` folder are available to users of the application via `HTTP`.
+This is the place where css and javascript files go.  Inside the
+`templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
+templates there.
+
+.. _Jinja2: http://jinja.pocoo.org/2/
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/index.rst,,docs/tutorial/index.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/index.rst b/docs/tutorial/index.rst
new file mode 100644
index 00000000..da37cf7a
--- /dev/null
+++ b/docs/tutorial/index.rst
@@ -0,0 +1,32 @@
+.. _tutorial:
+
+Tutorial
+========
+
+You want to develop an application with Python and Flask?  Here you have
+the chance to learn that by example.  In this tutorial we will create a
+simple microblog application.  It only supports one user that can create
+text-only entries and there are no feeds or comments, but it still
+features everything you need to get started.  We will use Flask and SQLite
+as database which comes out of the box with Python, so there is nothing
+else you need.
+
+If you want the full sourcecode in advance or for comparison, check out
+the `example source`_.
+
+.. _example source:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
+
+.. toctree::
+   :maxdepth: 2
+
+   introduction
+   folders
+   schema
+   setup
+   dbcon
+   dbinit
+   views
+   templates
+   css
+   testing
","diff --git a/docs/tutorial/index.rst b/docs/tutorial/index.rst
new file mode 100644
index 00000000..da37cf7a
--- /dev/null
+++ b/docs/tutorial/index.rst
@@ -0,0 +1,32 @@
+.. _tutorial:
+
+Tutorial
+========
+
+You want to develop an application with Python and Flask?  Here you have
+the chance to learn that by example.  In this tutorial we will create a
+simple microblog application.  It only supports one user that can create
+text-only entries and there are no feeds or comments, but it still
+features everything you need to get started.  We will use Flask and SQLite
+as database which comes out of the box with Python, so there is nothing
+else you need.
+
+If you want the full sourcecode in advance or for comparison, check out
+the `example source`_.
+
+.. _example source:
+   http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/
+
+.. toctree::
+   :maxdepth: 2
+
+   introduction
+   folders
+   schema
+   setup
+   dbcon
+   dbinit
+   views
+   templates
+   css
+   testing
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/introduction.rst,,docs/tutorial/introduction.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/introduction.rst b/docs/tutorial/introduction.rst
new file mode 100644
index 00000000..04396a9d
--- /dev/null
+++ b/docs/tutorial/introduction.rst
@@ -0,0 +1,29 @@
+Introducing Flaskr
+==================
+
+We will call our blogging application flaskr here, feel free to chose a
+less web-2.0-ish name ;)  Basically we want it to do the following things:
+
+1. let the user sign in and out with credentials specified in the
+   configuration.  Only one user is supported.
+2. when the user is logged in he or she can add new entries to the page
+   consisting of a text-only title and some HTML for the text.  This HTML
+   is not sanitized because we trust the user here.
+3. the page shows all entries so far in reverse order (newest on top) and
+   the user can add new ones from there if logged in.
+
+We will be using SQlite3 directly for that application because it's good
+enough for an application of that size.  For larger applications however
+it makes a lot of sense to use `SQLAlchemy`_ that handles database
+connections in a more intelligent way, allows you to target different
+relational databases at once and more.  You might also want to consider
+one of the popular NoSQL databases if your data is more suited for those.
+
+Here a screenshot from the final application:
+
+.. image:: ../_static/flaskr.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of the final application
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
","diff --git a/docs/tutorial/introduction.rst b/docs/tutorial/introduction.rst
new file mode 100644
index 00000000..04396a9d
--- /dev/null
+++ b/docs/tutorial/introduction.rst
@@ -0,0 +1,29 @@
+Introducing Flaskr
+==================
+
+We will call our blogging application flaskr here, feel free to chose a
+less web-2.0-ish name ;)  Basically we want it to do the following things:
+
+1. let the user sign in and out with credentials specified in the
+   configuration.  Only one user is supported.
+2. when the user is logged in he or she can add new entries to the page
+   consisting of a text-only title and some HTML for the text.  This HTML
+   is not sanitized because we trust the user here.
+3. the page shows all entries so far in reverse order (newest on top) and
+   the user can add new ones from there if logged in.
+
+We will be using SQlite3 directly for that application because it's good
+enough for an application of that size.  For larger applications however
+it makes a lot of sense to use `SQLAlchemy`_ that handles database
+connections in a more intelligent way, allows you to target different
+relational databases at once and more.  You might also want to consider
+one of the popular NoSQL databases if your data is more suited for those.
+
+Here a screenshot from the final application:
+
+.. image:: ../_static/flaskr.png
+   :align: center
+   :class: screenshot
+   :alt: screenshot of the final application
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/schema.rst,,docs/tutorial/schema.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/schema.rst b/docs/tutorial/schema.rst
new file mode 100644
index 00000000..ed329539
--- /dev/null
+++ b/docs/tutorial/schema.rst
@@ -0,0 +1,21 @@
+Step 1: Database Schema
+=======================
+
+First we want to create the database schema.  For this application only a
+single table is needed and we only want to support SQLite so that is quite
+easy.  Just put the following contents into a file named `schema.sql` in
+the just created `flaskr` folder:
+
+.. sourcecode:: sql
+
+    drop table if exists entries;
+    create table entries (
+      id integer primary key autoincrement,
+      title string not null,
+      text string not null
+    );
+
+This schema consists of a single table called `entries` and each row in
+this table has an `id`, a `title` and a `text`.  The `id` is an
+automatically incrementing integer and a primary key, the other two are
+strings that must not be null.
","diff --git a/docs/tutorial/schema.rst b/docs/tutorial/schema.rst
new file mode 100644
index 00000000..ed329539
--- /dev/null
+++ b/docs/tutorial/schema.rst
@@ -0,0 +1,21 @@
+Step 1: Database Schema
+=======================
+
+First we want to create the database schema.  For this application only a
+single table is needed and we only want to support SQLite so that is quite
+easy.  Just put the following contents into a file named `schema.sql` in
+the just created `flaskr` folder:
+
+.. sourcecode:: sql
+
+    drop table if exists entries;
+    create table entries (
+      id integer primary key autoincrement,
+      title string not null,
+      text string not null
+    );
+
+This schema consists of a single table called `entries` and each row in
+this table has an `id`, a `title` and a `text`.  The `id` is an
+automatically incrementing integer and a primary key, the other two are
+strings that must not be null.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/setup.rst,,docs/tutorial/setup.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
new file mode 100644
index 00000000..24b76561
--- /dev/null
+++ b/docs/tutorial/setup.rst
@@ -0,0 +1,69 @@
+Step 2: Application Setup Code
+==============================
+
+Now that we have the schema in place we can create the application module.
+Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
+will add the imports we will need as well as the config section.  For
+small applications it's a possibility to drop the configuration directly
+into the module which we will be doing here.  However a cleaner solution
+would be to create a separate `.ini` or `.py` file and load that or import
+the values from there.
+
+::
+
+    # all the imports
+    import sqlite3
+    from flask import Flask, request, session, g, redirect, url_for, \
+         abort, render_template, flash
+
+    # configuration
+    DATABASE = '/tmp/flaskr.db'
+    DEBUG = True
+    SECRET_KEY = 'development key'
+    USERNAME = 'admin'
+    PASSWORD = 'default'
+
+Next we can create our actual application and initialize it with the
+config::
+
+    # create our little application :)
+    app = Flask(__name__)
+    app.secret_key = SECRET_KEY
+    app.debug = DEBUG
+
+The `secret_key` is needed to keep the client-side sessions secure.
+Choose that key wisely and as hard to guess and complex as possible.  The
+debug flag enables or disables the interactive debugger.  Never leave
+debug mode activated in a production system because it will allow users to
+executed code on the server!
+
+We also add a method to easily connect to the database specified.  That
+can be used to open a connection on request and also from the interactive
+Python shell or a script.  This will come in handy later
+
+::
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+Finally we just add a line to the bottom of the file that fires up the
+server if we run that file as standalone application::
+
+    if __name__ == '__main__':
+        app.run()
+
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
+.. admonition:: Troubleshooting
+
+   If you notice later that the browser cannot connect to the server
+   during development, you might want to try this line instead::
+
+       app.run(host='127.0.0.1')
+
+   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
+   default and not every browser is happy with that.  This forces IPv4
+   usage.
","diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
new file mode 100644
index 00000000..24b76561
--- /dev/null
+++ b/docs/tutorial/setup.rst
@@ -0,0 +1,69 @@
+Step 2: Application Setup Code
+==============================
+
+Now that we have the schema in place we can create the application module.
+Let's call it `flaskr.py` inside the `flaskr` folder.  For starters we
+will add the imports we will need as well as the config section.  For
+small applications it's a possibility to drop the configuration directly
+into the module which we will be doing here.  However a cleaner solution
+would be to create a separate `.ini` or `.py` file and load that or import
+the values from there.
+
+::
+
+    # all the imports
+    import sqlite3
+    from flask import Flask, request, session, g, redirect, url_for, \
+         abort, render_template, flash
+
+    # configuration
+    DATABASE = '/tmp/flaskr.db'
+    DEBUG = True
+    SECRET_KEY = 'development key'
+    USERNAME = 'admin'
+    PASSWORD = 'default'
+
+Next we can create our actual application and initialize it with the
+config::
+
+    # create our little application :)
+    app = Flask(__name__)
+    app.secret_key = SECRET_KEY
+    app.debug = DEBUG
+
+The `secret_key` is needed to keep the client-side sessions secure.
+Choose that key wisely and as hard to guess and complex as possible.  The
+debug flag enables or disables the interactive debugger.  Never leave
+debug mode activated in a production system because it will allow users to
+executed code on the server!
+
+We also add a method to easily connect to the database specified.  That
+can be used to open a connection on request and also from the interactive
+Python shell or a script.  This will come in handy later
+
+::
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+Finally we just add a line to the bottom of the file that fires up the
+server if we run that file as standalone application::
+
+    if __name__ == '__main__':
+        app.run()
+
+With that out of the way you should be able to start up the application
+without problems.  When you head over to the server you will get an 404
+page not found error because we don't have any views yet.  But we will
+focus on that a little later.  First we should get the database working.
+
+.. admonition:: Troubleshooting
+
+   If you notice later that the browser cannot connect to the server
+   during development, you might want to try this line instead::
+
+       app.run(host='127.0.0.1')
+
+   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
+   default and not every browser is happy with that.  This forces IPv4
+   usage.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/templates.rst,,docs/tutorial/templates.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/templates.rst b/docs/tutorial/templates.rst
new file mode 100644
index 00000000..66b1dec6
--- /dev/null
+++ b/docs/tutorial/templates.rst
@@ -0,0 +1,107 @@
+Step 6: The Templates
+=====================
+
+Now we should start working on the templates.  If we request the URLs now
+we would only get an exception that Flask cannot find the templates.  The
+templates are using `Jinja2`_ syntax and have autoescaping enabled by
+default.  This means that unless you mark a value in the code with
+:class:`~flask.Markup` or with the ``|safe`` filter in the template,
+Jinja2 will ensure that special characters such as ``<`` or ``>`` are
+escaped with their XML equivalents.
+
+We are also using template inheritance which makes it possible to reuse
+the layout of the website in all pages.
+
+Put the following templates into the `templates` folder:
+
+.. _Jinja2: http://jinja.pocoo.org/2/documentation/templates
+
+layout.html
+-----------
+
+This template contains the HTML skeleton, the header and a link to log in
+(or log out if the user was already logged in).  It also displays the
+flashed messages if there are any.  The ``{% block body %}`` block can be
+replaced by a block of the same name (``body``) in a child template.
+
+The :class:`~flask.session` dict is available in the template as well and
+you can use that to check if the user is logged in or not.  Note that in
+Jinja you can access missing attributes and items of objects / dicts which
+makes the following code work, even if there is no ``'logged_in'`` key in
+the session:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Flaskr</title>
+    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+    <div class=page>
+      <h1>Flaskr</h1>
+      <div class=metanav>
+      {% if not session.logged_in %}
+        <a href=""{{ url_for('login') }}"">log in</a>
+      {% else %}
+        <a href=""{{ url_for('logout') }}"">log out</a>
+      {% endif %}
+      </div>
+      {% for message in get_flashed_messages() %}
+        <div class=flash>{{ message }}</div>
+      {% endfor %}
+      {% block body %}{% endblock %}
+    </div>
+
+show_entries.html
+-----------------
+
+This template extends the `layout.html` template from above to display the
+messages.  Note that the `for` loop iterates over the messages we passed
+in with the :func:`~flask.render_template` function.  We also tell the
+form to submit to your `add_entry` function and use `POST` as `HTTP`
+method:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      {% if session.logged_in %}
+        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+          <dl>
+            <dt>Title:
+            <dd><input type=text size=30 name=title>
+            <dt>Text:
+            <dd><textarea name=text rows=5 cols=40></textarea>
+            <dd><input type=submit value=Share>
+          </dl>
+        </form>
+      {% endif %}
+      <ul class=entries>
+      {% for entry in entries %}
+        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+      {% else %}
+        <li><em>Unbelievable.  No entries here so far</em>
+      {% endfor %}
+      </ul>
+    {% endblock %}
+
+login.html
+----------
+
+Finally the login template which basically just displays a form to allow
+the user to login:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      <h2>Login</h2>
+      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+      <form action=""{{ url_for('login') }}"" method=post>
+        <dl>
+          <dt>Username:
+          <dd><input type=text name=username>
+          <dt>Password:
+          <dd><input type=password name=password>
+          <dd><input type=submit value=Login>
+        </dl>
+      </form>
+    {% endblock %}
","diff --git a/docs/tutorial/templates.rst b/docs/tutorial/templates.rst
new file mode 100644
index 00000000..66b1dec6
--- /dev/null
+++ b/docs/tutorial/templates.rst
@@ -0,0 +1,107 @@
+Step 6: The Templates
+=====================
+
+Now we should start working on the templates.  If we request the URLs now
+we would only get an exception that Flask cannot find the templates.  The
+templates are using `Jinja2`_ syntax and have autoescaping enabled by
+default.  This means that unless you mark a value in the code with
+:class:`~flask.Markup` or with the ``|safe`` filter in the template,
+Jinja2 will ensure that special characters such as ``<`` or ``>`` are
+escaped with their XML equivalents.
+
+We are also using template inheritance which makes it possible to reuse
+the layout of the website in all pages.
+
+Put the following templates into the `templates` folder:
+
+.. _Jinja2: http://jinja.pocoo.org/2/documentation/templates
+
+layout.html
+-----------
+
+This template contains the HTML skeleton, the header and a link to log in
+(or log out if the user was already logged in).  It also displays the
+flashed messages if there are any.  The ``{% block body %}`` block can be
+replaced by a block of the same name (``body``) in a child template.
+
+The :class:`~flask.session` dict is available in the template as well and
+you can use that to check if the user is logged in or not.  Note that in
+Jinja you can access missing attributes and items of objects / dicts which
+makes the following code work, even if there is no ``'logged_in'`` key in
+the session:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <title>Flaskr</title>
+    <link rel=stylesheet type=text/css href=""{{ url_for('static', filename='style.css') }}"">
+    <div class=page>
+      <h1>Flaskr</h1>
+      <div class=metanav>
+      {% if not session.logged_in %}
+        <a href=""{{ url_for('login') }}"">log in</a>
+      {% else %}
+        <a href=""{{ url_for('logout') }}"">log out</a>
+      {% endif %}
+      </div>
+      {% for message in get_flashed_messages() %}
+        <div class=flash>{{ message }}</div>
+      {% endfor %}
+      {% block body %}{% endblock %}
+    </div>
+
+show_entries.html
+-----------------
+
+This template extends the `layout.html` template from above to display the
+messages.  Note that the `for` loop iterates over the messages we passed
+in with the :func:`~flask.render_template` function.  We also tell the
+form to submit to your `add_entry` function and use `POST` as `HTTP`
+method:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      {% if session.logged_in %}
+        <form action=""{{ url_for('add_entry') }}"" method=post class=add-entry>
+          <dl>
+            <dt>Title:
+            <dd><input type=text size=30 name=title>
+            <dt>Text:
+            <dd><textarea name=text rows=5 cols=40></textarea>
+            <dd><input type=submit value=Share>
+          </dl>
+        </form>
+      {% endif %}
+      <ul class=entries>
+      {% for entry in entries %}
+        <li><h2>{{ entry.title }}</h2>{{ entry.text|safe }}
+      {% else %}
+        <li><em>Unbelievable.  No entries here so far</em>
+      {% endfor %}
+      </ul>
+    {% endblock %}
+
+login.html
+----------
+
+Finally the login template which basically just displays a form to allow
+the user to login:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block body %}
+      <h2>Login</h2>
+      {% if error %}<p class=error><strong>Error:</strong> {{ error }}{% endif %}
+      <form action=""{{ url_for('login') }}"" method=post>
+        <dl>
+          <dt>Username:
+          <dd><input type=text name=username>
+          <dt>Password:
+          <dd><input type=password name=password>
+          <dd><input type=submit value=Login>
+        </dl>
+      </form>
+    {% endblock %}
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/testing.rst,,docs/tutorial/testing.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
new file mode 100644
index 00000000..3d1aa806
--- /dev/null
+++ b/docs/tutorial/testing.rst
@@ -0,0 +1,9 @@
+Bonus: Testing the Application
+===============================
+
+Now that you have finished the application and everything works as
+expected, it's probably not the best idea to add automated tests to
+simplify modifications in the future.  The application above is used as a
+basic example of how to perform unittesting in the :ref:`testing` section
+of the documentation.  Go there to see how easy it is to test Flask
+applications.
","diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
new file mode 100644
index 00000000..3d1aa806
--- /dev/null
+++ b/docs/tutorial/testing.rst
@@ -0,0 +1,9 @@
+Bonus: Testing the Application
+===============================
+
+Now that you have finished the application and everything works as
+expected, it's probably not the best idea to add automated tests to
+simplify modifications in the future.  The application above is used as a
+basic example of how to perform unittesting in the :ref:`testing` section
+of the documentation.  Go there to see how easy it is to test Flask
+applications.
"
42dd94b7565052120423dbd86a5ab0f96938f8cc,bcf347fe8db124242da30b97c7e570f28c273d26,docs/tutorial/views.rst,,docs/tutorial/views.rst,New style for the documentation.  Looks more like the website now.,"diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
new file mode 100644
index 00000000..29be65fa
--- /dev/null
+++ b/docs/tutorial/views.rst
@@ -0,0 +1,87 @@
+Step 5: The View Functions
+==========================
+
+Now that the database connections are working we can start writing the
+view functions.  We will need four of them:
+
+Show Entries
+------------
+
+This view shows all the entries stored in the database.  It listens on the
+root of the application and will select title and text from the database.
+The one with the highest id (the newest entry) on top.  The rows returned
+from the cursor are tuples with the columns ordered like specified in the
+select statement.  This is good enough for small applications like here,
+but you might want to convert them into a dict.  If you are interested how
+to do that, check out the :ref:`easy-querying` example.
+
+The view function will pass the entries as dicts to the
+`show_entries.html` template and return the rendered one::
+
+    @app.route('/')
+    def show_entries():
+        cur = g.db.execute('select title, text from entries order by id desc')
+        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+        return render_template('show_entries.html', entries=entries)
+
+Add New Entry
+-------------
+
+This view lets the user add new entries if he's logged in.  This only
+responds to `POST` requests, the actual form is shown on the
+`show_entries` page.  If everything worked out well we will
+:func:`~flask.flash` an information message to the next request and
+redirect back to the `show_entries` page::
+
+    @app.route('/add', methods=['POST'])
+    def add_entry():
+        if not session.get('logged_in'):
+            abort(401)
+        g.db.execute('insert into entries (title, text) values (?, ?)',
+                     [request.form['title'], request.form['text']])
+        g.db.commit()
+        flash('New entry was successfully posted')
+        return redirect(url_for('show_entries'))
+
+Note that we check that the user is logged in here (the `logged_in` key is
+present in the session and `True`).
+
+Login and Logout
+----------------
+
+These functions are used to sign the user in and out.  Login checks the
+username and password against the ones from the configuration and sets the
+`logged_in` key in the session.  If the user logged in successfully that
+key is set to `True` and the user is redirected back to the `show_entries`
+page.  In that case also a message is flashed that informs the user he or
+she was logged in successfully.  If an error occoured the template is
+notified about that and the user asked again::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != USERNAME:
+                error = 'Invalid username'
+            elif request.form['password'] != PASSWORD:
+                error = 'Invalid password'
+            else:
+                session['logged_in'] = True
+                flash('You were logged in')
+                return redirect(url_for('show_entries'))
+        return render_template('login.html', error=error)
+
+The logout function on the other hand removes that key from the session
+again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
+of the dict and pass a second parameter to it (the default) the method
+will delete the key from the dictionary if present or do nothing when that
+key was not in there.  This is helpful because we don't have to check in
+that case if the user was logged in.
+
+::
+
+    @app.route('/logout')
+    def logout():
+        session.pop('logged_in', None)
+        flash('You were logged out')
+        return redirect(url_for('show_entries'))
","diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
new file mode 100644
index 00000000..29be65fa
--- /dev/null
+++ b/docs/tutorial/views.rst
@@ -0,0 +1,87 @@
+Step 5: The View Functions
+==========================
+
+Now that the database connections are working we can start writing the
+view functions.  We will need four of them:
+
+Show Entries
+------------
+
+This view shows all the entries stored in the database.  It listens on the
+root of the application and will select title and text from the database.
+The one with the highest id (the newest entry) on top.  The rows returned
+from the cursor are tuples with the columns ordered like specified in the
+select statement.  This is good enough for small applications like here,
+but you might want to convert them into a dict.  If you are interested how
+to do that, check out the :ref:`easy-querying` example.
+
+The view function will pass the entries as dicts to the
+`show_entries.html` template and return the rendered one::
+
+    @app.route('/')
+    def show_entries():
+        cur = g.db.execute('select title, text from entries order by id desc')
+        entries = [dict(title=row[0], text=row[1]) for row in cur.fetchall()]
+        return render_template('show_entries.html', entries=entries)
+
+Add New Entry
+-------------
+
+This view lets the user add new entries if he's logged in.  This only
+responds to `POST` requests, the actual form is shown on the
+`show_entries` page.  If everything worked out well we will
+:func:`~flask.flash` an information message to the next request and
+redirect back to the `show_entries` page::
+
+    @app.route('/add', methods=['POST'])
+    def add_entry():
+        if not session.get('logged_in'):
+            abort(401)
+        g.db.execute('insert into entries (title, text) values (?, ?)',
+                     [request.form['title'], request.form['text']])
+        g.db.commit()
+        flash('New entry was successfully posted')
+        return redirect(url_for('show_entries'))
+
+Note that we check that the user is logged in here (the `logged_in` key is
+present in the session and `True`).
+
+Login and Logout
+----------------
+
+These functions are used to sign the user in and out.  Login checks the
+username and password against the ones from the configuration and sets the
+`logged_in` key in the session.  If the user logged in successfully that
+key is set to `True` and the user is redirected back to the `show_entries`
+page.  In that case also a message is flashed that informs the user he or
+she was logged in successfully.  If an error occoured the template is
+notified about that and the user asked again::
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != USERNAME:
+                error = 'Invalid username'
+            elif request.form['password'] != PASSWORD:
+                error = 'Invalid password'
+            else:
+                session['logged_in'] = True
+                flash('You were logged in')
+                return redirect(url_for('show_entries'))
+        return render_template('login.html', error=error)
+
+The logout function on the other hand removes that key from the session
+again.  We use a neat trick here: if you use the :meth:`~dict.pop` method
+of the dict and pass a second parameter to it (the default) the method
+will delete the key from the dictionary if present or do nothing when that
+key was not in there.  This is helpful because we don't have to check in
+that case if the user was logged in.
+
+::
+
+    @app.route('/logout')
+    def logout():
+        session.pop('logged_in', None)
+        flash('You were logged out')
+        return redirect(url_for('show_entries'))
"
bcf347fe8db124242da30b97c7e570f28c273d26,88ea383394b47278779031b47de23fbd5ba89dbe,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Less flashy color for highlights.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 5a365fd9..fbfb57e7 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -213,6 +213,10 @@ div.highlight{
     background-color: white;
 }
 
+dt:target, .highlight {
+    background: #FAF3E8;
+}
+
 div.note {
     background-color: #eee;
     border: 1px solid #ccc;
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 5a365fd9..fbfb57e7 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -213,6 +213,10 @@ div.highlight{
     background-color: white;
 }
 
+dt:target, .highlight {
+    background: #FAF3E8;
+}
+
 div.note {
     background-color: #eee;
     border: 1px solid #ccc;
"
88ea383394b47278779031b47de23fbd5ba89dbe,fdf4d79bdc3a5872e99b4e9c9bc0e29cfd195cb4,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Normalized line heights.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index fbfb57e7..002a7564 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -185,7 +185,7 @@ a.headerlink:hover {
 }
  
 div.body p, div.body dd, div.body li {
-    line-height: 1.5em;
+    line-height: 1.4em;
 }
 
 div.admonition {
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index fbfb57e7..002a7564 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -185,7 +185,7 @@ a.headerlink:hover {
 }
  
 div.body p, div.body dd, div.body li {
-    line-height: 1.5em;
+    line-height: 1.4em;
 }
 
 div.admonition {
"
88ea383394b47278779031b47de23fbd5ba89dbe,fdf4d79bdc3a5872e99b4e9c9bc0e29cfd195cb4,website/index.html,website/index.html,website/index.html,Normalized line heights.,"diff --git a/website/index.html b/website/index.html
index 0c1bd059..7dbd33ba 100644
--- a/website/index.html
+++ b/website/index.html
@@ -12,8 +12,9 @@
   code,
   pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
           monospace; font-size: 15px; background: #eee; }
-  pre     { padding: 7px 30px; margin: 15px -30px; }
+  pre     { padding: 7px 30px; margin: 15px -30px; line-height: 1.3; }
   .ig     { color: #888; }
+  p       { line-height: 1.4; }
   ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
   ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
   h1 span, p.tagline { display: none; }
","diff --git a/website/index.html b/website/index.html
index 0c1bd059..7dbd33ba 100644
--- a/website/index.html
+++ b/website/index.html
@@ -12,8 +12,9 @@
   code,
   pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
           monospace; font-size: 15px; background: #eee; }
-  pre     { padding: 7px 30px; margin: 15px -30px; }
+  pre     { padding: 7px 30px; margin: 15px -30px; line-height: 1.3; }
   .ig     { color: #888; }
+  p       { line-height: 1.4; }
   ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
   ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
   h1 span, p.tagline { display: none; }
"
fdf4d79bdc3a5872e99b4e9c9bc0e29cfd195cb4,764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,Makefile,Makefile,Makefile,dirhtml > html for websites,"diff --git a/Makefile b/Makefile
index 7aaa77dc..0be5e6bc 100644
--- a/Makefile
+++ b/Makefile
@@ -14,4 +14,4 @@ upload-website:
 	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
 
 upload-docs:
-	$(MAKE) -C docs html && scp -r docs/_build/html/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
","diff --git a/Makefile b/Makefile
index 7aaa77dc..0be5e6bc 100644
--- a/Makefile
+++ b/Makefile
@@ -14,4 +14,4 @@ upload-website:
 	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
 
 upload-docs:
-	$(MAKE) -C docs html && scp -r docs/_build/html/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/index.rst,docs/index.rst,docs/index.rst,Breaking docs up into smaller pieces,"diff --git a/docs/index.rst b/docs/index.rst
index c0369fc3..7f53ef67 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -40,7 +40,7 @@ web development.
    quickstart
    tutorial/index
    testing
-   patterns
+   patterns/index
    deploying
    becomingbig
 
","diff --git a/docs/index.rst b/docs/index.rst
index c0369fc3..7f53ef67 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -40,7 +40,7 @@ web development.
    quickstart
    tutorial/index
    testing
-   patterns
+   patterns/index
    deploying
    becomingbig
 
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns.rst,docs/patterns.rst,,Breaking docs up into smaller pieces,"diff --git a/docs/patterns.rst b/docs/patterns.rst
deleted file mode 100644
index b0c731e3..00000000
--- a/docs/patterns.rst
+++ /dev/null
@@ -1,444 +0,0 @@
-.. _patterns:
-
-Patterns for Flask
-==================
-
-Certain things are common enough that the changes are high you will find
-them in most web applications.  For example quite a lot of applications
-are using relational databases and user authentication.  In that case,
-changes are they will open a database connection at the beginning of the
-request and get the information of the currently logged in user.  At the
-end of the request, the database connection is closed again.
-
-
-.. _larger-applications:
-
-Larger Applications
--------------------
-
-For larger applications it's a good idea to use a package instead of a
-module.  That is quite simple.  Imagine a small application looks like
-this::
-
-    /yourapplication
-        /yourapplication.py
-        /static
-            /style.css
-        /templates
-            layout.html
-            index.html
-            login.html
-            ...
-
-To convert that into a larger one, just create a new folder
-`yourapplication` inside the existing one and move everything below it.
-Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
-all `.pyc` files first, otherwise things would most likely break)
-
-You should then end up with something like that::
-
-    /yourapplication
-        /yourapplication
-            /__init__.py
-            /static
-                /style.css
-            /templates
-                layout.html
-                index.html
-                login.html
-                ...
-
-But how do you run your application now?  The naive ``python
-yourapplication/__init__.py`` will not work.  Let's just say that Python
-does not want modules in packages to be the startup file.  But that is not
-a big problem, just add a new file called `runserver.py` next to the inner
-`yourapplication` folder with the following contents::
-
-    from yourapplication import app
-    app.run(debug=True)
-
-What did we gain from this?  Now we can restructure the application a bit
-into multiple modules.  The only thing you have to remember is the
-following quick checklist:
-
-1. the `Flask` application object creation have to be in the
-   `__init__.py` file.  That way each module can import it safely and the
-   `__name__` variable will resole to the correct package.
-2. all the view functions (the ones with a :meth:`~flask.Flask.route`
-   decorator on top) have to be imported when in the `__init__.py` file.
-   Not the objects itself, but the module it is in.  Do the importing at
-   the *bottom* of the file.
-
-Here an example `__init__.py`::
-
-    from flask import Flask
-    app = Flask(__name__)
-
-    import yourapplication.views
-
-And this is what `views.py` would look like::
-
-    from yourapplication import app
-
-    @app.route('/')
-    def index():
-        return 'Hello World!'
-
-.. admonition:: Circular Imports
-
-   Every Python programmer hates them, and yet we just added some:
-   circular imports (That's when two module depend on each one.  In this
-   case `views.py` depends on `__init__.py`).  Be advised that this is a
-   bad idea in general but here it is actually fine.  The reason for this
-   is
-   that we are not actually using the views in `__init__.py` and just
-   ensuring the module is imported and we are doing that at the bottom of
-   the file.
-
-   There are still some problems with that approach but if you want to use
-   decorators there is no way around that.  Check out the
-   :ref:`becomingbig` section for some inspiration how to deal with that.
-
-
-.. _database-pattern:
-
-Using SQLite 3 with Flask
--------------------------
-
-In Flask you can implement opening of dabase connections at the beginning
-of the request and closing at the end with the
-:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
-decorators in combination with the special :class:`~flask.g` object.
-
-So here a simple example how you can use SQLite 3 with Flask::
-
-    import sqlite3
-    from flask import g
-
-    DATABASE = '/path/to/database.db'
-
-    def connect_db():
-        return sqlite3.connect(DATABASE)
-
-    @app.before_request
-    def before_request():
-        g.db = connect_db()
-
-    @app.after_request
-    def after_request(response):
-        g.db.close()
-        return response
-
-.. _easy-querying:
-
-Easy Querying
-`````````````
-
-Now in each request handling function you can access `g.db` to get the
-current open database connection.  To simplify working with SQLite a
-helper function can be useful::
-
-    def query_db(query, args=(), one=False):
-        cur = g.db.execute(query, args)
-        rv = [dict((cur.description[idx][0], value)
-                   for idx, value in enumerate(row)) for row in cur.fetchall()]
-        return (rv[0] if rv else None) if one else rv
-
-This handy little function makes working with the database much more
-pleasant than it is by just using the raw cursor and connection objects.
-
-Here is how you can use it::
-
-    for user in query_db('select * from users'):
-        print user['username'], 'has the id', user['user_id']
-
-Or if you just want a single result::
-
-    user = query_db('select * from users where username = ?',
-                    [the_username], one=True)
-    if user is None:
-        print 'No such user'
-    else:
-        print the_username, 'has the id', user['user_id']
-
-To pass variable parts to the SQL statement, use a question mark in the
-statement and pass in the arguments as a list.  Never directly add them to
-the SQL statement with string formattings because this makes it possible
-to attack the application using `SQL Injections
-<http://en.wikipedia.org/wiki/SQL_injection>`_.
-
-Initial Schemas
-```````````````
-
-Relational databases need schemas, so applications often ship a
-`schema.sql` file that creates the database.  It's a good idea to provide
-a function that creates the database bases on that schema.  This function
-can do that for you::
-
-    from contextlib import closing
-    
-    def init_db():
-        with closing(connect_db()) as db:
-            with app.open_resource('schema.sql') as f:
-                db.cursor().executescript(f.read())
-            db.commit()
-
-You can then create such a database from the python shell:
-
->>> from yourapplication import init_db
->>> init_db()
-
-
-.. _sqlalchemy-pattern:
-
-SQLAlchemy in Flask
--------------------
-
-Many people prefer `SQLAlchemy`_ for database access.  In this case it's
-encouraged to use a package instead of a module for your flask application
-and drop the models into a separate module (:ref:`larger-applications`).
-Although that is not necessary but makes a lot of sense.
-
-There are three very common ways to use SQLAlchemy.  I will outline each
-of them here:
-
-Declarative
-```````````
-
-The declarative extension in SQLAlchemy is the most recent method of using
-SQLAlchemy.  It allows you to define tables and models in one go, similar
-to how Django works.  In addition to the following text I recommend the
-official documentation on the `declarative`_ extension.
-
-Here the example `database.py` module for your application::
-
-    from sqlalchemy import create_engine
-    from sqlalchemy.orm import scoped_session, sessionmaker
-    from sqlalchemy.ext.declarative import declarative_base
-
-    engine = create_engine('sqlite:////tmp/test.db')
-    db_session = scoped_session(sessionmaker(autocommit=False,
-                                             autoflush=False,
-                                             bind=engine)) 
-    Base = declarative_base()
-    Base.query = db_session.query_property()
-
-    def init_db():
-        Base.metadata.create_all(bind=engine)
-
-To define your models, just subclass the `Base` class that was created by
-the code above.  If you are wondering why we don't have to care about
-threads here (like we did in the SQLite3 example above with the
-:data:`~flask.g` object): that's because SQLAlchemy does that for us
-already with the :class:`~sqlalchemy.orm.scoped_session`.
-
-To use SQLAlchemy in a declarative way with your application, you just
-have to put the following code into your application module.  Flask will
-automatically remove database sessions at the end of the request for you::
-
-    from yourapplication.database import db_session
-
-    @app.after_request
-    def shutdown_session(response):
-        db_session.remove()
-        return response
-
-Here an example model (put that into `models.py` for instance)::
-
-    from sqlalchemy import Column, Integer, String
-    from yourapplication.database import Base
-
-    class User(Base):
-        __tablename__ = 'users'
-        id = Column(Integer, primary_key=True)
-        name = Column(String(50), unique=True)
-        email = Column(String(120), unique=True)
-
-        def __init__(self, name=None, email=None):
-            self.name = name
-            self.email = email
-
-        def __repr__(self):
-            return '<User %r>' % (self.name, self.email)
-
-You can insert entries into the database like this then:
-
->>> from yourapplication.database import db_session
->>> from yourapplication.models import User
->>> u = User('admin', 'admin@localhost')
->>> db_session.add(u)
->>> db_session.commit()
-
-Querying is simple as well:
-
->>> User.query.all()
-[<User u'admin'>]
->>> User.query.filter(User.name == 'admin').first()
-<User u'admin'>
-
-.. _SQLAlchemy: http://www.sqlalchemy.org/
-.. _declarative:
-   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
-
-Manual Object Relational Mapping
-````````````````````````````````
-
-*coming soon*
-
-SQL Abstraction Layer
-`````````````````````
-
-*coming soon*
-
-
-.. _template-inheritance:
-
-Template Inheritance
---------------------
-
-The most powerful part of Jinja is template inheritance. Template inheritance
-allows you to build a base ""skeleton"" template that contains all the common
-elements of your site and defines **blocks** that child templates can override.
-
-Sounds complicated but is very basic. It's easiest to understand it by starting
-with an example.
-
-
-Base Template
-`````````````
-
-This template, which we'll call ``layout.html``, defines a simple HTML skeleton
-document that you might use for a simple two-column page. It's the job of
-""child"" templates to fill the empty blocks with content:
-
-.. sourcecode:: html+jinja
-
-    <!doctype html>
-    <html>
-      <head>
-        {% block head %}
-        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
-        <title>{% block title %}{% endblock %} - My Webpage</title>
-        {% endblock %}
-      </head>
-    <body>
-      <div id=""content"">{% block content %}{% endblock %}</div>
-      <div id=""footer"">
-        {% block footer %}
-        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
-        {% endblock %}
-      </div>
-    </body>
-
-In this example, the ``{% block %}`` tags define four blocks that child templates
-can fill in. All the `block` tag does is to tell the template engine that a
-child template may override those portions of the template.
-
-Child Template
-``````````````
-
-A child template might look like this:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block title %}Index{% endblock %}
-    {% block head %}
-      {{ super() }}
-      <style type=""text/css"">
-        .important { color: #336699; }
-      </style>
-    {% endblock %}
-    {% block content %}
-      <h1>Index</h1>
-      <p class=""important"">
-        Welcome on my awesome homepage.
-    {% endblock %}
-
-The ``{% extends %}`` tag is the key here. It tells the template engine that
-this template ""extends"" another template.  When the template system evaluates
-this template, first it locates the parent.  The extends tag must be the
-first tag in the template.  To render the contents of a block defined in
-the parent template, use ``{{ super() }}``.
-
-.. _message-flashing-pattern:
-
-Message Flashing
-----------------
-
-Good applications and user interfaces are all about feedback.  If the user
-does not get enough feedback he will probably end up hating the
-application.  Flask provides a really simple way to give feedback to a
-user with the flashing system.  The flashing system basically makes it
-possible to record a message at the end of a request and access it next
-request and only next request.  This is usually combined with a layout
-template that does this.
-
-So here a full example::
-
-    from flask import flash, redirect, url_for, render_template
-
-    @app.route('/')
-    def index():
-        return render_template('index.html')
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != 'admin' or \
-               request.form['password'] != 'secret':
-                error = 'Invalid credentials'
-            else:
-                flash('You were sucessfully logged in')
-                return redirect(url_for('index'))
-        return render_template('login.html', error=error)
-
-And here the ``layout.html`` template which does the magic:
-
-.. sourcecode:: html+jinja
-
-   <!doctype html>
-   <title>My Application</title>
-   {% with messages = get_flashed_messages() %}
-     {% if messages %}
-       <ul class=flashes>
-       {% for message in messages %}
-         <li>{{ message }}</li>
-       {% endfor %}
-       </ul>
-     {% endif %}
-   {% endwith %}
-   {% block body %}{% endblock %}
-
-And here the index.html template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Overview</h1>
-     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
-   {% endblock %}
-
-And of course the login template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Login</h1>
-     {% if error %}
-       <p class=error><strong>Error:</strong> {{ error }}
-     {% endif %}
-     <form action="""" method=post>
-       <dl>
-         <dt>Username:
-         <dd><input type=text name=username value=""{{
-             request.form.username }}"">
-         <dt>Password:
-         <dd><input type=password name=password>
-       </dl>
-       <p><input type=submit value=Login>
-     </form>
-   {% endblock %}
","diff --git a/docs/patterns.rst b/docs/patterns.rst
deleted file mode 100644
index b0c731e3..00000000
--- a/docs/patterns.rst
+++ /dev/null
@@ -1,444 +0,0 @@
-.. _patterns:
-
-Patterns for Flask
-==================
-
-Certain things are common enough that the changes are high you will find
-them in most web applications.  For example quite a lot of applications
-are using relational databases and user authentication.  In that case,
-changes are they will open a database connection at the beginning of the
-request and get the information of the currently logged in user.  At the
-end of the request, the database connection is closed again.
-
-
-.. _larger-applications:
-
-Larger Applications
--------------------
-
-For larger applications it's a good idea to use a package instead of a
-module.  That is quite simple.  Imagine a small application looks like
-this::
-
-    /yourapplication
-        /yourapplication.py
-        /static
-            /style.css
-        /templates
-            layout.html
-            index.html
-            login.html
-            ...
-
-To convert that into a larger one, just create a new folder
-`yourapplication` inside the existing one and move everything below it.
-Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
-all `.pyc` files first, otherwise things would most likely break)
-
-You should then end up with something like that::
-
-    /yourapplication
-        /yourapplication
-            /__init__.py
-            /static
-                /style.css
-            /templates
-                layout.html
-                index.html
-                login.html
-                ...
-
-But how do you run your application now?  The naive ``python
-yourapplication/__init__.py`` will not work.  Let's just say that Python
-does not want modules in packages to be the startup file.  But that is not
-a big problem, just add a new file called `runserver.py` next to the inner
-`yourapplication` folder with the following contents::
-
-    from yourapplication import app
-    app.run(debug=True)
-
-What did we gain from this?  Now we can restructure the application a bit
-into multiple modules.  The only thing you have to remember is the
-following quick checklist:
-
-1. the `Flask` application object creation have to be in the
-   `__init__.py` file.  That way each module can import it safely and the
-   `__name__` variable will resole to the correct package.
-2. all the view functions (the ones with a :meth:`~flask.Flask.route`
-   decorator on top) have to be imported when in the `__init__.py` file.
-   Not the objects itself, but the module it is in.  Do the importing at
-   the *bottom* of the file.
-
-Here an example `__init__.py`::
-
-    from flask import Flask
-    app = Flask(__name__)
-
-    import yourapplication.views
-
-And this is what `views.py` would look like::
-
-    from yourapplication import app
-
-    @app.route('/')
-    def index():
-        return 'Hello World!'
-
-.. admonition:: Circular Imports
-
-   Every Python programmer hates them, and yet we just added some:
-   circular imports (That's when two module depend on each one.  In this
-   case `views.py` depends on `__init__.py`).  Be advised that this is a
-   bad idea in general but here it is actually fine.  The reason for this
-   is
-   that we are not actually using the views in `__init__.py` and just
-   ensuring the module is imported and we are doing that at the bottom of
-   the file.
-
-   There are still some problems with that approach but if you want to use
-   decorators there is no way around that.  Check out the
-   :ref:`becomingbig` section for some inspiration how to deal with that.
-
-
-.. _database-pattern:
-
-Using SQLite 3 with Flask
--------------------------
-
-In Flask you can implement opening of dabase connections at the beginning
-of the request and closing at the end with the
-:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
-decorators in combination with the special :class:`~flask.g` object.
-
-So here a simple example how you can use SQLite 3 with Flask::
-
-    import sqlite3
-    from flask import g
-
-    DATABASE = '/path/to/database.db'
-
-    def connect_db():
-        return sqlite3.connect(DATABASE)
-
-    @app.before_request
-    def before_request():
-        g.db = connect_db()
-
-    @app.after_request
-    def after_request(response):
-        g.db.close()
-        return response
-
-.. _easy-querying:
-
-Easy Querying
-`````````````
-
-Now in each request handling function you can access `g.db` to get the
-current open database connection.  To simplify working with SQLite a
-helper function can be useful::
-
-    def query_db(query, args=(), one=False):
-        cur = g.db.execute(query, args)
-        rv = [dict((cur.description[idx][0], value)
-                   for idx, value in enumerate(row)) for row in cur.fetchall()]
-        return (rv[0] if rv else None) if one else rv
-
-This handy little function makes working with the database much more
-pleasant than it is by just using the raw cursor and connection objects.
-
-Here is how you can use it::
-
-    for user in query_db('select * from users'):
-        print user['username'], 'has the id', user['user_id']
-
-Or if you just want a single result::
-
-    user = query_db('select * from users where username = ?',
-                    [the_username], one=True)
-    if user is None:
-        print 'No such user'
-    else:
-        print the_username, 'has the id', user['user_id']
-
-To pass variable parts to the SQL statement, use a question mark in the
-statement and pass in the arguments as a list.  Never directly add them to
-the SQL statement with string formattings because this makes it possible
-to attack the application using `SQL Injections
-<http://en.wikipedia.org/wiki/SQL_injection>`_.
-
-Initial Schemas
-```````````````
-
-Relational databases need schemas, so applications often ship a
-`schema.sql` file that creates the database.  It's a good idea to provide
-a function that creates the database bases on that schema.  This function
-can do that for you::
-
-    from contextlib import closing
-    
-    def init_db():
-        with closing(connect_db()) as db:
-            with app.open_resource('schema.sql') as f:
-                db.cursor().executescript(f.read())
-            db.commit()
-
-You can then create such a database from the python shell:
-
->>> from yourapplication import init_db
->>> init_db()
-
-
-.. _sqlalchemy-pattern:
-
-SQLAlchemy in Flask
--------------------
-
-Many people prefer `SQLAlchemy`_ for database access.  In this case it's
-encouraged to use a package instead of a module for your flask application
-and drop the models into a separate module (:ref:`larger-applications`).
-Although that is not necessary but makes a lot of sense.
-
-There are three very common ways to use SQLAlchemy.  I will outline each
-of them here:
-
-Declarative
-```````````
-
-The declarative extension in SQLAlchemy is the most recent method of using
-SQLAlchemy.  It allows you to define tables and models in one go, similar
-to how Django works.  In addition to the following text I recommend the
-official documentation on the `declarative`_ extension.
-
-Here the example `database.py` module for your application::
-
-    from sqlalchemy import create_engine
-    from sqlalchemy.orm import scoped_session, sessionmaker
-    from sqlalchemy.ext.declarative import declarative_base
-
-    engine = create_engine('sqlite:////tmp/test.db')
-    db_session = scoped_session(sessionmaker(autocommit=False,
-                                             autoflush=False,
-                                             bind=engine)) 
-    Base = declarative_base()
-    Base.query = db_session.query_property()
-
-    def init_db():
-        Base.metadata.create_all(bind=engine)
-
-To define your models, just subclass the `Base` class that was created by
-the code above.  If you are wondering why we don't have to care about
-threads here (like we did in the SQLite3 example above with the
-:data:`~flask.g` object): that's because SQLAlchemy does that for us
-already with the :class:`~sqlalchemy.orm.scoped_session`.
-
-To use SQLAlchemy in a declarative way with your application, you just
-have to put the following code into your application module.  Flask will
-automatically remove database sessions at the end of the request for you::
-
-    from yourapplication.database import db_session
-
-    @app.after_request
-    def shutdown_session(response):
-        db_session.remove()
-        return response
-
-Here an example model (put that into `models.py` for instance)::
-
-    from sqlalchemy import Column, Integer, String
-    from yourapplication.database import Base
-
-    class User(Base):
-        __tablename__ = 'users'
-        id = Column(Integer, primary_key=True)
-        name = Column(String(50), unique=True)
-        email = Column(String(120), unique=True)
-
-        def __init__(self, name=None, email=None):
-            self.name = name
-            self.email = email
-
-        def __repr__(self):
-            return '<User %r>' % (self.name, self.email)
-
-You can insert entries into the database like this then:
-
->>> from yourapplication.database import db_session
->>> from yourapplication.models import User
->>> u = User('admin', 'admin@localhost')
->>> db_session.add(u)
->>> db_session.commit()
-
-Querying is simple as well:
-
->>> User.query.all()
-[<User u'admin'>]
->>> User.query.filter(User.name == 'admin').first()
-<User u'admin'>
-
-.. _SQLAlchemy: http://www.sqlalchemy.org/
-.. _declarative:
-   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
-
-Manual Object Relational Mapping
-````````````````````````````````
-
-*coming soon*
-
-SQL Abstraction Layer
-`````````````````````
-
-*coming soon*
-
-
-.. _template-inheritance:
-
-Template Inheritance
---------------------
-
-The most powerful part of Jinja is template inheritance. Template inheritance
-allows you to build a base ""skeleton"" template that contains all the common
-elements of your site and defines **blocks** that child templates can override.
-
-Sounds complicated but is very basic. It's easiest to understand it by starting
-with an example.
-
-
-Base Template
-`````````````
-
-This template, which we'll call ``layout.html``, defines a simple HTML skeleton
-document that you might use for a simple two-column page. It's the job of
-""child"" templates to fill the empty blocks with content:
-
-.. sourcecode:: html+jinja
-
-    <!doctype html>
-    <html>
-      <head>
-        {% block head %}
-        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
-        <title>{% block title %}{% endblock %} - My Webpage</title>
-        {% endblock %}
-      </head>
-    <body>
-      <div id=""content"">{% block content %}{% endblock %}</div>
-      <div id=""footer"">
-        {% block footer %}
-        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
-        {% endblock %}
-      </div>
-    </body>
-
-In this example, the ``{% block %}`` tags define four blocks that child templates
-can fill in. All the `block` tag does is to tell the template engine that a
-child template may override those portions of the template.
-
-Child Template
-``````````````
-
-A child template might look like this:
-
-.. sourcecode:: html+jinja
-
-    {% extends ""layout.html"" %}
-    {% block title %}Index{% endblock %}
-    {% block head %}
-      {{ super() }}
-      <style type=""text/css"">
-        .important { color: #336699; }
-      </style>
-    {% endblock %}
-    {% block content %}
-      <h1>Index</h1>
-      <p class=""important"">
-        Welcome on my awesome homepage.
-    {% endblock %}
-
-The ``{% extends %}`` tag is the key here. It tells the template engine that
-this template ""extends"" another template.  When the template system evaluates
-this template, first it locates the parent.  The extends tag must be the
-first tag in the template.  To render the contents of a block defined in
-the parent template, use ``{{ super() }}``.
-
-.. _message-flashing-pattern:
-
-Message Flashing
-----------------
-
-Good applications and user interfaces are all about feedback.  If the user
-does not get enough feedback he will probably end up hating the
-application.  Flask provides a really simple way to give feedback to a
-user with the flashing system.  The flashing system basically makes it
-possible to record a message at the end of a request and access it next
-request and only next request.  This is usually combined with a layout
-template that does this.
-
-So here a full example::
-
-    from flask import flash, redirect, url_for, render_template
-
-    @app.route('/')
-    def index():
-        return render_template('index.html')
-
-    @app.route('/login', methods=['GET', 'POST'])
-    def login():
-        error = None
-        if request.method == 'POST':
-            if request.form['username'] != 'admin' or \
-               request.form['password'] != 'secret':
-                error = 'Invalid credentials'
-            else:
-                flash('You were sucessfully logged in')
-                return redirect(url_for('index'))
-        return render_template('login.html', error=error)
-
-And here the ``layout.html`` template which does the magic:
-
-.. sourcecode:: html+jinja
-
-   <!doctype html>
-   <title>My Application</title>
-   {% with messages = get_flashed_messages() %}
-     {% if messages %}
-       <ul class=flashes>
-       {% for message in messages %}
-         <li>{{ message }}</li>
-       {% endfor %}
-       </ul>
-     {% endif %}
-   {% endwith %}
-   {% block body %}{% endblock %}
-
-And here the index.html template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Overview</h1>
-     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
-   {% endblock %}
-
-And of course the login template:
-
-.. sourcecode:: html+jinja
-
-   {% extends ""layout.html"" %}
-   {% block body %}
-     <h1>Login</h1>
-     {% if error %}
-       <p class=error><strong>Error:</strong> {{ error }}
-     {% endif %}
-     <form action="""" method=post>
-       <dl>
-         <dt>Username:
-         <dd><input type=text name=username value=""{{
-             request.form.username }}"">
-         <dt>Password:
-         <dd><input type=password name=password>
-       </dl>
-       <p><input type=submit value=Login>
-     </form>
-   {% endblock %}
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/flashing.rst,,docs/patterns/flashing.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
new file mode 100644
index 00000000..c54ef28f
--- /dev/null
+++ b/docs/patterns/flashing.rst
@@ -0,0 +1,79 @@
+Message Flashing
+================
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
","diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
new file mode 100644
index 00000000..c54ef28f
--- /dev/null
+++ b/docs/patterns/flashing.rst
@@ -0,0 +1,79 @@
+Message Flashing
+================
+
+Good applications and user interfaces are all about feedback.  If the user
+does not get enough feedback he will probably end up hating the
+application.  Flask provides a really simple way to give feedback to a
+user with the flashing system.  The flashing system basically makes it
+possible to record a message at the end of a request and access it next
+request and only next request.  This is usually combined with a layout
+template that does this.
+
+So here a full example::
+
+    from flask import flash, redirect, url_for, render_template
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+    @app.route('/login', methods=['GET', 'POST'])
+    def login():
+        error = None
+        if request.method == 'POST':
+            if request.form['username'] != 'admin' or \
+               request.form['password'] != 'secret':
+                error = 'Invalid credentials'
+            else:
+                flash('You were sucessfully logged in')
+                return redirect(url_for('index'))
+        return render_template('login.html', error=error)
+
+And here the ``layout.html`` template which does the magic:
+
+.. sourcecode:: html+jinja
+
+   <!doctype html>
+   <title>My Application</title>
+   {% with messages = get_flashed_messages() %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for message in messages %}
+         <li>{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+   {% block body %}{% endblock %}
+
+And here the index.html template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Overview</h1>
+     <p>Do you want to <a href=""{{ url_for('login') }}"">log in?</a>
+   {% endblock %}
+
+And of course the login template:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block body %}
+     <h1>Login</h1>
+     {% if error %}
+       <p class=error><strong>Error:</strong> {{ error }}
+     {% endif %}
+     <form action="""" method=post>
+       <dl>
+         <dt>Username:
+         <dd><input type=text name=username value=""{{
+             request.form.username }}"">
+         <dt>Password:
+         <dd><input type=password name=password>
+       </dl>
+       <p><input type=submit value=Login>
+     </form>
+   {% endblock %}
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/index.rst,,docs/patterns/index.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
new file mode 100644
index 00000000..beba9cb8
--- /dev/null
+++ b/docs/patterns/index.rst
@@ -0,0 +1,20 @@
+.. _patterns:
+
+Patterns for Flask
+==================
+
+Certain things are common enough that the changes are high you will find
+them in most web applications.  For example quite a lot of applications
+are using relational databases and user authentication.  In that case,
+changes are they will open a database connection at the beginning of the
+request and get the information of the currently logged in user.  At the
+end of the request, the database connection is closed again.
+
+.. toctree::
+   :maxdepth: 2
+
+   packages
+   sqlite3
+   sqlalchemy
+   templateinheritance
+   flashing
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
new file mode 100644
index 00000000..beba9cb8
--- /dev/null
+++ b/docs/patterns/index.rst
@@ -0,0 +1,20 @@
+.. _patterns:
+
+Patterns for Flask
+==================
+
+Certain things are common enough that the changes are high you will find
+them in most web applications.  For example quite a lot of applications
+are using relational databases and user authentication.  In that case,
+changes are they will open a database connection at the beginning of the
+request and get the information of the currently logged in user.  At the
+end of the request, the database connection is closed again.
+
+.. toctree::
+   :maxdepth: 2
+
+   packages
+   sqlite3
+   sqlalchemy
+   templateinheritance
+   flashing
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/packages.rst,,docs/patterns/packages.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
new file mode 100644
index 00000000..d0b28932
--- /dev/null
+++ b/docs/patterns/packages.rst
@@ -0,0 +1,87 @@
+.. _larger-applications:
+
+Larger Applications
+===================
+
+For larger applications it's a good idea to use a package instead of a
+module.  That is quite simple.  Imagine a small application looks like
+this::
+
+    /yourapplication
+        /yourapplication.py
+        /static
+            /style.css
+        /templates
+            layout.html
+            index.html
+            login.html
+            ...
+
+To convert that into a larger one, just create a new folder
+`yourapplication` inside the existing one and move everything below it.
+Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
+all `.pyc` files first, otherwise things would most likely break)
+
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+But how do you run your application now?  The naive ``python
+yourapplication/__init__.py`` will not work.  Let's just say that Python
+does not want modules in packages to be the startup file.  But that is not
+a big problem, just add a new file called `runserver.py` next to the inner
+`yourapplication` folder with the following contents::
+
+    from yourapplication import app
+    app.run(debug=True)
+
+What did we gain from this?  Now we can restructure the application a bit
+into multiple modules.  The only thing you have to remember is the
+following quick checklist:
+
+1. the `Flask` application object creation have to be in the
+   `__init__.py` file.  That way each module can import it safely and the
+   `__name__` variable will resole to the correct package.
+2. all the view functions (the ones with a :meth:`~flask.Flask.route`
+   decorator on top) have to be imported when in the `__init__.py` file.
+   Not the objects itself, but the module it is in.  Do the importing at
+   the *bottom* of the file.
+
+Here an example `__init__.py`::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    import yourapplication.views
+
+And this is what `views.py` would look like::
+
+    from yourapplication import app
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+.. admonition:: Circular Imports
+
+   Every Python programmer hates them, and yet we just added some:
+   circular imports (That's when two module depend on each one.  In this
+   case `views.py` depends on `__init__.py`).  Be advised that this is a
+   bad idea in general but here it is actually fine.  The reason for this
+   is
+   that we are not actually using the views in `__init__.py` and just
+   ensuring the module is imported and we are doing that at the bottom of
+   the file.
+
+   There are still some problems with that approach but if you want to use
+   decorators there is no way around that.  Check out the
+   :ref:`becomingbig` section for some inspiration how to deal with that.
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
new file mode 100644
index 00000000..d0b28932
--- /dev/null
+++ b/docs/patterns/packages.rst
@@ -0,0 +1,87 @@
+.. _larger-applications:
+
+Larger Applications
+===================
+
+For larger applications it's a good idea to use a package instead of a
+module.  That is quite simple.  Imagine a small application looks like
+this::
+
+    /yourapplication
+        /yourapplication.py
+        /static
+            /style.css
+        /templates
+            layout.html
+            index.html
+            login.html
+            ...
+
+To convert that into a larger one, just create a new folder
+`yourapplication` inside the existing one and move everything below it.
+Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
+all `.pyc` files first, otherwise things would most likely break)
+
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+But how do you run your application now?  The naive ``python
+yourapplication/__init__.py`` will not work.  Let's just say that Python
+does not want modules in packages to be the startup file.  But that is not
+a big problem, just add a new file called `runserver.py` next to the inner
+`yourapplication` folder with the following contents::
+
+    from yourapplication import app
+    app.run(debug=True)
+
+What did we gain from this?  Now we can restructure the application a bit
+into multiple modules.  The only thing you have to remember is the
+following quick checklist:
+
+1. the `Flask` application object creation have to be in the
+   `__init__.py` file.  That way each module can import it safely and the
+   `__name__` variable will resole to the correct package.
+2. all the view functions (the ones with a :meth:`~flask.Flask.route`
+   decorator on top) have to be imported when in the `__init__.py` file.
+   Not the objects itself, but the module it is in.  Do the importing at
+   the *bottom* of the file.
+
+Here an example `__init__.py`::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    import yourapplication.views
+
+And this is what `views.py` would look like::
+
+    from yourapplication import app
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+.. admonition:: Circular Imports
+
+   Every Python programmer hates them, and yet we just added some:
+   circular imports (That's when two module depend on each one.  In this
+   case `views.py` depends on `__init__.py`).  Be advised that this is a
+   bad idea in general but here it is actually fine.  The reason for this
+   is
+   that we are not actually using the views in `__init__.py` and just
+   ensuring the module is imported and we are doing that at the bottom of
+   the file.
+
+   There are still some problems with that approach but if you want to use
+   decorators there is no way around that.  Check out the
+   :ref:`becomingbig` section for some inspiration how to deal with that.
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/sqlalchemy.rst,,docs/patterns/sqlalchemy.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
new file mode 100644
index 00000000..65ad5a61
--- /dev/null
+++ b/docs/patterns/sqlalchemy.rst
@@ -0,0 +1,100 @@
+.. _sqlalchemy-pattern:
+
+SQLAlchemy in Flask
+===================
+
+Many people prefer `SQLAlchemy`_ for database access.  In this case it's
+encouraged to use a package instead of a module for your flask application
+and drop the models into a separate module (:ref:`larger-applications`).
+Although that is not necessary but makes a lot of sense.
+
+There are three very common ways to use SQLAlchemy.  I will outline each
+of them here:
+
+Declarative
+-----------
+
+The declarative extension in SQLAlchemy is the most recent method of using
+SQLAlchemy.  It allows you to define tables and models in one go, similar
+to how Django works.  In addition to the following text I recommend the
+official documentation on the `declarative`_ extension.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine
+    from sqlalchemy.orm import scoped_session, sessionmaker
+    from sqlalchemy.ext.declarative import declarative_base
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    Base = declarative_base()
+    Base.query = db_session.query_property()
+
+    def init_db():
+        Base.metadata.create_all(bind=engine)
+
+To define your models, just subclass the `Base` class that was created by
+the code above.  If you are wondering why we don't have to care about
+threads here (like we did in the SQLite3 example above with the
+:data:`~flask.g` object): that's because SQLAlchemy does that for us
+already with the :class:`~sqlalchemy.orm.scoped_session`.
+
+To use SQLAlchemy in a declarative way with your application, you just
+have to put the following code into your application module.  Flask will
+automatically remove database sessions at the end of the request for you::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Column, Integer, String
+    from yourapplication.database import Base
+
+    class User(Base):
+        __tablename__ = 'users'
+        id = Column(Integer, primary_key=True)
+        name = Column(String(50), unique=True)
+        email = Column(String(120), unique=True)
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+You can insert entries into the database like this then:
+
+>>> from yourapplication.database import db_session
+>>> from yourapplication.models import User
+>>> u = User('admin', 'admin@localhost')
+>>> db_session.add(u)
+>>> db_session.commit()
+
+Querying is simple as well:
+
+>>> User.query.all()
+[<User u'admin'>]
+>>> User.query.filter(User.name == 'admin').first()
+<User u'admin'>
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+.. _declarative:
+   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
+
+Manual Object Relational Mapping
+--------------------------------
+
+*coming soon*
+
+SQL Abstraction Layer
+---------------------
+
+*coming soon*
","diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
new file mode 100644
index 00000000..65ad5a61
--- /dev/null
+++ b/docs/patterns/sqlalchemy.rst
@@ -0,0 +1,100 @@
+.. _sqlalchemy-pattern:
+
+SQLAlchemy in Flask
+===================
+
+Many people prefer `SQLAlchemy`_ for database access.  In this case it's
+encouraged to use a package instead of a module for your flask application
+and drop the models into a separate module (:ref:`larger-applications`).
+Although that is not necessary but makes a lot of sense.
+
+There are three very common ways to use SQLAlchemy.  I will outline each
+of them here:
+
+Declarative
+-----------
+
+The declarative extension in SQLAlchemy is the most recent method of using
+SQLAlchemy.  It allows you to define tables and models in one go, similar
+to how Django works.  In addition to the following text I recommend the
+official documentation on the `declarative`_ extension.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine
+    from sqlalchemy.orm import scoped_session, sessionmaker
+    from sqlalchemy.ext.declarative import declarative_base
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    Base = declarative_base()
+    Base.query = db_session.query_property()
+
+    def init_db():
+        Base.metadata.create_all(bind=engine)
+
+To define your models, just subclass the `Base` class that was created by
+the code above.  If you are wondering why we don't have to care about
+threads here (like we did in the SQLite3 example above with the
+:data:`~flask.g` object): that's because SQLAlchemy does that for us
+already with the :class:`~sqlalchemy.orm.scoped_session`.
+
+To use SQLAlchemy in a declarative way with your application, you just
+have to put the following code into your application module.  Flask will
+automatically remove database sessions at the end of the request for you::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Column, Integer, String
+    from yourapplication.database import Base
+
+    class User(Base):
+        __tablename__ = 'users'
+        id = Column(Integer, primary_key=True)
+        name = Column(String(50), unique=True)
+        email = Column(String(120), unique=True)
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+You can insert entries into the database like this then:
+
+>>> from yourapplication.database import db_session
+>>> from yourapplication.models import User
+>>> u = User('admin', 'admin@localhost')
+>>> db_session.add(u)
+>>> db_session.commit()
+
+Querying is simple as well:
+
+>>> User.query.all()
+[<User u'admin'>]
+>>> User.query.filter(User.name == 'admin').first()
+<User u'admin'>
+
+.. _SQLAlchemy: http://www.sqlalchemy.org/
+.. _declarative:
+   http://www.sqlalchemy.org/docs/reference/ext/declarative.html
+
+Manual Object Relational Mapping
+--------------------------------
+
+*coming soon*
+
+SQL Abstraction Layer
+---------------------
+
+*coming soon*
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/sqlite3.rst,,docs/patterns/sqlite3.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/sqlite3.rst b/docs/patterns/sqlite3.rst
new file mode 100644
index 00000000..3e758002
--- /dev/null
+++ b/docs/patterns/sqlite3.rst
@@ -0,0 +1,87 @@
+.. _sqlite3:
+
+Using SQLite 3 with Flask
+=========================
+
+In Flask you can implement opening of dabase connections at the beginning
+of the request and closing at the end with the
+:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
+decorators in combination with the special :class:`~flask.g` object.
+
+So here a simple example how you can use SQLite 3 with Flask::
+
+    import sqlite3
+    from flask import g
+
+    DATABASE = '/path/to/database.db'
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+    @app.before_request
+    def before_request():
+        g.db = connect_db()
+
+    @app.after_request
+    def after_request(response):
+        g.db.close()
+        return response
+
+.. _easy-querying:
+
+Easy Querying
+-------------
+
+Now in each request handling function you can access `g.db` to get the
+current open database connection.  To simplify working with SQLite a
+helper function can be useful::
+
+    def query_db(query, args=(), one=False):
+        cur = g.db.execute(query, args)
+        rv = [dict((cur.description[idx][0], value)
+                   for idx, value in enumerate(row)) for row in cur.fetchall()]
+        return (rv[0] if rv else None) if one else rv
+
+This handy little function makes working with the database much more
+pleasant than it is by just using the raw cursor and connection objects.
+
+Here is how you can use it::
+
+    for user in query_db('select * from users'):
+        print user['username'], 'has the id', user['user_id']
+
+Or if you just want a single result::
+
+    user = query_db('select * from users where username = ?',
+                    [the_username], one=True)
+    if user is None:
+        print 'No such user'
+    else:
+        print the_username, 'has the id', user['user_id']
+
+To pass variable parts to the SQL statement, use a question mark in the
+statement and pass in the arguments as a list.  Never directly add them to
+the SQL statement with string formattings because this makes it possible
+to attack the application using `SQL Injections
+<http://en.wikipedia.org/wiki/SQL_injection>`_.
+
+Initial Schemas
+---------------
+
+Relational databases need schemas, so applications often ship a
+`schema.sql` file that creates the database.  It's a good idea to provide
+a function that creates the database bases on that schema.  This function
+can do that for you::
+
+    from contextlib import closing
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+You can then create such a database from the python shell:
+
+>>> from yourapplication import init_db
+>>> init_db()
","diff --git a/docs/patterns/sqlite3.rst b/docs/patterns/sqlite3.rst
new file mode 100644
index 00000000..3e758002
--- /dev/null
+++ b/docs/patterns/sqlite3.rst
@@ -0,0 +1,87 @@
+.. _sqlite3:
+
+Using SQLite 3 with Flask
+=========================
+
+In Flask you can implement opening of dabase connections at the beginning
+of the request and closing at the end with the
+:meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
+decorators in combination with the special :class:`~flask.g` object.
+
+So here a simple example how you can use SQLite 3 with Flask::
+
+    import sqlite3
+    from flask import g
+
+    DATABASE = '/path/to/database.db'
+
+    def connect_db():
+        return sqlite3.connect(DATABASE)
+
+    @app.before_request
+    def before_request():
+        g.db = connect_db()
+
+    @app.after_request
+    def after_request(response):
+        g.db.close()
+        return response
+
+.. _easy-querying:
+
+Easy Querying
+-------------
+
+Now in each request handling function you can access `g.db` to get the
+current open database connection.  To simplify working with SQLite a
+helper function can be useful::
+
+    def query_db(query, args=(), one=False):
+        cur = g.db.execute(query, args)
+        rv = [dict((cur.description[idx][0], value)
+                   for idx, value in enumerate(row)) for row in cur.fetchall()]
+        return (rv[0] if rv else None) if one else rv
+
+This handy little function makes working with the database much more
+pleasant than it is by just using the raw cursor and connection objects.
+
+Here is how you can use it::
+
+    for user in query_db('select * from users'):
+        print user['username'], 'has the id', user['user_id']
+
+Or if you just want a single result::
+
+    user = query_db('select * from users where username = ?',
+                    [the_username], one=True)
+    if user is None:
+        print 'No such user'
+    else:
+        print the_username, 'has the id', user['user_id']
+
+To pass variable parts to the SQL statement, use a question mark in the
+statement and pass in the arguments as a list.  Never directly add them to
+the SQL statement with string formattings because this makes it possible
+to attack the application using `SQL Injections
+<http://en.wikipedia.org/wiki/SQL_injection>`_.
+
+Initial Schemas
+---------------
+
+Relational databases need schemas, so applications often ship a
+`schema.sql` file that creates the database.  It's a good idea to provide
+a function that creates the database bases on that schema.  This function
+can do that for you::
+
+    from contextlib import closing
+    
+    def init_db():
+        with closing(connect_db()) as db:
+            with app.open_resource('schema.sql') as f:
+                db.cursor().executescript(f.read())
+            db.commit()
+
+You can then create such a database from the python shell:
+
+>>> from yourapplication import init_db
+>>> init_db()
"
764b4e4f7dbe48366d7f01d8bd0c56f4e76b79ee,123a1ad019a842a07a84aace66fd7a33f6f68cb9,docs/patterns/templateinheritance.rst,,docs/patterns/templateinheritance.rst,Breaking docs up into smaller pieces,"diff --git a/docs/patterns/templateinheritance.rst b/docs/patterns/templateinheritance.rst
new file mode 100644
index 00000000..8a1a306d
--- /dev/null
+++ b/docs/patterns/templateinheritance.rst
@@ -0,0 +1,69 @@
+.. _template-inheritance:
+
+Template Inheritance
+====================
+
+The most powerful part of Jinja is template inheritance. Template inheritance
+allows you to build a base ""skeleton"" template that contains all the common
+elements of your site and defines **blocks** that child templates can override.
+
+Sounds complicated but is very basic. It's easiest to understand it by starting
+with an example.
+
+
+Base Template
+-------------
+
+This template, which we'll call ``layout.html``, defines a simple HTML skeleton
+document that you might use for a simple two-column page. It's the job of
+""child"" templates to fill the empty blocks with content:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <html>
+      <head>
+        {% block head %}
+        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
+        <title>{% block title %}{% endblock %} - My Webpage</title>
+        {% endblock %}
+      </head>
+    <body>
+      <div id=""content"">{% block content %}{% endblock %}</div>
+      <div id=""footer"">
+        {% block footer %}
+        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
+        {% endblock %}
+      </div>
+    </body>
+
+In this example, the ``{% block %}`` tags define four blocks that child templates
+can fill in. All the `block` tag does is to tell the template engine that a
+child template may override those portions of the template.
+
+Child Template
+--------------
+
+A child template might look like this:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block title %}Index{% endblock %}
+    {% block head %}
+      {{ super() }}
+      <style type=""text/css"">
+        .important { color: #336699; }
+      </style>
+    {% endblock %}
+    {% block content %}
+      <h1>Index</h1>
+      <p class=""important"">
+        Welcome on my awesome homepage.
+    {% endblock %}
+
+The ``{% extends %}`` tag is the key here. It tells the template engine that
+this template ""extends"" another template.  When the template system evaluates
+this template, first it locates the parent.  The extends tag must be the
+first tag in the template.  To render the contents of a block defined in
+the parent template, use ``{{ super() }}``.
","diff --git a/docs/patterns/templateinheritance.rst b/docs/patterns/templateinheritance.rst
new file mode 100644
index 00000000..8a1a306d
--- /dev/null
+++ b/docs/patterns/templateinheritance.rst
@@ -0,0 +1,69 @@
+.. _template-inheritance:
+
+Template Inheritance
+====================
+
+The most powerful part of Jinja is template inheritance. Template inheritance
+allows you to build a base ""skeleton"" template that contains all the common
+elements of your site and defines **blocks** that child templates can override.
+
+Sounds complicated but is very basic. It's easiest to understand it by starting
+with an example.
+
+
+Base Template
+-------------
+
+This template, which we'll call ``layout.html``, defines a simple HTML skeleton
+document that you might use for a simple two-column page. It's the job of
+""child"" templates to fill the empty blocks with content:
+
+.. sourcecode:: html+jinja
+
+    <!doctype html>
+    <html>
+      <head>
+        {% block head %}
+        <link rel=""stylesheet"" href=""{{ url_for('static', filename='style.css') }}"">
+        <title>{% block title %}{% endblock %} - My Webpage</title>
+        {% endblock %}
+      </head>
+    <body>
+      <div id=""content"">{% block content %}{% endblock %}</div>
+      <div id=""footer"">
+        {% block footer %}
+        &copy; Copyright 2010 by <a href=""http://domain.invalid/"">you</a>.
+        {% endblock %}
+      </div>
+    </body>
+
+In this example, the ``{% block %}`` tags define four blocks that child templates
+can fill in. All the `block` tag does is to tell the template engine that a
+child template may override those portions of the template.
+
+Child Template
+--------------
+
+A child template might look like this:
+
+.. sourcecode:: html+jinja
+
+    {% extends ""layout.html"" %}
+    {% block title %}Index{% endblock %}
+    {% block head %}
+      {{ super() }}
+      <style type=""text/css"">
+        .important { color: #336699; }
+      </style>
+    {% endblock %}
+    {% block content %}
+      <h1>Index</h1>
+      <p class=""important"">
+        Welcome on my awesome homepage.
+    {% endblock %}
+
+The ``{% extends %}`` tag is the key here. It tells the template engine that
+this template ""extends"" another template.  When the template system evaluates
+this template, first it locates the parent.  The extends tag must be the
+first tag in the template.  To render the contents of a block defined in
+the parent template, use ``{{ super() }}``.
"
123a1ad019a842a07a84aace66fd7a33f6f68cb9,42a46ed09b745c0560de354c0cb236295000f296,website/index.html,website/index.html,website/index.html,Fixed homepage links,"diff --git a/website/index.html b/website/index.html
index 7dbd33ba..ae835ac2 100644
--- a/website/index.html
+++ b/website/index.html
@@ -50,11 +50,11 @@ def hello():
   </ul>
   <h2>What’s in the Box?</h2>
   <ul>
-    <li>built in development server and <a href=docs/quickstart.html#debug-mode>debugger</a>
-    <li>integrated support for <a href=docs/testing.html>unittesting support</a>
-    <li>RESTful <a href=docs/quickstart.html#routing>request dispatching</a>
+    <li>built in development server and <a href=docs/quickstart/#debug-mode>debugger</a>
+    <li>integrated support for <a href=docs/testing/>unittesting support</a>
+    <li>RESTful <a href=docs/quickstart/#routing>request dispatching</a>
     <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
-    <li>support for <a href=docs/quickstart.html#sessions>secure cookies</a> (client side sessions)
+    <li>support for <a href=docs/quickstart/#sessions>secure cookies</a> (client side sessions)
     <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
     <li>Unicode based
   </ul>
","diff --git a/website/index.html b/website/index.html
index 7dbd33ba..ae835ac2 100644
--- a/website/index.html
+++ b/website/index.html
@@ -50,11 +50,11 @@ def hello():
   </ul>
   <h2>What’s in the Box?</h2>
   <ul>
-    <li>built in development server and <a href=docs/quickstart.html#debug-mode>debugger</a>
-    <li>integrated support for <a href=docs/testing.html>unittesting support</a>
-    <li>RESTful <a href=docs/quickstart.html#routing>request dispatching</a>
+    <li>built in development server and <a href=docs/quickstart/#debug-mode>debugger</a>
+    <li>integrated support for <a href=docs/testing/>unittesting support</a>
+    <li>RESTful <a href=docs/quickstart/#routing>request dispatching</a>
     <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
-    <li>support for <a href=docs/quickstart.html#sessions>secure cookies</a> (client side sessions)
+    <li>support for <a href=docs/quickstart/#sessions>secure cookies</a> (client side sessions)
     <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
     <li>Unicode based
   </ul>
"
42a46ed09b745c0560de354c0cb236295000f296,63593d281b7358a86a808cc0bf5e47107316403d,flask.py,flask.py,flask.py,removed unused import,"diff --git a/flask.py b/flask.py
index 93d1dd9a..0564aca3 100644
--- a/flask.py
+++ b/flask.py
@@ -13,7 +13,6 @@ from __future__ import with_statement
 import os
 import sys
 
-from threading import local
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
","diff --git a/flask.py b/flask.py
index 93d1dd9a..0564aca3 100644
--- a/flask.py
+++ b/flask.py
@@ -13,7 +13,6 @@ from __future__ import with_statement
 import os
 import sys
 
-from threading import local
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, cached_property, \
"
63593d281b7358a86a808cc0bf5e47107316403d,ab5492418694b5cc14601a953084d61f47785ea4,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,Fixed a font name.,"diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 002a7564..04c5c5f6 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -160,7 +160,7 @@ div.body h3,
 div.body h4,
 div.body h5,
 div.body h6 {
-    font-family: 'Garamond', 'Georiga', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     font-weight: normal;
     margin: 30px 0px 10px 0px;
     padding: 0;
@@ -197,7 +197,7 @@ div.admonition {
 }
 
 div.admonition p.admonition-title {
-    font-family: 'Garamond', 'Georiga', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     font-weight: normal;
     font-size: 24px;
     margin: 0 0 10px 0;
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
index 002a7564..04c5c5f6 100644
--- a/docs/_themes/flasky/static/flasky.css_t
+++ b/docs/_themes/flasky/static/flasky.css_t
@@ -160,7 +160,7 @@ div.body h3,
 div.body h4,
 div.body h5,
 div.body h6 {
-    font-family: 'Garamond', 'Georiga', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     font-weight: normal;
     margin: 30px 0px 10px 0px;
     padding: 0;
@@ -197,7 +197,7 @@ div.admonition {
 }
 
 div.admonition p.admonition-title {
-    font-family: 'Garamond', 'Georiga', serif;
+    font-family: 'Garamond', 'Georgia', serif;
     font-weight: normal;
     font-size: 24px;
     margin: 0 0 10px 0;
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,docs/api.rst,docs/api.rst,docs/api.rst,Added support for macro pulling and documented certain design decisions.,"diff --git a/docs/api.rst b/docs/api.rst
index e3439393..5dcdfa95 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -207,3 +207,5 @@ Template Rendering
 .. autofunction:: render_template
 
 .. autofunction:: render_template_string
+
+.. autofunction:: get_template_attribute
","diff --git a/docs/api.rst b/docs/api.rst
index e3439393..5dcdfa95 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -207,3 +207,5 @@ Template Rendering
 .. autofunction:: render_template
 
 .. autofunction:: render_template_string
+
+.. autofunction:: get_template_attribute
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,docs/design.rst,,docs/design.rst,Added support for macro pulling and documented certain design decisions.,"diff --git a/docs/design.rst b/docs/design.rst
new file mode 100644
index 00000000..ae1fd8d0
--- /dev/null
+++ b/docs/design.rst
@@ -0,0 +1,147 @@
+Design Decisions in Flask
+=========================
+
+If you are curious why Flask does certain things the way it does and not
+different, this section is for you.  This should give you an idea about
+some of the design decisions that may appear arbitrary and surprising at
+first, especially in direct comparison with other frameworks.
+
+
+The Explicit Application Object
+-------------------------------
+
+A Python web application based on WSGI has to have one central callable
+object that implements the actual application.  In Flask this is an
+instance of the :class:`~flask.Flask` class.  Each Flask application has
+to create an instance of this class itself and pass it the name of the
+module, but why can't Flask do that itself?
+
+Without such an explicit application object the following code::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+Would look like this instead::
+
+    from hypothetical_flask import route
+
+    @route('/')
+    def index():
+        return 'Hello World!'
+
+There are three major reasons for this.  The most important one is that
+implicit application objects require that there may only be one class at
+the time.  There are ways to fake multiple application with a single
+application object, like maintaining a stack of applications, but this
+causes some problems I won't outline here in detail.  Now the question is:
+when does a microframework need more than one application at the same
+time?  A good example for this is unittesting.  When you want to test
+something it can be very helpful to create a minimal application to test
+specific behavior.  When the application object is deleted everything it
+allocated will be freed again.
+
+Another thing that becomes possible with having an explicit object laying
+around in your code is that you can subclass the base class
+(:class:`~flask.Flask`) to alter specific behaviour.  This would not be
+possible without hacks if the object was created ahead of time for you
+based on a class that is not exposed to you.
+
+But there is another very important reason why Flask depends on an
+explicit instanciation of that class: the package name.  Whenever you
+create a Flask instance you usually pass it `__name__` as package name.
+Flask depends on that information to properly load resources relative
+to your module.  With Python's outstanding support for reflection it can
+then access the package to figure out where the templates and static files
+are stored (see :meth:`~flask.Flask.open_resource`).  Now obviously there
+are frameworks around that do not need any configuration and will still be
+able to load templates relative to your application module.  But they have
+to use the current working directory for that, which is a very unreliable
+way to determine where the application is.  The current working directory
+is process-wide and if you are running multiple applications in one
+process (which could happen in a webserver without you knowing) the paths
+will be off.  Worse: many webservers do not set the working directory to
+the directory of your application but to the document root which does not
+have to be the same folder.
+
+The third reason is ""explicit is better than implicit"".  That object is
+your WSGI application, you don't have to remember anything else.  If you
+want to apply a WSGI middleware, just wrap it and you're done (though
+there are better ways to do that so that you do not lose the reference
+to the application object :meth:`~flask.Flask.wsgi_app`).
+
+One Template Engine
+-------------------
+
+Flask decides on one template engine: Jinja2.  Why doesn't Flask have a
+pluggable template engine interface?  You can obviously use a different
+template engine, but Flask will still configure Jinja2 for you.  While
+that limitation that Jinja2 is *always* configured will probably go away,
+the decision to bundle one template engine and use that will not.
+
+Template engines are like programming languages and each of those engines
+has a certain understandment about how things work.  On the surface they
+all work the same: you tell the engine to evaluate a template with a set
+of variables and take the return value as string.
+
+But that's about where similarities end.  Jinja2 for example has an
+extensive filter system, a certain way to do template inheritance, support
+for reusable blocks (macros) that can be used from inside templates and
+also from Python code, is using unicode for all operations, supports
+iterative template rendering, configurable syntax and more.  On the other
+hand an engine like Genshi is based on XML stream evaluation, template
+inheritance by taking the availability of XPath into account and more.
+Mako on the other hand treats templates similar to Python modules.
+
+When it comes to bridge a template engine with an application or framework
+there is more than just rendering templates.  Flask uses Jinja2's
+extensive autoescaping support for instance.  Also it provides ways to
+access macros from Jinja2 templates.
+
+A template abstraction layer that would not take the unique features of
+the template engines away is a science on its own and a too large
+undertaking for a microframework like Flask.
+
+
+Micro with Dependencies
+-----------------------
+
+Why does Flask call itself a microframework and yet it depends on two
+libraries (namely Werkzeug and Jinja2).  Why shouldn't it?  If we look
+over to the Ruby side of web development there we have a protocol very
+similar to WSGI.  Just that it's called Rack there, but besides that it
+looks very much like a WSGI rendition for Ruby.  But nearly all
+applications in Ruby land do not work with Rack directly, but on top of a
+lirbary with the same name.  This Rack library has two equivalents in
+Python: WebOb (formerly Paste) and Werkzeug.  Paste is still around but
+from my understanding it's sortof deprecated in favour of WebOb.  The
+development of WebOb and Werkzeug started side by side with similar ideas
+in mind: be a good implementation of WSGI for other applications to take
+advantage.
+
+Flask is a framework that takes advantage of the work already done by
+Werkzeug to properly interface WSGI (which can be a complex task at
+times).  Thanks to recent developments in the Python package
+infrastructure, packages with depencencies are no longer an issue and
+there are very few reasons against having libraries that depend on others.
+
+
+Thread Locals
+-------------
+
+Flask uses thread local objects (context local objects in fact, they
+support greenlet contexts as well) for request, session and an extra
+object you can put your own things on (:data:`~flask.g`).  Why is that and
+isn't that a bad idea?
+
+Yes it is usually not such a bright idea to use thread locals.  They cause
+troubles for servers that are not based on the concept of threads and make
+large applications harder to maintain.  However Flask is just not designed
+for large applications or asyncronous servers.  Flask wants to make it
+quick and easy to write a traditional web application.
+
+Also see the :ref:`becomingbig` section of the documentation for some
+inspiration for larger applications based on Flask.
","diff --git a/docs/design.rst b/docs/design.rst
new file mode 100644
index 00000000..ae1fd8d0
--- /dev/null
+++ b/docs/design.rst
@@ -0,0 +1,147 @@
+Design Decisions in Flask
+=========================
+
+If you are curious why Flask does certain things the way it does and not
+different, this section is for you.  This should give you an idea about
+some of the design decisions that may appear arbitrary and surprising at
+first, especially in direct comparison with other frameworks.
+
+
+The Explicit Application Object
+-------------------------------
+
+A Python web application based on WSGI has to have one central callable
+object that implements the actual application.  In Flask this is an
+instance of the :class:`~flask.Flask` class.  Each Flask application has
+to create an instance of this class itself and pass it the name of the
+module, but why can't Flask do that itself?
+
+Without such an explicit application object the following code::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def index():
+        return 'Hello World!'
+
+Would look like this instead::
+
+    from hypothetical_flask import route
+
+    @route('/')
+    def index():
+        return 'Hello World!'
+
+There are three major reasons for this.  The most important one is that
+implicit application objects require that there may only be one class at
+the time.  There are ways to fake multiple application with a single
+application object, like maintaining a stack of applications, but this
+causes some problems I won't outline here in detail.  Now the question is:
+when does a microframework need more than one application at the same
+time?  A good example for this is unittesting.  When you want to test
+something it can be very helpful to create a minimal application to test
+specific behavior.  When the application object is deleted everything it
+allocated will be freed again.
+
+Another thing that becomes possible with having an explicit object laying
+around in your code is that you can subclass the base class
+(:class:`~flask.Flask`) to alter specific behaviour.  This would not be
+possible without hacks if the object was created ahead of time for you
+based on a class that is not exposed to you.
+
+But there is another very important reason why Flask depends on an
+explicit instanciation of that class: the package name.  Whenever you
+create a Flask instance you usually pass it `__name__` as package name.
+Flask depends on that information to properly load resources relative
+to your module.  With Python's outstanding support for reflection it can
+then access the package to figure out where the templates and static files
+are stored (see :meth:`~flask.Flask.open_resource`).  Now obviously there
+are frameworks around that do not need any configuration and will still be
+able to load templates relative to your application module.  But they have
+to use the current working directory for that, which is a very unreliable
+way to determine where the application is.  The current working directory
+is process-wide and if you are running multiple applications in one
+process (which could happen in a webserver without you knowing) the paths
+will be off.  Worse: many webservers do not set the working directory to
+the directory of your application but to the document root which does not
+have to be the same folder.
+
+The third reason is ""explicit is better than implicit"".  That object is
+your WSGI application, you don't have to remember anything else.  If you
+want to apply a WSGI middleware, just wrap it and you're done (though
+there are better ways to do that so that you do not lose the reference
+to the application object :meth:`~flask.Flask.wsgi_app`).
+
+One Template Engine
+-------------------
+
+Flask decides on one template engine: Jinja2.  Why doesn't Flask have a
+pluggable template engine interface?  You can obviously use a different
+template engine, but Flask will still configure Jinja2 for you.  While
+that limitation that Jinja2 is *always* configured will probably go away,
+the decision to bundle one template engine and use that will not.
+
+Template engines are like programming languages and each of those engines
+has a certain understandment about how things work.  On the surface they
+all work the same: you tell the engine to evaluate a template with a set
+of variables and take the return value as string.
+
+But that's about where similarities end.  Jinja2 for example has an
+extensive filter system, a certain way to do template inheritance, support
+for reusable blocks (macros) that can be used from inside templates and
+also from Python code, is using unicode for all operations, supports
+iterative template rendering, configurable syntax and more.  On the other
+hand an engine like Genshi is based on XML stream evaluation, template
+inheritance by taking the availability of XPath into account and more.
+Mako on the other hand treats templates similar to Python modules.
+
+When it comes to bridge a template engine with an application or framework
+there is more than just rendering templates.  Flask uses Jinja2's
+extensive autoescaping support for instance.  Also it provides ways to
+access macros from Jinja2 templates.
+
+A template abstraction layer that would not take the unique features of
+the template engines away is a science on its own and a too large
+undertaking for a microframework like Flask.
+
+
+Micro with Dependencies
+-----------------------
+
+Why does Flask call itself a microframework and yet it depends on two
+libraries (namely Werkzeug and Jinja2).  Why shouldn't it?  If we look
+over to the Ruby side of web development there we have a protocol very
+similar to WSGI.  Just that it's called Rack there, but besides that it
+looks very much like a WSGI rendition for Ruby.  But nearly all
+applications in Ruby land do not work with Rack directly, but on top of a
+lirbary with the same name.  This Rack library has two equivalents in
+Python: WebOb (formerly Paste) and Werkzeug.  Paste is still around but
+from my understanding it's sortof deprecated in favour of WebOb.  The
+development of WebOb and Werkzeug started side by side with similar ideas
+in mind: be a good implementation of WSGI for other applications to take
+advantage.
+
+Flask is a framework that takes advantage of the work already done by
+Werkzeug to properly interface WSGI (which can be a complex task at
+times).  Thanks to recent developments in the Python package
+infrastructure, packages with depencencies are no longer an issue and
+there are very few reasons against having libraries that depend on others.
+
+
+Thread Locals
+-------------
+
+Flask uses thread local objects (context local objects in fact, they
+support greenlet contexts as well) for request, session and an extra
+object you can put your own things on (:data:`~flask.g`).  Why is that and
+isn't that a bad idea?
+
+Yes it is usually not such a bright idea to use thread locals.  They cause
+troubles for servers that are not based on the concept of threads and make
+large applications harder to maintain.  However Flask is just not designed
+for large applications or asyncronous servers.  Flask wants to make it
+quick and easy to write a traditional web application.
+
+Also see the :ref:`becomingbig` section of the documentation for some
+inspiration for larger applications based on Flask.
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,docs/index.rst,docs/index.rst,docs/index.rst,Added support for macro pulling and documented certain design decisions.,"diff --git a/docs/index.rst b/docs/index.rst
index 7f53ef67..06d8a4e8 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -43,6 +43,7 @@ web development.
    patterns/index
    deploying
    becomingbig
+   design
 
 Reference
 ---------
","diff --git a/docs/index.rst b/docs/index.rst
index 7f53ef67..06d8a4e8 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -43,6 +43,7 @@ web development.
    patterns/index
    deploying
    becomingbig
+   design
 
 Reference
 ---------
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,flask.py,flask.py,flask.py,Added support for macro pulling and documented certain design decisions.,"diff --git a/flask.py b/flask.py
index 0564aca3..56ce49cc 100644
--- a/flask.py
+++ b/flask.py
@@ -120,6 +120,27 @@ def url_for(endpoint, **values):
     return _request_ctx_stack.top.url_adapter.build(endpoint, values)
 
 
+def get_template_attribute(template_name, attribute):
+    """"""Loads a macro (or variable) a template exports.  This can be used to
+    invoke a macro from within Python code.  If you for example have a
+    template named `_foo.html` with the following contents:
+
+    .. sourcecode:: html+jinja
+
+       {% macro hello(name) %}Hello {{ name }}!{% endmacro %}
+
+    You can access this from Python code like this::
+
+        hello = get_template_attribute('_foo.html', 'hello')
+        return hello('World')
+
+    :param template_name: the name of the template
+    :param attribute: the name of the variable of macro to acccess
+    """"""
+    return getattr(current_app.jinja_env.get_template(template_name).module,
+                   attribute)
+
+
 def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
@@ -626,10 +647,18 @@ class Flask(object):
 
     def wsgi_app(self, environ, start_response):
         """"""The actual WSGI application.  This is not implemented in
-        `__call__` so that middlewares can be applied:
+        `__call__` so that middlewares can be applied without losing a
+        reference to the class.  So instead of doing this::
+
+            app = MyMiddleware(app)
+
+        It's a better idea to do this instead::
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
 
+        Then you still have the original application object around and
+        can continue to call methods on it.
+
         :param environ: a WSGI environment
         :param start_response: a callable accepting a status code,
                                a list of headers and an optional
","diff --git a/flask.py b/flask.py
index 0564aca3..56ce49cc 100644
--- a/flask.py
+++ b/flask.py
@@ -120,6 +120,27 @@ def url_for(endpoint, **values):
     return _request_ctx_stack.top.url_adapter.build(endpoint, values)
 
 
+def get_template_attribute(template_name, attribute):
+    """"""Loads a macro (or variable) a template exports.  This can be used to
+    invoke a macro from within Python code.  If you for example have a
+    template named `_foo.html` with the following contents:
+
+    .. sourcecode:: html+jinja
+
+       {% macro hello(name) %}Hello {{ name }}!{% endmacro %}
+
+    You can access this from Python code like this::
+
+        hello = get_template_attribute('_foo.html', 'hello')
+        return hello('World')
+
+    :param template_name: the name of the template
+    :param attribute: the name of the variable of macro to acccess
+    """"""
+    return getattr(current_app.jinja_env.get_template(template_name).module,
+                   attribute)
+
+
 def flash(message):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
@@ -626,10 +647,18 @@ class Flask(object):
 
     def wsgi_app(self, environ, start_response):
         """"""The actual WSGI application.  This is not implemented in
-        `__call__` so that middlewares can be applied:
+        `__call__` so that middlewares can be applied without losing a
+        reference to the class.  So instead of doing this::
+
+            app = MyMiddleware(app)
+
+        It's a better idea to do this instead::
 
             app.wsgi_app = MyMiddleware(app.wsgi_app)
 
+        Then you still have the original application object around and
+        can continue to call methods on it.
+
         :param environ: a WSGI environment
         :param start_response: a callable accepting a status code,
                                a list of headers and an optional
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added support for macro pulling and documented certain design decisions.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b9edd366..bb560712 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -197,6 +197,12 @@ class Templating(unittest.TestCase):
             '<p>Hello World!'
         ]
 
+    def test_macros(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            macro = flask.get_template_attribute('_macro.html', 'hello')
+            assert macro('World') == 'Hello World!'
+
 
 if __name__ == '__main__':
     unittest.main()
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b9edd366..bb560712 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -197,6 +197,12 @@ class Templating(unittest.TestCase):
             '<p>Hello World!'
         ]
 
+    def test_macros(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            macro = flask.get_template_attribute('_macro.html', 'hello')
+            assert macro('World') == 'Hello World!'
+
 
 if __name__ == '__main__':
     unittest.main()
"
ab5492418694b5cc14601a953084d61f47785ea4,190059c8f01c6f75243824e765d08a7cce386eda,tests/templates/_macro.html,,tests/templates/_macro.html,Added support for macro pulling and documented certain design decisions.,"diff --git a/tests/templates/_macro.html b/tests/templates/_macro.html
new file mode 100644
index 00000000..3460ae2e
--- /dev/null
+++ b/tests/templates/_macro.html
@@ -0,0 +1 @@
+{% macro hello(name) %}Hello {{ name }}!{% endmacro %}
","diff --git a/tests/templates/_macro.html b/tests/templates/_macro.html
new file mode 100644
index 00000000..3460ae2e
--- /dev/null
+++ b/tests/templates/_macro.html
@@ -0,0 +1 @@
+{% macro hello(name) %}Hello {{ name }}!{% endmacro %}
"
190059c8f01c6f75243824e765d08a7cce386eda,bf52a17902cdbc300ee91ec1b2e8d2b7890ba35c,docs/testing.rst,docs/testing.rst,docs/testing.rst,Removed useless code,"diff --git a/docs/testing.rst b/docs/testing.rst
index 62b309ce..5439fbaf 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -162,7 +162,6 @@ like this::
             text='<strong>HTML</strong> allowed here'
         ), follow_redirects=True)
         assert 'No entries here so far' not in rv.data
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
","diff --git a/docs/testing.rst b/docs/testing.rst
index 62b309ce..5439fbaf 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -162,7 +162,6 @@ like this::
             text='<strong>HTML</strong> allowed here'
         ), follow_redirects=True)
         assert 'No entries here so far' not in rv.data
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
"
190059c8f01c6f75243824e765d08a7cce386eda,bf52a17902cdbc300ee91ec1b2e8d2b7890ba35c,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,Removed useless code,"diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index e8f01437..4355a650 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -57,7 +57,6 @@ class FlaskrTestCase(unittest.TestCase):
             text='<strong>HTML</strong> allowed here'
         ), follow_redirects=True)
         assert 'No entries here so far' not in rv.data
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
","diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index e8f01437..4355a650 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -57,7 +57,6 @@ class FlaskrTestCase(unittest.TestCase):
             text='<strong>HTML</strong> allowed here'
         ), follow_redirects=True)
         assert 'No entries here so far' not in rv.data
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
"
bf52a17902cdbc300ee91ec1b2e8d2b7890ba35c,13090389365184fc2291e2cc69fb9b2af5426585,README,README,README,updated README,"diff --git a/README b/README
index d648ef4e..537a71c5 100644
--- a/README
+++ b/README
@@ -12,8 +12,10 @@
 
     ~ Is it ready?
 
-      Nope, this is still work in progress, but I am happy to
-      accept patches and improvements already.
+      A preview release is out now, and I'm hoping for some
+      input about what you want from a microframework and
+      how it should look like.  Consider the API to slightly
+      improve over time.
 
     ~ What do I need?
 
","diff --git a/README b/README
index d648ef4e..537a71c5 100644
--- a/README
+++ b/README
@@ -12,8 +12,10 @@
 
     ~ Is it ready?
 
-      Nope, this is still work in progress, but I am happy to
-      accept patches and improvements already.
+      A preview release is out now, and I'm hoping for some
+      input about what you want from a microframework and
+      how it should look like.  Consider the API to slightly
+      improve over time.
 
     ~ What do I need?
 
"
13090389365184fc2291e2cc69fb9b2af5426585,94cf620914615b991063f00314ea1c8da9790c99,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,Updated SQLAlchemy docs.,"diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 65ad5a61..8d06187f 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -92,9 +92,99 @@ Querying is simple as well:
 Manual Object Relational Mapping
 --------------------------------
 
-*coming soon*
+Manual object relational mapping has a few upsides and a few downsides
+versus the declarative approach from above.  The main difference is that
+you define tables and classes separately and map them together.  It's more
+flexible but a little more to type.  In general it works similar to the
+declarative approach, so make sure to also split up your application into
+multiple modules in a package.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine, MetaData
+    from sqlalchemy.orm import scoped_session, sessionmaker
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    metadata = MetaData()
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    def init_db():
+        metadata.create_all(bind=engine)
+
+As for the declarative approach you need to close down the session after
+each request.  Put this into your application module::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example table and model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Table, Column, Integer, String
+    from sqlalchemy.orm import mapper
+    from yourapplication.database import metadata, db_session
+
+    class User(object):
+        query = db_session.query_property()
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+    users = Table('users', metadata,
+        Column('id', Integer, primary_key=True),
+        Column('name', String(50), unique=True),
+        Column('email', String(120), unique=True)
+    )
+    mapper(User, users)
+
+Querying and inserting works exactly the same as in the example above.
+
 
 SQL Abstraction Layer
 ---------------------
 
-*coming soon*
+If you just want to use the database system (and SQL) abstraction layer
+you basically only need the engine::
+
+    from sqlalchemy import create_engine, MetaData
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    metadata = MetaData(bind=engine)
+
+Then you can either declare the tables in your code like in the examples
+above, or automatically load them::
+
+    users = Table('users', metadata, autoload=True)
+
+To insert data you can use the `insert` method.  We have to get a
+connection first so that we can use a transaction:
+
+>>> con = engine.connect()
+>>> con.execute(users.insert(name='admin', email='admin@localhost'))
+
+SQLAlchemy will automatically commit for us.
+
+To query your database, yu use the engine directly or use a connection:
+
+>>> users.select(users.c.id == 1).execute().first()
+(1, u'admin', u'admin@localhost')
+
+These results are also dict-like tuples:
+
+>>> r = users.select(users.c.id == 1).execute().first()
+>>> r['name']
+u'admin'
+
+You can also pass string of SQL statements to the
+:meth:`~sqlalchemy.engine.base.Connection.execute` method:
+
+>>> engine.execute('select * from users where id = :1', [1]).first()
+(1, u'admin', u'admin@localhost')
","diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 65ad5a61..8d06187f 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -92,9 +92,99 @@ Querying is simple as well:
 Manual Object Relational Mapping
 --------------------------------
 
-*coming soon*
+Manual object relational mapping has a few upsides and a few downsides
+versus the declarative approach from above.  The main difference is that
+you define tables and classes separately and map them together.  It's more
+flexible but a little more to type.  In general it works similar to the
+declarative approach, so make sure to also split up your application into
+multiple modules in a package.
+
+Here the example `database.py` module for your application::
+
+    from sqlalchemy import create_engine, MetaData
+    from sqlalchemy.orm import scoped_session, sessionmaker
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    metadata = MetaData()
+    db_session = scoped_session(sessionmaker(autocommit=False,
+                                             autoflush=False,
+                                             bind=engine)) 
+    def init_db():
+        metadata.create_all(bind=engine)
+
+As for the declarative approach you need to close down the session after
+each request.  Put this into your application module::
+
+    from yourapplication.database import db_session
+
+    @app.after_request
+    def shutdown_session(response):
+        db_session.remove()
+        return response
+
+Here an example table and model (put that into `models.py` for instance)::
+
+    from sqlalchemy import Table, Column, Integer, String
+    from sqlalchemy.orm import mapper
+    from yourapplication.database import metadata, db_session
+
+    class User(object):
+        query = db_session.query_property()
+
+        def __init__(self, name=None, email=None):
+            self.name = name
+            self.email = email
+
+        def __repr__(self):
+            return '<User %r>' % (self.name, self.email)
+
+    users = Table('users', metadata,
+        Column('id', Integer, primary_key=True),
+        Column('name', String(50), unique=True),
+        Column('email', String(120), unique=True)
+    )
+    mapper(User, users)
+
+Querying and inserting works exactly the same as in the example above.
+
 
 SQL Abstraction Layer
 ---------------------
 
-*coming soon*
+If you just want to use the database system (and SQL) abstraction layer
+you basically only need the engine::
+
+    from sqlalchemy import create_engine, MetaData
+
+    engine = create_engine('sqlite:////tmp/test.db')
+    metadata = MetaData(bind=engine)
+
+Then you can either declare the tables in your code like in the examples
+above, or automatically load them::
+
+    users = Table('users', metadata, autoload=True)
+
+To insert data you can use the `insert` method.  We have to get a
+connection first so that we can use a transaction:
+
+>>> con = engine.connect()
+>>> con.execute(users.insert(name='admin', email='admin@localhost'))
+
+SQLAlchemy will automatically commit for us.
+
+To query your database, yu use the engine directly or use a connection:
+
+>>> users.select(users.c.id == 1).execute().first()
+(1, u'admin', u'admin@localhost')
+
+These results are also dict-like tuples:
+
+>>> r = users.select(users.c.id == 1).execute().first()
+>>> r['name']
+u'admin'
+
+You can also pass string of SQL statements to the
+:meth:`~sqlalchemy.engine.base.Connection.execute` method:
+
+>>> engine.execute('select * from users where id = :1', [1]).first()
+(1, u'admin', u'admin@localhost')
"
94cf620914615b991063f00314ea1c8da9790c99,100776147a063dcf53f74678b045ac0f5d6386d4,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,Added troubleshooting section to the tutorial,"diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
index 80341d63..0dc87d58 100644
--- a/docs/tutorial/dbinit.rst
+++ b/docs/tutorial/dbinit.rst
@@ -55,3 +55,9 @@ importing and calling that function::
 
 >>> from flaskr import init_db
 >>> init_db()
+
+.. admonition:: Troubleshooting
+
+   If you get an exception later that a table cannot be found check that
+   you did call the `init_db` function and that your table names are
+   correct (singular vs. plural for example).
","diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
index 80341d63..0dc87d58 100644
--- a/docs/tutorial/dbinit.rst
+++ b/docs/tutorial/dbinit.rst
@@ -55,3 +55,9 @@ importing and calling that function::
 
 >>> from flaskr import init_db
 >>> init_db()
+
+.. admonition:: Troubleshooting
+
+   If you get an exception later that a table cannot be found check that
+   you did call the `init_db` function and that your table names are
+   correct (singular vs. plural for example).
"
100776147a063dcf53f74678b045ac0f5d6386d4,3491465d55f093a498f2f496cd33bebba137518c,docs/installation.rst,docs/installation.rst,docs/installation.rst,No sudo for windows users.,"diff --git a/docs/installation.rst b/docs/installation.rst
index f83d9c28..a56ae3af 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -53,7 +53,8 @@ python-virtualenv``).
 
 If you are on Windows and missing the `easy_install` command you have to
 install it first.  Check the :ref:`windows-easy-install` section for more
-information about how to do that.
+information about how to do that.  Once you have it installed, run the
+same commands as above, but without the `sudo` part.
 
 So now that you have virtualenv running just fire up a shell and create
 your own environment.  I usually create a folder and a `env` folder
","diff --git a/docs/installation.rst b/docs/installation.rst
index f83d9c28..a56ae3af 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -53,7 +53,8 @@ python-virtualenv``).
 
 If you are on Windows and missing the `easy_install` command you have to
 install it first.  Check the :ref:`windows-easy-install` section for more
-information about how to do that.
+information about how to do that.  Once you have it installed, run the
+same commands as above, but without the `sudo` part.
 
 So now that you have virtualenv running just fire up a shell and create
 your own environment.  I usually create a folder and a `env` folder
"
3491465d55f093a498f2f496cd33bebba137518c,0770f5c6375e3e45fa3ac918217df5d885176173,flask.py,flask.py,flask.py,Removed two unused imports.,"diff --git a/flask.py b/flask.py
index 56ce49cc..cec1aafb 100644
--- a/flask.py
+++ b/flask.py
@@ -15,10 +15,9 @@ import sys
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, cached_property, \
-     SharedDataMiddleware
+     LocalStack, LocalProxy, create_environ, SharedDataMiddleware
 from werkzeug.routing import Map, Rule
-from werkzeug.exceptions import HTTPException, InternalServerError
+from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
 
 # utilities we import from Werkzeug and Jinja2 that are unused
","diff --git a/flask.py b/flask.py
index 56ce49cc..cec1aafb 100644
--- a/flask.py
+++ b/flask.py
@@ -15,10 +15,9 @@ import sys
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, cached_property, \
-     SharedDataMiddleware
+     LocalStack, LocalProxy, create_environ, SharedDataMiddleware
 from werkzeug.routing import Map, Rule
-from werkzeug.exceptions import HTTPException, InternalServerError
+from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
 
 # utilities we import from Werkzeug and Jinja2 that are unused
"
0770f5c6375e3e45fa3ac918217df5d885176173,73a47a0db1a181bb305684115d3dacded0c5a58b,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Removed unused stuff from minitwit and fixed a bug.,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index c053e27f..ef0c7673 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -9,7 +9,6 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import re
 import time
 import sqlite3
 from hashlib import md5
@@ -96,7 +95,6 @@ def timeline():
     """"""
     if not g.user:
         return redirect(url_for('public_timeline'))
-    offset = request.args.get('offset', type=int)
     return render_template('timeline.html', messages=query_db('''
         select message.*, user.* from message, user
         where message.author_id = user.user_id and (
@@ -123,7 +121,7 @@ def user_timeline(username):
                             [username], one=True)
     if profile_user is None:
         abort(404)
-    followd = False
+    followed = False
     if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index c053e27f..ef0c7673 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -9,7 +9,6 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import re
 import time
 import sqlite3
 from hashlib import md5
@@ -96,7 +95,6 @@ def timeline():
     """"""
     if not g.user:
         return redirect(url_for('public_timeline'))
-    offset = request.args.get('offset', type=int)
     return render_template('timeline.html', messages=query_db('''
         select message.*, user.* from message, user
         where message.author_id = user.user_id and (
@@ -123,7 +121,7 @@ def user_timeline(username):
                             [username], one=True)
     if profile_user is None:
         abort(404)
-    followd = False
+    followed = False
     if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/conf.py,docs/conf.py,docs/conf.py,Added WTForms documentation.,"diff --git a/docs/conf.py b/docs/conf.py
index 98db7c51..03e27217 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -242,5 +242,6 @@ latex_documents = [
 intersphinx_mapping = {
     'http://docs.python.org/dev': None,
     'http://werkzeug.pocoo.org/documentation/dev/': None,
-    'http://www.sqlalchemy.org/docs/': None
+    'http://www.sqlalchemy.org/docs/': None,
+    'http://wtforms.simplecodes.com/docs/0.5/': None
 }
","diff --git a/docs/conf.py b/docs/conf.py
index 98db7c51..03e27217 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -242,5 +242,6 @@ latex_documents = [
 intersphinx_mapping = {
     'http://docs.python.org/dev': None,
     'http://werkzeug.pocoo.org/documentation/dev/': None,
-    'http://www.sqlalchemy.org/docs/': None
+    'http://www.sqlalchemy.org/docs/': None,
+    'http://wtforms.simplecodes.com/docs/0.5/': None
 }
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/installation.rst,docs/installation.rst,docs/installation.rst,Added WTForms documentation.,"diff --git a/docs/installation.rst b/docs/installation.rst
index a56ae3af..c5788be2 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -96,14 +96,6 @@ This is possible as well, but I would not recommend it.  Just run
 
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
-
-The Drop into Place Version
----------------------------
-
-Now I really don't recommend this way on using Flask, but you can do that
-of course as well.  Download the `dip` zipfile from the website and unzip
-it next to your application.
-
 .. _windows-easy-install:
 
 `easy_install` on Windows
","diff --git a/docs/installation.rst b/docs/installation.rst
index a56ae3af..c5788be2 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -96,14 +96,6 @@ This is possible as well, but I would not recommend it.  Just run
 
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
-
-The Drop into Place Version
----------------------------
-
-Now I really don't recommend this way on using Flask, but you can do that
-of course as well.  Download the `dip` zipfile from the website and unzip
-it next to your application.
-
 .. _windows-easy-install:
 
 `easy_install` on Windows
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/patterns/flashing.rst,docs/patterns/flashing.rst,docs/patterns/flashing.rst,Added WTForms documentation.,"diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index c54ef28f..fca9a9e1 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -1,3 +1,5 @@
+.. _message-flashing-pattern:
+
 Message Flashing
 ================
 
","diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index c54ef28f..fca9a9e1 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -1,3 +1,5 @@
+.. _message-flashing-pattern:
+
 Message Flashing
 ================
 
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added WTForms documentation.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index beba9cb8..037f6e11 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -16,5 +16,6 @@ end of the request, the database connection is closed again.
    packages
    sqlite3
    sqlalchemy
+   wtforms
    templateinheritance
    flashing
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index beba9cb8..037f6e11 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -16,5 +16,6 @@ end of the request, the database connection is closed again.
    packages
    sqlite3
    sqlalchemy
+   wtforms
    templateinheritance
    flashing
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/patterns/wtforms.rst,,docs/patterns/wtforms.rst,Added WTForms documentation.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
new file mode 100644
index 00000000..e79f9d3a
--- /dev/null
+++ b/docs/patterns/wtforms.rst
@@ -0,0 +1,109 @@
+Form Validation with WTForms
+============================
+
+When you have to work with form data submitted by a browser view code
+quickly becomes very hard to read.  There are libraries out there designed
+to make this process easier to manage.  One of them is WTForms which we
+will handle here.  If you find yourself in the situation of having many
+forms, you might want to give it a try.
+
+When you are working with WTForms you have to define your forms as classes
+first.  I recommend breaking up the application into multiple modules 
+(:ref:`larger-applications`) for that and adding a separate module for the
+forms.
+
+The Forms
+---------
+
+This is an example form for a typical registration page::
+
+    from wtforms import Form, BooleanField, TextField, validators
+
+    class RegistrationForm(Form):
+        username = TextField('Username', [validators.Length(min=4, max=25)])
+        email = TextField('Email Address', [validators.Length(min=6, max=35)])
+        password = PasswordField('New Password', [Required(),
+            EqualTo('confirm', mesage='Passwords must match')])
+        confirm = PasswordField('Repeat Password')
+        accept_tos = BooleanField('I accept the TOS', [validators.Required()])
+
+In the View
+-----------
+
+In the view function, the usage of this form looks like this::
+
+    @app.route('/register', methods=['GET', 'POST'])
+    def register():
+        form = RegistrationForm(request.form)
+        if request.method == 'POST' and form.validate():
+            user = User(form.username.data, form.email.data,
+                        form.password.data)
+            db_session.add(user)
+            flash('Thanks for registering')
+            redirect(url_for('login'))
+        return render_template('register.html', form=form)
+
+Notice that we are implying that the view is using SQLAlchemy here
+(:ref:`sqlalchemy-pattern`) but this is no requirement of course.  Adapt
+the code as necessary.
+
+Things to remember:
+
+1. create the form from the request :attr:`~flask.request.form` value if
+   the data is submitted via the HTTP `POST` method and
+   :attr:`~flask.request.args` if the data is submitted as `GET`.
+2. to validate the data, call the :func:`~wtforms.form.Form.validate`
+   method which will return `True` if the data validates, `False`
+   otherwise.
+3. to access individual values from the form, access `form.<NAME>.data`.
+
+Forms in Templates
+------------------
+
+Now to the template side.  When you pass the form to the templates you can
+easily render them there.  Look at the following example template to see
+how easy this is.  WTForms does half the form generation for us already.
+To make it even nicer, we can write a macro that renders a field with
+label and a list of errors if there are any.
+
+Here an example `_formhelpers.html` template with such a macro:
+
+.. sourcecode:: html+jinja
+
+    {% macro render_field(field) %}
+      <dt>{{ field.label }}
+      <dd>{{ field(**kwargs)|safe }}
+     {% if field.errors %}
+       <ul class=""errors"">
+       {% for error in field.errors %}
+         <li>{{ error }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+     </dd>
+    {% endmacro %}
+
+This macro accepts a couple of keyword arguments that are forwarded to
+WTForm's field function that renders the field for us.  They keyword
+arguments will be inserted as HTML attributes.  So for example you can
+call ``render_field(form.username, class='username')`` to add a class to
+the input element.  Note that WTForms returns standard Python unicode
+strings, so we have to tell Jinja2 that this data is already HTML escaped
+with the `|safe` filter.
+
+Here the `register.html` template for the function we used above which
+takes advantage of the `_formhelpers.html` template:
+
+.. sourcecode:: html+jinja
+
+    {% from ""_formhelpers.html"" import render_field %}
+    <form method=""POST"" action=""/register"">
+      <dl>
+        {{ render_field(form.username) }}
+        {{ render_field(form.email) }}
+        {{ render_field(form.password) }}
+        {{ render_field(form.confirm) }}
+        {{ render_field(form.accept_tos) }}
+      </dl>
+      <p><input type=submit value=Register>
+    </form>
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
new file mode 100644
index 00000000..e79f9d3a
--- /dev/null
+++ b/docs/patterns/wtforms.rst
@@ -0,0 +1,109 @@
+Form Validation with WTForms
+============================
+
+When you have to work with form data submitted by a browser view code
+quickly becomes very hard to read.  There are libraries out there designed
+to make this process easier to manage.  One of them is WTForms which we
+will handle here.  If you find yourself in the situation of having many
+forms, you might want to give it a try.
+
+When you are working with WTForms you have to define your forms as classes
+first.  I recommend breaking up the application into multiple modules 
+(:ref:`larger-applications`) for that and adding a separate module for the
+forms.
+
+The Forms
+---------
+
+This is an example form for a typical registration page::
+
+    from wtforms import Form, BooleanField, TextField, validators
+
+    class RegistrationForm(Form):
+        username = TextField('Username', [validators.Length(min=4, max=25)])
+        email = TextField('Email Address', [validators.Length(min=6, max=35)])
+        password = PasswordField('New Password', [Required(),
+            EqualTo('confirm', mesage='Passwords must match')])
+        confirm = PasswordField('Repeat Password')
+        accept_tos = BooleanField('I accept the TOS', [validators.Required()])
+
+In the View
+-----------
+
+In the view function, the usage of this form looks like this::
+
+    @app.route('/register', methods=['GET', 'POST'])
+    def register():
+        form = RegistrationForm(request.form)
+        if request.method == 'POST' and form.validate():
+            user = User(form.username.data, form.email.data,
+                        form.password.data)
+            db_session.add(user)
+            flash('Thanks for registering')
+            redirect(url_for('login'))
+        return render_template('register.html', form=form)
+
+Notice that we are implying that the view is using SQLAlchemy here
+(:ref:`sqlalchemy-pattern`) but this is no requirement of course.  Adapt
+the code as necessary.
+
+Things to remember:
+
+1. create the form from the request :attr:`~flask.request.form` value if
+   the data is submitted via the HTTP `POST` method and
+   :attr:`~flask.request.args` if the data is submitted as `GET`.
+2. to validate the data, call the :func:`~wtforms.form.Form.validate`
+   method which will return `True` if the data validates, `False`
+   otherwise.
+3. to access individual values from the form, access `form.<NAME>.data`.
+
+Forms in Templates
+------------------
+
+Now to the template side.  When you pass the form to the templates you can
+easily render them there.  Look at the following example template to see
+how easy this is.  WTForms does half the form generation for us already.
+To make it even nicer, we can write a macro that renders a field with
+label and a list of errors if there are any.
+
+Here an example `_formhelpers.html` template with such a macro:
+
+.. sourcecode:: html+jinja
+
+    {% macro render_field(field) %}
+      <dt>{{ field.label }}
+      <dd>{{ field(**kwargs)|safe }}
+     {% if field.errors %}
+       <ul class=""errors"">
+       {% for error in field.errors %}
+         <li>{{ error }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+     </dd>
+    {% endmacro %}
+
+This macro accepts a couple of keyword arguments that are forwarded to
+WTForm's field function that renders the field for us.  They keyword
+arguments will be inserted as HTML attributes.  So for example you can
+call ``render_field(form.username, class='username')`` to add a class to
+the input element.  Note that WTForms returns standard Python unicode
+strings, so we have to tell Jinja2 that this data is already HTML escaped
+with the `|safe` filter.
+
+Here the `register.html` template for the function we used above which
+takes advantage of the `_formhelpers.html` template:
+
+.. sourcecode:: html+jinja
+
+    {% from ""_formhelpers.html"" import render_field %}
+    <form method=""POST"" action=""/register"">
+      <dl>
+        {{ render_field(form.username) }}
+        {{ render_field(form.email) }}
+        {{ render_field(form.password) }}
+        {{ render_field(form.confirm) }}
+        {{ render_field(form.accept_tos) }}
+      </dl>
+      <p><input type=submit value=Register>
+    </form>
"
73a47a0db1a181bb305684115d3dacded0c5a58b,ce18d4575dd8468878668d777d83448eeae4fd0d,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Added WTForms documentation.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 944b3955..3d3e765f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -368,7 +368,7 @@ u'Marked up \xbb HTML'
 
 .. [#] Unsure what that :class:`~flask.g` object is? It's something you
    can store information on yourself, check the documentation of that
-   object (:class:`~flask.g`) and the :ref:`database-pattern` for more
+   object (:class:`~flask.g`) and the :ref:`sqlite3` for more
    information.
 
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 944b3955..3d3e765f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -368,7 +368,7 @@ u'Marked up \xbb HTML'
 
 .. [#] Unsure what that :class:`~flask.g` object is? It's something you
    can store information on yourself, check the documentation of that
-   object (:class:`~flask.g`) and the :ref:`database-pattern` for more
+   object (:class:`~flask.g`) and the :ref:`sqlite3` for more
    information.
 
 
"
ce18d4575dd8468878668d777d83448eeae4fd0d,976e792336fa6c4696f534ac1d537d2a86a75e72,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,Added links for SQLAlchemy and WTForms.,"diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 8d06187f..5a064469 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -188,3 +188,6 @@ You can also pass string of SQL statements to the
 
 >>> engine.execute('select * from users where id = :1', [1]).first()
 (1, u'admin', u'admin@localhost')
+
+For more information about SQLAlchemy, head over to the
+`website <http://sqlalchemy.org/>`_.
","diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 8d06187f..5a064469 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -188,3 +188,6 @@ You can also pass string of SQL statements to the
 
 >>> engine.execute('select * from users where id = :1', [1]).first()
 (1, u'admin', u'admin@localhost')
+
+For more information about SQLAlchemy, head over to the
+`website <http://sqlalchemy.org/>`_.
"
ce18d4575dd8468878668d777d83448eeae4fd0d,976e792336fa6c4696f534ac1d537d2a86a75e72,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Added links for SQLAlchemy and WTForms.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index e79f9d3a..0d6a313e 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -107,3 +107,8 @@ takes advantage of the `_formhelpers.html` template:
       </dl>
       <p><input type=submit value=Register>
     </form>
+
+For more information about WTForms, head over to the `WTForms
+website`_.
+
+.. _WTForms website: http://wtforms.simplecodes.com/
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index e79f9d3a..0d6a313e 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -107,3 +107,8 @@ takes advantage of the `_formhelpers.html` template:
       </dl>
       <p><input type=submit value=Register>
     </form>
+
+For more information about WTForms, head over to the `WTForms
+website`_.
+
+.. _WTForms website: http://wtforms.simplecodes.com/
"
976e792336fa6c4696f534ac1d537d2a86a75e72,56675b3bade603a458d01443bda8070ca0489005,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Fixed indentation of an example.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 0d6a313e..262d364f 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -75,9 +75,7 @@ Here an example `_formhelpers.html` template with such a macro:
       <dd>{{ field(**kwargs)|safe }}
       {% if field.errors %}
         <ul class=""errors"">
-       {% for error in field.errors %}
-         <li>{{ error }}</li>
-       {% endfor %}
+        {% for error in field.errors %}<li>{{ error }}{% endfor %}
         </ul>
       {% endif %}
       </dd>
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 0d6a313e..262d364f 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -75,9 +75,7 @@ Here an example `_formhelpers.html` template with such a macro:
       <dd>{{ field(**kwargs)|safe }}
       {% if field.errors %}
         <ul class=""errors"">
-       {% for error in field.errors %}
-         <li>{{ error }}</li>
-       {% endfor %}
+        {% for error in field.errors %}<li>{{ error }}{% endfor %}
         </ul>
       {% endif %}
       </dd>
"
56675b3bade603a458d01443bda8070ca0489005,166f5ed254d829b2d87fca241e1a22b0a64fff1c,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Forgot to link the website.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 262d364f..2a0b4ac8 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -3,7 +3,7 @@ Form Validation with WTForms
 
 When you have to work with form data submitted by a browser view code
 quickly becomes very hard to read.  There are libraries out there designed
-to make this process easier to manage.  One of them is WTForms which we
+to make this process easier to manage.  One of them is `WTForms`_ which we
 will handle here.  If you find yourself in the situation of having many
 forms, you might want to give it a try.
 
@@ -109,4 +109,5 @@ takes advantage of the `_formhelpers.html` template:
 For more information about WTForms, head over to the `WTForms
 website`_.
 
+.. _WTForms: http://wtforms.simplecodes.com/
 .. _WTForms website: http://wtforms.simplecodes.com/
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 262d364f..2a0b4ac8 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -3,7 +3,7 @@ Form Validation with WTForms
 
 When you have to work with form data submitted by a browser view code
 quickly becomes very hard to read.  There are libraries out there designed
-to make this process easier to manage.  One of them is WTForms which we
+to make this process easier to manage.  One of them is `WTForms`_ which we
 will handle here.  If you find yourself in the situation of having many
 forms, you might want to give it a try.
 
@@ -109,4 +109,5 @@ takes advantage of the `_formhelpers.html` template:
 For more information about WTForms, head over to the `WTForms
 website`_.
 
+.. _WTForms: http://wtforms.simplecodes.com/
 .. _WTForms website: http://wtforms.simplecodes.com/
"
166f5ed254d829b2d87fca241e1a22b0a64fff1c,84899948be190a5e180fdccb25e6d7a8498fee7c,docs/tutorial/index.rst,docs/tutorial/index.rst,docs/tutorial/index.rst,Corrected order of the tutorial,"diff --git a/docs/tutorial/index.rst b/docs/tutorial/index.rst
index da37cf7a..3f2d659e 100644
--- a/docs/tutorial/index.rst
+++ b/docs/tutorial/index.rst
@@ -24,8 +24,8 @@ the `example source`_.
    folders
    schema
    setup
-   dbcon
    dbinit
+   dbcon
    views
    templates
    css
","diff --git a/docs/tutorial/index.rst b/docs/tutorial/index.rst
index da37cf7a..3f2d659e 100644
--- a/docs/tutorial/index.rst
+++ b/docs/tutorial/index.rst
@@ -24,8 +24,8 @@ the `example source`_.
    folders
    schema
    setup
-   dbcon
    dbinit
+   dbcon
    views
    templates
    css
"
84899948be190a5e180fdccb25e6d7a8498fee7c,a50a87c4ca7f44821e9561ae6b69300b8809c46c,docs/deploying.rst,docs/deploying.rst,docs/deploying.rst,ScriptName -> ScriptAlias,"diff --git a/docs/deploying.rst b/docs/deploying.rst
index 0d0ed19e..30e43888 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -132,7 +132,7 @@ In Apache for example you can put a like like this into the config:
 
 .. sourcecode:: apache
 
-    ScriptName /app /path/to/the/application.cgi
+    ScriptAlias /app /path/to/the/application.cgi
 
 For more information consult the documentation of your webserver.
 
","diff --git a/docs/deploying.rst b/docs/deploying.rst
index 0d0ed19e..30e43888 100644
--- a/docs/deploying.rst
+++ b/docs/deploying.rst
@@ -132,7 +132,7 @@ In Apache for example you can put a like like this into the config:
 
 .. sourcecode:: apache
 
-    ScriptName /app /path/to/the/application.cgi
+    ScriptAlias /app /path/to/the/application.cgi
 
 For more information consult the documentation of your webserver.
 
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying.rst,docs/deploying.rst,,Break up deployment docs into separate documents.,"diff --git a/docs/deploying.rst b/docs/deploying.rst
deleted file mode 100644
index 30e43888..00000000
--- a/docs/deploying.rst
+++ /dev/null
@@ -1,307 +0,0 @@
-Deployment Options
-==================
-
-Depending on what you have available there are multiple ways to run Flask
-applications.  A very common method is to use the builtin server during
-development and maybe behind a proxy for simple applications, but there
-are more options available.
-
-If you have a different WSGI server look up the server documentation about
-how to use a WSGI app with it.  Just remember that your application object
-is the actual WSGI application.
-
-
-mod_wsgi (Apache)
------------------
-
-If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
-
-.. _Apache: http://httpd.apache.org/
-
-Installing `mod_wsgi`
-`````````````````````
-
-If you don't have `mod_wsgi` installed yet you have to either install it using
-a package manager or compile it yourself.
-
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
-
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
-
-    # apt-get install libapache2-mod-wsgi
-
-On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
-
-    # pkg_add -r mod_wsgi
-
-If you are using pkgsrc you can install `mod_wsgi` by compiling the
-`www/ap2-wsgi` package.
-
-If you encounter segfaulting child processes after the first apache reload you
-can safely ignore them.  Just restart the server.
-
-Creating a `.wsgi` file
-```````````````````````
-
-To run your application you need a `yourapplication.wsgi` file.  This file
-contains the code `mod_wsgi` is executing on startup to get the application
-object.  The object called `application` in that file is then used as
-application.
-
-For most applications the following file should be sufficient::
-
-    from yourapplication import app as application
-
-If you don't have a factory function for application creation but a singleton
-instance you can directly import that one as `application`.
-
-Store that file somewhere where you will find it again (eg:
-`/var/www/yourapplication`) and make sure that `yourapplication` and all
-the libraries that are in use are on the python load path.  If you don't
-want to install it system wide consider using a `virtual python`_ instance.
-
-Configuring Apache
-``````````````````
-
-The last thing you have to do is to create an Apache configuration file for
-your application.  In this example we are telling `mod_wsgi` to execute the
-application under a different user for security reasons:
-
-.. sourcecode:: apache
-
-    <VirtualHost *>
-        ServerName example.com
-
-        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
-        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
-
-        <Directory /var/www/yourapplication>
-            WSGIProcessGroup yourapplication
-            WSGIApplicationGroup %{GLOBAL}
-            Order deny,allow
-            Allow from all
-        </Directory>
-    </VirtualHost>
-
-For more information consult the `mod_wsgi wiki`_.
-
-.. _mod_wsgi: http://code.google.com/p/modwsgi/
-.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
-.. _virtual python: http://pypi.python.org/pypi/virtualenv
-.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
-
-
-CGI
----
-
-If all other deployment methods do not work, CGI will work for sure.  CGI
-is supported by all major servers but usually has a less-than-optimal
-performance.
-
-This is also the way you can use a Flask application on Google's
-`AppEngine`_, there however the execution does happen in a CGI-like
-environment.  The application's performance is unaffected because of that.
-
-.. _AppEngine: http://code.google.com/appengine/
-
-Creating a `.cgi` file
-``````````````````````
-
-First you need to create the CGI application file.  Let's call it
-`yourapplication.cgi`::
-
-    #!/usr/bin/python
-    from wsgiref.handlers import CGIHandler
-    from yourapplication import app
-
-    CGIHandler().run(app)
-
-If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
-2.5 and higher ship this as part of the standard library.
-
-Server Setup
-````````````
-
-Usually there are two ways to configure the server.  Either just copy the
-`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
-rewrite the URL) or let the server point to the file directly.
-
-In Apache for example you can put a like like this into the config:
-
-.. sourcecode:: apache
-
-    ScriptAlias /app /path/to/the/application.cgi
-
-For more information consult the documentation of your webserver.
-
-
-
-FastCGI
--------
-
-A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
-is FastCGI.  To use your WSGI application with any of them you will need
-a FastCGI server first.
-
-The most popular one is `flup`_ which we will use for this guide.  Make
-sure to have it installed.
-
-Creating a `.fcgi` file
-```````````````````````
-
-First you need to create the FastCGI server file.  Let's call it
-`yourapplication.fcgi`::
-
-    #!/usr/bin/python
-    from flup.server.fcgi import WSGIServer
-    from yourapplication import app
-
-    WSGIServer(app).run()
-
-This is enough for Apache to work, however lighttpd and nginx need a
-socket to communicate with the FastCGI server.  For that to work you
-need to pass the path to the socket to the
-:class:`~flup.server.fcgi.WSGIServer`::
-
-    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
-
-The path has to be the exact same path you define in the server
-config.
-
-Save the `yourapplication.fcgi` file somewhere you will find it again.
-It makes sense to have that in `/var/www/yourapplication` or something
-similar.
-
-Make sure to set the executable bit on that file so that the servers
-can execute it::
-
-    # chmod +x /var/www/yourapplication/yourapplication.fcgi
-
-Configuring lighttpd
-````````````````````
-
-A basic FastCGI configuration for lighttpd looks like that::
-
-    fastcgi.server = (""/yourapplication"" =>
-        ""yourapplication"" => (
-            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
-            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
-            ""check-local"" => ""disable""
-        )
-    )
-
-This configuration binds the application to `/yourapplication`.  If you
-want the application to work in the URL root you have to work around a
-lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
-middleware.
-
-Make sure to apply it only if you are mounting the application the URL
-root.
-
-Configuring nginx
-`````````````````
-
-Installing FastCGI applications on nginx is a bit tricky because by default
-some FastCGI parameters are not properly forwarded.
-
-A basic FastCGI configuration for nginx looks like this::
-
-    location /yourapplication/ {
-        include fastcgi_params;
-        if ($uri ~ ^/yourapplication/(.*)?) {
-            set $path_url $1;
-        }
-        fastcgi_param PATH_INFO $path_url;
-        fastcgi_param SCRIPT_NAME /yourapplication;
-        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
-    }
-
-This configuration binds the application to `/yourapplication`.  If you want
-to have it in the URL root it's a bit easier because you don't have to figure
-out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
-
-    location /yourapplication/ {
-        include fastcgi_params;
-        fastcgi_param PATH_INFO $fastcgi_script_name;
-        fastcgi_param SCRIPT_NAME """";
-        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
-    }
-
-Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
-can either write an `init.d` script for that or execute it inside a screen
-session::
-
-    $ screen
-    $ /var/www/yourapplication/yourapplication.fcgi
-
-Debugging
-`````````
-
-FastCGI deployments tend to be hard to debug on most webservers.  Very often the
-only thing the server log tells you is something along the lines of ""premature
-end of headers"".  In order to debug the application the only thing that can
-really give you ideas why it breaks is switching to the correct user and
-executing the application by hand.
-
-This example assumes your application is called `application.fcgi` and that your
-webserver user is `www-data`::
-
-    $ su www-data
-    $ cd /var/www/yourapplication
-    $ python application.fcgi
-    Traceback (most recent call last):
-      File ""yourapplication.fcg"", line 4, in <module>
-    ImportError: No module named yourapplication
-
-In this case the error seems to be ""yourapplication"" not being on the python
-path.  Common problems are:
-
--   relative paths being used.  Don't rely on the current working directory
--   the code depending on environment variables that are not set by the
-    web server.
--   different python interpreters being used.
-
-.. _lighttpd: http://www.lighttpd.net/
-.. _nginx: http://nginx.net/
-.. _flup: http://trac.saddi.com/flup
-
-
-
-Tornado
---------
-
-`Tornado`_ is an open source version of the scalable, non-blocking web server and tools that power `FriendFeed`_.
-Because it is non-blocking and uses epoll, it can handle thousands of simultaneous standing connections, which means it is ideal for real-time web services.
-Integrating this service with Flask is a trivial task::
-
-    
-    from tornado.wsgi import WSGIContainer
-    from tornado.httpserver import HTTPServer
-    from tornado.ioloop import IOLoop
-    from yourapplication import app
-    
-    http_server = HTTPServer(WSGIContainer(app))
-    http_server.listen(5000)
-    IOLoop.instance().start()
-
-
-.. _Tornado: http://www.tornadoweb.org/
-.. _FriendFeed: http://friendfeed.com/
-
-
-Gevent
--------
-
-`Gevent`_ is a coroutine-based Python networking library that uses `greenlet`_ to provide a high-level synchronous API on top of `libevent`_ event loop::
-
-    from gevent.wsgi import WSGIServer
-    from yourapplication import app
-
-    http_server = WSGIServer(('', 5000), app)
-    http_server.serve_forever()
-
-.. _Gevent: http://www.gevent.org/
-.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
-.. _libevent: http://monkey.org/~provos/libevent/
","diff --git a/docs/deploying.rst b/docs/deploying.rst
deleted file mode 100644
index 30e43888..00000000
--- a/docs/deploying.rst
+++ /dev/null
@@ -1,307 +0,0 @@
-Deployment Options
-==================
-
-Depending on what you have available there are multiple ways to run Flask
-applications.  A very common method is to use the builtin server during
-development and maybe behind a proxy for simple applications, but there
-are more options available.
-
-If you have a different WSGI server look up the server documentation about
-how to use a WSGI app with it.  Just remember that your application object
-is the actual WSGI application.
-
-
-mod_wsgi (Apache)
------------------
-
-If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
-
-.. _Apache: http://httpd.apache.org/
-
-Installing `mod_wsgi`
-`````````````````````
-
-If you don't have `mod_wsgi` installed yet you have to either install it using
-a package manager or compile it yourself.
-
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
-
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
-
-    # apt-get install libapache2-mod-wsgi
-
-On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
-
-    # pkg_add -r mod_wsgi
-
-If you are using pkgsrc you can install `mod_wsgi` by compiling the
-`www/ap2-wsgi` package.
-
-If you encounter segfaulting child processes after the first apache reload you
-can safely ignore them.  Just restart the server.
-
-Creating a `.wsgi` file
-```````````````````````
-
-To run your application you need a `yourapplication.wsgi` file.  This file
-contains the code `mod_wsgi` is executing on startup to get the application
-object.  The object called `application` in that file is then used as
-application.
-
-For most applications the following file should be sufficient::
-
-    from yourapplication import app as application
-
-If you don't have a factory function for application creation but a singleton
-instance you can directly import that one as `application`.
-
-Store that file somewhere where you will find it again (eg:
-`/var/www/yourapplication`) and make sure that `yourapplication` and all
-the libraries that are in use are on the python load path.  If you don't
-want to install it system wide consider using a `virtual python`_ instance.
-
-Configuring Apache
-``````````````````
-
-The last thing you have to do is to create an Apache configuration file for
-your application.  In this example we are telling `mod_wsgi` to execute the
-application under a different user for security reasons:
-
-.. sourcecode:: apache
-
-    <VirtualHost *>
-        ServerName example.com
-
-        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
-        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
-
-        <Directory /var/www/yourapplication>
-            WSGIProcessGroup yourapplication
-            WSGIApplicationGroup %{GLOBAL}
-            Order deny,allow
-            Allow from all
-        </Directory>
-    </VirtualHost>
-
-For more information consult the `mod_wsgi wiki`_.
-
-.. _mod_wsgi: http://code.google.com/p/modwsgi/
-.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
-.. _virtual python: http://pypi.python.org/pypi/virtualenv
-.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
-
-
-CGI
----
-
-If all other deployment methods do not work, CGI will work for sure.  CGI
-is supported by all major servers but usually has a less-than-optimal
-performance.
-
-This is also the way you can use a Flask application on Google's
-`AppEngine`_, there however the execution does happen in a CGI-like
-environment.  The application's performance is unaffected because of that.
-
-.. _AppEngine: http://code.google.com/appengine/
-
-Creating a `.cgi` file
-``````````````````````
-
-First you need to create the CGI application file.  Let's call it
-`yourapplication.cgi`::
-
-    #!/usr/bin/python
-    from wsgiref.handlers import CGIHandler
-    from yourapplication import app
-
-    CGIHandler().run(app)
-
-If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
-2.5 and higher ship this as part of the standard library.
-
-Server Setup
-````````````
-
-Usually there are two ways to configure the server.  Either just copy the
-`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
-rewrite the URL) or let the server point to the file directly.
-
-In Apache for example you can put a like like this into the config:
-
-.. sourcecode:: apache
-
-    ScriptAlias /app /path/to/the/application.cgi
-
-For more information consult the documentation of your webserver.
-
-
-
-FastCGI
--------
-
-A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
-is FastCGI.  To use your WSGI application with any of them you will need
-a FastCGI server first.
-
-The most popular one is `flup`_ which we will use for this guide.  Make
-sure to have it installed.
-
-Creating a `.fcgi` file
-```````````````````````
-
-First you need to create the FastCGI server file.  Let's call it
-`yourapplication.fcgi`::
-
-    #!/usr/bin/python
-    from flup.server.fcgi import WSGIServer
-    from yourapplication import app
-
-    WSGIServer(app).run()
-
-This is enough for Apache to work, however lighttpd and nginx need a
-socket to communicate with the FastCGI server.  For that to work you
-need to pass the path to the socket to the
-:class:`~flup.server.fcgi.WSGIServer`::
-
-    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
-
-The path has to be the exact same path you define in the server
-config.
-
-Save the `yourapplication.fcgi` file somewhere you will find it again.
-It makes sense to have that in `/var/www/yourapplication` or something
-similar.
-
-Make sure to set the executable bit on that file so that the servers
-can execute it::
-
-    # chmod +x /var/www/yourapplication/yourapplication.fcgi
-
-Configuring lighttpd
-````````````````````
-
-A basic FastCGI configuration for lighttpd looks like that::
-
-    fastcgi.server = (""/yourapplication"" =>
-        ""yourapplication"" => (
-            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
-            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
-            ""check-local"" => ""disable""
-        )
-    )
-
-This configuration binds the application to `/yourapplication`.  If you
-want the application to work in the URL root you have to work around a
-lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
-middleware.
-
-Make sure to apply it only if you are mounting the application the URL
-root.
-
-Configuring nginx
-`````````````````
-
-Installing FastCGI applications on nginx is a bit tricky because by default
-some FastCGI parameters are not properly forwarded.
-
-A basic FastCGI configuration for nginx looks like this::
-
-    location /yourapplication/ {
-        include fastcgi_params;
-        if ($uri ~ ^/yourapplication/(.*)?) {
-            set $path_url $1;
-        }
-        fastcgi_param PATH_INFO $path_url;
-        fastcgi_param SCRIPT_NAME /yourapplication;
-        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
-    }
-
-This configuration binds the application to `/yourapplication`.  If you want
-to have it in the URL root it's a bit easier because you don't have to figure
-out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
-
-    location /yourapplication/ {
-        include fastcgi_params;
-        fastcgi_param PATH_INFO $fastcgi_script_name;
-        fastcgi_param SCRIPT_NAME """";
-        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
-    }
-
-Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
-can either write an `init.d` script for that or execute it inside a screen
-session::
-
-    $ screen
-    $ /var/www/yourapplication/yourapplication.fcgi
-
-Debugging
-`````````
-
-FastCGI deployments tend to be hard to debug on most webservers.  Very often the
-only thing the server log tells you is something along the lines of ""premature
-end of headers"".  In order to debug the application the only thing that can
-really give you ideas why it breaks is switching to the correct user and
-executing the application by hand.
-
-This example assumes your application is called `application.fcgi` and that your
-webserver user is `www-data`::
-
-    $ su www-data
-    $ cd /var/www/yourapplication
-    $ python application.fcgi
-    Traceback (most recent call last):
-      File ""yourapplication.fcg"", line 4, in <module>
-    ImportError: No module named yourapplication
-
-In this case the error seems to be ""yourapplication"" not being on the python
-path.  Common problems are:
-
--   relative paths being used.  Don't rely on the current working directory
--   the code depending on environment variables that are not set by the
-    web server.
--   different python interpreters being used.
-
-.. _lighttpd: http://www.lighttpd.net/
-.. _nginx: http://nginx.net/
-.. _flup: http://trac.saddi.com/flup
-
-
-
-Tornado
---------
-
-`Tornado`_ is an open source version of the scalable, non-blocking web server and tools that power `FriendFeed`_.
-Because it is non-blocking and uses epoll, it can handle thousands of simultaneous standing connections, which means it is ideal for real-time web services.
-Integrating this service with Flask is a trivial task::
-
-    
-    from tornado.wsgi import WSGIContainer
-    from tornado.httpserver import HTTPServer
-    from tornado.ioloop import IOLoop
-    from yourapplication import app
-    
-    http_server = HTTPServer(WSGIContainer(app))
-    http_server.listen(5000)
-    IOLoop.instance().start()
-
-
-.. _Tornado: http://www.tornadoweb.org/
-.. _FriendFeed: http://friendfeed.com/
-
-
-Gevent
--------
-
-`Gevent`_ is a coroutine-based Python networking library that uses `greenlet`_ to provide a high-level synchronous API on top of `libevent`_ event loop::
-
-    from gevent.wsgi import WSGIServer
-    from yourapplication import app
-
-    http_server = WSGIServer(('', 5000), app)
-    http_server.serve_forever()
-
-.. _Gevent: http://www.gevent.org/
-.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
-.. _libevent: http://monkey.org/~provos/libevent/
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying/cgi.rst,,docs/deploying/cgi.rst,Break up deployment docs into separate documents.,"diff --git a/docs/deploying/cgi.rst b/docs/deploying/cgi.rst
new file mode 100644
index 00000000..15b5ff1d
--- /dev/null
+++ b/docs/deploying/cgi.rst
@@ -0,0 +1,42 @@
+CGI
+===
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major servers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+----------------------
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+------------
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptAlias /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
","diff --git a/docs/deploying/cgi.rst b/docs/deploying/cgi.rst
new file mode 100644
index 00000000..15b5ff1d
--- /dev/null
+++ b/docs/deploying/cgi.rst
@@ -0,0 +1,42 @@
+CGI
+===
+
+If all other deployment methods do not work, CGI will work for sure.  CGI
+is supported by all major servers but usually has a less-than-optimal
+performance.
+
+This is also the way you can use a Flask application on Google's
+`AppEngine`_, there however the execution does happen in a CGI-like
+environment.  The application's performance is unaffected because of that.
+
+.. _AppEngine: http://code.google.com/appengine/
+
+Creating a `.cgi` file
+----------------------
+
+First you need to create the CGI application file.  Let's call it
+`yourapplication.cgi`::
+
+    #!/usr/bin/python
+    from wsgiref.handlers import CGIHandler
+    from yourapplication import app
+
+    CGIHandler().run(app)
+
+If you're running Python 2.4 you will need the :mod:`wsgiref` package.  Python
+2.5 and higher ship this as part of the standard library.
+
+Server Setup
+------------
+
+Usually there are two ways to configure the server.  Either just copy the
+`.cgi` into a `cgi-bin` (and use `mod_rerwite` or something similar to
+rewrite the URL) or let the server point to the file directly.
+
+In Apache for example you can put a like like this into the config:
+
+.. sourcecode:: apache
+
+    ScriptAlias /app /path/to/the/application.cgi
+
+For more information consult the documentation of your webserver.
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying/fastcgi.rst,,docs/deploying/fastcgi.rst,Break up deployment docs into separate documents.,"diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
new file mode 100644
index 00000000..b549ddfd
--- /dev/null
+++ b/docs/deploying/fastcgi.rst
@@ -0,0 +1,128 @@
+FastCGI
+=======
+
+A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
+is FastCGI.  To use your WSGI application with any of them you will need
+a FastCGI server first.
+
+The most popular one is `flup`_ which we will use for this guide.  Make
+sure to have it installed.
+
+Creating a `.fcgi` file
+-----------------------
+
+First you need to create the FastCGI server file.  Let's call it
+`yourapplication.fcgi`::
+
+    #!/usr/bin/python
+    from flup.server.fcgi import WSGIServer
+    from yourapplication import app
+
+    WSGIServer(app).run()
+
+This is enough for Apache to work, however lighttpd and nginx need a
+socket to communicate with the FastCGI server.  For that to work you
+need to pass the path to the socket to the
+:class:`~flup.server.fcgi.WSGIServer`::
+
+    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
+
+The path has to be the exact same path you define in the server
+config.
+
+Save the `yourapplication.fcgi` file somewhere you will find it again.
+It makes sense to have that in `/var/www/yourapplication` or something
+similar.
+
+Make sure to set the executable bit on that file so that the servers
+can execute it::
+
+    # chmod +x /var/www/yourapplication/yourapplication.fcgi
+
+Configuring lighttpd
+--------------------
+
+A basic FastCGI configuration for lighttpd looks like that::
+
+    fastcgi.server = (""/yourapplication"" =>
+        ""yourapplication"" => (
+            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
+            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
+            ""check-local"" => ""disable""
+        )
+    )
+
+This configuration binds the application to `/yourapplication`.  If you
+want the application to work in the URL root you have to work around a
+lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
+middleware.
+
+Make sure to apply it only if you are mounting the application the URL
+root.
+
+Configuring nginx
+-----------------
+
+Installing FastCGI applications on nginx is a bit tricky because by default
+some FastCGI parameters are not properly forwarded.
+
+A basic FastCGI configuration for nginx looks like this::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        if ($uri ~ ^/yourapplication/(.*)?) {
+            set $path_url $1;
+        }
+        fastcgi_param PATH_INFO $path_url;
+        fastcgi_param SCRIPT_NAME /yourapplication;
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+This configuration binds the application to `/yourapplication`.  If you want
+to have it in the URL root it's a bit easier because you don't have to figure
+out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        fastcgi_param PATH_INFO $fastcgi_script_name;
+        fastcgi_param SCRIPT_NAME """";
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
+can either write an `init.d` script for that or execute it inside a screen
+session::
+
+    $ screen
+    $ /var/www/yourapplication/yourapplication.fcgi
+
+Debugging
+---------
+
+FastCGI deployments tend to be hard to debug on most webservers.  Very often the
+only thing the server log tells you is something along the lines of ""premature
+end of headers"".  In order to debug the application the only thing that can
+really give you ideas why it breaks is switching to the correct user and
+executing the application by hand.
+
+This example assumes your application is called `application.fcgi` and that your
+webserver user is `www-data`::
+
+    $ su www-data
+    $ cd /var/www/yourapplication
+    $ python application.fcgi
+    Traceback (most recent call last):
+      File ""yourapplication.fcg"", line 4, in <module>
+    ImportError: No module named yourapplication
+
+In this case the error seems to be ""yourapplication"" not being on the python
+path.  Common problems are:
+
+-   relative paths being used.  Don't rely on the current working directory
+-   the code depending on environment variables that are not set by the
+    web server.
+-   different python interpreters being used.
+
+.. _lighttpd: http://www.lighttpd.net/
+.. _nginx: http://nginx.net/
+.. _flup: http://trac.saddi.com/flup
","diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
new file mode 100644
index 00000000..b549ddfd
--- /dev/null
+++ b/docs/deploying/fastcgi.rst
@@ -0,0 +1,128 @@
+FastCGI
+=======
+
+A very popular deployment setup on servers like `lighttpd`_ and `nginx`_
+is FastCGI.  To use your WSGI application with any of them you will need
+a FastCGI server first.
+
+The most popular one is `flup`_ which we will use for this guide.  Make
+sure to have it installed.
+
+Creating a `.fcgi` file
+-----------------------
+
+First you need to create the FastCGI server file.  Let's call it
+`yourapplication.fcgi`::
+
+    #!/usr/bin/python
+    from flup.server.fcgi import WSGIServer
+    from yourapplication import app
+
+    WSGIServer(app).run()
+
+This is enough for Apache to work, however lighttpd and nginx need a
+socket to communicate with the FastCGI server.  For that to work you
+need to pass the path to the socket to the
+:class:`~flup.server.fcgi.WSGIServer`::
+
+    WSGIServer(application, bindAddress='/path/to/fcgi.sock').run()
+
+The path has to be the exact same path you define in the server
+config.
+
+Save the `yourapplication.fcgi` file somewhere you will find it again.
+It makes sense to have that in `/var/www/yourapplication` or something
+similar.
+
+Make sure to set the executable bit on that file so that the servers
+can execute it::
+
+    # chmod +x /var/www/yourapplication/yourapplication.fcgi
+
+Configuring lighttpd
+--------------------
+
+A basic FastCGI configuration for lighttpd looks like that::
+
+    fastcgi.server = (""/yourapplication"" =>
+        ""yourapplication"" => (
+            ""socket"" => ""/tmp/yourapplication-fcgi.sock"",
+            ""bin-path"" => ""/var/www/yourapplication/yourapplication.fcgi"",
+            ""check-local"" => ""disable""
+        )
+    )
+
+This configuration binds the application to `/yourapplication`.  If you
+want the application to work in the URL root you have to work around a
+lighttpd bug with the :class:`~werkzeug.contrib.fixers.LighttpdCGIRootFix`
+middleware.
+
+Make sure to apply it only if you are mounting the application the URL
+root.
+
+Configuring nginx
+-----------------
+
+Installing FastCGI applications on nginx is a bit tricky because by default
+some FastCGI parameters are not properly forwarded.
+
+A basic FastCGI configuration for nginx looks like this::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        if ($uri ~ ^/yourapplication/(.*)?) {
+            set $path_url $1;
+        }
+        fastcgi_param PATH_INFO $path_url;
+        fastcgi_param SCRIPT_NAME /yourapplication;
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+This configuration binds the application to `/yourapplication`.  If you want
+to have it in the URL root it's a bit easier because you don't have to figure
+out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
+
+    location /yourapplication/ {
+        include fastcgi_params;
+        fastcgi_param PATH_INFO $fastcgi_script_name;
+        fastcgi_param SCRIPT_NAME """";
+        fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
+    }
+
+Since Nginx doesn't load FastCGI apps, you have to do it by yourself.  You
+can either write an `init.d` script for that or execute it inside a screen
+session::
+
+    $ screen
+    $ /var/www/yourapplication/yourapplication.fcgi
+
+Debugging
+---------
+
+FastCGI deployments tend to be hard to debug on most webservers.  Very often the
+only thing the server log tells you is something along the lines of ""premature
+end of headers"".  In order to debug the application the only thing that can
+really give you ideas why it breaks is switching to the correct user and
+executing the application by hand.
+
+This example assumes your application is called `application.fcgi` and that your
+webserver user is `www-data`::
+
+    $ su www-data
+    $ cd /var/www/yourapplication
+    $ python application.fcgi
+    Traceback (most recent call last):
+      File ""yourapplication.fcg"", line 4, in <module>
+    ImportError: No module named yourapplication
+
+In this case the error seems to be ""yourapplication"" not being on the python
+path.  Common problems are:
+
+-   relative paths being used.  Don't rely on the current working directory
+-   the code depending on environment variables that are not set by the
+    web server.
+-   different python interpreters being used.
+
+.. _lighttpd: http://www.lighttpd.net/
+.. _nginx: http://nginx.net/
+.. _flup: http://trac.saddi.com/flup
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying/index.rst,,docs/deploying/index.rst,Break up deployment docs into separate documents.,"diff --git a/docs/deploying/index.rst b/docs/deploying/index.rst
new file mode 100644
index 00000000..a59e4e9a
--- /dev/null
+++ b/docs/deploying/index.rst
@@ -0,0 +1,19 @@
+Deployment Options
+==================
+
+Depending on what you have available there are multiple ways to run Flask
+applications.  A very common method is to use the builtin server during
+development and maybe behind a proxy for simple applications, but there
+are more options available.
+
+If you have a different WSGI server look up the server documentation about
+how to use a WSGI app with it.  Just remember that your application object
+is the actual WSGI application.
+
+.. toctree::
+   :maxdepth: 2
+
+   mod_wsgi
+   cgi
+   fastcgi
+   others
","diff --git a/docs/deploying/index.rst b/docs/deploying/index.rst
new file mode 100644
index 00000000..a59e4e9a
--- /dev/null
+++ b/docs/deploying/index.rst
@@ -0,0 +1,19 @@
+Deployment Options
+==================
+
+Depending on what you have available there are multiple ways to run Flask
+applications.  A very common method is to use the builtin server during
+development and maybe behind a proxy for simple applications, but there
+are more options available.
+
+If you have a different WSGI server look up the server documentation about
+how to use a WSGI app with it.  Just remember that your application object
+is the actual WSGI application.
+
+.. toctree::
+   :maxdepth: 2
+
+   mod_wsgi
+   cgi
+   fastcgi
+   others
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying/mod_wsgi.rst,,docs/deploying/mod_wsgi.rst,Break up deployment docs into separate documents.,"diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
new file mode 100644
index 00000000..4a2875f2
--- /dev/null
+++ b/docs/deploying/mod_wsgi.rst
@@ -0,0 +1,80 @@
+mod_wsgi (Apache)
+=================
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+---------------------
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+-----------------------
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+------------------
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
","diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
new file mode 100644
index 00000000..4a2875f2
--- /dev/null
+++ b/docs/deploying/mod_wsgi.rst
@@ -0,0 +1,80 @@
+mod_wsgi (Apache)
+=================
+
+If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
+
+.. _Apache: http://httpd.apache.org/
+
+Installing `mod_wsgi`
+---------------------
+
+If you don't have `mod_wsgi` installed yet you have to either install it using
+a package manager or compile it yourself.
+
+The mod_wsgi `installation instructions`_ cover installation instructions for
+source installations on UNIX systems.
+
+If you are using ubuntu / debian you can apt-get it and activate it as follows::
+
+    # apt-get install libapache2-mod-wsgi
+
+On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
+pkg_add::
+
+    # pkg_add -r mod_wsgi
+
+If you are using pkgsrc you can install `mod_wsgi` by compiling the
+`www/ap2-wsgi` package.
+
+If you encounter segfaulting child processes after the first apache reload you
+can safely ignore them.  Just restart the server.
+
+Creating a `.wsgi` file
+-----------------------
+
+To run your application you need a `yourapplication.wsgi` file.  This file
+contains the code `mod_wsgi` is executing on startup to get the application
+object.  The object called `application` in that file is then used as
+application.
+
+For most applications the following file should be sufficient::
+
+    from yourapplication import app as application
+
+If you don't have a factory function for application creation but a singleton
+instance you can directly import that one as `application`.
+
+Store that file somewhere where you will find it again (eg:
+`/var/www/yourapplication`) and make sure that `yourapplication` and all
+the libraries that are in use are on the python load path.  If you don't
+want to install it system wide consider using a `virtual python`_ instance.
+
+Configuring Apache
+------------------
+
+The last thing you have to do is to create an Apache configuration file for
+your application.  In this example we are telling `mod_wsgi` to execute the
+application under a different user for security reasons:
+
+.. sourcecode:: apache
+
+    <VirtualHost *>
+        ServerName example.com
+
+        WSGIDaemonProcess yourapplication user=user1 group=group1 threads=5
+        WSGIScriptAlias / /var/www/yourapplication/yourapplication.wsgi
+
+        <Directory /var/www/yourapplication>
+            WSGIProcessGroup yourapplication
+            WSGIApplicationGroup %{GLOBAL}
+            Order deny,allow
+            Allow from all
+        </Directory>
+    </VirtualHost>
+
+For more information consult the `mod_wsgi wiki`_.
+
+.. _mod_wsgi: http://code.google.com/p/modwsgi/
+.. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
+.. _virtual python: http://pypi.python.org/pypi/virtualenv
+.. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/deploying/others.rst,,docs/deploying/others.rst,Break up deployment docs into separate documents.,"diff --git a/docs/deploying/others.rst b/docs/deploying/others.rst
new file mode 100644
index 00000000..4e2f966c
--- /dev/null
+++ b/docs/deploying/others.rst
@@ -0,0 +1,48 @@
+Other Servers
+=============
+
+There are popular servers written in Python that allow the execution of
+WSGI applications as well.  Keep in mind though that some of these servers
+were written for very specific applications and might not work as well for
+standard WSGI application such as Flask powered ones.
+
+
+Tornado
+--------
+
+`Tornado`_ is an open source version of the scalable, non-blocking web
+server and tools that power `FriendFeed`_.  Because it is non-blocking and
+uses epoll, it can handle thousands of simultaneous standing connections,
+which means it is ideal for real-time web services.  Integrating this
+service with Flask is a trivial task::
+    
+    from tornado.wsgi import WSGIContainer
+    from tornado.httpserver import HTTPServer
+    from tornado.ioloop import IOLoop
+    from yourapplication import app
+    
+    http_server = HTTPServer(WSGIContainer(app))
+    http_server.listen(5000)
+    IOLoop.instance().start()
+
+
+.. _Tornado: http://www.tornadoweb.org/
+.. _FriendFeed: http://friendfeed.com/
+
+
+Gevent
+-------
+
+`Gevent`_ is a coroutine-based Python networking library that uses
+`greenlet`_ to provide a high-level synchronous API on top of `libevent`_
+event loop::
+
+    from gevent.wsgi import WSGIServer
+    from yourapplication import app
+
+    http_server = WSGIServer(('', 5000), app)
+    http_server.serve_forever()
+
+.. _Gevent: http://www.gevent.org/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+.. _libevent: http://monkey.org/~provos/libevent/
","diff --git a/docs/deploying/others.rst b/docs/deploying/others.rst
new file mode 100644
index 00000000..4e2f966c
--- /dev/null
+++ b/docs/deploying/others.rst
@@ -0,0 +1,48 @@
+Other Servers
+=============
+
+There are popular servers written in Python that allow the execution of
+WSGI applications as well.  Keep in mind though that some of these servers
+were written for very specific applications and might not work as well for
+standard WSGI application such as Flask powered ones.
+
+
+Tornado
+--------
+
+`Tornado`_ is an open source version of the scalable, non-blocking web
+server and tools that power `FriendFeed`_.  Because it is non-blocking and
+uses epoll, it can handle thousands of simultaneous standing connections,
+which means it is ideal for real-time web services.  Integrating this
+service with Flask is a trivial task::
+    
+    from tornado.wsgi import WSGIContainer
+    from tornado.httpserver import HTTPServer
+    from tornado.ioloop import IOLoop
+    from yourapplication import app
+    
+    http_server = HTTPServer(WSGIContainer(app))
+    http_server.listen(5000)
+    IOLoop.instance().start()
+
+
+.. _Tornado: http://www.tornadoweb.org/
+.. _FriendFeed: http://friendfeed.com/
+
+
+Gevent
+-------
+
+`Gevent`_ is a coroutine-based Python networking library that uses
+`greenlet`_ to provide a high-level synchronous API on top of `libevent`_
+event loop::
+
+    from gevent.wsgi import WSGIServer
+    from yourapplication import app
+
+    http_server = WSGIServer(('', 5000), app)
+    http_server.serve_forever()
+
+.. _Gevent: http://www.gevent.org/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+.. _libevent: http://monkey.org/~provos/libevent/
"
a50a87c4ca7f44821e9561ae6b69300b8809c46c,c64a4e0befc0718500c544f5c847d6632b8fb598,docs/index.rst,docs/index.rst,docs/index.rst,Break up deployment docs into separate documents.,"diff --git a/docs/index.rst b/docs/index.rst
index 06d8a4e8..5d3ddb2d 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -41,7 +41,7 @@ web development.
    tutorial/index
    testing
    patterns/index
-   deploying
+   deploying/index
    becomingbig
    design
 
","diff --git a/docs/index.rst b/docs/index.rst
index 06d8a4e8..5d3ddb2d 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -41,7 +41,7 @@ web development.
    tutorial/index
    testing
    patterns/index
-   deploying
+   deploying/index
    becomingbig
    design
 
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,docs/api.rst,docs/api.rst,docs/api.rst,Added JSON Support and started working on jQuery docs,"diff --git a/docs/api.rst b/docs/api.rst
index 5dcdfa95..247294a3 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -56,12 +56,15 @@ Incoming Request Data
 
    .. attribute:: stream
 
-      If the incoming form data was not encoded with a known encoding (for
-      example it was transmitted as JSON) the data is stored unmodified in
-      this stream for consumption.  For example to read the incoming
-      request data as JSON, one can do the following::
+      If the incoming form data was not encoded with a known mimetype
+      the data is stored unmodified in this stream for consumption.  Most
+      of the time it is a better idea to use :attr:`data` which will give
+      you that data as a string.  The stream only returns the data once.
       
-          json_body = simplejson.load(request.stream)
+   .. attribute:: data
+
+      Contains the incoming request data as string in case it came with
+      a mimetype Flask does not handle.
 
    .. attribute:: files
 
@@ -106,6 +109,20 @@ Incoming Request Data
       `root_url`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
+   .. attribute:: is_xhr
+
+      `True` if the request was triggered via a JavaScript
+      `XMLHttpRequest`. This only works with libraries that support the
+      ``X-Requested-With`` header and set it to `XMLHttpRequest`.
+      Libraries that do that are prototype, jQuery and Mochikit and
+      probably some more.
+
+   .. attribute:: json
+
+      Contains the parsed body of the JSON request if the mimetype of
+      the incoming data was `application/json`.  This requires Python 2.6
+      or an installed version of simplejson.
+
 Response Objects
 ----------------
 
@@ -201,6 +218,38 @@ Message Flashing
 
 .. autofunction:: get_flashed_messages
 
+Returning JSON
+--------------
+
+.. autofunction:: jsonify
+
+.. data:: json
+
+    If JSON support is picked up, this will be the module that Flask is
+    using to parse and serialize JSON.  So instead of doing this yourself::
+
+        try:
+            import simplejson as json
+        except ImportError:
+            import json
+
+    You can instead just do this::
+
+        from flask import json
+
+    For usage examples, read the :mod:`json` documentation.
+
+    The :func:`~json.dumps` function of this json module is also available
+    as filter called ``|tojson`` in Jinja2.  Note that inside `script`
+    tags no escaping must take place, so make sure to disable escaping
+    with ``|safe`` if you intend to use it inside `script` tags:
+
+    .. sourcecode:: html+jinja
+
+        <script type=text/javascript>
+            doSomethingWith({{ user.username|tojson|safe }});
+        </script>
+
 Template Rendering
 ------------------
 
","diff --git a/docs/api.rst b/docs/api.rst
index 5dcdfa95..247294a3 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -56,12 +56,15 @@ Incoming Request Data
 
    .. attribute:: stream
 
-      If the incoming form data was not encoded with a known encoding (for
-      example it was transmitted as JSON) the data is stored unmodified in
-      this stream for consumption.  For example to read the incoming
-      request data as JSON, one can do the following::
+      If the incoming form data was not encoded with a known mimetype
+      the data is stored unmodified in this stream for consumption.  Most
+      of the time it is a better idea to use :attr:`data` which will give
+      you that data as a string.  The stream only returns the data once.
       
-          json_body = simplejson.load(request.stream)
+   .. attribute:: data
+
+      Contains the incoming request data as string in case it came with
+      a mimetype Flask does not handle.
 
    .. attribute:: files
 
@@ -106,6 +109,20 @@ Incoming Request Data
       `root_url`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
+   .. attribute:: is_xhr
+
+      `True` if the request was triggered via a JavaScript
+      `XMLHttpRequest`. This only works with libraries that support the
+      ``X-Requested-With`` header and set it to `XMLHttpRequest`.
+      Libraries that do that are prototype, jQuery and Mochikit and
+      probably some more.
+
+   .. attribute:: json
+
+      Contains the parsed body of the JSON request if the mimetype of
+      the incoming data was `application/json`.  This requires Python 2.6
+      or an installed version of simplejson.
+
 Response Objects
 ----------------
 
@@ -201,6 +218,38 @@ Message Flashing
 
 .. autofunction:: get_flashed_messages
 
+Returning JSON
+--------------
+
+.. autofunction:: jsonify
+
+.. data:: json
+
+    If JSON support is picked up, this will be the module that Flask is
+    using to parse and serialize JSON.  So instead of doing this yourself::
+
+        try:
+            import simplejson as json
+        except ImportError:
+            import json
+
+    You can instead just do this::
+
+        from flask import json
+
+    For usage examples, read the :mod:`json` documentation.
+
+    The :func:`~json.dumps` function of this json module is also available
+    as filter called ``|tojson`` in Jinja2.  Note that inside `script`
+    tags no escaping must take place, so make sure to disable escaping
+    with ``|safe`` if you intend to use it inside `script` tags:
+
+    .. sourcecode:: html+jinja
+
+        <script type=text/javascript>
+            doSomethingWith({{ user.username|tojson|safe }});
+        </script>
+
 Template Rendering
 ------------------
 
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added JSON Support and started working on jQuery docs,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 037f6e11..8122deb7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -19,3 +19,4 @@ end of the request, the database connection is closed again.
    wtforms
    templateinheritance
    flashing
+   jquery
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 037f6e11..8122deb7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -19,3 +19,4 @@ end of the request, the database connection is closed again.
    wtforms
    templateinheritance
    flashing
+   jquery
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,docs/patterns/jquery.rst,,docs/patterns/jquery.rst,Added JSON Support and started working on jQuery docs,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
new file mode 100644
index 00000000..cb5aa234
--- /dev/null
+++ b/docs/patterns/jquery.rst
@@ -0,0 +1,59 @@
+AJAX With jQuery
+================
+
+`jQuery`_ is a small JavaScript library commonly used to simplify working
+with the DOM and JavaScript in general.  It is the perfect tool to make
+web applications more dynamic by exchanging JSON between server and
+client.
+
+.. _jQuery: http://jquery.com/
+
+Loading jQuery
+--------------
+
+In order to use jQuery, you have to download it first and place it in the
+static folder of your application and then ensure it's loaded.  Ideally
+you have a layout template that is used for all pages where you just have
+to add two script statements to your `head` section.  One for jQuery, and
+one for your own script (called `app.js` here):
+
+.. sourcecode:: html
+
+   <script type=text/javascript src=""{{
+       url_for('static', filename='jquery.js') }}""></script>
+   <script type=text/javascript src=""{{
+       url_for('static', filename='app.js') }}""></script>
+
+Where is My Site?
+-----------------
+
+Do you know where your application is?  If you are developing the answer
+is quite simple: it's on localhost port something and directly on the root
+of that server.  But what if you later decide to move your application to
+a different location?  For example to ``http://example.com/myapp``?  On
+the server side this never was a problem because we were using the handy
+:func:`~flask.url_for` function that did could answer that question for
+us, but if we are using jQuery we should better not hardcode the path to
+the application but make that dynamic, so how can we do that?
+
+A simple method would be to add a script tag to our page that sets a
+global variable to the prefix to the root of the application.  Something
+like this:
+
+.. sourcecode:: html+jinja
+
+   <script type=text/javascript>
+     $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+   </script>
+
+The ``|safe`` is necessary so that Jinja does not escape the JSON encoded
+string with HTML rules.  Usually this would be necessary, but we are
+inside a `script` block here where different rules apply.
+
+.. admonition:: Information for Pros
+
+   In HTML the `script` tag is declared `CDATA` which means that entities
+   will not be parsed.  Everything until ``</script>`` is handled as script.
+   This also means that there must never be any ``</`` between the script
+   tags.  ``|tojson`` is kindly enough to do the right thing here and
+   escape backslashes for you.
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
new file mode 100644
index 00000000..cb5aa234
--- /dev/null
+++ b/docs/patterns/jquery.rst
@@ -0,0 +1,59 @@
+AJAX With jQuery
+================
+
+`jQuery`_ is a small JavaScript library commonly used to simplify working
+with the DOM and JavaScript in general.  It is the perfect tool to make
+web applications more dynamic by exchanging JSON between server and
+client.
+
+.. _jQuery: http://jquery.com/
+
+Loading jQuery
+--------------
+
+In order to use jQuery, you have to download it first and place it in the
+static folder of your application and then ensure it's loaded.  Ideally
+you have a layout template that is used for all pages where you just have
+to add two script statements to your `head` section.  One for jQuery, and
+one for your own script (called `app.js` here):
+
+.. sourcecode:: html
+
+   <script type=text/javascript src=""{{
+       url_for('static', filename='jquery.js') }}""></script>
+   <script type=text/javascript src=""{{
+       url_for('static', filename='app.js') }}""></script>
+
+Where is My Site?
+-----------------
+
+Do you know where your application is?  If you are developing the answer
+is quite simple: it's on localhost port something and directly on the root
+of that server.  But what if you later decide to move your application to
+a different location?  For example to ``http://example.com/myapp``?  On
+the server side this never was a problem because we were using the handy
+:func:`~flask.url_for` function that did could answer that question for
+us, but if we are using jQuery we should better not hardcode the path to
+the application but make that dynamic, so how can we do that?
+
+A simple method would be to add a script tag to our page that sets a
+global variable to the prefix to the root of the application.  Something
+like this:
+
+.. sourcecode:: html+jinja
+
+   <script type=text/javascript>
+     $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+   </script>
+
+The ``|safe`` is necessary so that Jinja does not escape the JSON encoded
+string with HTML rules.  Usually this would be necessary, but we are
+inside a `script` block here where different rules apply.
+
+.. admonition:: Information for Pros
+
+   In HTML the `script` tag is declared `CDATA` which means that entities
+   will not be parsed.  Everything until ``</script>`` is handled as script.
+   This also means that there must never be any ``</`` between the script
+   tags.  ``|tojson`` is kindly enough to do the right thing here and
+   escape backslashes for you.
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,examples/jqueryexample/jqueryexample.py,,examples/jqueryexample/jqueryexample.py,Added JSON Support and started working on jQuery docs,"diff --git a/examples/jqueryexample/jqueryexample.py b/examples/jqueryexample/jqueryexample.py
new file mode 100644
index 00000000..0e8caf3e
--- /dev/null
+++ b/examples/jqueryexample/jqueryexample.py
@@ -0,0 +1,29 @@
+# -*- coding: utf-8 -*-
+""""""
+    jQuery Example
+    ~~~~~~~~~~~~~~
+
+    A simple application that shows how Flask and jQuery get along.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from flask import Flask, jsonify, render_template, request
+app = Flask(__name__)
+
+
+@app.route('/_add_numbers')
+def add_numbers():
+    """"""Add two numbers server side, ridiculous but well...""""""
+    a = request.args.get('a', 0, type=int)
+    b = request.args.get('b', 0, type=int)
+    return jsonify(result=a + b)
+
+
+@app.route('/')
+def index():
+    return render_template('index.html')
+
+
+if __name__ == '__main__':
+    app.run()
","diff --git a/examples/jqueryexample/jqueryexample.py b/examples/jqueryexample/jqueryexample.py
new file mode 100644
index 00000000..0e8caf3e
--- /dev/null
+++ b/examples/jqueryexample/jqueryexample.py
@@ -0,0 +1,29 @@
+# -*- coding: utf-8 -*-
+""""""
+    jQuery Example
+    ~~~~~~~~~~~~~~
+
+    A simple application that shows how Flask and jQuery get along.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from flask import Flask, jsonify, render_template, request
+app = Flask(__name__)
+
+
+@app.route('/_add_numbers')
+def add_numbers():
+    """"""Add two numbers server side, ridiculous but well...""""""
+    a = request.args.get('a', 0, type=int)
+    b = request.args.get('b', 0, type=int)
+    return jsonify(result=a + b)
+
+
+@app.route('/')
+def index():
+    return render_template('index.html')
+
+
+if __name__ == '__main__':
+    app.run()
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,examples/jqueryexample/templates/index.html,,examples/jqueryexample/templates/index.html,Added JSON Support and started working on jQuery docs,"diff --git a/examples/jqueryexample/templates/index.html b/examples/jqueryexample/templates/index.html
new file mode 100644
index 00000000..6114ae73
--- /dev/null
+++ b/examples/jqueryexample/templates/index.html
@@ -0,0 +1,25 @@
+<!doctype html>
+<title>jQuery Example</title>
+<script type=text/javascript
+  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+<script type=text/javascript src=""{{ url_for('static', filename='app.js')
+  }}""></script>
+<script type=text/javascript>
+  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+
+  $(function() {
+    $('a#calculate').bind('click', function() {
+      $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
+        a: $('input[name=""a""]').val(),
+        b: $('input[name=""b""]').val()
+      }, function(data) {
+        $(""#result"").text(data.result);
+      });
+    });
+  });
+</script>
+<h1>jQuery Example</h1>
+<p><input type=text size=5 name=a> +
+   <input type=text size=5 name=b> =
+   <span id=result>?</span>
+<p><a href=# id=calculate>calculate server side</a>
","diff --git a/examples/jqueryexample/templates/index.html b/examples/jqueryexample/templates/index.html
new file mode 100644
index 00000000..6114ae73
--- /dev/null
+++ b/examples/jqueryexample/templates/index.html
@@ -0,0 +1,25 @@
+<!doctype html>
+<title>jQuery Example</title>
+<script type=text/javascript
+  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+<script type=text/javascript src=""{{ url_for('static', filename='app.js')
+  }}""></script>
+<script type=text/javascript>
+  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+
+  $(function() {
+    $('a#calculate').bind('click', function() {
+      $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
+        a: $('input[name=""a""]').val(),
+        b: $('input[name=""b""]').val()
+      }, function(data) {
+        $(""#result"").text(data.result);
+      });
+    });
+  });
+</script>
+<h1>jQuery Example</h1>
+<p><input type=text size=5 name=a> +
+   <input type=text size=5 name=b> =
+   <span id=result>?</span>
+<p><a href=# id=calculate>calculate server side</a>
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,flask.py,flask.py,flask.py,Added JSON Support and started working on jQuery docs,"diff --git a/flask.py b/flask.py
index cec1aafb..ba26c7f8 100644
--- a/flask.py
+++ b/flask.py
@@ -15,11 +15,23 @@ import sys
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, SharedDataMiddleware
+     LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
+     cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
 
+# try to load the best simplejson implementation available.  If JSON
+# is not installed, we add a failing class.
+json_available = True
+try:
+    import simplejson as json
+except ImportError:
+    try:
+        import json
+    except ImportError:
+        json_available = False
+
 # utilities we import from Werkzeug and Jinja2 that are unused
 # in the module but are exported as public interface.
 from werkzeug import abort, redirect
@@ -49,6 +61,16 @@ class Request(RequestBase):
         self.endpoint = None
         self.view_args = None
 
+    @cached_property
+    def json(self):
+        """"""If the mimetype is `application/json` this will contain the
+        parsed JSON data.
+        """"""
+        if not json_available:
+            raise AttributeError('simplejson not available')
+        if self.mimetype == 'application/json':
+            return json.loads(self.data)
+
 
 class Response(ResponseBase):
     """"""The response object that is used by default in flask.  Works like the
@@ -81,7 +103,6 @@ class _NullSession(SecureCookie):
     del _fail
 
 
-
 class _RequestContext(object):
     """"""The request context contains all request relevant information.  It is
     created at the beginning of the request and pushed to the
@@ -133,6 +154,8 @@ def get_template_attribute(template_name, attribute):
         hello = get_template_attribute('_foo.html', 'hello')
         return hello('World')
 
+    .. versionadded:: 0.2
+
     :param template_name: the name of the template
     :param attribute: the name of the variable of macro to acccess
     """"""
@@ -162,6 +185,35 @@ def get_flashed_messages():
     return flashes
 
 
+def jsonify(*args, **kwargs):
+    """"""Creates a :class:`~flask.Response` with the JSON representation of
+    the given arguments with an `application/json` mimetype.  The arguments
+    to this function are the same as to the :class:`dict` constructor.
+
+    Example usage::
+
+        @app.route('/_get_current_user')
+        def get_current_user():
+            return jsonify(username=g.user.username,
+                           email=g.user.email,
+                           id=g.user.id)
+
+    This will send a JSON response like this to the browser::
+
+        {
+            ""username"": ""admin"",
+            ""email"": ""admin@localhost"",
+            ""id"": 42
+        }
+
+    This requires Python 2.6 or an installed version of simplejson.
+
+    .. versionadded:: 0.2
+    """"""
+    return current_app.response_class(json.dumps(dict(*args, **kwargs),
+        indent=None if request.is_xhr else 2), mimetype='application/json')
+
+
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
@@ -326,6 +378,8 @@ class Flask(object):
             url_for=url_for,
             get_flashed_messages=get_flashed_messages
         )
+        if json_available:
+            self.jinja_env.filters['tojson'] = json.dumps
 
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
","diff --git a/flask.py b/flask.py
index cec1aafb..ba26c7f8 100644
--- a/flask.py
+++ b/flask.py
@@ -15,11 +15,23 @@ import sys
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
-     LocalStack, LocalProxy, create_environ, SharedDataMiddleware
+     LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
+     cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
 
+# try to load the best simplejson implementation available.  If JSON
+# is not installed, we add a failing class.
+json_available = True
+try:
+    import simplejson as json
+except ImportError:
+    try:
+        import json
+    except ImportError:
+        json_available = False
+
 # utilities we import from Werkzeug and Jinja2 that are unused
 # in the module but are exported as public interface.
 from werkzeug import abort, redirect
@@ -49,6 +61,16 @@ class Request(RequestBase):
         self.endpoint = None
         self.view_args = None
 
+    @cached_property
+    def json(self):
+        """"""If the mimetype is `application/json` this will contain the
+        parsed JSON data.
+        """"""
+        if not json_available:
+            raise AttributeError('simplejson not available')
+        if self.mimetype == 'application/json':
+            return json.loads(self.data)
+
 
 class Response(ResponseBase):
     """"""The response object that is used by default in flask.  Works like the
@@ -81,7 +103,6 @@ class _NullSession(SecureCookie):
     del _fail
 
 
-
 class _RequestContext(object):
     """"""The request context contains all request relevant information.  It is
     created at the beginning of the request and pushed to the
@@ -133,6 +154,8 @@ def get_template_attribute(template_name, attribute):
         hello = get_template_attribute('_foo.html', 'hello')
         return hello('World')
 
+    .. versionadded:: 0.2
+
     :param template_name: the name of the template
     :param attribute: the name of the variable of macro to acccess
     """"""
@@ -162,6 +185,35 @@ def get_flashed_messages():
     return flashes
 
 
+def jsonify(*args, **kwargs):
+    """"""Creates a :class:`~flask.Response` with the JSON representation of
+    the given arguments with an `application/json` mimetype.  The arguments
+    to this function are the same as to the :class:`dict` constructor.
+
+    Example usage::
+
+        @app.route('/_get_current_user')
+        def get_current_user():
+            return jsonify(username=g.user.username,
+                           email=g.user.email,
+                           id=g.user.id)
+
+    This will send a JSON response like this to the browser::
+
+        {
+            ""username"": ""admin"",
+            ""email"": ""admin@localhost"",
+            ""id"": 42
+        }
+
+    This requires Python 2.6 or an installed version of simplejson.
+
+    .. versionadded:: 0.2
+    """"""
+    return current_app.response_class(json.dumps(dict(*args, **kwargs),
+        indent=None if request.is_xhr else 2), mimetype='application/json')
+
+
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
@@ -326,6 +378,8 @@ class Flask(object):
             url_for=url_for,
             get_flashed_messages=get_flashed_messages
         )
+        if json_available:
+            self.jinja_env.filters['tojson'] = json.dumps
 
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
"
c64a4e0befc0718500c544f5c847d6632b8fb598,6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added JSON Support and started working on jQuery docs,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index bb560712..0094f657 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -32,7 +32,7 @@ class ContextTestCase(unittest.TestCase):
             assert meh() == 'http://localhost/meh'
 
 
-class BasicFunctionality(unittest.TestCase):
+class BasicFunctionalityTestCase(unittest.TestCase):
 
     def test_request_dispatching(self):
         app = flask.Flask(__name__)
@@ -167,7 +167,35 @@ class BasicFunctionality(unittest.TestCase):
                 == '/static/index.html'
 
 
-class Templating(unittest.TestCase):
+class JSONTestCase(unittest.TestCase):
+
+    def test_jsonify(self):
+        d = dict(a=23, b=42, c=[1, 2, 3])
+        app = flask.Flask(__name__)
+        @app.route('/kw')
+        def return_kwargs():
+            return flask.jsonify(**d)
+        @app.route('/dict')
+        def return_dict():
+            return flask.jsonify(d)
+        c = app.test_client()
+        for url in '/kw', '/dict':
+            rv = c.get(url)
+            assert rv.mimetype == 'application/json'
+            assert flask.json.loads(rv.data) == d
+
+    def test_json_attr(self):
+        app = flask.Flask(__name__)
+        @app.route('/add', methods=['POST'])
+        def add():
+            return unicode(flask.request.json['a'] + flask.request.json['b'])
+        c = app.test_client()
+        rv = c.post('/add', data=flask.json.dumps({'a': 1, 'b': 2}),
+                            content_type='application/json')
+        assert rv.data == '3'
+
+
+class TemplatingTestCase(unittest.TestCase):
 
     def test_context_processing(self):
         app = flask.Flask(__name__)
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index bb560712..0094f657 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -32,7 +32,7 @@ class ContextTestCase(unittest.TestCase):
             assert meh() == 'http://localhost/meh'
 
 
-class BasicFunctionality(unittest.TestCase):
+class BasicFunctionalityTestCase(unittest.TestCase):
 
     def test_request_dispatching(self):
         app = flask.Flask(__name__)
@@ -167,7 +167,35 @@ class BasicFunctionality(unittest.TestCase):
                 == '/static/index.html'
 
 
-class Templating(unittest.TestCase):
+class JSONTestCase(unittest.TestCase):
+
+    def test_jsonify(self):
+        d = dict(a=23, b=42, c=[1, 2, 3])
+        app = flask.Flask(__name__)
+        @app.route('/kw')
+        def return_kwargs():
+            return flask.jsonify(**d)
+        @app.route('/dict')
+        def return_dict():
+            return flask.jsonify(d)
+        c = app.test_client()
+        for url in '/kw', '/dict':
+            rv = c.get(url)
+            assert rv.mimetype == 'application/json'
+            assert flask.json.loads(rv.data) == d
+
+    def test_json_attr(self):
+        app = flask.Flask(__name__)
+        @app.route('/add', methods=['POST'])
+        def add():
+            return unicode(flask.request.json['a'] + flask.request.json['b'])
+        c = app.test_client()
+        rv = c.post('/add', data=flask.json.dumps({'a': 1, 'b': 2}),
+                            content_type='application/json')
+        assert rv.data == '3'
+
+
+class TemplatingTestCase(unittest.TestCase):
 
     def test_context_processing(self):
         app = flask.Flask(__name__)
"
6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,a99e408bd109783561d408ef34c286cdd9b51845,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Finished jQuery example documentation.,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index cb5aa234..8d00f54e 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -6,7 +6,16 @@ with the DOM and JavaScript in general.  It is the perfect tool to make
 web applications more dynamic by exchanging JSON between server and
 client.
 
+JSON itself is a very lightweight transport format, very similar to how
+Python primitives (numbers, strings, dicts and lists) look like which is
+widely supported and very easy to parse.  It became popular a few years
+ago and quickly replaced XML as transport format in web applications.
+
+If you have Python 2.6 JSON will work out of the box, in Python 2.5 you
+will have to install the `simplejson`_ library from PyPI.
+
 .. _jQuery: http://jquery.com/
+.. _simplejson: http://pypi.python.org/pypi/simplejson
 
 Loading jQuery
 --------------
@@ -14,15 +23,27 @@ Loading jQuery
 In order to use jQuery, you have to download it first and place it in the
 static folder of your application and then ensure it's loaded.  Ideally
 you have a layout template that is used for all pages where you just have
-to add two script statements to your `head` section.  One for jQuery, and
-one for your own script (called `app.js` here):
+to add a script statement to your `head` to load jQuery:
 
 .. sourcecode:: html
 
    <script type=text/javascript src=""{{
      url_for('static', filename='jquery.js') }}""></script>
-   <script type=text/javascript src=""{{
-       url_for('static', filename='app.js') }}""></script>
+
+Another method is using Google's `AJAX Libraries API
+<http://code.google.com/apis/ajaxlibs/documentation/>`_ to load jQuery:
+
+.. sourcecode:: html
+
+    <script type=text/javascript
+      src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+
+In this case you don't have to put jQuery into your static folder, it will
+instead be loaded from Google directly.  This has the advantage that your
+website will probably load faster for users if they were to at least one
+other website before using the same jQuery version from Google because it
+will already be in the browser cache.  Downside is that if you don't have
+network connectivity during development jQuery will not load.
 
 Where is My Site?
 -----------------
@@ -57,3 +78,82 @@ inside a `script` block here where different rules apply.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
    escape backslashes for you.
+
+
+JSON View Functions
+-------------------
+
+Now let's create a server side function that accepts two URL arguments of
+numbers which should be added together and then sent back to the
+application in a JSON object.  This is a really ridiculous example and is
+something you usually would do on the client side alone, but a simple
+example that shows how you would use jQuer and Flask nonetheless::
+
+    from flask import Flask, jsonify, render_template, request
+    app = Flask(__name__)
+
+    @app.route('/_add_numbers')
+    def add_numbers():
+        a = request.args.get('a', 0, type=int)
+        b = request.args.get('b', 0, type=int)
+        return jsonify(result=a + b)
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+As you can see I also added an `index` method here that renders a
+template.  This template will load jQuery as above and have a little form
+we can add two numbers and a link to trigger the function on the server
+side.
+
+The HTML
+--------
+
+You index.html template either has to extend a `layout.html` template with
+jQuery loaded and the `$SCRIPT_ROOT` variable set, or do that on the top.
+Here the HTML code needed for our little application (`index.html`).
+Notice that we also drop the script directly into the HTML here.  It is
+usually a better idea to have that in a separate script file:
+
+.. sourcecode:: html
+
+    <script type=text/javascript>
+      $(function() {
+        $('a#calculate').bind('click', function() {
+          $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
+            a: $('input[name=""a""]').val(),
+            b: $('input[name=""b""]').val()
+          }, function(data) {
+            $(""#result"").text(data.result);
+          });
+          return false;
+        });
+      });
+    </script>
+    <h1>jQuery Example</h1>
+    <p><input type=text size=5 name=a> +
+       <input type=text size=5 name=b> =
+       <span id=result>?</span>
+    <p><a href=# id=calculate>calculate server side</a>
+
+I won't got into detail here about how jQuery works, just a very quick
+explanation of the little bit of code above:
+
+1. ``$(function() { ... })`` specifies code that should run once the
+   browser is done loading the basic parts of the page.
+2. ``#('selector')`` selects an element and lets you operate on it.
+3. ``element.bind('event', func)`` specifies a function that should run
+   when the user clicked on the element.  If that function returns
+   `false`, the default behaviour will not kick in (in this case, navigate
+   to the `#` URL).
+4. ``$.getJSON(url, data, func)`` sends a `GET` request to `url` and will
+   send the contents of the `data` object as query parameters.  Once the
+   data arrived, it will call the given function with the return value as
+   argument.  Note that we can use the `$SCRIPT_ROOT` variable here that
+   we set earlier.
+
+If you don't get the whole picture, download the `sourcecode
+for this example
+<http://github.com/mitsuhiko/flask/tree/master/examples/jqueryexample>`_
+from github.
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index cb5aa234..8d00f54e 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -6,7 +6,16 @@ with the DOM and JavaScript in general.  It is the perfect tool to make
 web applications more dynamic by exchanging JSON between server and
 client.
 
+JSON itself is a very lightweight transport format, very similar to how
+Python primitives (numbers, strings, dicts and lists) look like which is
+widely supported and very easy to parse.  It became popular a few years
+ago and quickly replaced XML as transport format in web applications.
+
+If you have Python 2.6 JSON will work out of the box, in Python 2.5 you
+will have to install the `simplejson`_ library from PyPI.
+
 .. _jQuery: http://jquery.com/
+.. _simplejson: http://pypi.python.org/pypi/simplejson
 
 Loading jQuery
 --------------
@@ -14,15 +23,27 @@ Loading jQuery
 In order to use jQuery, you have to download it first and place it in the
 static folder of your application and then ensure it's loaded.  Ideally
 you have a layout template that is used for all pages where you just have
-to add two script statements to your `head` section.  One for jQuery, and
-one for your own script (called `app.js` here):
+to add a script statement to your `head` to load jQuery:
 
 .. sourcecode:: html
 
    <script type=text/javascript src=""{{
      url_for('static', filename='jquery.js') }}""></script>
-   <script type=text/javascript src=""{{
-       url_for('static', filename='app.js') }}""></script>
+
+Another method is using Google's `AJAX Libraries API
+<http://code.google.com/apis/ajaxlibs/documentation/>`_ to load jQuery:
+
+.. sourcecode:: html
+
+    <script type=text/javascript
+      src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+
+In this case you don't have to put jQuery into your static folder, it will
+instead be loaded from Google directly.  This has the advantage that your
+website will probably load faster for users if they were to at least one
+other website before using the same jQuery version from Google because it
+will already be in the browser cache.  Downside is that if you don't have
+network connectivity during development jQuery will not load.
 
 Where is My Site?
 -----------------
@@ -57,3 +78,82 @@ inside a `script` block here where different rules apply.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
    escape backslashes for you.
+
+
+JSON View Functions
+-------------------
+
+Now let's create a server side function that accepts two URL arguments of
+numbers which should be added together and then sent back to the
+application in a JSON object.  This is a really ridiculous example and is
+something you usually would do on the client side alone, but a simple
+example that shows how you would use jQuer and Flask nonetheless::
+
+    from flask import Flask, jsonify, render_template, request
+    app = Flask(__name__)
+
+    @app.route('/_add_numbers')
+    def add_numbers():
+        a = request.args.get('a', 0, type=int)
+        b = request.args.get('b', 0, type=int)
+        return jsonify(result=a + b)
+
+    @app.route('/')
+    def index():
+        return render_template('index.html')
+
+As you can see I also added an `index` method here that renders a
+template.  This template will load jQuery as above and have a little form
+we can add two numbers and a link to trigger the function on the server
+side.
+
+The HTML
+--------
+
+You index.html template either has to extend a `layout.html` template with
+jQuery loaded and the `$SCRIPT_ROOT` variable set, or do that on the top.
+Here the HTML code needed for our little application (`index.html`).
+Notice that we also drop the script directly into the HTML here.  It is
+usually a better idea to have that in a separate script file:
+
+.. sourcecode:: html
+
+    <script type=text/javascript>
+      $(function() {
+        $('a#calculate').bind('click', function() {
+          $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
+            a: $('input[name=""a""]').val(),
+            b: $('input[name=""b""]').val()
+          }, function(data) {
+            $(""#result"").text(data.result);
+          });
+          return false;
+        });
+      });
+    </script>
+    <h1>jQuery Example</h1>
+    <p><input type=text size=5 name=a> +
+       <input type=text size=5 name=b> =
+       <span id=result>?</span>
+    <p><a href=# id=calculate>calculate server side</a>
+
+I won't got into detail here about how jQuery works, just a very quick
+explanation of the little bit of code above:
+
+1. ``$(function() { ... })`` specifies code that should run once the
+   browser is done loading the basic parts of the page.
+2. ``#('selector')`` selects an element and lets you operate on it.
+3. ``element.bind('event', func)`` specifies a function that should run
+   when the user clicked on the element.  If that function returns
+   `false`, the default behaviour will not kick in (in this case, navigate
+   to the `#` URL).
+4. ``$.getJSON(url, data, func)`` sends a `GET` request to `url` and will
+   send the contents of the `data` object as query parameters.  Once the
+   data arrived, it will call the given function with the return value as
+   argument.  Note that we can use the `$SCRIPT_ROOT` variable here that
+   we set earlier.
+
+If you don't get the whole picture, download the `sourcecode
+for this example
+<http://github.com/mitsuhiko/flask/tree/master/examples/jqueryexample>`_
+from github.
"
6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,a99e408bd109783561d408ef34c286cdd9b51845,examples/jqueryexample/templates/index.html,examples/jqueryexample/templates/index.html,examples/jqueryexample/templates/index.html,Finished jQuery example documentation.,"diff --git a/examples/jqueryexample/templates/index.html b/examples/jqueryexample/templates/index.html
index 6114ae73..0545516d 100644
--- a/examples/jqueryexample/templates/index.html
+++ b/examples/jqueryexample/templates/index.html
@@ -1,12 +1,6 @@
-<!doctype html>
-<title>jQuery Example</title>
-<script type=text/javascript
-  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
-<script type=text/javascript src=""{{ url_for('static', filename='app.js')
-  }}""></script>
+{% extends ""layout.html"" %}
+{% block body %}
 <script type=text/javascript>
-  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
-
   $(function() {
     $('a#calculate').bind('click', function() {
       $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
@@ -15,6 +9,7 @@
       }, function(data) {
         $(""#result"").text(data.result);
       });
+      return false;
     });
   });
 </script>
@@ -23,3 +18,4 @@
    <input type=text size=5 name=b> =
    <span id=result>?</span>
 <p><a href=# id=calculate>calculate server side</a>
+{% endblock %}
","diff --git a/examples/jqueryexample/templates/index.html b/examples/jqueryexample/templates/index.html
index 6114ae73..0545516d 100644
--- a/examples/jqueryexample/templates/index.html
+++ b/examples/jqueryexample/templates/index.html
@@ -1,12 +1,6 @@
-<!doctype html>
-<title>jQuery Example</title>
-<script type=text/javascript
-  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
-<script type=text/javascript src=""{{ url_for('static', filename='app.js')
-  }}""></script>
+{% extends ""layout.html"" %}
+{% block body %}
 <script type=text/javascript>
-  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
-
   $(function() {
     $('a#calculate').bind('click', function() {
       $.getJSON($SCRIPT_ROOT + '/_add_numbers', {
@@ -15,6 +9,7 @@
       }, function(data) {
         $(""#result"").text(data.result);
       });
+      return false;
     });
   });
 </script>
@@ -23,3 +18,4 @@
    <input type=text size=5 name=b> =
    <span id=result>?</span>
 <p><a href=# id=calculate>calculate server side</a>
+{% endblock %}
"
6e2be6a0b3aba4ab49cf3ed1a10ac13c6b771aba,a99e408bd109783561d408ef34c286cdd9b51845,examples/jqueryexample/templates/layout.html,,examples/jqueryexample/templates/layout.html,Finished jQuery example documentation.,"diff --git a/examples/jqueryexample/templates/layout.html b/examples/jqueryexample/templates/layout.html
new file mode 100644
index 00000000..0b5f3a7e
--- /dev/null
+++ b/examples/jqueryexample/templates/layout.html
@@ -0,0 +1,10 @@
+<!doctype html>
+<title>jQuery Example</title>
+<script type=text/javascript
+  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+<script type=text/javascript src=""{{ url_for('static', filename='app.js')
+  }}""></script>
+<script type=text/javascript>
+  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+</script>
+{% block body %}{% endblock %}
","diff --git a/examples/jqueryexample/templates/layout.html b/examples/jqueryexample/templates/layout.html
new file mode 100644
index 00000000..0b5f3a7e
--- /dev/null
+++ b/examples/jqueryexample/templates/layout.html
@@ -0,0 +1,10 @@
+<!doctype html>
+<title>jQuery Example</title>
+<script type=text/javascript
+  src=""http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js""></script>
+<script type=text/javascript src=""{{ url_for('static', filename='app.js')
+  }}""></script>
+<script type=text/javascript>
+  var $SCRIPT_ROOT = {{ request.script_root|tojson|safe }};
+</script>
+{% block body %}{% endblock %}
"
a99e408bd109783561d408ef34c286cdd9b51845,f878919753a909e45b2d5448aa175f4f9129ff24,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,With -> with in headline,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 8d00f54e..d3d4a7e6 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -1,4 +1,4 @@
-AJAX With jQuery
+AJAX with jQuery
 ================
 
 `jQuery`_ is a small JavaScript library commonly used to simplify working
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 8d00f54e..d3d4a7e6 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -1,4 +1,4 @@
-AJAX With jQuery
+AJAX with jQuery
 ================
 
 `jQuery`_ is a small JavaScript library commonly used to simplify working
"
f878919753a909e45b2d5448aa175f4f9129ff24,3d320176813e87b8dccbbbc807133dfe6ce0bcde,docs/installation.rst,docs/installation.rst,docs/installation.rst,Added instructions about how to run the latest development version.,"diff --git a/docs/installation.rst b/docs/installation.rst
index c5788be2..bb85b405 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -96,6 +96,44 @@ This is possible as well, but I would not recommend it.  Just run
 
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
+
+Leaving on the Edge
+-------------------
+
+You want to work with the latest version of Flask, there are two ways: you
+can either let `easy_install` pull in the development version or tell it
+to operate on a git checkout.  Either way it's recommended to do that in a
+virtualenv.
+
+Get the git checkout in a new virtualenv and run in develop mode::
+
+    $ git clone http://github.com/mitsuhiko/flask.git
+    Initialized empty Git repository in ~/dev/flask/.git/
+    $ cd flask
+    $ virtualenv env
+    $ source env/bin/activate
+    New python executable in env/bin/python
+    Installing setuptools............done.
+    $ python setup.py develop
+    ...
+    Finished processing dependencies for Flask
+
+This will pull in the depdenencies and activate the git head as current
+version.  Then you just have to ``git pull origin`` to get the latest
+version.
+
+To just get the development version without git, do this instead::
+
+    $ mkdir flask
+    $ cd flask
+    $ virtualenv env
+    $ source env/bin/activate
+    New python executable in env/bin/python
+    Installing setuptools............done.
+    $ easy_install Flask==dev
+    ...
+    Finished processing dependencies for Flask==dev
+
 .. _windows-easy-install:
 
 `easy_install` on Windows
","diff --git a/docs/installation.rst b/docs/installation.rst
index c5788be2..bb85b405 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -96,6 +96,44 @@ This is possible as well, but I would not recommend it.  Just run
 
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
+
+Leaving on the Edge
+-------------------
+
+You want to work with the latest version of Flask, there are two ways: you
+can either let `easy_install` pull in the development version or tell it
+to operate on a git checkout.  Either way it's recommended to do that in a
+virtualenv.
+
+Get the git checkout in a new virtualenv and run in develop mode::
+
+    $ git clone http://github.com/mitsuhiko/flask.git
+    Initialized empty Git repository in ~/dev/flask/.git/
+    $ cd flask
+    $ virtualenv env
+    $ source env/bin/activate
+    New python executable in env/bin/python
+    Installing setuptools............done.
+    $ python setup.py develop
+    ...
+    Finished processing dependencies for Flask
+
+This will pull in the depdenencies and activate the git head as current
+version.  Then you just have to ``git pull origin`` to get the latest
+version.
+
+To just get the development version without git, do this instead::
+
+    $ mkdir flask
+    $ cd flask
+    $ virtualenv env
+    $ source env/bin/activate
+    New python executable in env/bin/python
+    Installing setuptools............done.
+    $ easy_install Flask==dev
+    ...
+    Finished processing dependencies for Flask==dev
+
 .. _windows-easy-install:
 
 `easy_install` on Windows
"
3d320176813e87b8dccbbbc807133dfe6ce0bcde,07e515b071e32e1b22e9992cedabeb082a8cde6c,docs/installation.rst,docs/installation.rst,docs/installation.rst,Leaving -> living ....,"diff --git a/docs/installation.rst b/docs/installation.rst
index bb85b405..c50571e8 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -97,8 +97,8 @@ This is possible as well, but I would not recommend it.  Just run
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
 
-Leaving on the Edge
--------------------
+Living on the Edge
+------------------
 
 You want to work with the latest version of Flask, there are two ways: you
 can either let `easy_install` pull in the development version or tell it
","diff --git a/docs/installation.rst b/docs/installation.rst
index bb85b405..c50571e8 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -97,8 +97,8 @@ This is possible as well, but I would not recommend it.  Just run
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
 
-Leaving on the Edge
--------------------
+Living on the Edge
+------------------
 
 You want to work with the latest version of Flask, there are two ways: you
 can either let `easy_install` pull in the development version or tell it
"
07e515b071e32e1b22e9992cedabeb082a8cde6c,ade490514dd6d83adc7610f69f9c4cd68df47110,docs/api.rst,docs/api.rst,docs/api.rst,Fixed a security problem caused by changed simplejson semantics.  Notice: this was never in a release version of Flask.,"diff --git a/docs/api.rst b/docs/api.rst
index 247294a3..bd39d69e 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -250,6 +250,8 @@ Returning JSON
             doSomethingWith({{ user.username|tojson|safe }});
         </script>
 
+    Note that the ``|tojson`` filter escapes forward slashes properly.
+
 Template Rendering
 ------------------
 
","diff --git a/docs/api.rst b/docs/api.rst
index 247294a3..bd39d69e 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -250,6 +250,8 @@ Returning JSON
             doSomethingWith({{ user.username|tojson|safe }});
         </script>
 
+    Note that the ``|tojson`` filter escapes forward slashes properly.
+
 Template Rendering
 ------------------
 
"
07e515b071e32e1b22e9992cedabeb082a8cde6c,ade490514dd6d83adc7610f69f9c4cd68df47110,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Fixed a security problem caused by changed simplejson semantics.  Notice: this was never in a release version of Flask.,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index d3d4a7e6..c12f4474 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -77,7 +77,8 @@ inside a `script` block here where different rules apply.
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
-   escape backslashes for you.
+   escape slashes for you (``{{ ""</script>""|tojson|safe }`` is rendered as
+   ``""<\/script>""``).
 
 
 JSON View Functions
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index d3d4a7e6..c12f4474 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -77,7 +77,8 @@ inside a `script` block here where different rules apply.
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
-   escape backslashes for you.
+   escape slashes for you (``{{ ""</script>""|tojson|safe }`` is rendered as
+   ``""<\/script>""``).
 
 
 JSON View Functions
"
07e515b071e32e1b22e9992cedabeb082a8cde6c,ade490514dd6d83adc7610f69f9c4cd68df47110,flask.py,flask.py,flask.py,Fixed a security problem caused by changed simplejson semantics.  Notice: this was never in a release version of Flask.,"diff --git a/flask.py b/flask.py
index ba26c7f8..1dfe8a8f 100644
--- a/flask.py
+++ b/flask.py
@@ -259,6 +259,11 @@ def _get_package_path(name):
         return os.getcwd()
 
 
+def _tojson_filter(string, *args, **kwargs):
+    """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+    return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -379,7 +384,7 @@ class Flask(object):
             get_flashed_messages=get_flashed_messages
         )
         if json_available:
-            self.jinja_env.filters['tojson'] = json.dumps
+            self.jinja_env.filters['tojson'] = _tojson_filter
 
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
","diff --git a/flask.py b/flask.py
index ba26c7f8..1dfe8a8f 100644
--- a/flask.py
+++ b/flask.py
@@ -259,6 +259,11 @@ def _get_package_path(name):
         return os.getcwd()
 
 
+def _tojson_filter(string, *args, **kwargs):
+    """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+    return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -379,7 +384,7 @@ class Flask(object):
             get_flashed_messages=get_flashed_messages
         )
         if json_available:
-            self.jinja_env.filters['tojson'] = json.dumps
+            self.jinja_env.filters['tojson'] = _tojson_filter
 
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
"
07e515b071e32e1b22e9992cedabeb082a8cde6c,ade490514dd6d83adc7610f69f9c4cd68df47110,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed a security problem caused by changed simplejson semantics.  Notice: this was never in a release version of Flask.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 0094f657..2d1f85f4 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -194,6 +194,12 @@ class JSONTestCase(unittest.TestCase):
                             content_type='application/json')
         assert rv.data == '3'
 
+    def test_template_escaping(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
+            assert rv == '""<\\/script>""'
+
 
 class TemplatingTestCase(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 0094f657..2d1f85f4 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -194,6 +194,12 @@ class JSONTestCase(unittest.TestCase):
                             content_type='application/json')
         assert rv.data == '3'
 
+    def test_template_escaping(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
+            assert rv == '""<\\/script>""'
+
 
 class TemplatingTestCase(unittest.TestCase):
 
"
ade490514dd6d83adc7610f69f9c4cd68df47110,36f105c2932af842de5d18899783f33078415c7f,docs/installation.rst,docs/installation.rst,docs/installation.rst,Removed possible bashism. source -> .,"diff --git a/docs/installation.rst b/docs/installation.rst
index c50571e8..74c5f5e4 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -69,7 +69,11 @@ within::
 Now you only have to activate it, whenever you work with it.  On OS X and
 Linux do the following::
 
-    $ source env/bin/activate
+    $ . env/bin/activate
+
+(Note the whitespace between the dot and the script name.  This means
+execute this file in context of the shell.  If the dot does not work for
+whatever reason in your shell, try substituting it with ``source``)
 
 If you are a Windows user, the following command is for you::
 
@@ -111,7 +115,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     Initialized empty Git repository in ~/dev/flask/.git/
     $ cd flask
     $ virtualenv env
-    $ source env/bin/activate
+    $ . env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ python setup.py develop
@@ -127,7 +131,7 @@ To just get the development version without git, do this instead::
     $ mkdir flask
     $ cd flask
     $ virtualenv env
-    $ source env/bin/activate
+    $ . env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ easy_install Flask==dev
","diff --git a/docs/installation.rst b/docs/installation.rst
index c50571e8..74c5f5e4 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -69,7 +69,11 @@ within::
 Now you only have to activate it, whenever you work with it.  On OS X and
 Linux do the following::
 
-    $ source env/bin/activate
+    $ . env/bin/activate
+
+(Note the whitespace between the dot and the script name.  This means
+execute this file in context of the shell.  If the dot does not work for
+whatever reason in your shell, try substituting it with ``source``)
 
 If you are a Windows user, the following command is for you::
 
@@ -111,7 +115,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     Initialized empty Git repository in ~/dev/flask/.git/
     $ cd flask
     $ virtualenv env
-    $ source env/bin/activate
+    $ . env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ python setup.py develop
@@ -127,7 +131,7 @@ To just get the development version without git, do this instead::
     $ mkdir flask
     $ cd flask
     $ virtualenv env
-    $ source env/bin/activate
+    $ . env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ easy_install Flask==dev
"
36f105c2932af842de5d18899783f33078415c7f,3088a9371e065808fd0091741f62bc242bcab1f9,flask.py,flask.py,flask.py,"Make it easier to associate a rule, endpoint and view_function This resolves http://github.com/mitsuhiko/flask/issues/issue/11","diff --git a/flask.py b/flask.py
index 1dfe8a8f..8ed62509 100644
--- a/flask.py
+++ b/flask.py
@@ -481,9 +481,9 @@ class Flask(object):
         """"""
         session.save_cookie(response, self.session_cookie_name)
 
-    def add_url_rule(self, rule, endpoint, **options):
+    def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
-        decorator but does not register the view function for the endpoint.
+        decorator. If a view_func is provided it will be registered with the endpoint.
 
         Basically this example::
 
@@ -495,19 +495,25 @@ class Flask(object):
 
             def index():
                 pass
-            app.add_url_rule('index', '/')
+            app.add_url_rule('/', 'index', index)
+            
+         If the view_func is not provided you will need to connect the endpoint to a 
+         view function like so:
             app.view_functions['index'] = index
 
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
+        :param view_func: the function to call when servicing a request to the provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
+        if view_func is not None:
+            self.view_functions[endpoint] = view_func
 
     def route(self, rule, **options):
         """"""A decorator that is used to register a view function for a
","diff --git a/flask.py b/flask.py
index 1dfe8a8f..8ed62509 100644
--- a/flask.py
+++ b/flask.py
@@ -481,9 +481,9 @@ class Flask(object):
         """"""
         session.save_cookie(response, self.session_cookie_name)
 
-    def add_url_rule(self, rule, endpoint, **options):
+    def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
-        decorator but does not register the view function for the endpoint.
+        decorator. If a view_func is provided it will be registered with the endpoint.
 
         Basically this example::
 
@@ -495,19 +495,25 @@ class Flask(object):
 
             def index():
                 pass
-            app.add_url_rule('index', '/')
+            app.add_url_rule('/', 'index', index)
+            
+         If the view_func is not provided you will need to connect the endpoint to a 
+         view function like so:
             app.view_functions['index'] = index
 
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
+        :param view_func: the function to call when servicing a request to the provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
+        if view_func is not None:
+            self.view_functions[endpoint] = view_func
 
     def route(self, rule, **options):
         """"""A decorator that is used to register a view function for a
"
36f105c2932af842de5d18899783f33078415c7f,3088a9371e065808fd0091741f62bc242bcab1f9,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Make it easier to associate a rule, endpoint and view_function This resolves http://github.com/mitsuhiko/flask/issues/issue/11","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 2d1f85f4..15166e9a 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -57,6 +57,30 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert rv.status_code == 405
         assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
 
+    def test_url_mapping(self):
+        app = flask.Flask(__name__)
+        def index():
+            return flask.request.method
+        def more():
+            return flask.request.method
+        
+        app.add_url_rule('/', 'index', index)
+        app.add_url_rule('/more', 'more', more, methods=['GET', 'POST'])
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
     def test_session(self):
         app = flask.Flask(__name__)
         app.secret_key = 'testkey'
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 2d1f85f4..15166e9a 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -57,6 +57,30 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert rv.status_code == 405
         assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
 
+    def test_url_mapping(self):
+        app = flask.Flask(__name__)
+        def index():
+            return flask.request.method
+        def more():
+            return flask.request.method
+        
+        app.add_url_rule('/', 'index', index)
+        app.add_url_rule('/more', 'more', more, methods=['GET', 'POST'])
+
+        c = app.test_client()
+        assert c.get('/').data == 'GET'
+        rv = c.post('/')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD']
+        rv = c.head('/')
+        assert rv.status_code == 200
+        assert not rv.data # head truncates
+        assert c.post('/more').data == 'POST'
+        assert c.get('/more').data == 'GET'
+        rv = c.delete('/more')
+        assert rv.status_code == 405
+        assert sorted(rv.allow) == ['GET', 'HEAD', 'POST']
+
     def test_session(self):
         app = flask.Flask(__name__)
         app.secret_key = 'testkey'
"
3088a9371e065808fd0091741f62bc242bcab1f9,5acc491c94262912baa30a4cffc780a46b7faf56,flask.py,flask.py,flask.py,Refactored the @route decorator to use the new add_url_rule method. Tagged add_url_rule with versionadded of 0.2,"diff --git a/flask.py b/flask.py
index 8ed62509..c5a969ca 100644
--- a/flask.py
+++ b/flask.py
@@ -508,6 +508,8 @@ class Flask(object):
         :param view_func: the function to call when servicing a request to the provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
+
+        .. versionadded:: 0.2
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
@@ -581,8 +583,7 @@ class Flask(object):
                         :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
-            self.add_url_rule(rule, f.__name__, **options)
-            self.view_functions[f.__name__] = f
+            self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
","diff --git a/flask.py b/flask.py
index 8ed62509..c5a969ca 100644
--- a/flask.py
+++ b/flask.py
@@ -508,6 +508,8 @@ class Flask(object):
         :param view_func: the function to call when servicing a request to the provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
+
+        .. versionadded:: 0.2
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
@@ -581,8 +583,7 @@ class Flask(object):
                         :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
-            self.add_url_rule(rule, f.__name__, **options)
-            self.view_functions[f.__name__] = f
+            self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
"
5acc491c94262912baa30a4cffc780a46b7faf56,95750b3287bfa21fbb706f10a3a9fbcef01c089e,docs/api.rst,docs/api.rst,docs/api.rst,Documented some routing converter possibilities.,"diff --git a/docs/api.rst b/docs/api.rst
index bd39d69e..122da451 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -106,7 +106,7 @@ Incoming Request Data
       `script_root` ``/myapplication``
       `url`         ``http://www.example.com/myapplication/page.html``
       `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
-      `root_url`    ``http://www.example.com/myapplication/``
+      `url_root`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
    .. attribute:: is_xhr
","diff --git a/docs/api.rst b/docs/api.rst
index bd39d69e..122da451 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -106,7 +106,7 @@ Incoming Request Data
       `script_root` ``/myapplication``
       `url`         ``http://www.example.com/myapplication/page.html``
       `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
-      `root_url`    ``http://www.example.com/myapplication/``
+      `url_root`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
    .. attribute:: is_xhr
"
5acc491c94262912baa30a4cffc780a46b7faf56,95750b3287bfa21fbb706f10a3a9fbcef01c089e,flask.py,flask.py,flask.py,Documented some routing converter possibilities.,"diff --git a/flask.py b/flask.py
index c5a969ca..055b46cf 100644
--- a/flask.py
+++ b/flask.py
@@ -16,7 +16,7 @@ import sys
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     cached_property
+     ImmutableDict, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
@@ -306,7 +306,7 @@ class Flask(object):
     session_cookie_name = 'session'
 
     #: options that are passed directly to the Jinja2 environment
-    jinja_options = dict(
+    jinja_options = ImmutableDict(
         autoescape=True,
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
@@ -361,11 +361,26 @@ class Flask(object):
         #: decorator.
         self.template_context_processors = [_default_template_ctx_processor]
 
+        #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
+        #: this to change the routing converters after the class was created
+        #: but before any routes are connected.  Example::
+        #:
+        #:    from werkzeug import BaseConverter
+        #:
+        #:    class ListConverter(BaseConverter):
+        #:        def to_python(self, value):
+        #:            return value.split(',')
+        #:        def to_url(self, values):
+        #:            return ','.join(BaseConverter.to_url(value)
+        #:                            for value in values)
+        #:
+        #:    app = Flask(__name__)
+        #:    app.url_map.converters['list'] = ListConverter
         self.url_map = Map()
 
         if self.static_path is not None:
-            self.url_map.add(Rule(self.static_path + '/<filename>',
-                                  build_only=True, endpoint='static'))
+            self.add_url_rule(self.static_path + '/<filename>',
+                              build_only=True, endpoint='static')
             if pkg_resources is not None:
                 target = (self.package_name, 'static')
             else:
","diff --git a/flask.py b/flask.py
index c5a969ca..055b46cf 100644
--- a/flask.py
+++ b/flask.py
@@ -16,7 +16,7 @@ import sys
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     cached_property
+     ImmutableDict, cached_property
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
@@ -306,7 +306,7 @@ class Flask(object):
     session_cookie_name = 'session'
 
     #: options that are passed directly to the Jinja2 environment
-    jinja_options = dict(
+    jinja_options = ImmutableDict(
         autoescape=True,
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
@@ -361,11 +361,26 @@ class Flask(object):
         #: decorator.
         self.template_context_processors = [_default_template_ctx_processor]
 
+        #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
+        #: this to change the routing converters after the class was created
+        #: but before any routes are connected.  Example::
+        #:
+        #:    from werkzeug import BaseConverter
+        #:
+        #:    class ListConverter(BaseConverter):
+        #:        def to_python(self, value):
+        #:            return value.split(',')
+        #:        def to_url(self, values):
+        #:            return ','.join(BaseConverter.to_url(value)
+        #:                            for value in values)
+        #:
+        #:    app = Flask(__name__)
+        #:    app.url_map.converters['list'] = ListConverter
         self.url_map = Map()
 
         if self.static_path is not None:
-            self.url_map.add(Rule(self.static_path + '/<filename>',
-                                  build_only=True, endpoint='static'))
+            self.add_url_rule(self.static_path + '/<filename>',
+                              build_only=True, endpoint='static')
             if pkg_resources is not None:
                 target = (self.package_name, 'static')
             else:
"
5acc491c94262912baa30a4cffc780a46b7faf56,95750b3287bfa21fbb706f10a3a9fbcef01c089e,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Documented some routing converter possibilities.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 15166e9a..60a6b7df 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -181,6 +181,21 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
 
+    def test_custom_converters(self):
+        from werkzeug.routing import BaseConverter
+        class ListConverter(BaseConverter):
+            def to_python(self, value):
+                return value.split(',')
+            def to_url(self, value):
+                return ','.join(super(ListConverter, self).to_url(x) for x in value)
+        app = flask.Flask(__name__)
+        app.url_map.converters['list'] = ListConverter
+        @app.route('/<list:args>')
+        def index(args):
+            return '|'.join(args)
+        c = app.test_client()
+        assert c.get('/1,2,3').data == '1|2|3'
+
     def test_static_files(self):
         app = flask.Flask(__name__)
         rv = app.test_client().get('/static/index.html')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 15166e9a..60a6b7df 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -181,6 +181,21 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
 
+    def test_custom_converters(self):
+        from werkzeug.routing import BaseConverter
+        class ListConverter(BaseConverter):
+            def to_python(self, value):
+                return value.split(',')
+            def to_url(self, value):
+                return ','.join(super(ListConverter, self).to_url(x) for x in value)
+        app = flask.Flask(__name__)
+        app.url_map.converters['list'] = ListConverter
+        @app.route('/<list:args>')
+        def index(args):
+            return '|'.join(args)
+        c = app.test_client()
+        assert c.get('/1,2,3').data == '1|2|3'
+
     def test_static_files(self):
         app = flask.Flask(__name__)
         rv = app.test_client().get('/static/index.html')
"
95750b3287bfa21fbb706f10a3a9fbcef01c089e,06ec917ddedc618944670b39ccd5f4cb862882b2,flask.py,flask.py,flask.py,"Only escape backslashes if they follow ""<"" in JSON dumping for templates.","diff --git a/flask.py b/flask.py
index 055b46cf..89a4fee5 100644
--- a/flask.py
+++ b/flask.py
@@ -261,7 +261,7 @@ def _get_package_path(name):
 
 def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
-    return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+    return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
 
 
 class Flask(object):
","diff --git a/flask.py b/flask.py
index 055b46cf..89a4fee5 100644
--- a/flask.py
+++ b/flask.py
@@ -261,7 +261,7 @@ def _get_package_path(name):
 
 def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
-    return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+    return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
 
 
 class Flask(object):
"
06ec917ddedc618944670b39ccd5f4cb862882b2,50a331307114a641d1d9447453f8fddc52fe680f,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Fixed typo in form docs,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 2a0b4ac8..b94b4156 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -23,7 +23,7 @@ This is an example form for a typical registration page::
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
         password = PasswordField('New Password', [Required(),
-            EqualTo('confirm', mesage='Passwords must match')])
+            EqualTo('confirm', message='Passwords must match')])
         confirm = PasswordField('Repeat Password')
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 2a0b4ac8..b94b4156 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -23,7 +23,7 @@ This is an example form for a typical registration page::
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
         password = PasswordField('New Password', [Required(),
-            EqualTo('confirm', mesage='Passwords must match')])
+            EqualTo('confirm', message='Passwords must match')])
         confirm = PasswordField('Repeat Password')
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
"
50a331307114a641d1d9447453f8fddc52fe680f,4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,POST -> post in HTML,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index b94b4156..29dc65d1 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -95,7 +95,7 @@ takes advantage of the `_formhelpers.html` template:
 .. sourcecode:: html+jinja
 
     {% from ""_formhelpers.html"" import render_field %}
-    <form method=""POST"" action=""/register"">
+    <form method=""post"" action=""/register"">
       <dl>
         {{ render_field(form.username) }}
         {{ render_field(form.email) }}
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index b94b4156..29dc65d1 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -95,7 +95,7 @@ takes advantage of the `_formhelpers.html` template:
 .. sourcecode:: html+jinja
 
     {% from ""_formhelpers.html"" import render_field %}
-    <form method=""POST"" action=""/register"">
+    <form method=""post"" action=""/register"">
       <dl>
         {{ render_field(form.username) }}
         {{ render_field(form.email) }}
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,Proofreading the documentation,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index c3c4a0b6..02344720 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -8,11 +8,11 @@ designed for large scale applications and does not attempt to do so, but
 that does not mean you picked the wrong tool in the first place.
 
 Flask is powered by Werkzeug and Jinja2, two libraries that are in use at
-a number of large websites out there and all Flask does is bringing those
+a number of large websites out there and all Flask does is bring those
 two together.  Being a microframework, Flask is literally a single file.
 What that means for large applications is that it's probably a good idea
 to take the code from Flask and put it into a new module within the
-applications and expanding on that.
+applications and expand on that.
 
 What Could Be Improved?
 -----------------------
@@ -20,12 +20,12 @@ What Could Be Improved?
 For instance it makes a lot of sense to change the way endpoints (the
 names of the functions / URL rules) are handled to also take the module
 name into account.  Right now the function name is the URL name, but
-imagine you have a large applications consisting of multiple components.
+imagine you have a large application consisting of multiple components.
 In that case, it makes a lot of sense to use dotted names for the URL
 endpoints.
 
-Here some suggestions how Flask can be modified to better accomodate large
-scale applications:
+Here are some suggestions for how Flask can be modified to better 
+accomodate large-scale applications:
 
 -   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
@@ -35,7 +35,7 @@ scale applications:
     better solution would be to have one module with all URLs in there and
     specifing the target functions explicitly or by name and importing
     them when needed.
--   switch to explicit request object passing.  This makes it more to type
+-   switch to explicit request object passing.  This requires more typing
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
 -   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directly into the
@@ -44,14 +44,14 @@ scale applications:
 .. _Babel: http://babel.edgewall.org/
 .. _SQLAlchemy: http://www.sqlalchemy.org/
 
-Why does not Flask do all that by Default?
+Why does Flask not do all that by Default?
 ------------------------------------------
 
 There is a huge difference between a small application that only has to
 handle a couple of requests per second and with an overall code complexity
-of less than 4000 lines of code or something of larger scale.  At one
+of less than 4000 lines of code and something of larger scale.  At some
 point it becomes important to integrate external systems, different
 storage backends and more.
 
 If Flask was designed with all these contingencies in mind, it would be a
-much more complex framework and less easy to get started with.
+much more complex framework and harder to get started with.
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index c3c4a0b6..02344720 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -8,11 +8,11 @@ designed for large scale applications and does not attempt to do so, but
 that does not mean you picked the wrong tool in the first place.
 
 Flask is powered by Werkzeug and Jinja2, two libraries that are in use at
-a number of large websites out there and all Flask does is bringing those
+a number of large websites out there and all Flask does is bring those
 two together.  Being a microframework, Flask is literally a single file.
 What that means for large applications is that it's probably a good idea
 to take the code from Flask and put it into a new module within the
-applications and expanding on that.
+applications and expand on that.
 
 What Could Be Improved?
 -----------------------
@@ -20,12 +20,12 @@ What Could Be Improved?
 For instance it makes a lot of sense to change the way endpoints (the
 names of the functions / URL rules) are handled to also take the module
 name into account.  Right now the function name is the URL name, but
-imagine you have a large applications consisting of multiple components.
+imagine you have a large application consisting of multiple components.
 In that case, it makes a lot of sense to use dotted names for the URL
 endpoints.
 
-Here some suggestions how Flask can be modified to better accomodate large
-scale applications:
+Here are some suggestions for how Flask can be modified to better 
+accomodate large-scale applications:
 
 -   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
@@ -35,7 +35,7 @@ scale applications:
     better solution would be to have one module with all URLs in there and
     specifing the target functions explicitly or by name and importing
     them when needed.
--   switch to explicit request object passing.  This makes it more to type
+-   switch to explicit request object passing.  This requires more typing
     (because you now have something to pass around) but it makes it a
     whole lot easier to debug hairy situations and to test the code.
 -   integrate the `Babel`_ i18n package or `SQLAlchemy`_ directly into the
@@ -44,14 +44,14 @@ scale applications:
 .. _Babel: http://babel.edgewall.org/
 .. _SQLAlchemy: http://www.sqlalchemy.org/
 
-Why does not Flask do all that by Default?
+Why does Flask not do all that by Default?
 ------------------------------------------
 
 There is a huge difference between a small application that only has to
 handle a couple of requests per second and with an overall code complexity
-of less than 4000 lines of code or something of larger scale.  At one
+of less than 4000 lines of code and something of larger scale.  At some
 point it becomes important to integrate external systems, different
 storage backends and more.
 
 If Flask was designed with all these contingencies in mind, it would be a
-much more complex framework and less easy to get started with.
+much more complex framework and harder to get started with.
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,Proofreading the documentation,"diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 4a2875f2..a7bbc114 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -11,8 +11,8 @@ Installing `mod_wsgi`
 If you don't have `mod_wsgi` installed yet you have to either install it using
 a package manager or compile it yourself.
 
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
+The mod_wsgi `installation instructions`_ cover source installations on UNIX 
+systems.
 
 If you are using ubuntu / debian you can apt-get it and activate it as follows::
 
@@ -44,7 +44,7 @@ For most applications the following file should be sufficient::
 If you don't have a factory function for application creation but a singleton
 instance you can directly import that one as `application`.
 
-Store that file somewhere where you will find it again (eg:
+Store that file somewhere that you will find it again (e.g.:
 `/var/www/yourapplication`) and make sure that `yourapplication` and all
 the libraries that are in use are on the python load path.  If you don't
 want to install it system wide consider using a `virtual python`_ instance.
","diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 4a2875f2..a7bbc114 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -11,8 +11,8 @@ Installing `mod_wsgi`
 If you don't have `mod_wsgi` installed yet you have to either install it using
 a package manager or compile it yourself.
 
-The mod_wsgi `installation instructions`_ cover installation instructions for
-source installations on UNIX systems.
+The mod_wsgi `installation instructions`_ cover source installations on UNIX 
+systems.
 
 If you are using ubuntu / debian you can apt-get it and activate it as follows::
 
@@ -44,7 +44,7 @@ For most applications the following file should be sufficient::
 If you don't have a factory function for application creation but a singleton
 instance you can directly import that one as `application`.
 
-Store that file somewhere where you will find it again (eg:
+Store that file somewhere that you will find it again (e.g.:
 `/var/www/yourapplication`) and make sure that `yourapplication` and all
 the libraries that are in use are on the python load path.  If you don't
 want to install it system wide consider using a `virtual python`_ instance.
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/design.rst,docs/design.rst,docs/design.rst,Proofreading the documentation,"diff --git a/docs/design.rst b/docs/design.rst
index ae1fd8d0..c4fd32dd 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -2,7 +2,7 @@ Design Decisions in Flask
 =========================
 
 If you are curious why Flask does certain things the way it does and not
-different, this section is for you.  This should give you an idea about
+differently, this section is for you.  This should give you an idea about
 some of the design decisions that may appear arbitrary and surprising at
 first, especially in direct comparison with other frameworks.
 
@@ -44,10 +44,10 @@ something it can be very helpful to create a minimal application to test
 specific behavior.  When the application object is deleted everything it
 allocated will be freed again.
 
-Another thing that becomes possible with having an explicit object laying
+Another thing that becomes possible when you have an explicit object laying
 around in your code is that you can subclass the base class
 (:class:`~flask.Flask`) to alter specific behaviour.  This would not be
-possible without hacks if the object was created ahead of time for you
+possible without hacks if the object were created ahead of time for you
 based on a class that is not exposed to you.
 
 But there is another very important reason why Flask depends on an
@@ -83,23 +83,23 @@ that limitation that Jinja2 is *always* configured will probably go away,
 the decision to bundle one template engine and use that will not.
 
 Template engines are like programming languages and each of those engines
-has a certain understandment about how things work.  On the surface they
+has a certain understanding about how things work.  On the surface they
 all work the same: you tell the engine to evaluate a template with a set
 of variables and take the return value as string.
 
 But that's about where similarities end.  Jinja2 for example has an
 extensive filter system, a certain way to do template inheritance, support
 for reusable blocks (macros) that can be used from inside templates and
-also from Python code, is using unicode for all operations, supports
+also from Python code, uses unicode for all operations, supports
 iterative template rendering, configurable syntax and more.  On the other
 hand an engine like Genshi is based on XML stream evaluation, template
 inheritance by taking the availability of XPath into account and more.
 Mako on the other hand treats templates similar to Python modules.
 
-When it comes to bridge a template engine with an application or framework
-there is more than just rendering templates.  Flask uses Jinja2's
-extensive autoescaping support for instance.  Also it provides ways to
-access macros from Jinja2 templates.
+When it comes to connecting a template engine with an application or 
+framework there is more than just rendering templates.  For instance,
+Flask uses Jinja2's extensive autoescaping support.  Also it provides 
+ways to access macros from Jinja2 templates.
 
 A template abstraction layer that would not take the unique features of
 the template engines away is a science on its own and a too large
@@ -115,7 +115,7 @@ over to the Ruby side of web development there we have a protocol very
 similar to WSGI.  Just that it's called Rack there, but besides that it
 looks very much like a WSGI rendition for Ruby.  But nearly all
 applications in Ruby land do not work with Rack directly, but on top of a
-lirbary with the same name.  This Rack library has two equivalents in
+library with the same name.  This Rack library has two equivalents in
 Python: WebOb (formerly Paste) and Werkzeug.  Paste is still around but
 from my understanding it's sort of deprecated in favour of WebOb.  The
 development of WebOb and Werkzeug started side by side with similar ideas
","diff --git a/docs/design.rst b/docs/design.rst
index ae1fd8d0..c4fd32dd 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -2,7 +2,7 @@ Design Decisions in Flask
 =========================
 
 If you are curious why Flask does certain things the way it does and not
-different, this section is for you.  This should give you an idea about
+differently, this section is for you.  This should give you an idea about
 some of the design decisions that may appear arbitrary and surprising at
 first, especially in direct comparison with other frameworks.
 
@@ -44,10 +44,10 @@ something it can be very helpful to create a minimal application to test
 specific behavior.  When the application object is deleted everything it
 allocated will be freed again.
 
-Another thing that becomes possible with having an explicit object laying
+Another thing that becomes possible when you have an explicit object laying
 around in your code is that you can subclass the base class
 (:class:`~flask.Flask`) to alter specific behaviour.  This would not be
-possible without hacks if the object was created ahead of time for you
+possible without hacks if the object were created ahead of time for you
 based on a class that is not exposed to you.
 
 But there is another very important reason why Flask depends on an
@@ -83,23 +83,23 @@ that limitation that Jinja2 is *always* configured will probably go away,
 the decision to bundle one template engine and use that will not.
 
 Template engines are like programming languages and each of those engines
-has a certain understandment about how things work.  On the surface they
+has a certain understanding about how things work.  On the surface they
 all work the same: you tell the engine to evaluate a template with a set
 of variables and take the return value as string.
 
 But that's about where similarities end.  Jinja2 for example has an
 extensive filter system, a certain way to do template inheritance, support
 for reusable blocks (macros) that can be used from inside templates and
-also from Python code, is using unicode for all operations, supports
+also from Python code, uses unicode for all operations, supports
 iterative template rendering, configurable syntax and more.  On the other
 hand an engine like Genshi is based on XML stream evaluation, template
 inheritance by taking the availability of XPath into account and more.
 Mako on the other hand treats templates similar to Python modules.
 
-When it comes to bridge a template engine with an application or framework
-there is more than just rendering templates.  Flask uses Jinja2's
-extensive autoescaping support for instance.  Also it provides ways to
-access macros from Jinja2 templates.
+When it comes to connecting a template engine with an application or 
+framework there is more than just rendering templates.  For instance,
+Flask uses Jinja2's extensive autoescaping support.  Also it provides 
+ways to access macros from Jinja2 templates.
 
 A template abstraction layer that would not take the unique features of
 the template engines away is a science on its own and a too large
@@ -115,7 +115,7 @@ over to the Ruby side of web development there we have a protocol very
 similar to WSGI.  Just that it's called Rack there, but besides that it
 looks very much like a WSGI rendition for Ruby.  But nearly all
 applications in Ruby land do not work with Rack directly, but on top of a
-lirbary with the same name.  This Rack library has two equivalents in
+library with the same name.  This Rack library has two equivalents in
 Python: WebOb (formerly Paste) and Werkzeug.  Paste is still around but
 from my understanding it's sort of deprecated in favour of WebOb.  The
 development of WebOb and Werkzeug started side by side with similar ideas
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/installation.rst,docs/installation.rst,docs/installation.rst,Proofreading the documentation,"diff --git a/docs/installation.rst b/docs/installation.rst
index 74c5f5e4..f2f4905f 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -9,10 +9,10 @@ way and why there are multiple ways.
 
 Flask depends on two external libraries: `Werkzeug
 <http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
-The first on is responsible for interfacing WSGI the latter to render
+The first one is responsible for interfacing WSGI the latter for rendering
 templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
-is behaving in a specific way that you can run it on different
+is behaving in a specific way so that you can run it on different
 environments (for example on a local development server, on an Apache2, on
 lighttpd, on Google's App Engine or whatever you have in mind).
 
@@ -26,10 +26,10 @@ Virtualenv is what you want to use during development and in production if
 you have shell access.  So first: what does virtualenv do?  If you are
 like me and you like Python, chances are you want to use it for another
 project as well.  Now the more projects you have, the more likely it is
-that you will be working with different versions of Python itself or a
-library involved.  Because let's face it: quite often libraries break
-backwards compatibility and it's unlikely that your application will
-not have any dependencies, that just won't happen.  So virtualenv for the
+that you will be working with different versions of Python itself or at
+least an individual library.  Because let's face it: quite often libraries 
+break backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv to the
 rescue!
 
 It basically makes it possible to have multiple side-by-side
@@ -47,7 +47,7 @@ or even better::
 
     $ sudo pip install virtualenv
 
-Changes are you have virtualenv installed on your system then.  Maybe it's
+Chances are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
@@ -152,7 +152,7 @@ Once you have done that it's important to add the `easy_install` command
 and other Python scripts to the path.  To do that you have to add the
 Python installation's Script folder to the `PATH` variable.
 
-To do that, click right on your ""Computer"" desktop icon and click
+To do that, right-click on your ""Computer"" desktop icon and click
 ""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
 settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
 on the ""Environment variables"" button and double click on the ""Path""
@@ -165,7 +165,7 @@ the following value::
 
     ;C:\Python26\Scripts
 
-Then you are done.  To check if it worked, open the cmd and execute
+Then you are done.  To check that it worked, open the cmd and execute
 ""easy_install"".  If you have UAC enabled it should prompt you for admin
 privileges.
 
","diff --git a/docs/installation.rst b/docs/installation.rst
index 74c5f5e4..f2f4905f 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -9,10 +9,10 @@ way and why there are multiple ways.
 
 Flask depends on two external libraries: `Werkzeug
 <http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
-The first on is responsible for interfacing WSGI the latter to render
+The first one is responsible for interfacing WSGI the latter for rendering
 templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
-is behaving in a specific way that you can run it on different
+is behaving in a specific way so that you can run it on different
 environments (for example on a local development server, on an Apache2, on
 lighttpd, on Google's App Engine or whatever you have in mind).
 
@@ -26,10 +26,10 @@ Virtualenv is what you want to use during development and in production if
 you have shell access.  So first: what does virtualenv do?  If you are
 like me and you like Python, chances are you want to use it for another
 project as well.  Now the more projects you have, the more likely it is
-that you will be working with different versions of Python itself or a
-library involved.  Because let's face it: quite often libraries break
-backwards compatibility and it's unlikely that your application will
-not have any dependencies, that just won't happen.  So virtualenv for the
+that you will be working with different versions of Python itself or at
+least an individual library.  Because let's face it: quite often libraries 
+break backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv to the
 rescue!
 
 It basically makes it possible to have multiple side-by-side
@@ -47,7 +47,7 @@ or even better::
 
     $ sudo pip install virtualenv
 
-Changes are you have virtualenv installed on your system then.  Maybe it's
+Chances are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
@@ -152,7 +152,7 @@ Once you have done that it's important to add the `easy_install` command
 and other Python scripts to the path.  To do that you have to add the
 Python installation's Script folder to the `PATH` variable.
 
-To do that, click right on your ""Computer"" desktop icon and click
+To do that, right-click on your ""Computer"" desktop icon and click
 ""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
 settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
 on the ""Environment variables"" button and double click on the ""Path""
@@ -165,7 +165,7 @@ the following value::
 
     ;C:\Python26\Scripts
 
-Then you are done.  To check if it worked, open the cmd and execute
+Then you are done.  To check that it worked, open the cmd and execute
 ""easy_install"".  If you have UAC enabled it should prompt you for admin
 privileges.
 
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,Proofreading the documentation,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index d0b28932..5e14625b 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -48,12 +48,12 @@ What did we gain from this?  Now we can restructure the application a bit
 into multiple modules.  The only thing you have to remember is the
 following quick checklist:
 
-1. the `Flask` application object creation have to be in the
+1. the `Flask` application object creation has to be in the
    `__init__.py` file.  That way each module can import it safely and the
-   `__name__` variable will resole to the correct package.
+   `__name__` variable will resolve to the correct package.
 2. all the view functions (the ones with a :meth:`~flask.Flask.route`
    decorator on top) have to be imported when in the `__init__.py` file.
-   Not the objects itself, but the module it is in.  Do the importing at
+   Not the object itself, but the module it is in.  Do the importing at
    the *bottom* of the file.
 
 Here an example `__init__.py`::
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index d0b28932..5e14625b 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -48,12 +48,12 @@ What did we gain from this?  Now we can restructure the application a bit
 into multiple modules.  The only thing you have to remember is the
 following quick checklist:
 
-1. the `Flask` application object creation have to be in the
+1. the `Flask` application object creation has to be in the
    `__init__.py` file.  That way each module can import it safely and the
-   `__name__` variable will resole to the correct package.
+   `__name__` variable will resolve to the correct package.
 2. all the view functions (the ones with a :meth:`~flask.Flask.route`
    decorator on top) have to be imported when in the `__init__.py` file.
-   Not the objects itself, but the module it is in.  Do the importing at
+   Not the object itself, but the module it is in.  Do the importing at
    the *bottom* of the file.
 
 Here an example `__init__.py`::
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,Proofreading the documentation,"diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 5a064469..32d41c08 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -6,7 +6,7 @@ SQLAlchemy in Flask
 Many people prefer `SQLAlchemy`_ for database access.  In this case it's
 encouraged to use a package instead of a module for your flask application
 and drop the models into a separate module (:ref:`larger-applications`).
-Although that is not necessary but makes a lot of sense.
+While that is not necessary, it makes a lot of sense.
 
 There are three very common ways to use SQLAlchemy.  I will outline each
 of them here:
@@ -52,7 +52,7 @@ automatically remove database sessions at the end of the request for you::
         db_session.remove()
         return response
 
-Here an example model (put that into `models.py` for instance)::
+Here is an example model (put this into `models.py`, e.g.)::
 
     from sqlalchemy import Column, Integer, String
     from yourapplication.database import Base
@@ -70,7 +70,7 @@ Here an example model (put that into `models.py` for instance)::
         def __repr__(self):
             return '<User %r>' % (self.name, self.email)
 
-You can insert entries into the database like this then:
+You can insert entries into the database like this:
 
 >>> from yourapplication.database import db_session
 >>> from yourapplication.models import User
@@ -95,11 +95,11 @@ Manual Object Relational Mapping
 Manual object relational mapping has a few upsides and a few downsides
 versus the declarative approach from above.  The main difference is that
 you define tables and classes separately and map them together.  It's more
-flexible but a little more to type.  In general it works similar to the
+flexible but a little more to type.  In general it works like the
 declarative approach, so make sure to also split up your application into
 multiple modules in a package.
 
-Here the example `database.py` module for your application::
+Here is an example `database.py` module for your application::
 
     from sqlalchemy import create_engine, MetaData
     from sqlalchemy.orm import scoped_session, sessionmaker
@@ -112,7 +112,7 @@ Here the example `database.py` module for your application::
     def init_db():
         metadata.create_all(bind=engine)
 
-As for the declarative approach you need to close down the session after
+As for the declarative approach you need to close the session after
 each request.  Put this into your application module::
 
     from yourapplication.database import db_session
@@ -122,7 +122,7 @@ each request.  Put this into your application module::
         db_session.remove()
         return response
 
-Here an example table and model (put that into `models.py` for instance)::
+Here is an example table and model (put this into `models.py`)::
 
     from sqlalchemy import Table, Column, Integer, String
     from sqlalchemy.orm import mapper
@@ -172,7 +172,7 @@ connection first so that we can use a transaction:
 
 SQLAlchemy will automatically commit for us.
 
-To query your database, yu use the engine directly or use a connection:
+To query your database, you use the engine directly or use a connection:
 
 >>> users.select(users.c.id == 1).execute().first()
 (1, u'admin', u'admin@localhost')
@@ -183,7 +183,7 @@ These results are also dict-like tuples:
 >>> r['name']
 u'admin'
 
-You can also pass string of SQL statements to the
+You can also pass strings of SQL statements to the
 :meth:`~sqlalchemy.engine.base.Connection.execute` method:
 
 >>> engine.execute('select * from users where id = :1', [1]).first()
","diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 5a064469..32d41c08 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -6,7 +6,7 @@ SQLAlchemy in Flask
 Many people prefer `SQLAlchemy`_ for database access.  In this case it's
 encouraged to use a package instead of a module for your flask application
 and drop the models into a separate module (:ref:`larger-applications`).
-Although that is not necessary but makes a lot of sense.
+While that is not necessary, it makes a lot of sense.
 
 There are three very common ways to use SQLAlchemy.  I will outline each
 of them here:
@@ -52,7 +52,7 @@ automatically remove database sessions at the end of the request for you::
         db_session.remove()
         return response
 
-Here an example model (put that into `models.py` for instance)::
+Here is an example model (put this into `models.py`, e.g.)::
 
     from sqlalchemy import Column, Integer, String
     from yourapplication.database import Base
@@ -70,7 +70,7 @@ Here an example model (put that into `models.py` for instance)::
         def __repr__(self):
             return '<User %r>' % (self.name, self.email)
 
-You can insert entries into the database like this then:
+You can insert entries into the database like this:
 
 >>> from yourapplication.database import db_session
 >>> from yourapplication.models import User
@@ -95,11 +95,11 @@ Manual Object Relational Mapping
 Manual object relational mapping has a few upsides and a few downsides
 versus the declarative approach from above.  The main difference is that
 you define tables and classes separately and map them together.  It's more
-flexible but a little more to type.  In general it works similar to the
+flexible but a little more to type.  In general it works like the
 declarative approach, so make sure to also split up your application into
 multiple modules in a package.
 
-Here the example `database.py` module for your application::
+Here is an example `database.py` module for your application::
 
     from sqlalchemy import create_engine, MetaData
     from sqlalchemy.orm import scoped_session, sessionmaker
@@ -112,7 +112,7 @@ Here the example `database.py` module for your application::
     def init_db():
         metadata.create_all(bind=engine)
 
-As for the declarative approach you need to close down the session after
+As for the declarative approach you need to close the session after
 each request.  Put this into your application module::
 
     from yourapplication.database import db_session
@@ -122,7 +122,7 @@ each request.  Put this into your application module::
         db_session.remove()
         return response
 
-Here an example table and model (put that into `models.py` for instance)::
+Here is an example table and model (put this into `models.py`)::
 
     from sqlalchemy import Table, Column, Integer, String
     from sqlalchemy.orm import mapper
@@ -172,7 +172,7 @@ connection first so that we can use a transaction:
 
 SQLAlchemy will automatically commit for us.
 
-To query your database, yu use the engine directly or use a connection:
+To query your database, you use the engine directly or use a connection:
 
 >>> users.select(users.c.id == 1).execute().first()
 (1, u'admin', u'admin@localhost')
@@ -183,7 +183,7 @@ These results are also dict-like tuples:
 >>> r['name']
 u'admin'
 
-You can also pass string of SQL statements to the
+You can also pass strings of SQL statements to the
 :meth:`~sqlalchemy.engine.base.Connection.execute` method:
 
 >>> engine.execute('select * from users where id = :1', [1]).first()
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/patterns/sqlite3.rst,docs/patterns/sqlite3.rst,docs/patterns/sqlite3.rst,Proofreading the documentation,"diff --git a/docs/patterns/sqlite3.rst b/docs/patterns/sqlite3.rst
index 3e758002..c11e837d 100644
--- a/docs/patterns/sqlite3.rst
+++ b/docs/patterns/sqlite3.rst
@@ -3,12 +3,12 @@
 Using SQLite 3 with Flask
 =========================
 
-In Flask you can implement opening of dabase connections at the beginning
+In Flask you can implement opening of database connections at the beginning
 of the request and closing at the end with the
 :meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
 decorators in combination with the special :class:`~flask.g` object.
 
-So here a simple example how you can use SQLite 3 with Flask::
+So here a simple example of how you can use SQLite 3 with Flask::
 
     import sqlite3
     from flask import g
@@ -70,7 +70,7 @@ Initial Schemas
 
 Relational databases need schemas, so applications often ship a
 `schema.sql` file that creates the database.  It's a good idea to provide
-a function that creates the database bases on that schema.  This function
+a function that creates the database based on that schema.  This function
 can do that for you::
 
     from contextlib import closing
","diff --git a/docs/patterns/sqlite3.rst b/docs/patterns/sqlite3.rst
index 3e758002..c11e837d 100644
--- a/docs/patterns/sqlite3.rst
+++ b/docs/patterns/sqlite3.rst
@@ -3,12 +3,12 @@
 Using SQLite 3 with Flask
 =========================
 
-In Flask you can implement opening of dabase connections at the beginning
+In Flask you can implement opening of database connections at the beginning
 of the request and closing at the end with the
 :meth:`~flask.Flask.before_request` and :meth:`~flask.Flask.after_request`
 decorators in combination with the special :class:`~flask.g` object.
 
-So here a simple example how you can use SQLite 3 with Flask::
+So here a simple example of how you can use SQLite 3 with Flask::
 
     import sqlite3
     from flask import g
@@ -70,7 +70,7 @@ Initial Schemas
 
 Relational databases need schemas, so applications often ship a
 `schema.sql` file that creates the database.  It's a good idea to provide
-a function that creates the database bases on that schema.  This function
+a function that creates the database based on that schema.  This function
 can do that for you::
 
     from contextlib import closing
"
4ff9493e5765f3d2c2fd2dd1882791a75ad6fc68,a7ff9dbddd5f861463051601177442e98aae84bf,docs/testing.rst,docs/testing.rst,docs/testing.rst,Proofreading the documentation,"diff --git a/docs/testing.rst b/docs/testing.rst
index 5439fbaf..3ea1e9ba 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -8,14 +8,14 @@ Testing Flask Applications
 Not sure where that is coming from, and it's not entirely correct, but
 also not that far from the truth.  Untested applications make it hard to
 improve existing code and developers of untested applications tend to
-become pretty paranoid.  If an application however has automated tests you
-can savely change things and you will instantly know if your change broke
+become pretty paranoid.  If an application however has automated tests, you
+can safely change things and you will instantly know if your change broke
 something.
 
 Flask gives you a couple of ways to test applications.  It mainly does
 that by exposing the Werkzeug test :class:`~werkzeug.Client` class to your
 code and handling the context locals for you.  You can then use that with
-your favourite testing solution.  In this documentation we will us the
+your favourite testing solution.  In this documentation we will use the
 :mod:`unittest` package that comes preinstalled with each Python
 installation.
 
@@ -50,13 +50,13 @@ In order to test that, we add a second module (
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client and initialize
+The code in the `setUp` function creates a new test client and initializes
 a new database.  That function is called before each individual test function.
-What the test client does for us is giving us a simple interface to the
+What the test client does is give us a simple interface to the
 application.  We can trigger test requests to the application and the
 client will also keep track of cookies for us.
 
-Because SQLite3 is filesystem based we can easily use the tempfile module
+Because SQLite3 is filesystem-based we can easily use the tempfile module
 to create a temporary database and initialize it.  Just make sure that you
 keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
 store it as `self.db` because of that) so that the garbage collector does
@@ -112,7 +112,7 @@ Run it again and you should see one passing test::
 
     OK
 
-Of course you can submit forms with the test client as well which we will
+Of course you can submit forms with the test client as well, which we will
 use now to log our user in.
 
 Logging In and Out
@@ -125,7 +125,7 @@ login and logout pages with the required form data (username and
 password).  Because the login and logout pages redirect, we tell the
 client to `follow_redirects`.
 
-Add the following two methods do your `FlaskrTestCase` class::
+Add the following two methods to your `FlaskrTestCase` class::
 
    def login(self, username, password):
        return self.app.post('/login', data=dict(
@@ -137,7 +137,7 @@ Add the following two methods do your `FlaskrTestCase` class::
        return self.app.get('/logout', follow_redirects=True)
 
 Now we can easily test if logging in and out works and that it fails with
-invalid credentials.  Add this as new test to the class::
+invalid credentials.  Add this new test to the class::
 
    def test_login_logout(self):
        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
@@ -165,7 +165,7 @@ like this::
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
-Here we also check that HTML is allowed in the text but not in the title
+Here we check that HTML is allowed in the text but not in the title,
 which is the intended behavior.
 
 Running that should now give us three passing tests::
","diff --git a/docs/testing.rst b/docs/testing.rst
index 5439fbaf..3ea1e9ba 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -8,14 +8,14 @@ Testing Flask Applications
 Not sure where that is coming from, and it's not entirely correct, but
 also not that far from the truth.  Untested applications make it hard to
 improve existing code and developers of untested applications tend to
-become pretty paranoid.  If an application however has automated tests you
-can savely change things and you will instantly know if your change broke
+become pretty paranoid.  If an application however has automated tests, you
+can safely change things and you will instantly know if your change broke
 something.
 
 Flask gives you a couple of ways to test applications.  It mainly does
 that by exposing the Werkzeug test :class:`~werkzeug.Client` class to your
 code and handling the context locals for you.  You can then use that with
-your favourite testing solution.  In this documentation we will us the
+your favourite testing solution.  In this documentation we will use the
 :mod:`unittest` package that comes preinstalled with each Python
 installation.
 
@@ -50,13 +50,13 @@ In order to test that, we add a second module (
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client and initialize
+The code in the `setUp` function creates a new test client and initializes
 a new database.  That function is called before each individual test function.
-What the test client does for us is giving us a simple interface to the
+What the test client does is give us a simple interface to the
 application.  We can trigger test requests to the application and the
 client will also keep track of cookies for us.
 
-Because SQLite3 is filesystem based we can easily use the tempfile module
+Because SQLite3 is filesystem-based we can easily use the tempfile module
 to create a temporary database and initialize it.  Just make sure that you
 keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
 store it as `self.db` because of that) so that the garbage collector does
@@ -112,7 +112,7 @@ Run it again and you should see one passing test::
 
     OK
 
-Of course you can submit forms with the test client as well which we will
+Of course you can submit forms with the test client as well, which we will
 use now to log our user in.
 
 Logging In and Out
@@ -125,7 +125,7 @@ login and logout pages with the required form data (username and
 password).  Because the login and logout pages redirect, we tell the
 client to `follow_redirects`.
 
-Add the following two methods do your `FlaskrTestCase` class::
+Add the following two methods to your `FlaskrTestCase` class::
 
    def login(self, username, password):
        return self.app.post('/login', data=dict(
@@ -137,7 +137,7 @@ Add the following two methods do your `FlaskrTestCase` class::
        return self.app.get('/logout', follow_redirects=True)
 
 Now we can easily test if logging in and out works and that it fails with
-invalid credentials.  Add this as new test to the class::
+invalid credentials.  Add this new test to the class::
 
    def test_login_logout(self):
        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
@@ -165,7 +165,7 @@ like this::
         assert '&lt;Hello&gt' in rv.data
         assert '<strong>HTML</strong> allowed here' in rv.data
 
-Here we also check that HTML is allowed in the text but not in the title
+Here we check that HTML is allowed in the text but not in the title,
 which is the intended behavior.
 
 Running that should now give us three passing tests::
"
a7ff9dbddd5f861463051601177442e98aae84bf,9f0b2429d638e54cb534b555c393d0770dfc1a8f,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,The testsuite skips JSON tests now is not available and runs the example tests as well.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 60a6b7df..f5f7dfdc 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -10,11 +10,18 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
+import os
+import sys
 import flask
 import unittest
 import tempfile
 
 
+example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
+sys.path.append(os.path.join(example_path, 'flaskr'))
+sys.path.append(os.path.join(example_path, 'minitwit'))
+
+
 class ContextTestCase(unittest.TestCase):
 
     def test_context_binding(self):
@@ -277,5 +284,19 @@ class TemplatingTestCase(unittest.TestCase):
             assert macro('World') == 'Hello World!'
 
 
+def suite():
+    from minitwit_tests import MiniTwitTestCase
+    from flaskr_tests import FlaskrTestCase
+    suite = unittest.TestSuite()
+    suite.addTest(unittest.makeSuite(ContextTestCase))
+    suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
+    suite.addTest(unittest.makeSuite(TemplatingTestCase))
+    if flask.json_available:
+        suite.addTest(unittest.makeSuite(JSONTestCase))
+    suite.addTest(unittest.makeSuite(MiniTwitTestCase))
+    suite.addTest(unittest.makeSuite(FlaskrTestCase))
+    return suite
+
+
 if __name__ == '__main__':
-    unittest.main()
+    unittest.main(defaultTest='suite')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 60a6b7df..f5f7dfdc 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -10,11 +10,18 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
+import os
+import sys
 import flask
 import unittest
 import tempfile
 
 
+example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
+sys.path.append(os.path.join(example_path, 'flaskr'))
+sys.path.append(os.path.join(example_path, 'minitwit'))
+
+
 class ContextTestCase(unittest.TestCase):
 
     def test_context_binding(self):
@@ -277,5 +284,19 @@ class TemplatingTestCase(unittest.TestCase):
             assert macro('World') == 'Hello World!'
 
 
+def suite():
+    from minitwit_tests import MiniTwitTestCase
+    from flaskr_tests import FlaskrTestCase
+    suite = unittest.TestSuite()
+    suite.addTest(unittest.makeSuite(ContextTestCase))
+    suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
+    suite.addTest(unittest.makeSuite(TemplatingTestCase))
+    if flask.json_available:
+        suite.addTest(unittest.makeSuite(JSONTestCase))
+    suite.addTest(unittest.makeSuite(MiniTwitTestCase))
+    suite.addTest(unittest.makeSuite(FlaskrTestCase))
+    return suite
+
+
 if __name__ == '__main__':
-    unittest.main()
+    unittest.main(defaultTest='suite')
"
9f0b2429d638e54cb534b555c393d0770dfc1a8f,1404a85bc554f96bff5463e6eadb14662b945f2e,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Fixed WTForms example.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 29dc65d1..4a836975 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -22,9 +22,9 @@ This is an example form for a typical registration page::
     class RegistrationForm(Form):
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
-        password = PasswordField('New Password', [Required(),
-            EqualTo('confirm', message='Passwords must match')])
-        confirm = PasswordField('Repeat Password')
+        password = PasswordField('New Password', [validators.Required()])
+        confirm = PasswordField('Repeat Password', [validators.EqualTo(
+            'confirm', message='Passwords must match')])
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
 In the View
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 29dc65d1..4a836975 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -22,9 +22,9 @@ This is an example form for a typical registration page::
     class RegistrationForm(Form):
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
-        password = PasswordField('New Password', [Required(),
-            EqualTo('confirm', message='Passwords must match')])
-        confirm = PasswordField('Repeat Password')
+        password = PasswordField('New Password', [validators.Required()])
+        confirm = PasswordField('Repeat Password', [validators.EqualTo(
+            'confirm', message='Passwords must match')])
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
 In the View
"
1404a85bc554f96bff5463e6eadb14662b945f2e,715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Some more documentation updates.,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index c12f4474..32eb6f04 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -88,7 +88,7 @@ Now let's create a server side function that accepts two URL arguments of
 numbers which should be added together and then sent back to the
 application in a JSON object.  This is a really ridiculous example and is
 something you usually would do on the client side alone, but a simple
-example that shows how you would use jQuer and Flask nonetheless::
+example that shows how you would use jQuery and Flask nonetheless::
 
     from flask import Flask, jsonify, render_template, request
     app = Flask(__name__)
@@ -108,6 +108,13 @@ template.  This template will load jQuery as above and have a little form
 we can add two numbers and a link to trigger the function on the server
 side.
 
+Note that we are using the :meth:`~werkzeug.MultiDict.get` method here
+which will never fail.  If the key is missing a default value (here ``0``)
+is returned.  Furthermore it can convert values to a specific type (like
+in our case `int`).  This is especially handy for code that that is
+triggered by a script (APIs, JavaScript etc.) because you don't need
+special error reporting in that case.
+
 The HTML
 --------
 
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index c12f4474..32eb6f04 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -88,7 +88,7 @@ Now let's create a server side function that accepts two URL arguments of
 numbers which should be added together and then sent back to the
 application in a JSON object.  This is a really ridiculous example and is
 something you usually would do on the client side alone, but a simple
-example that shows how you would use jQuer and Flask nonetheless::
+example that shows how you would use jQuery and Flask nonetheless::
 
     from flask import Flask, jsonify, render_template, request
     app = Flask(__name__)
@@ -108,6 +108,13 @@ template.  This template will load jQuery as above and have a little form
 we can add two numbers and a link to trigger the function on the server
 side.
 
+Note that we are using the :meth:`~werkzeug.MultiDict.get` method here
+which will never fail.  If the key is missing a default value (here ``0``)
+is returned.  Furthermore it can convert values to a specific type (like
+in our case `int`).  This is especially handy for code that that is
+triggered by a script (APIs, JavaScript etc.) because you don't need
+special error reporting in that case.
+
 The HTML
 --------
 
"
1404a85bc554f96bff5463e6eadb14662b945f2e,715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,flask.py,flask.py,flask.py,Some more documentation updates.,"diff --git a/flask.py b/flask.py
index 89a4fee5..bc99bee0 100644
--- a/flask.py
+++ b/flask.py
@@ -66,8 +66,8 @@ class Request(RequestBase):
         """"""If the mimetype is `application/json` this will contain the
         parsed JSON data.
         """"""
-        if not json_available:
-            raise AttributeError('simplejson not available')
+        if __debug__:
+            _assert_have_json()
         if self.mimetype == 'application/json':
             return json.loads(self.data)
 
@@ -210,6 +210,8 @@ def jsonify(*args, **kwargs):
 
     .. versionadded:: 0.2
     """"""
+    if __debug__:
+        _assert_have_json()
     return current_app.response_class(json.dumps(dict(*args, **kwargs),
         indent=None if request.is_xhr else 2), mimetype='application/json')
 
@@ -251,6 +253,12 @@ def _default_template_ctx_processor():
     )
 
 
+def _assert_have_json():
+    """"""Helper function that fails if JSON is unavailable""""""
+    if not json_available:
+        raise RuntimeError('simplejson not installed')
+
+
 def _get_package_path(name):
     """"""Returns the path to a package or cwd if that cannot be found.""""""
     try:
@@ -261,6 +269,8 @@ def _get_package_path(name):
 
 def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+    if __debug__:
+        _assert_have_json()
     return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
 
 
@@ -398,7 +408,6 @@ class Flask(object):
             url_for=url_for,
             get_flashed_messages=get_flashed_messages
         )
-        if json_available:
         self.jinja_env.filters['tojson'] = _tojson_filter
 
     def create_jinja_loader(self):
@@ -498,7 +507,8 @@ class Flask(object):
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
-        decorator. If a view_func is provided it will be registered with the endpoint.
+        decorator. If a view_func is provided it will be registered with the
+        endpoint.
 
         Basically this example::
 
@@ -512,19 +522,22 @@ class Flask(object):
                 pass
             app.add_url_rule('/', 'index', index)
 
-         If the view_func is not provided you will need to connect the endpoint to a 
-         view function like so:
+        If the view_func is not provided you will need to connect the endpoint
+        to a view function like so::
+
             app.view_functions['index'] = index
 
+        .. versionchanged:: 0.2
+           `view_func` parameter added
+
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
-        :param view_func: the function to call when servicing a request to the provided endpoint
+        :param view_func: the function to call when servicing a request to the
+                          provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
-
-        .. versionadded:: 0.2
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
","diff --git a/flask.py b/flask.py
index 89a4fee5..bc99bee0 100644
--- a/flask.py
+++ b/flask.py
@@ -66,8 +66,8 @@ class Request(RequestBase):
         """"""If the mimetype is `application/json` this will contain the
         parsed JSON data.
         """"""
-        if not json_available:
-            raise AttributeError('simplejson not available')
+        if __debug__:
+            _assert_have_json()
         if self.mimetype == 'application/json':
             return json.loads(self.data)
 
@@ -210,6 +210,8 @@ def jsonify(*args, **kwargs):
 
     .. versionadded:: 0.2
     """"""
+    if __debug__:
+        _assert_have_json()
     return current_app.response_class(json.dumps(dict(*args, **kwargs),
         indent=None if request.is_xhr else 2), mimetype='application/json')
 
@@ -251,6 +253,12 @@ def _default_template_ctx_processor():
     )
 
 
+def _assert_have_json():
+    """"""Helper function that fails if JSON is unavailable""""""
+    if not json_available:
+        raise RuntimeError('simplejson not installed')
+
+
 def _get_package_path(name):
     """"""Returns the path to a package or cwd if that cannot be found.""""""
     try:
@@ -261,6 +269,8 @@ def _get_package_path(name):
 
 def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+    if __debug__:
+        _assert_have_json()
     return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
 
 
@@ -398,7 +408,6 @@ class Flask(object):
             url_for=url_for,
             get_flashed_messages=get_flashed_messages
         )
-        if json_available:
         self.jinja_env.filters['tojson'] = _tojson_filter
 
     def create_jinja_loader(self):
@@ -498,7 +507,8 @@ class Flask(object):
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
-        decorator. If a view_func is provided it will be registered with the endpoint.
+        decorator. If a view_func is provided it will be registered with the
+        endpoint.
 
         Basically this example::
 
@@ -512,19 +522,22 @@ class Flask(object):
                 pass
             app.add_url_rule('/', 'index', index)
 
-         If the view_func is not provided you will need to connect the endpoint to a 
-         view function like so:
+        If the view_func is not provided you will need to connect the endpoint
+        to a view function like so::
+
             app.view_functions['index'] = index
 
+        .. versionchanged:: 0.2
+           `view_func` parameter added
+
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
-        :param view_func: the function to call when servicing a request to the provided endpoint
+        :param view_func: the function to call when servicing a request to the
+                          provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
-
-        .. versionadded:: 0.2
         """"""
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
"
715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,3a1e51865786474c44a04c0d422515047dd27223,AUTHORS,,AUTHORS,Fixed typo and added AUTHORS file and license text to docs.,"diff --git a/AUTHORS b/AUTHORS
new file mode 100644
index 00000000..92379c48
--- /dev/null
+++ b/AUTHORS
@@ -0,0 +1,13 @@
+Flask is written and maintained by Armin Ronacher and
+various contributors:
+
+Development Lead
+````````````````
+
+- Armin Ronacher <armin.ronacher@active-4.com>
+
+Patches and Suggestions
+```````````````````````
+
+- Chris Edgemon
+- Chris Grindstaff
","diff --git a/AUTHORS b/AUTHORS
new file mode 100644
index 00000000..92379c48
--- /dev/null
+++ b/AUTHORS
@@ -0,0 +1,13 @@
+Flask is written and maintained by Armin Ronacher and
+various contributors:
+
+Development Lead
+````````````````
+
+- Armin Ronacher <armin.ronacher@active-4.com>
+
+Patches and Suggestions
+```````````````````````
+
+- Chris Edgemon
+- Chris Grindstaff
"
715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,3a1e51865786474c44a04c0d422515047dd27223,LICENSE,LICENSE,LICENSE,Fixed typo and added AUTHORS file and license text to docs.,"diff --git a/LICENSE b/LICENSE
index 6ed65ec8..6a8df19e 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,4 +1,5 @@
-Copyright (c) 2010 by Armin Ronacher.
+Copyright (c) 2010 by Armin Ronacher and contributors.  See AUTHORS
+for more details.
 
 Some rights reserved.
 
","diff --git a/LICENSE b/LICENSE
index 6ed65ec8..6a8df19e 100644
--- a/LICENSE
+++ b/LICENSE
@@ -1,4 +1,5 @@
-Copyright (c) 2010 by Armin Ronacher.
+Copyright (c) 2010 by Armin Ronacher and contributors.  See AUTHORS
+for more details.
 
 Some rights reserved.
 
"
715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,3a1e51865786474c44a04c0d422515047dd27223,docs/index.rst,docs/index.rst,docs/index.rst,Fixed typo and added AUTHORS file and license text to docs.,"diff --git a/docs/index.rst b/docs/index.rst
index 5d3ddb2d..9b2f132b 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -44,6 +44,7 @@ web development.
    deploying/index
    becomingbig
    design
+   license
 
 Reference
 ---------
","diff --git a/docs/index.rst b/docs/index.rst
index 5d3ddb2d..9b2f132b 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -44,6 +44,7 @@ web development.
    deploying/index
    becomingbig
    design
+   license
 
 Reference
 ---------
"
715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,3a1e51865786474c44a04c0d422515047dd27223,docs/license.rst,,docs/license.rst,Fixed typo and added AUTHORS file and license text to docs.,"diff --git a/docs/license.rst b/docs/license.rst
new file mode 100644
index 00000000..918a75b1
--- /dev/null
+++ b/docs/license.rst
@@ -0,0 +1,21 @@
+License
+=======
+
+Flask is licensed under a three clause `BSD License`_.  It basically
+means: do whatever you want with it as long as the copyright in Flask
+sticks around, the conditions are not modified and the disclaimer is
+present.  Furthermore you must not use the names of the authors to promote
+derivates of the software without written consent.
+
+.. _BSD License:
+   http://en.wikipedia.org/wiki/BSD_licenses#3-clause_license_.28.22New_BSD_License.22.29
+
+Authors
+-------
+
+.. include:: ../AUTHORS
+
+License Text
+------------
+
+.. include:: ../LICENSE
","diff --git a/docs/license.rst b/docs/license.rst
new file mode 100644
index 00000000..918a75b1
--- /dev/null
+++ b/docs/license.rst
@@ -0,0 +1,21 @@
+License
+=======
+
+Flask is licensed under a three clause `BSD License`_.  It basically
+means: do whatever you want with it as long as the copyright in Flask
+sticks around, the conditions are not modified and the disclaimer is
+present.  Furthermore you must not use the names of the authors to promote
+derivates of the software without written consent.
+
+.. _BSD License:
+   http://en.wikipedia.org/wiki/BSD_licenses#3-clause_license_.28.22New_BSD_License.22.29
+
+Authors
+-------
+
+.. include:: ../AUTHORS
+
+License Text
+------------
+
+.. include:: ../LICENSE
"
715f64d2afef0e5b9800f0e0fb0eb9c892e1573a,3a1e51865786474c44a04c0d422515047dd27223,flask.py,flask.py,flask.py,Fixed typo and added AUTHORS file and license text to docs.,"diff --git a/flask.py b/flask.py
index bc99bee0..05197c81 100644
--- a/flask.py
+++ b/flask.py
@@ -358,7 +358,7 @@ class Flask(object):
         self.before_request_funcs = []
 
         #: a list of functions that are called at the end of the
-        #: request.  Tha function is passed the current response
+        #: request.  The function is passed the current response
         #: object and modify it in place or replace it.
         #: To register a function here use the :meth:`after_request`
         #: decorator.
","diff --git a/flask.py b/flask.py
index bc99bee0..05197c81 100644
--- a/flask.py
+++ b/flask.py
@@ -358,7 +358,7 @@ class Flask(object):
         self.before_request_funcs = []
 
         #: a list of functions that are called at the end of the
-        #: request.  Tha function is passed the current response
+        #: request.  The function is passed the current response
         #: object and modify it in place or replace it.
         #: To register a function here use the :meth:`after_request`
         #: decorator.
"
3a1e51865786474c44a04c0d422515047dd27223,268302fc68c35abd555a8c2d2755f14c96e1401d,website/index.html,website/index.html,website/index.html,Changed link to license.,"diff --git a/website/index.html b/website/index.html
index ae835ac2..5db6b850 100644
--- a/website/index.html
+++ b/website/index.html
@@ -26,7 +26,7 @@
   <p class=tagline>because sometimes a pocket knife is not enough
   <blockquote>
     Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
-    And before you ask: It's <a href=http://github.com/mitsuhiko/flask/blob/master/LICENSE>BSD licensed</a>!
+    And before you ask: It's <a href=docs/license/>BSD licensed</a>!
   </blockquote>
   <h2>Flask is Fun</h2>
   <pre><span class=ig>from flask import Flask
","diff --git a/website/index.html b/website/index.html
index ae835ac2..5db6b850 100644
--- a/website/index.html
+++ b/website/index.html
@@ -26,7 +26,7 @@
   <p class=tagline>because sometimes a pocket knife is not enough
   <blockquote>
     Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
-    And before you ask: It's <a href=http://github.com/mitsuhiko/flask/blob/master/LICENSE>BSD licensed</a>!
+    And before you ask: It's <a href=docs/license/>BSD licensed</a>!
   </blockquote>
   <h2>Flask is Fun</h2>
   <pre><span class=ig>from flask import Flask
"
268302fc68c35abd555a8c2d2755f14c96e1401d,9f6bc93e4de36fc209eb1203845e9505df1ca379,flask.py,flask.py,flask.py,Fixed XSS problem by escaping all slashes in JSON.  This also probes simplejson first to figure out if it escapes slashes which it did in earlier versions.,"diff --git a/flask.py b/flask.py
index 05197c81..cb638e70 100644
--- a/flask.py
+++ b/flask.py
@@ -10,6 +10,7 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
+import re
 import os
 import sys
 
@@ -47,6 +48,12 @@ except (ImportError, AttributeError):
     pkg_resources = None
 
 
+# figure out if simplejson escapes slashes.  This behaviour was changed
+# from one version to another without reason.
+if json_available:
+    _json_escapes_slashes = '\\/' in json.dumps('/')
+
+
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
@@ -271,7 +278,10 @@ def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
     if __debug__:
         _assert_have_json()
-    return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
+    rv = json.dumps(string, *args, **kwargs)
+    if not _json_escapes_slashes:
+        rv = rv.replace('/', '\\/')
+    return rv
 
 
 class Flask(object):
","diff --git a/flask.py b/flask.py
index 05197c81..cb638e70 100644
--- a/flask.py
+++ b/flask.py
@@ -10,6 +10,7 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
+import re
 import os
 import sys
 
@@ -47,6 +48,12 @@ except (ImportError, AttributeError):
     pkg_resources = None
 
 
+# figure out if simplejson escapes slashes.  This behaviour was changed
+# from one version to another without reason.
+if json_available:
+    _json_escapes_slashes = '\\/' in json.dumps('/')
+
+
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
@@ -271,7 +278,10 @@ def _tojson_filter(string, *args, **kwargs):
     """"""Calls dumps for the template engine, escaping Slashes properly.""""""
     if __debug__:
         _assert_have_json()
-    return json.dumps(string, *args, **kwargs).replace('</', '<\\/')
+    rv = json.dumps(string, *args, **kwargs)
+    if not _json_escapes_slashes:
+        rv = rv.replace('/', '\\/')
+    return rv
 
 
 class Flask(object):
"
268302fc68c35abd555a8c2d2755f14c96e1401d,9f6bc93e4de36fc209eb1203845e9505df1ca379,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed XSS problem by escaping all slashes in JSON.  This also probes simplejson first to figure out if it escapes slashes which it did in earlier versions.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f5f7dfdc..6a27373b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -245,6 +245,8 @@ class JSONTestCase(unittest.TestCase):
         with app.test_request_context():
             rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
             assert rv == '""<\\/script>""'
+            rv = flask.render_template_string('{{ ""<\0/script>""|tojson|safe }}')
+            assert rv == '""<\\u0000\\/script>""'
 
 
 class TemplatingTestCase(unittest.TestCase):
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f5f7dfdc..6a27373b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -245,6 +245,8 @@ class JSONTestCase(unittest.TestCase):
         with app.test_request_context():
             rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
             assert rv == '""<\\/script>""'
+            rv = flask.render_template_string('{{ ""<\0/script>""|tojson|safe }}')
+            assert rv == '""<\\u0000\\/script>""'
 
 
 class TemplatingTestCase(unittest.TestCase):
"
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,docs/api.rst,docs/api.rst,docs/api.rst,Fix typos and remove unused import.,,
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Fix typos and remove unused import.,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 32eb6f04..f087e6f0 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -111,7 +111,7 @@ side.
 Note that we are using the :meth:`~werkzeug.MultiDict.get` method here
 which will never fail.  If the key is missing a default value (here ``0``)
 is returned.  Furthermore it can convert values to a specific type (like
-in our case `int`).  This is especially handy for code that that is
+in our case `int`).  This is especially handy for code that is
 triggered by a script (APIs, JavaScript etc.) because you don't need
 special error reporting in that case.
 
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 32eb6f04..f087e6f0 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -111,7 +111,7 @@ side.
 Note that we are using the :meth:`~werkzeug.MultiDict.get` method here
 which will never fail.  If the key is missing a default value (here ``0``)
 is returned.  Furthermore it can convert values to a specific type (like
-in our case `int`).  This is especially handy for code that that is
+in our case `int`).  This is especially handy for code that is
 triggered by a script (APIs, JavaScript etc.) because you don't need
 special error reporting in that case.
 
"
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,Fix typos and remove unused import.,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 5e14625b..4d54e49c 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -74,10 +74,9 @@ And this is what `views.py` would look like::
 .. admonition:: Circular Imports
 
    Every Python programmer hates them, and yet we just added some:
-   circular imports (That's when two module depend on each one.  In this
+   circular imports (That's when two modules depend on each other.  In this
    case `views.py` depends on `__init__.py`).  Be advised that this is a
-   bad idea in general but here it is actually fine.  The reason for this
-   is
+   bad idea in general but here it is actually fine.  The reason for this is
    that we are not actually using the views in `__init__.py` and just
    ensuring the module is imported and we are doing that at the bottom of
    the file.
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 5e14625b..4d54e49c 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -74,10 +74,9 @@ And this is what `views.py` would look like::
 .. admonition:: Circular Imports
 
    Every Python programmer hates them, and yet we just added some:
-   circular imports (That's when two module depend on each one.  In this
+   circular imports (That's when two modules depend on each other.  In this
    case `views.py` depends on `__init__.py`).  Be advised that this is a
-   bad idea in general but here it is actually fine.  The reason for this
-   is
+   bad idea in general but here it is actually fine.  The reason for this is
    that we are not actually using the views in `__init__.py` and just
    ensuring the module is imported and we are doing that at the bottom of
    the file.
"
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Fix typos and remove unused import.,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index ef0c7673..07ffe4c7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -125,7 +125,8 @@ def user_timeline(username):
     if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
-            [session['user_id'], profile_user['user_id']], one=True) is not None
+            [session['user_id'], profile_user['user_id']],
+            one=True) is not None
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
@@ -230,7 +231,7 @@ def register():
 
 @app.route('/logout')
 def logout():
-    """"""Logs the user out""""""
+    """"""Logs the user out.""""""
     flash('You were logged out')
     session.pop('user_id', None)
     return redirect(url_for('public_timeline'))
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index ef0c7673..07ffe4c7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -125,7 +125,8 @@ def user_timeline(username):
     if g.user:
         followed = query_db('''select 1 from follower where
             follower.who_id = ? and follower.whom_id = ?''',
-            [session['user_id'], profile_user['user_id']], one=True) is not None
+            [session['user_id'], profile_user['user_id']],
+            one=True) is not None
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
@@ -230,7 +231,7 @@ def register():
 
 @app.route('/logout')
 def logout():
-    """"""Logs the user out""""""
+    """"""Logs the user out.""""""
     flash('You were logged out')
     session.pop('user_id', None)
     return redirect(url_for('public_timeline'))
"
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,flask.py,flask.py,flask.py,Fix typos and remove unused import.,"diff --git a/flask.py b/flask.py
index cb638e70..e84519cd 100644
--- a/flask.py
+++ b/flask.py
@@ -10,7 +10,6 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import re
 import os
 import sys
 
@@ -261,7 +260,7 @@ def _default_template_ctx_processor():
 
 
 def _assert_have_json():
-    """"""Helper function that fails if JSON is unavailable""""""
+    """"""Helper function that fails if JSON is unavailable.""""""
     if not json_available:
         raise RuntimeError('simplejson not installed')
 
@@ -544,7 +543,7 @@ class Flask(object):
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
-        :param view_func: the function to call when servicing a request to the
+        :param view_func: the function to call when serving a request to the
                           provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
@@ -798,7 +797,7 @@ class Flask(object):
         return self.request_context(create_environ(*args, **kwargs))
 
     def __call__(self, environ, start_response):
-        """"""Shortcut for :attr:`wsgi_app`""""""
+        """"""Shortcut for :attr:`wsgi_app`.""""""
         return self.wsgi_app(environ, start_response)
 
 
","diff --git a/flask.py b/flask.py
index cb638e70..e84519cd 100644
--- a/flask.py
+++ b/flask.py
@@ -10,7 +10,6 @@
     :license: BSD, see LICENSE for more details.
 """"""
 from __future__ import with_statement
-import re
 import os
 import sys
 
@@ -261,7 +260,7 @@ def _default_template_ctx_processor():
 
 
 def _assert_have_json():
-    """"""Helper function that fails if JSON is unavailable""""""
+    """"""Helper function that fails if JSON is unavailable.""""""
     if not json_available:
         raise RuntimeError('simplejson not installed')
 
@@ -544,7 +543,7 @@ class Flask(object):
         :param endpoint: the endpoint for the registered URL rule.  Flask
                          itself assumes the name of the view function as
                          endpoint
-        :param view_func: the function to call when servicing a request to the
+        :param view_func: the function to call when serving a request to the
                           provided endpoint
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
@@ -798,7 +797,7 @@ class Flask(object):
         return self.request_context(create_environ(*args, **kwargs))
 
     def __call__(self, environ, start_response):
-        """"""Shortcut for :attr:`wsgi_app`""""""
+        """"""Shortcut for :attr:`wsgi_app`.""""""
         return self.wsgi_app(environ, start_response)
 
 
"
9f6bc93e4de36fc209eb1203845e9505df1ca379,3c821a0fa45082bcec73dfb08662fb1de5263c48,setup.py,setup.py,setup.py,Fix typos and remove unused import.,"diff --git a/setup.py b/setup.py
index 1742542d..ae68c49e 100644
--- a/setup.py
+++ b/setup.py
@@ -34,7 +34,8 @@ Links
 
 * `website <http://flask.pocoo.org/>`_
 * `documentation <http://flask.pocoo.org/docs/>`_
-* `development version <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
+* `development version
+  <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
 
 """"""
 from setuptools import setup
@@ -47,7 +48,8 @@ setup(
     license='BSD',
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
-    description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    description='A microframework based on Werkzeug, Jinja2 '
+                'and good intentions',
     long_description=__doc__,
     py_modules=['flask'],
     zip_safe=False,
","diff --git a/setup.py b/setup.py
index 1742542d..ae68c49e 100644
--- a/setup.py
+++ b/setup.py
@@ -34,7 +34,8 @@ Links
 
 * `website <http://flask.pocoo.org/>`_
 * `documentation <http://flask.pocoo.org/docs/>`_
-* `development version <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
+* `development version
+  <http://github.com/mitsuhiko/flask/zipball/master#egg=Flask-dev>`_
 
 """"""
 from setuptools import setup
@@ -47,7 +48,8 @@ setup(
     license='BSD',
     author='Armin Ronacher',
     author_email='armin.ronacher@active-4.com',
-    description='A microframework based on Werkzeug, Jinja2 and good intentions',
+    description='A microframework based on Werkzeug, Jinja2 '
+                'and good intentions',
     long_description=__doc__,
     py_modules=['flask'],
     zip_safe=False,
"
3c821a0fa45082bcec73dfb08662fb1de5263c48,75057bb4112d16acc7ed5dafce6a8168b343fd78,flask.py,flask.py,flask.py,Slightly faster _tojson_filter.,"diff --git a/flask.py b/flask.py
index e84519cd..3d136e9a 100644
--- a/flask.py
+++ b/flask.py
@@ -49,8 +49,7 @@ except (ImportError, AttributeError):
 
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
-if json_available:
-    _json_escapes_slashes = '\\/' in json.dumps('/')
+_json_escapes_slashes = json_available and '\\/' in json.dumps('/')
 
 
 class Request(RequestBase):
@@ -273,14 +272,14 @@ def _get_package_path(name):
         return os.getcwd()
 
 
+if not _json_escapes_slashes:
     def _tojson_filter(string, *args, **kwargs):
-    """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+        """"""Calls dumps for the template engine, escaping slashes properly.""""""
         if __debug__:
             _assert_have_json()
-    rv = json.dumps(string, *args, **kwargs)
-    if not _json_escapes_slashes:
-        rv = rv.replace('/', '\\/')
-    return rv
+        return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+else:
+    _tojson_filter = json.dumps
 
 
 class Flask(object):
","diff --git a/flask.py b/flask.py
index e84519cd..3d136e9a 100644
--- a/flask.py
+++ b/flask.py
@@ -49,8 +49,7 @@ except (ImportError, AttributeError):
 
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
-if json_available:
-    _json_escapes_slashes = '\\/' in json.dumps('/')
+_json_escapes_slashes = json_available and '\\/' in json.dumps('/')
 
 
 class Request(RequestBase):
@@ -273,14 +272,14 @@ def _get_package_path(name):
         return os.getcwd()
 
 
+if not _json_escapes_slashes:
     def _tojson_filter(string, *args, **kwargs):
-    """"""Calls dumps for the template engine, escaping Slashes properly.""""""
+        """"""Calls dumps for the template engine, escaping slashes properly.""""""
         if __debug__:
             _assert_have_json()
-    rv = json.dumps(string, *args, **kwargs)
-    if not _json_escapes_slashes:
-        rv = rv.replace('/', '\\/')
-    return rv
+        return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+else:
+    _tojson_filter = json.dumps
 
 
 class Flask(object):
"
75057bb4112d16acc7ed5dafce6a8168b343fd78,eae44e465b4bdd9440dbfa6e0c5bc45fd2c60ed8,README,README,README,Typo in README,"diff --git a/README b/README
index 537a71c5..73e0bbf1 100644
--- a/README
+++ b/README
@@ -8,7 +8,7 @@
 
       Flask is a microframework for Python based on Werkzeug
       and Jinja2.  It's intended for small scale applications
-      and was development with best intentions in mind.
+      and was developped with best intentions in mind.
 
     ~ Is it ready?
 
@@ -26,6 +26,6 @@
 
     ~ Where are the docs?
 
-      Go to http://flask.pocoo.org/ for a prebuild version of
+      Go to http://flask.pocoo.org/ for a prebuilt version of
       the current documentation.  Otherwise build them yourself
       from the sphinx sources in the docs folder.
","diff --git a/README b/README
index 537a71c5..73e0bbf1 100644
--- a/README
+++ b/README
@@ -8,7 +8,7 @@
 
       Flask is a microframework for Python based on Werkzeug
       and Jinja2.  It's intended for small scale applications
-      and was development with best intentions in mind.
+      and was developped with best intentions in mind.
 
     ~ Is it ready?
 
@@ -26,6 +26,6 @@
 
     ~ Where are the docs?
 
-      Go to http://flask.pocoo.org/ for a prebuild version of
+      Go to http://flask.pocoo.org/ for a prebuilt version of
       the current documentation.  Otherwise build them yourself
       from the sphinx sources in the docs folder.
"
eae44e465b4bdd9440dbfa6e0c5bc45fd2c60ed8,af3b73f70d5fce72181530d384519ae31d77c772,flask.py,flask.py,flask.py,Tiny refactoring,"diff --git a/flask.py b/flask.py
index 3d136e9a..85d87a67 100644
--- a/flask.py
+++ b/flask.py
@@ -47,11 +47,6 @@ except (ImportError, AttributeError):
     pkg_resources = None
 
 
-# figure out if simplejson escapes slashes.  This behaviour was changed
-# from one version to another without reason.
-_json_escapes_slashes = json_available and '\\/' in json.dumps('/')
-
-
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
@@ -272,12 +267,13 @@ def _get_package_path(name):
         return os.getcwd()
 
 
-if not _json_escapes_slashes:
-    def _tojson_filter(string, *args, **kwargs):
-        """"""Calls dumps for the template engine, escaping slashes properly.""""""
+# figure out if simplejson escapes slashes.  This behaviour was changed
+# from one version to another without reason.
+if not json_available or '\\/' not in json.dumps('/'):
+    def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
-        return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+        return json.dumps(*args, **kwargs).replace('/', '\\/')
 else:
     _tojson_filter = json.dumps
 
","diff --git a/flask.py b/flask.py
index 3d136e9a..85d87a67 100644
--- a/flask.py
+++ b/flask.py
@@ -47,11 +47,6 @@ except (ImportError, AttributeError):
     pkg_resources = None
 
 
-# figure out if simplejson escapes slashes.  This behaviour was changed
-# from one version to another without reason.
-_json_escapes_slashes = json_available and '\\/' in json.dumps('/')
-
-
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
     matched endpoint and view arguments.
@@ -272,12 +267,13 @@ def _get_package_path(name):
         return os.getcwd()
 
 
-if not _json_escapes_slashes:
-    def _tojson_filter(string, *args, **kwargs):
-        """"""Calls dumps for the template engine, escaping slashes properly.""""""
+# figure out if simplejson escapes slashes.  This behaviour was changed
+# from one version to another without reason.
+if not json_available or '\\/' not in json.dumps('/'):
+    def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
-        return json.dumps(string, *args, **kwargs).replace('/', '\\/')
+        return json.dumps(*args, **kwargs).replace('/', '\\/')
 else:
     _tojson_filter = json.dumps
 
"
af3b73f70d5fce72181530d384519ae31d77c772,3053fcdb0d6189ad1deca6fcfa16443dad4baf8c,docs/testing.rst,docs/testing.rst,docs/testing.rst,Make the example tests pass on Windows.  Also updated the documentation regarding that.,"diff --git a/docs/testing.rst b/docs/testing.rst
index 3ea1e9ba..eb4397a2 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -42,25 +42,32 @@ In order to test that, we add a second module (
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db = tempfile.NamedTemporaryFile()
+            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
-            flaskr.DATABASE = self.db.name
             flaskr.init_db()
 
+        def tearDown(self):
+            os.close(self.db_fd)
+            os.unlink(flaskr.DATABASE)
+
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client and initializes
-a new database.  That function is called before each individual test function.
-What the test client does is give us a simple interface to the
-application.  We can trigger test requests to the application and the
-client will also keep track of cookies for us.
+The code in the :meth:`~unittest.TestCase.setUp` method creates a new test
+client and initializes a new database.  That function is called before
+each individual test function.  To delete the database after the test, we
+close the file and remove it from the filesystem in the
+:meth:`~unittest.TestCase.tearDown` method.  What the test client does is
+give us a simple interface to the application.  We can trigger test
+requests to the application and the client will also keep track of cookies
+for us.
 
 Because SQLite3 is filesystem-based we can easily use the tempfile module
-to create a temporary database and initialize it.  Just make sure that you
-keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
-store it as `self.db` because of that) so that the garbage collector does
-not remove that object and with it the database from the filesystem.
+to create a temporary database and initialize it.  The
+:func:`~tempfile.mkstemp` function does two things for us: it returns a
+low-level file handle and a random file name, the latter we use as
+database name.  We just have to keep the `db_fd` around so that we can use
+the :func:`os.close` function to close the function.
 
 If we now run that testsuite, we should see the following output::
 
@@ -86,11 +93,14 @@ this::
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db = tempfile.NamedTemporaryFile()
+            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
-            flaskr.DATABASE = self.db.name
             flaskr.init_db()
 
+        def tearDown(self):
+            os.close(self.db_fd)
+            os.unlink(flaskr.DATABASE)
+
         def test_empty_db(self):
             rv = self.app.get('/')
             assert 'No entries here so far' in rv.data
","diff --git a/docs/testing.rst b/docs/testing.rst
index 3ea1e9ba..eb4397a2 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -42,25 +42,32 @@ In order to test that, we add a second module (
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db = tempfile.NamedTemporaryFile()
+            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
-            flaskr.DATABASE = self.db.name
             flaskr.init_db()
 
+        def tearDown(self):
+            os.close(self.db_fd)
+            os.unlink(flaskr.DATABASE)
+
     if __name__ == '__main__':
         unittest.main()
 
-The code in the `setUp` function creates a new test client and initializes
-a new database.  That function is called before each individual test function.
-What the test client does is give us a simple interface to the
-application.  We can trigger test requests to the application and the
-client will also keep track of cookies for us.
+The code in the :meth:`~unittest.TestCase.setUp` method creates a new test
+client and initializes a new database.  That function is called before
+each individual test function.  To delete the database after the test, we
+close the file and remove it from the filesystem in the
+:meth:`~unittest.TestCase.tearDown` method.  What the test client does is
+give us a simple interface to the application.  We can trigger test
+requests to the application and the client will also keep track of cookies
+for us.
 
 Because SQLite3 is filesystem-based we can easily use the tempfile module
-to create a temporary database and initialize it.  Just make sure that you
-keep a reference to the :class:`~tempfile.NamedTemporaryFile` around (we
-store it as `self.db` because of that) so that the garbage collector does
-not remove that object and with it the database from the filesystem.
+to create a temporary database and initialize it.  The
+:func:`~tempfile.mkstemp` function does two things for us: it returns a
+low-level file handle and a random file name, the latter we use as
+database name.  We just have to keep the `db_fd` around so that we can use
+the :func:`os.close` function to close the function.
 
 If we now run that testsuite, we should see the following output::
 
@@ -86,11 +93,14 @@ this::
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db = tempfile.NamedTemporaryFile()
+            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
-            flaskr.DATABASE = self.db.name
             flaskr.init_db()
 
+        def tearDown(self):
+            os.close(self.db_fd)
+            os.unlink(flaskr.DATABASE)
+
         def test_empty_db(self):
             rv = self.app.get('/')
             assert 'No entries here so far' in rv.data
"
af3b73f70d5fce72181530d384519ae31d77c772,3053fcdb0d6189ad1deca6fcfa16443dad4baf8c,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,Make the example tests pass on Windows.  Also updated the documentation regarding that.,"diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index 4355a650..9421cca6 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -8,6 +8,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+import os
 import flaskr
 import unittest
 import tempfile
@@ -17,11 +18,15 @@ class FlaskrTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db = tempfile.NamedTemporaryFile()
+        self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
         self.app = flaskr.app.test_client()
-        flaskr.DATABASE = self.db.name
         flaskr.init_db()
 
+    def tearDown(self):
+        """"""Get rid of the database again after each test.""""""
+        os.close(self.db_fd)
+        os.unlink(flaskr.DATABASE)
+
     def login(self, username, password):
         return self.app.post('/login', data=dict(
             username=username,
","diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index 4355a650..9421cca6 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -8,6 +8,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+import os
 import flaskr
 import unittest
 import tempfile
@@ -17,11 +18,15 @@ class FlaskrTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db = tempfile.NamedTemporaryFile()
+        self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
         self.app = flaskr.app.test_client()
-        flaskr.DATABASE = self.db.name
         flaskr.init_db()
 
+    def tearDown(self):
+        """"""Get rid of the database again after each test.""""""
+        os.close(self.db_fd)
+        os.unlink(flaskr.DATABASE)
+
     def login(self, username, password):
         return self.app.post('/login', data=dict(
             username=username,
"
af3b73f70d5fce72181530d384519ae31d77c772,3053fcdb0d6189ad1deca6fcfa16443dad4baf8c,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,Make the example tests pass on Windows.  Also updated the documentation regarding that.,"diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index cd761aa6..10962142 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -8,6 +8,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+import os
 import minitwit
 import unittest
 import tempfile
@@ -17,11 +18,15 @@ class MiniTwitTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db = tempfile.NamedTemporaryFile()
+        self.db_fd, minitwit.DATABASE = tempfile.mkstemp()
         self.app = minitwit.app.test_client()
-        minitwit.DATABASE = self.db.name
         minitwit.init_db()
 
+    def tearDown(self):
+        """"""Get rid of the database again after each test.""""""
+        os.close(self.db_fd)
+        os.unlink(minitwit.DATABASE)
+
     # helper functions
 
     def register(self, username, password, password2=None, email=None):
","diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index cd761aa6..10962142 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -8,6 +8,7 @@
     :copyright: (c) 2010 by Armin Ronacher.
     :license: BSD, see LICENSE for more details.
 """"""
+import os
 import minitwit
 import unittest
 import tempfile
@@ -17,11 +18,15 @@ class MiniTwitTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db = tempfile.NamedTemporaryFile()
+        self.db_fd, minitwit.DATABASE = tempfile.mkstemp()
         self.app = minitwit.app.test_client()
-        minitwit.DATABASE = self.db.name
         minitwit.init_db()
 
+    def tearDown(self):
+        """"""Get rid of the database again after each test.""""""
+        os.close(self.db_fd)
+        os.unlink(minitwit.DATABASE)
+
     # helper functions
 
     def register(self, username, password, password2=None, email=None):
"
3053fcdb0d6189ad1deca6fcfa16443dad4baf8c,f6b9efc1e9b94382b877c0d1ebe87956b78d012f,docs/testing.rst,docs/testing.rst,docs/testing.rst,Added missing os import.,"diff --git a/docs/testing.rst b/docs/testing.rst
index eb4397a2..219825ea 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -35,8 +35,9 @@ The Testing Skeleton
 In order to test that, we add a second module (
 `flaskr_tests.py`) and create a unittest skeleton there::
 
-    import unittest
+    import os
     import flaskr
+    import unittest
     import tempfile
 
     class FlaskrTestCase(unittest.TestCase):
","diff --git a/docs/testing.rst b/docs/testing.rst
index eb4397a2..219825ea 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -35,8 +35,9 @@ The Testing Skeleton
 In order to test that, we add a second module (
 `flaskr_tests.py`) and create a unittest skeleton there::
 
-    import unittest
+    import os
     import flaskr
+    import unittest
     import tempfile
 
     class FlaskrTestCase(unittest.TestCase):
"
f6b9efc1e9b94382b877c0d1ebe87956b78d012f,260b4dfe61cd35373eb4993453b500e1db71a753,CHANGES,,CHANGES,"Added changelog, restructured docs a bit.","diff --git a/CHANGES b/CHANGES
new file mode 100644
index 00000000..0b7501cc
--- /dev/null
+++ b/CHANGES
@@ -0,0 +1,20 @@
+Flask Changelog
+===============
+
+Here you can see the full list of changes between each Flask release.
+
+Version 0.2
+-----------
+
+[unreleased; current development version]
+
+- various bugfixes
+- integrated JSON support
+- added :func:`~flask.get_template_attribute` helper function.
+- :meth:`~flask.Flask.add_url_rule` can now also register a
+  view function.
+
+Version 0.1
+-----------
+
+First public preview release.
","diff --git a/CHANGES b/CHANGES
new file mode 100644
index 00000000..0b7501cc
--- /dev/null
+++ b/CHANGES
@@ -0,0 +1,20 @@
+Flask Changelog
+===============
+
+Here you can see the full list of changes between each Flask release.
+
+Version 0.2
+-----------
+
+[unreleased; current development version]
+
+- various bugfixes
+- integrated JSON support
+- added :func:`~flask.get_template_attribute` helper function.
+- :meth:`~flask.Flask.add_url_rule` can now also register a
+  view function.
+
+Version 0.1
+-----------
+
+First public preview release.
"
f6b9efc1e9b94382b877c0d1ebe87956b78d012f,260b4dfe61cd35373eb4993453b500e1db71a753,docs/changelog.rst,,docs/changelog.rst,"Added changelog, restructured docs a bit.","diff --git a/docs/changelog.rst b/docs/changelog.rst
new file mode 100644
index 00000000..d6c5f48c
--- /dev/null
+++ b/docs/changelog.rst
@@ -0,0 +1 @@
+.. include:: ../CHANGES
","diff --git a/docs/changelog.rst b/docs/changelog.rst
new file mode 100644
index 00000000..d6c5f48c
--- /dev/null
+++ b/docs/changelog.rst
@@ -0,0 +1 @@
+.. include:: ../CHANGES
"
f6b9efc1e9b94382b877c0d1ebe87956b78d012f,260b4dfe61cd35373eb4993453b500e1db71a753,docs/index.rst,docs/index.rst,docs/index.rst,"Added changelog, restructured docs a bit.","diff --git a/docs/index.rst b/docs/index.rst
index 9b2f132b..1f3b6460 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,8 +25,8 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-Textual Documentation
----------------------
+User's Guide
+------------
 
 This part of the documentation is written text and should give you an idea
 how to work with Flask.  It's a series of step-by-step instructions for
@@ -43,11 +43,21 @@ web development.
    patterns/index
    deploying/index
    becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
    design
    license
+   changelog
 
-Reference
----------
+API Reference
+-------------
 
 If you are looking for information on a specific function, class or
 method, this part of the documentation is for you:
","diff --git a/docs/index.rst b/docs/index.rst
index 9b2f132b..1f3b6460 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,8 +25,8 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-Textual Documentation
----------------------
+User's Guide
+------------
 
 This part of the documentation is written text and should give you an idea
 how to work with Flask.  It's a series of step-by-step instructions for
@@ -43,11 +43,21 @@ web development.
    patterns/index
    deploying/index
    becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
    design
    license
+   changelog
 
-Reference
----------
+API Reference
+-------------
 
 If you are looking for information on a specific function, class or
 method, this part of the documentation is for you:
"
260b4dfe61cd35373eb4993453b500e1db71a753,00f87f679cdd63b642675d86d073882fb8b19430,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,flask uses 127.0.0.1 as host by default now. stupid chrome.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 3d3e765f..e0f0749f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -30,9 +30,9 @@ because this would conflict with Flask itself.
 ::
 
     $ python hello.py
-     * Running on http://localhost:5000/
+     * Running on http://127.0.0.1:5000/
 
-Head over to `http://localhost:5000/ <http://localhost:5000/>`_, you should
+Head over to `http://127.0.0.1:5000/ <http://127.0.0.1:5000/>`_, you should
 see your hello world greeting.
 
 So what did that code do?
@@ -54,19 +54,6 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
-.. admonition:: Troubleshooting
-
-   The browser is unable to access the server?  Sometimes this is
-   unfortunately caused by broken IPv6 support in your operating system,
-   browser or a combination.  For example on Snow Leopard Google Chrome is
-   known to exhibit this behaviour.
-
-   If the browser does not load up the page, you can change the `app.run`
-   call to force IPv4 usage::
-
-      if __name__ == '__main__':
-          app.run(host='127.0.0.1')
-
 
 Debug Mode
 ----------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 3d3e765f..e0f0749f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -30,9 +30,9 @@ because this would conflict with Flask itself.
 ::
 
     $ python hello.py
-     * Running on http://localhost:5000/
+     * Running on http://127.0.0.1:5000/
 
-Head over to `http://localhost:5000/ <http://localhost:5000/>`_, you should
+Head over to `http://127.0.0.1:5000/ <http://127.0.0.1:5000/>`_, you should
 see your hello world greeting.
 
 So what did that code do?
@@ -54,19 +54,6 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
-.. admonition:: Troubleshooting
-
-   The browser is unable to access the server?  Sometimes this is
-   unfortunately caused by broken IPv6 support in your operating system,
-   browser or a combination.  For example on Snow Leopard Google Chrome is
-   known to exhibit this behaviour.
-
-   If the browser does not load up the page, you can change the `app.run`
-   call to force IPv4 usage::
-
-      if __name__ == '__main__':
-          app.run(host='127.0.0.1')
-
 
 Debug Mode
 ----------
"
260b4dfe61cd35373eb4993453b500e1db71a753,00f87f679cdd63b642675d86d073882fb8b19430,flask.py,flask.py,flask.py,flask uses 127.0.0.1 as host by default now. stupid chrome.,"diff --git a/flask.py b/flask.py
index 85d87a67..3fed49d0 100644
--- a/flask.py
+++ b/flask.py
@@ -434,7 +434,7 @@ class Flask(object):
         for func in self.template_context_processors:
             context.update(func())
 
-    def run(self, host='localhost', port=5000, **options):
+    def run(self, host='127.0.0.1', port=5000, **options):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
         for code changes and show a debugger in case an exception happened.
","diff --git a/flask.py b/flask.py
index 85d87a67..3fed49d0 100644
--- a/flask.py
+++ b/flask.py
@@ -434,7 +434,7 @@ class Flask(object):
         for func in self.template_context_processors:
             context.update(func())
 
-    def run(self, host='localhost', port=5000, **options):
+    def run(self, host='127.0.0.1', port=5000, **options):
         """"""Runs the application on a local development server.  If the
         :attr:`debug` flag is set the server will automatically reload
         for code changes and show a debugger in case an exception happened.
"
00f87f679cdd63b642675d86d073882fb8b19430,9cf2ea2abc5243d50c87612714904c6cb033f7cc,CHANGES,CHANGES,CHANGES,Documented hostname change.,"diff --git a/CHANGES b/CHANGES
index 0b7501cc..ce7289da 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,7 @@ Version 0.2
 - added :func:`~flask.get_template_attribute` helper function.
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
+- server listens on 127.0.0.1 by default now to fix issues with chrome.
 
 Version 0.1
 -----------
","diff --git a/CHANGES b/CHANGES
index 0b7501cc..ce7289da 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,7 @@ Version 0.2
 - added :func:`~flask.get_template_attribute` helper function.
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
+- server listens on 127.0.0.1 by default now to fix issues with chrome.
 
 Version 0.1
 -----------
"
9cf2ea2abc5243d50c87612714904c6cb033f7cc,5876a8fd96efa01958904ca0796eb4018222bf25,docs/installation.rst,docs/installation.rst,docs/installation.rst,Merge more upstream changes,"diff --git a/docs/installation.rst b/docs/installation.rst
index f2f4905f..bb85b405 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -9,10 +9,10 @@ way and why there are multiple ways.
 
 Flask depends on two external libraries: `Werkzeug
 <http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
-The first one is responsible for interfacing WSGI the latter for rendering
+The first on is responsible for interfacing WSGI the latter to render
 templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
-is behaving in a specific way so that you can run it on different
+is behaving in a specific way that you can run it on different
 environments (for example on a local development server, on an Apache2, on
 lighttpd, on Google's App Engine or whatever you have in mind).
 
@@ -26,10 +26,10 @@ Virtualenv is what you want to use during development and in production if
 you have shell access.  So first: what does virtualenv do?  If you are
 like me and you like Python, chances are you want to use it for another
 project as well.  Now the more projects you have, the more likely it is
-that you will be working with different versions of Python itself or at
-least an individual library.  Because let's face it: quite often libraries 
-break backwards compatibility and it's unlikely that your application will
-not have any dependencies, that just won't happen.  So virtualenv to the
+that you will be working with different versions of Python itself or a
+library involved.  Because let's face it: quite often libraries break
+backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv for the
 rescue!
 
 It basically makes it possible to have multiple side-by-side
@@ -47,7 +47,7 @@ or even better::
 
     $ sudo pip install virtualenv
 
-Chances are you have virtualenv installed on your system then.  Maybe it's
+Changes are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
@@ -69,11 +69,7 @@ within::
 Now you only have to activate it, whenever you work with it.  On OS X and
 Linux do the following::
 
-    $ . env/bin/activate
-
-(Note the whitespace between the dot and the script name.  This means
-execute this file in context of the shell.  If the dot does not work for
-whatever reason in your shell, try substituting it with ``source``)
+    $ source env/bin/activate
 
 If you are a Windows user, the following command is for you::
 
@@ -101,8 +97,8 @@ This is possible as well, but I would not recommend it.  Just run
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
 
-Living on the Edge
-------------------
+Leaving on the Edge
+-------------------
 
 You want to work with the latest version of Flask, there are two ways: you
 can either let `easy_install` pull in the development version or tell it
@@ -115,7 +111,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     Initialized empty Git repository in ~/dev/flask/.git/
     $ cd flask
     $ virtualenv env
-    $ . env/bin/activate
+    $ source env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ python setup.py develop
@@ -131,7 +127,7 @@ To just get the development version without git, do this instead::
     $ mkdir flask
     $ cd flask
     $ virtualenv env
-    $ . env/bin/activate
+    $ source env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ easy_install Flask==dev
@@ -152,7 +148,7 @@ Once you have done that it's important to add the `easy_install` command
 and other Python scripts to the path.  To do that you have to add the
 Python installation's Script folder to the `PATH` variable.
 
-To do that, right-click on your ""Computer"" desktop icon and click
+To do that, click right on your ""Computer"" desktop icon and click
 ""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
 settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
 on the ""Environment variables"" button and double click on the ""Path""
@@ -165,7 +161,7 @@ the following value::
 
     ;C:\Python26\Scripts
 
-Then you are done.  To check that it worked, open the cmd and execute
+Then you are done.  To check if it worked, open the cmd and execute
 ""easy_install"".  If you have UAC enabled it should prompt you for admin
 privileges.
 
","diff --git a/docs/installation.rst b/docs/installation.rst
index f2f4905f..bb85b405 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -9,10 +9,10 @@ way and why there are multiple ways.
 
 Flask depends on two external libraries: `Werkzeug
 <http://werkzeug.pocoo.org/>`_ and `Jinja2 <http://jinja.pocoo.org/2/>`_.
-The first one is responsible for interfacing WSGI the latter for rendering
+The first on is responsible for interfacing WSGI the latter to render
 templates.  Now you are maybe asking, what is WSGI?  WSGI is a standard
 in Python that is basically responsible for ensuring that your application
-is behaving in a specific way so that you can run it on different
+is behaving in a specific way that you can run it on different
 environments (for example on a local development server, on an Apache2, on
 lighttpd, on Google's App Engine or whatever you have in mind).
 
@@ -26,10 +26,10 @@ Virtualenv is what you want to use during development and in production if
 you have shell access.  So first: what does virtualenv do?  If you are
 like me and you like Python, chances are you want to use it for another
 project as well.  Now the more projects you have, the more likely it is
-that you will be working with different versions of Python itself or at
-least an individual library.  Because let's face it: quite often libraries 
-break backwards compatibility and it's unlikely that your application will
-not have any dependencies, that just won't happen.  So virtualenv to the
+that you will be working with different versions of Python itself or a
+library involved.  Because let's face it: quite often libraries break
+backwards compatibility and it's unlikely that your application will
+not have any dependencies, that just won't happen.  So virtualenv for the
 rescue!
 
 It basically makes it possible to have multiple side-by-side
@@ -47,7 +47,7 @@ or even better::
 
     $ sudo pip install virtualenv
 
-Chances are you have virtualenv installed on your system then.  Maybe it's
+Changes are you have virtualenv installed on your system then.  Maybe it's
 even in your package manager (on ubuntu try ``sudo apt-get install
 python-virtualenv``).
 
@@ -69,11 +69,7 @@ within::
 Now you only have to activate it, whenever you work with it.  On OS X and
 Linux do the following::
 
-    $ . env/bin/activate
-
-(Note the whitespace between the dot and the script name.  This means
-execute this file in context of the shell.  If the dot does not work for
-whatever reason in your shell, try substituting it with ``source``)
+    $ source env/bin/activate
 
 If you are a Windows user, the following command is for you::
 
@@ -101,8 +97,8 @@ This is possible as well, but I would not recommend it.  Just run
 (Run it in an Admin shell on Windows systems and without the `sudo`).
 
 
-Living on the Edge
-------------------
+Leaving on the Edge
+-------------------
 
 You want to work with the latest version of Flask, there are two ways: you
 can either let `easy_install` pull in the development version or tell it
@@ -115,7 +111,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     Initialized empty Git repository in ~/dev/flask/.git/
     $ cd flask
     $ virtualenv env
-    $ . env/bin/activate
+    $ source env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ python setup.py develop
@@ -131,7 +127,7 @@ To just get the development version without git, do this instead::
     $ mkdir flask
     $ cd flask
     $ virtualenv env
-    $ . env/bin/activate
+    $ source env/bin/activate
     New python executable in env/bin/python
     Installing setuptools............done.
     $ easy_install Flask==dev
@@ -152,7 +148,7 @@ Once you have done that it's important to add the `easy_install` command
 and other Python scripts to the path.  To do that you have to add the
 Python installation's Script folder to the `PATH` variable.
 
-To do that, right-click on your ""Computer"" desktop icon and click
+To do that, click right on your ""Computer"" desktop icon and click
 ""Properties"".  On Windows Vista and Windows 7 then click on ""Advanced System
 settings"", on Windows XP click on the ""Advanced"" tab instead.  Then click
 on the ""Environment variables"" button and double click on the ""Path""
@@ -165,7 +161,7 @@ the following value::
 
     ;C:\Python26\Scripts
 
-Then you are done.  To check that it worked, open the cmd and execute
+Then you are done.  To check if it worked, open the cmd and execute
 ""easy_install"".  If you have UAC enabled it should prompt you for admin
 privileges.
 
"
9cf2ea2abc5243d50c87612714904c6cb033f7cc,9d340ad7477774a19a7bdffc83d6cb8cb3e05edc,docs/testing.rst,docs/testing.rst,docs/testing.rst,"Fix a doc oversight, and revert 5876a8fd.","diff --git a/docs/testing.rst b/docs/testing.rst
index 219825ea..0901792b 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -68,7 +68,7 @@ to create a temporary database and initialize it.  The
 :func:`~tempfile.mkstemp` function does two things for us: it returns a
 low-level file handle and a random file name, the latter we use as
 database name.  We just have to keep the `db_fd` around so that we can use
-the :func:`os.close` function to close the function.
+the :func:`os.close` function to close the file.
 
 If we now run that testsuite, we should see the following output::
 
","diff --git a/docs/testing.rst b/docs/testing.rst
index 219825ea..0901792b 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -68,7 +68,7 @@ to create a temporary database and initialize it.  The
 :func:`~tempfile.mkstemp` function does two things for us: it returns a
 low-level file handle and a random file name, the latter we use as
 database name.  We just have to keep the `db_fd` around so that we can use
-the :func:`os.close` function to close the function.
+the :func:`os.close` function to close the file.
 
 If we now run that testsuite, we should see the following output::
 
"
9cf2ea2abc5243d50c87612714904c6cb033f7cc,9d340ad7477774a19a7bdffc83d6cb8cb3e05edc,flask.py,flask.py,flask.py,"Fix a doc oversight, and revert 5876a8fd.","diff --git a/flask.py b/flask.py
index 3fed49d0..01f24eb9 100644
--- a/flask.py
+++ b/flask.py
@@ -270,6 +270,7 @@ def _get_package_path(name):
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
 if not json_available or '\\/' not in json.dumps('/'):
+
     def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
","diff --git a/flask.py b/flask.py
index 3fed49d0..01f24eb9 100644
--- a/flask.py
+++ b/flask.py
@@ -270,6 +270,7 @@ def _get_package_path(name):
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
 if not json_available or '\\/' not in json.dumps('/'):
+
     def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
"
c0d3b6c3710025abb482b30d2f2b6e39a6934fa9,7cf5a9bf6e34fc57f82e560f01c408fbe603e9d4,flask.py,flask.py,flask.py,"Use a tuple to store _flashes, and simplify the flask.Request class.","diff --git a/flask.py b/flask.py
index 01f24eb9..7eca40b9 100644
--- a/flask.py
+++ b/flask.py
@@ -56,10 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    def __init__(self, environ):
-        RequestBase.__init__(self, environ)
-        self.endpoint = None
-        self.view_args = None
+    endpoint = view_args = None
 
     @cached_property
     def json(self):
@@ -170,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = (session.get('_flashes', [])) + [message]
+    session['_flashes'] = session.get('_flashes', ()) + (message,)
 
 
 def get_flashed_messages():
@@ -180,8 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = \
-            session.pop('_flashes', [])
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
     return flashes
 
 
","diff --git a/flask.py b/flask.py
index 01f24eb9..7eca40b9 100644
--- a/flask.py
+++ b/flask.py
@@ -56,10 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    def __init__(self, environ):
-        RequestBase.__init__(self, environ)
-        self.endpoint = None
-        self.view_args = None
+    endpoint = view_args = None
 
     @cached_property
     def json(self):
@@ -170,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = (session.get('_flashes', [])) + [message]
+    session['_flashes'] = session.get('_flashes', ()) + (message,)
 
 
 def get_flashed_messages():
@@ -180,8 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = \
-            session.pop('_flashes', [])
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
     return flashes
 
 
"
7cf5a9bf6e34fc57f82e560f01c408fbe603e9d4,b6e73305392c9de052e51cca6fae8fee12ae231e,flask.py,flask.py,flask.py,Use setdefault() because it sets session.modified correctly.,"diff --git a/flask.py b/flask.py
index 7eca40b9..1f0fb7e6 100644
--- a/flask.py
+++ b/flask.py
@@ -167,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = session.get('_flashes', ()) + (message,)
+    session.setdefault('_flashes', []).append(message)
 
 
 def get_flashed_messages():
@@ -177,7 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
     return flashes
 
 
","diff --git a/flask.py b/flask.py
index 7eca40b9..1f0fb7e6 100644
--- a/flask.py
+++ b/flask.py
@@ -167,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = session.get('_flashes', ()) + (message,)
+    session.setdefault('_flashes', []).append(message)
 
 
 def get_flashed_messages():
@@ -177,7 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
     return flashes
 
 
"
7cf5a9bf6e34fc57f82e560f01c408fbe603e9d4,b6e73305392c9de052e51cca6fae8fee12ae231e,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Use setdefault() because it sets session.modified correctly.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6a27373b..5f07fbe8 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -117,6 +117,18 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_flashes(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        with app.test_request_context():
+            assert not flask.session.modified
+            flask.flash('Zap')
+            flask.session.modified = False
+            flask.flash('Zip')
+            assert flask.session.modified
+            assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6a27373b..5f07fbe8 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -117,6 +117,18 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_flashes(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        with app.test_request_context():
+            assert not flask.session.modified
+            flask.flash('Zap')
+            flask.session.modified = False
+            flask.flash('Zip')
+            assert flask.session.modified
+            assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
"
5876a8fd96efa01958904ca0796eb4018222bf25,f014ce29a7cd5a3ccfabd61e7d66e017ed958e25,docs/testing.rst,docs/testing.rst,docs/testing.rst,"Fix a doc oversight, and revert 5876a8fd.","diff --git a/docs/testing.rst b/docs/testing.rst
index 219825ea..0901792b 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -68,7 +68,7 @@ to create a temporary database and initialize it.  The
 :func:`~tempfile.mkstemp` function does two things for us: it returns a
 low-level file handle and a random file name, the latter we use as
 database name.  We just have to keep the `db_fd` around so that we can use
-the :func:`os.close` function to close the function.
+the :func:`os.close` function to close the file.
 
 If we now run that testsuite, we should see the following output::
 
","diff --git a/docs/testing.rst b/docs/testing.rst
index 219825ea..0901792b 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -68,7 +68,7 @@ to create a temporary database and initialize it.  The
 :func:`~tempfile.mkstemp` function does two things for us: it returns a
 low-level file handle and a random file name, the latter we use as
 database name.  We just have to keep the `db_fd` around so that we can use
-the :func:`os.close` function to close the function.
+the :func:`os.close` function to close the file.
 
 If we now run that testsuite, we should see the following output::
 
"
5876a8fd96efa01958904ca0796eb4018222bf25,f014ce29a7cd5a3ccfabd61e7d66e017ed958e25,flask.py,flask.py,flask.py,"Fix a doc oversight, and revert 5876a8fd.","diff --git a/flask.py b/flask.py
index 3fed49d0..01f24eb9 100644
--- a/flask.py
+++ b/flask.py
@@ -270,6 +270,7 @@ def _get_package_path(name):
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
 if not json_available or '\\/' not in json.dumps('/'):
+
     def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
","diff --git a/flask.py b/flask.py
index 3fed49d0..01f24eb9 100644
--- a/flask.py
+++ b/flask.py
@@ -270,6 +270,7 @@ def _get_package_path(name):
 # figure out if simplejson escapes slashes.  This behaviour was changed
 # from one version to another without reason.
 if not json_available or '\\/' not in json.dumps('/'):
+
     def _tojson_filter(*args, **kwargs):
         if __debug__:
             _assert_have_json()
"
f014ce29a7cd5a3ccfabd61e7d66e017ed958e25,3eacc1d06816b2544e0242665fe909b24b027b21,flask.py,flask.py,flask.py,"Use a tuple to store _flashes, and simplify the flask.Request class.","diff --git a/flask.py b/flask.py
index 01f24eb9..7eca40b9 100644
--- a/flask.py
+++ b/flask.py
@@ -56,10 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    def __init__(self, environ):
-        RequestBase.__init__(self, environ)
-        self.endpoint = None
-        self.view_args = None
+    endpoint = view_args = None
 
     @cached_property
     def json(self):
@@ -170,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = (session.get('_flashes', [])) + [message]
+    session['_flashes'] = session.get('_flashes', ()) + (message,)
 
 
 def get_flashed_messages():
@@ -180,8 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = \
-            session.pop('_flashes', [])
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
     return flashes
 
 
","diff --git a/flask.py b/flask.py
index 01f24eb9..7eca40b9 100644
--- a/flask.py
+++ b/flask.py
@@ -56,10 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    def __init__(self, environ):
-        RequestBase.__init__(self, environ)
-        self.endpoint = None
-        self.view_args = None
+    endpoint = view_args = None
 
     @cached_property
     def json(self):
@@ -170,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = (session.get('_flashes', [])) + [message]
+    session['_flashes'] = session.get('_flashes', ()) + (message,)
 
 
 def get_flashed_messages():
@@ -180,8 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = \
-            session.pop('_flashes', [])
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
     return flashes
 
 
"
3eacc1d06816b2544e0242665fe909b24b027b21,dbe0df756bf587b242f2406bef9e7e8ef26f0813,flask.py,flask.py,flask.py,Use setdefault() because it sets session.modified correctly.,"diff --git a/flask.py b/flask.py
index 7eca40b9..1f0fb7e6 100644
--- a/flask.py
+++ b/flask.py
@@ -167,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = session.get('_flashes', ()) + (message,)
+    session.setdefault('_flashes', []).append(message)
 
 
 def get_flashed_messages():
@@ -177,7 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
     return flashes
 
 
","diff --git a/flask.py b/flask.py
index 7eca40b9..1f0fb7e6 100644
--- a/flask.py
+++ b/flask.py
@@ -167,7 +167,7 @@ def flash(message):
 
     :param message: the message to be flashed.
     """"""
-    session['_flashes'] = session.get('_flashes', ()) + (message,)
+    session.setdefault('_flashes', []).append(message)
 
 
 def get_flashed_messages():
@@ -177,7 +177,7 @@ def get_flashed_messages():
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
-        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', ())
+        _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
     return flashes
 
 
"
3eacc1d06816b2544e0242665fe909b24b027b21,dbe0df756bf587b242f2406bef9e7e8ef26f0813,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Use setdefault() because it sets session.modified correctly.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6a27373b..5f07fbe8 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -117,6 +117,18 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_flashes(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        with app.test_request_context():
+            assert not flask.session.modified
+            flask.flash('Zap')
+            flask.session.modified = False
+            flask.flash('Zip')
+            assert flask.session.modified
+            assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6a27373b..5f07fbe8 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -117,6 +117,18 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_flashes(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        with app.test_request_context():
+            assert not flask.session.modified
+            flask.flash('Zap')
+            flask.session.modified = False
+            flask.flash('Zip')
+            assert flask.session.modified
+            assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
"
dbe0df756bf587b242f2406bef9e7e8ef26f0813,7e8019565f79e157fcc13cf285247070d69ef889,AUTHORS,AUTHORS,AUTHORS,Added florentx to the AUTHORS file,"diff --git a/AUTHORS b/AUTHORS
index 92379c48..2c125e11 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -11,3 +11,4 @@ Patches and Suggestions
 
 - Chris Edgemon
 - Chris Grindstaff
+- Florent Xicluna
","diff --git a/AUTHORS b/AUTHORS
index 92379c48..2c125e11 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -11,3 +11,4 @@ Patches and Suggestions
 
 - Chris Edgemon
 - Chris Grindstaff
+- Florent Xicluna
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,Makefile,Makefile,Makefile,Removed website from main branch.  Makes no sense to be there,"diff --git a/Makefile b/Makefile
index 0be5e6bc..c62cf587 100644
--- a/Makefile
+++ b/Makefile
@@ -10,8 +10,5 @@ clean-pyc:
 	find . -name '*.pyo' -exec rm -f {} +
 	find . -name '*~' -exec rm -f {} +
 
-upload-website:
-	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
-
 upload-docs:
 	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
","diff --git a/Makefile b/Makefile
index 0be5e6bc..c62cf587 100644
--- a/Makefile
+++ b/Makefile
@@ -10,8 +10,5 @@ clean-pyc:
 	find . -name '*.pyo' -exec rm -f {} +
 	find . -name '*~' -exec rm -f {} +
 
-upload-website:
-	scp -r website/* pocoo.org:/var/www/flask.pocoo.org/
-
 upload-docs:
 	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,website/404.html,website/404.html,,Removed website from main branch.  Makes no sense to be there,"diff --git a/website/404.html b/website/404.html
deleted file mode 100644
index c4de489d..00000000
--- a/website/404.html
+++ /dev/null
@@ -1,47 +0,0 @@
-<!doctype html>
-<title>Chapter 404: The Lost Page</title>
-<style type=text/css>
-body, html {
-  height: 100%;
-  margin: 0;
-  padding: 0;
-}
-
-body {
-  background: url(/ship.png) no-repeat center right;
-}
-
-body:after {
-  content: """";
-  display: block;
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  width: 30px;
-  background: url(/mask.png) repeat-y left;
-}
-
-a { color: #004B6B; }
-a:hover { color: #6D4100; }
-
-h1 {
-  font-family: 'Garamond', 'Georgia', serif;
-  font-weight: normal;
-  color: #222;
-  font-size: 40px;
-  padding: 50px 0 10px 50px;
-  margin: 0;
-}
-
-p {
-  font-family: 'Georgia', serif;
-  color: #000;
-  font-size: 20px;
-  padding: 10px 0 0 90px;
-  margin: 0;
-  width: 360px;
-}
-</style>
-<h1>Chapter 404: The Lost Page</h1>
-<p>A careful and diligent search has been made for the desired page, but it just cannot be found.
-<p>And so they returned to <a href=/>familiar waters</a>.
","diff --git a/website/404.html b/website/404.html
deleted file mode 100644
index c4de489d..00000000
--- a/website/404.html
+++ /dev/null
@@ -1,47 +0,0 @@
-<!doctype html>
-<title>Chapter 404: The Lost Page</title>
-<style type=text/css>
-body, html {
-  height: 100%;
-  margin: 0;
-  padding: 0;
-}
-
-body {
-  background: url(/ship.png) no-repeat center right;
-}
-
-body:after {
-  content: """";
-  display: block;
-  position: absolute;
-  top: 0;
-  bottom: 0;
-  width: 30px;
-  background: url(/mask.png) repeat-y left;
-}
-
-a { color: #004B6B; }
-a:hover { color: #6D4100; }
-
-h1 {
-  font-family: 'Garamond', 'Georgia', serif;
-  font-weight: normal;
-  color: #222;
-  font-size: 40px;
-  padding: 50px 0 10px 50px;
-  margin: 0;
-}
-
-p {
-  font-family: 'Georgia', serif;
-  color: #000;
-  font-size: 20px;
-  padding: 10px 0 0 90px;
-  margin: 0;
-  width: 360px;
-}
-</style>
-<h1>Chapter 404: The Lost Page</h1>
-<p>A careful and diligent search has been made for the desired page, but it just cannot be found.
-<p>And so they returned to <a href=/>familiar waters</a>.
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,website/index.html,website/index.html,,Removed website from main branch.  Makes no sense to be there,"diff --git a/website/index.html b/website/index.html
deleted file mode 100644
index 5db6b850..00000000
--- a/website/index.html
+++ /dev/null
@@ -1,81 +0,0 @@
-<!doctype html>
-<title>Flask (A Python Microframework)</title>
-<meta charset=utf-8>
-<style type=text/css>
-  body    { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
-  a       { color: #004B6B; }
-  a:hover { color: #6D4100; }
-  .box    { width: 540px; margin: 40px auto; }
-  h1, h2  { font-family: 'Garamond', 'Georgia', serif; font-weight: normal; }
-  h1      { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
-  h2      { font-size: 28px; margin: 15px 0 5px 0; }
-  code,
-  pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
-          monospace; font-size: 15px; background: #eee; }
-  pre     { padding: 7px 30px; margin: 15px -30px; line-height: 1.3; }
-  .ig     { color: #888; }
-  p       { line-height: 1.4; }
-  ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
-  ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
-  h1 span, p.tagline { display: none; }
-  blockquote { margin: 0; font-style: italic; color: #444; }
-  .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
-</style>
-<div class=box>
-  <h1><span>Flask</span></h1>
-  <p class=tagline>because sometimes a pocket knife is not enough
-  <blockquote>
-    Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
-    And before you ask: It's <a href=docs/license/>BSD licensed</a>!
-  </blockquote>
-  <h2>Flask is Fun</h2>
-  <pre><span class=ig>from flask import Flask
-app = Flask(__name__)</span>
-
-@app.route(""/"")
-def hello():
-    return ""Hello World!""
-
-<span class=ig>if __name__ == ""__main__"":
-    app.run()</span></pre>
-  <h2>And Easy to Setup</h2>
-  <pre><span class=ig>$ </span>easy_install Flask
-<span class=ig>$ </span>python hello.py
-<span class=ig> * Running on http://localhost:5000/</span></pre>
-  <h2>Interested?</h2>
-  <ul>
-    <li><a href=docs/>Read the documentation</a>
-    <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
-    <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
-  </ul>
-  <h2>What’s in the Box?</h2>
-  <ul>
-    <li>built in development server and <a href=docs/quickstart/#debug-mode>debugger</a>
-    <li>integrated support for <a href=docs/testing/>unittesting support</a>
-    <li>RESTful <a href=docs/quickstart/#routing>request dispatching</a>
-    <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
-    <li>support for <a href=docs/quickstart/#sessions>secure cookies</a> (client side sessions)
-    <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
-    <li>Unicode based
-  </ul>
-  <h2>What do Flask Apps look like?</h2>
-  <p>
-    If you are looking for some example code of applications written with Flask,
-    have a look at the sources of the examples on github:
-  <ul>
-    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/>flaskr</a>
-      — a microblog
-    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/>minitwit</a>
-      — a twitter clone
-  </ul>
-  <h2>Contribute</h2>
-  <p>Found a bug? Have a good idea for improving Flask? Head over to
-    <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
-    create a new ticket or fork.  If you just want to chat with fellow
-    developers, go to <code>#pocoo</code> on irc.freenode.net.
-
-  <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
-</div>
-
-<a href=""http://github.com/mitsuhiko/flask""><img style=""position: fixed; top: 0; right: 0; border: 0;""
-  src=""http://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"" alt=""Fork me on GitHub""></a>
","diff --git a/website/index.html b/website/index.html
deleted file mode 100644
index 5db6b850..00000000
--- a/website/index.html
+++ /dev/null
@@ -1,81 +0,0 @@
-<!doctype html>
-<title>Flask (A Python Microframework)</title>
-<meta charset=utf-8>
-<style type=text/css>
-  body    { font-family: 'Georgia', serif; font-size: 17px; color: #000; }
-  a       { color: #004B6B; }
-  a:hover { color: #6D4100; }
-  .box    { width: 540px; margin: 40px auto; }
-  h1, h2  { font-family: 'Garamond', 'Georgia', serif; font-weight: normal; }
-  h1      { margin: 0 0 30px 0; background: url(logo.png) no-repeat center; height: 165px; }
-  h2      { font-size: 28px; margin: 15px 0 5px 0; }
-  code,
-  pre     { font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono',
-          monospace; font-size: 15px; background: #eee; }
-  pre     { padding: 7px 30px; margin: 15px -30px; line-height: 1.3; }
-  .ig     { color: #888; }
-  p       { line-height: 1.4; }
-  ul      { margin: 15px 0 15px 0; padding: 0; list-style: none; }
-  ul li:before { content: ""\00BB \0020""; color: #888; position: absolute; margin-left: -19px; }
-  h1 span, p.tagline { display: none; }
-  blockquote { margin: 0; font-style: italic; color: #444; }
-  .footer { font-size: 13px; color: #888; text-align: right; margin-top: 25px; }
-</style>
-<div class=box>
-  <h1><span>Flask</span></h1>
-  <p class=tagline>because sometimes a pocket knife is not enough
-  <blockquote>
-    Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions.
-    And before you ask: It's <a href=docs/license/>BSD licensed</a>!
-  </blockquote>
-  <h2>Flask is Fun</h2>
-  <pre><span class=ig>from flask import Flask
-app = Flask(__name__)</span>
-
-@app.route(""/"")
-def hello():
-    return ""Hello World!""
-
-<span class=ig>if __name__ == ""__main__"":
-    app.run()</span></pre>
-  <h2>And Easy to Setup</h2>
-  <pre><span class=ig>$ </span>easy_install Flask
-<span class=ig>$ </span>python hello.py
-<span class=ig> * Running on http://localhost:5000/</span></pre>
-  <h2>Interested?</h2>
-  <ul>
-    <li><a href=docs/>Read the documentation</a>
-    <li><a href=http://github.com/mitsuhiko/flask>Fork it on github</a>
-    <li><a href=http://pypi.python.org/pypi/Flask>Download it from PyPI</a>
-  </ul>
-  <h2>What’s in the Box?</h2>
-  <ul>
-    <li>built in development server and <a href=docs/quickstart/#debug-mode>debugger</a>
-    <li>integrated support for <a href=docs/testing/>unittesting support</a>
-    <li>RESTful <a href=docs/quickstart/#routing>request dispatching</a>
-    <li>uses <a href=http://jinja.pocoo.org/2/documentation/templates>Jinja2 templating</a>
-    <li>support for <a href=docs/quickstart/#sessions>secure cookies</a> (client side sessions)
-    <li>100% <a href=http://www.python.org/dev/peps/pep-0333/>WSGI 1.0</a> compliant
-    <li>Unicode based
-  </ul>
-  <h2>What do Flask Apps look like?</h2>
-  <p>
-    If you are looking for some example code of applications written with Flask,
-    have a look at the sources of the examples on github:
-  <ul>
-    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/flaskr/>flaskr</a>
-      — a microblog
-    <li><a href=http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/>minitwit</a>
-      — a twitter clone
-  </ul>
-  <h2>Contribute</h2>
-  <p>Found a bug? Have a good idea for improving Flask? Head over to
-    <a href=http://github.com/mitsuhiko/flask>Flask's github</a> page and
-    create a new ticket or fork.  If you just want to chat with fellow
-    developers, go to <code>#pocoo</code> on irc.freenode.net.
-
-  <p class=footer>&copy; Copyright 2010 by <a href=http://lucumr.pocoo.org/>Armin Ronacher</a>
-</div>
-
-<a href=""http://github.com/mitsuhiko/flask""><img style=""position: fixed; top: 0; right: 0; border: 0;""
-  src=""http://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"" alt=""Fork me on GitHub""></a>
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,website/logo.png,website/logo.png,website/logo.png,Removed website from main branch.  Makes no sense to be there,"diff --git a/website/logo.png b/website/logo.png
deleted file mode 100644
index f255eece..00000000
Binary files a/website/logo.png and /dev/null differ
","diff --git a/website/logo.png b/website/logo.png
deleted file mode 100644
index f255eece..00000000
Binary files a/website/logo.png and /dev/null differ
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,website/mask.png,website/mask.png,website/mask.png,Removed website from main branch.  Makes no sense to be there,"diff --git a/website/mask.png b/website/mask.png
deleted file mode 100644
index f2fdbe14..00000000
Binary files a/website/mask.png and /dev/null differ
","diff --git a/website/mask.png b/website/mask.png
deleted file mode 100644
index f2fdbe14..00000000
Binary files a/website/mask.png and /dev/null differ
"
d73be4b709ab881ae15b9bd1064b16820f98a51b,3261357ba7f59e2eabeb96127b6253d1466b4db0,website/ship.png,website/ship.png,website/ship.png,Removed website from main branch.  Makes no sense to be there,"diff --git a/website/ship.png b/website/ship.png
deleted file mode 100644
index 49eca5d4..00000000
Binary files a/website/ship.png and /dev/null differ
","diff --git a/website/ship.png b/website/ship.png
deleted file mode 100644
index 49eca5d4..00000000
Binary files a/website/ship.png and /dev/null differ
"
3261357ba7f59e2eabeb96127b6253d1466b4db0,1cb75df8f1f9e7a768254fe2c9e2997f21152665,.gitignore,.gitignore,.gitignore,Add leftovers from website branch to gitignore,"diff --git a/.gitignore b/.gitignore
index 5250e072..148e5029 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,3 +4,4 @@
 env
 dist
 *.egg-info
+_mailinglist
","diff --git a/.gitignore b/.gitignore
index 5250e072..148e5029 100644
--- a/.gitignore
+++ b/.gitignore
@@ -4,3 +4,4 @@
 env
 dist
 *.egg-info
+_mailinglist
"
1cb75df8f1f9e7a768254fe2c9e2997f21152665,ebb07a06567d72acf47b3ee5553053216f978305,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Better English.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e0f0749f..526d8f7b 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -285,7 +285,7 @@ the application secure.  Because of that Flask configures the `Jinja2
 To render a template you can use the :func:`~flask.render_template`
 method.  All you have to do is to provide the name of the template and the
 variables you want to pass to the template engine as keyword arguments.
-Here a simple example of how to render a template::
+Here's a simple example of how to render a template::
 
     from flask import render_template
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index e0f0749f..526d8f7b 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -285,7 +285,7 @@ the application secure.  Because of that Flask configures the `Jinja2
 To render a template you can use the :func:`~flask.render_template`
 method.  All you have to do is to provide the name of the template and the
 variables you want to pass to the template engine as keyword arguments.
-Here a simple example of how to render a template::
+Here's a simple example of how to render a template::
 
     from flask import render_template
 
"
ebb07a06567d72acf47b3ee5553053216f978305,be15340e0f65e8785aff3033f0b2732ae31c6b81,README,README,README,Added mailinglist link to the README,"diff --git a/README b/README
index 73e0bbf1..e9eb1c7b 100644
--- a/README
+++ b/README
@@ -29,3 +29,8 @@
       Go to http://flask.pocoo.org/ for a prebuilt version of
       the current documentation.  Otherwise build them yourself
       from the sphinx sources in the docs folder.
+
+    ~ Where can I get help?
+
+      Either use the #pocoo IRC channel on irc.freenode.net or
+      ask on the mailinglist: http://flask.pocoo.org/mailinglist/
","diff --git a/README b/README
index 73e0bbf1..e9eb1c7b 100644
--- a/README
+++ b/README
@@ -29,3 +29,8 @@
       Go to http://flask.pocoo.org/ for a prebuilt version of
       the current documentation.  Otherwise build them yourself
       from the sphinx sources in the docs folder.
+
+    ~ Where can I get help?
+
+      Either use the #pocoo IRC channel on irc.freenode.net or
+      ask on the mailinglist: http://flask.pocoo.org/mailinglist/
"
be15340e0f65e8785aff3033f0b2732ae31c6b81,dc3f13df54ba91649ecec2bdee6c24ca31a400a8,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Corrected validator usage in the wtforms docs.,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 4a836975..bbceee8a 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -22,9 +22,11 @@ This is an example form for a typical registration page::
     class RegistrationForm(Form):
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
-        password = PasswordField('New Password', [validators.Required()])
-        confirm = PasswordField('Repeat Password', [validators.EqualTo(
-            'confirm', message='Passwords must match')])
+        password = PasswordField('New Password', [
+            validators.Required(),
+            validators.EqualTo('confirm', message='Passwords must match')
+        ])
+        confirm = PasswordField('Repeat Password')
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
 In the View
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index 4a836975..bbceee8a 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -22,9 +22,11 @@ This is an example form for a typical registration page::
     class RegistrationForm(Form):
         username = TextField('Username', [validators.Length(min=4, max=25)])
         email = TextField('Email Address', [validators.Length(min=6, max=35)])
-        password = PasswordField('New Password', [validators.Required()])
-        confirm = PasswordField('Repeat Password', [validators.EqualTo(
-            'confirm', message='Passwords must match')])
+        password = PasswordField('New Password', [
+            validators.Required(),
+            validators.EqualTo('confirm', message='Passwords must match')
+        ])
+        confirm = PasswordField('Repeat Password')
         accept_tos = BooleanField('I accept the TOS', [validators.Required()])
 
 In the View
"
dc3f13df54ba91649ecec2bdee6c24ca31a400a8,88f671aaaef334caf3231095b119cac094ff5ffb,flask.py,flask.py,flask.py,Another try for #12,"diff --git a/flask.py b/flask.py
index 1f0fb7e6..4c7a1cc4 100644
--- a/flask.py
+++ b/flask.py
@@ -275,6 +275,41 @@ else:
     _tojson_filter = json.dumps
 
 
+class _ModuleSetupState(object):
+
+    def __init__(self, app, url_prefix=None):
+        self.app = app
+        self.url_prefix = url_prefix
+
+
+class Module(object):
+    """"""Container object that enables pluggable applications""""""
+
+    def __init__(self, name, url_prefix=None, package_name=None):
+        self.name = name
+        self.package_name = package_name
+        self.url_prefix = url_prefix
+        self._register_events = []
+
+    def route(self, rule, **options):
+        def decorator(f):
+            self.add_url_rule(rule, f.__name__, f, **options)
+            return f
+        return decorator
+
+    def add_url_rule(self, rule, endpoint, view_func=None, **options):
+        self._record(self._register_rule, (rule, endpoint, view_func, options))
+
+    def _record(self, func, args):
+        self._register_events.append((func, args))
+
+    def _register_rule(self, state, rule, endpoint, view_func, options):
+        if self.url_prefix:
+            rule = state.url_prefix + rule
+        self.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
+                              view_func, **options)
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -506,6 +541,13 @@ class Flask(object):
         """"""
         session.save_cookie(response, self.session_cookie_name)
 
+    def register_module(self, module, **options):
+        """"""Registers a module with this application.""""""
+        options.setdefault('url_prefix', self.url_prefix)
+        state = _ModuleSetupState(app, options)
+        for func, args in module._register_events:
+            func(state, *args)
+
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator.  If a view_func is provided it will be registered with the
","diff --git a/flask.py b/flask.py
index 1f0fb7e6..4c7a1cc4 100644
--- a/flask.py
+++ b/flask.py
@@ -275,6 +275,41 @@ else:
     _tojson_filter = json.dumps
 
 
+class _ModuleSetupState(object):
+
+    def __init__(self, app, url_prefix=None):
+        self.app = app
+        self.url_prefix = url_prefix
+
+
+class Module(object):
+    """"""Container object that enables pluggable applications""""""
+
+    def __init__(self, name, url_prefix=None, package_name=None):
+        self.name = name
+        self.package_name = package_name
+        self.url_prefix = url_prefix
+        self._register_events = []
+
+    def route(self, rule, **options):
+        def decorator(f):
+            self.add_url_rule(rule, f.__name__, f, **options)
+            return f
+        return decorator
+
+    def add_url_rule(self, rule, endpoint, view_func=None, **options):
+        self._record(self._register_rule, (rule, endpoint, view_func, options))
+
+    def _record(self, func, args):
+        self._register_events.append((func, args))
+
+    def _register_rule(self, state, rule, endpoint, view_func, options):
+        if self.url_prefix:
+            rule = state.url_prefix + rule
+        self.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
+                              view_func, **options)
+
+
 class Flask(object):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -506,6 +541,13 @@ class Flask(object):
         """"""
         session.save_cookie(response, self.session_cookie_name)
 
+    def register_module(self, module, **options):
+        """"""Registers a module with this application.""""""
+        options.setdefault('url_prefix', self.url_prefix)
+        state = _ModuleSetupState(app, options)
+        for func, args in module._register_events:
+            func(state, *args)
+
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator.  If a view_func is provided it will be registered with the
"
dc3f13df54ba91649ecec2bdee6c24ca31a400a8,a862ead5f22f9d4592c1c85bda285a4ded59b631,flask.py,flask.py,flask.py,Warn on None responses.,"diff --git a/flask.py b/flask.py
index 1f0fb7e6..10feaf22 100644
--- a/flask.py
+++ b/flask.py
@@ -687,7 +687,7 @@ class Flask(object):
         """"""Converts the return value from a view function to a real
         response object that is an instance of :attr:`response_class`.
 
-        The following types are allowd for `rv`:
+        The following types are allowed for `rv`:
 
         ======================= ===========================================
         :attr:`response_class`  the object is returned unchanged
@@ -703,6 +703,11 @@ class Flask(object):
 
         :param rv: the return value from the view function
         """"""
+        if rv is None:
+            from warnings import warn
+            warn(Warning('View function did not return a response'),
+                 stacklevel=2)
+            return u''
         if isinstance(rv, self.response_class):
             return rv
         if isinstance(rv, basestring):
","diff --git a/flask.py b/flask.py
index 1f0fb7e6..10feaf22 100644
--- a/flask.py
+++ b/flask.py
@@ -687,7 +687,7 @@ class Flask(object):
         """"""Converts the return value from a view function to a real
         response object that is an instance of :attr:`response_class`.
 
-        The following types are allowd for `rv`:
+        The following types are allowed for `rv`:
 
         ======================= ===========================================
         :attr:`response_class`  the object is returned unchanged
@@ -703,6 +703,11 @@ class Flask(object):
 
         :param rv: the return value from the view function
         """"""
+        if rv is None:
+            from warnings import warn
+            warn(Warning('View function did not return a response'),
+                 stacklevel=2)
+            return u''
         if isinstance(rv, self.response_class):
             return rv
         if isinstance(rv, basestring):
"
dc3f13df54ba91649ecec2bdee6c24ca31a400a8,a862ead5f22f9d4592c1c85bda285a4ded59b631,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Warn on None responses.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 5f07fbe8..917f4168 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -15,6 +15,7 @@ import sys
 import flask
 import unittest
 import tempfile
+import warnings
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -224,6 +225,19 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             assert flask.url_for('static', filename='index.html') \
                 == '/static/index.html'
 
+    def test_none_response(self):
+        warnings.filterwarnings('error', 'View function did not return')
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def test():
+            return None
+        try:
+            app.test_client().get('/')
+        except Warning:
+            pass
+        else:
+            assert ""Expected warning""
+
 
 class JSONTestCase(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 5f07fbe8..917f4168 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -15,6 +15,7 @@ import sys
 import flask
 import unittest
 import tempfile
+import warnings
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -224,6 +225,19 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             assert flask.url_for('static', filename='index.html') \
                 == '/static/index.html'
 
+    def test_none_response(self):
+        warnings.filterwarnings('error', 'View function did not return')
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def test():
+            return None
+        try:
+            app.test_client().get('/')
+        except Warning:
+            pass
+        else:
+            assert ""Expected warning""
+
 
 class JSONTestCase(unittest.TestCase):
 
"
88f671aaaef334caf3231095b119cac094ff5ffb,444e6425312a16589130ff36f2830b6f97fbbd4f,flask.py,flask.py,flask.py,extended URL generation,"diff --git a/flask.py b/flask.py
index 4c7a1cc4..e569aaaa 100644
--- a/flask.py
+++ b/flask.py
@@ -56,7 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    endpoint = view_args = None
+    endpoint = view_args = routing_exception = None
 
     @cached_property
     def json(self):
@@ -117,6 +117,12 @@ class _RequestContext(object):
         self.g = _RequestGlobals()
         self.flashes = None
 
+        try:
+            self.request.endpoint, self.request.view_args = \
+                self.url_adapter.match()
+        except HTTPException, e:
+            self.request.routing_exception = e
+
     def __enter__(self):
         _request_ctx_stack.push(self)
 
@@ -134,7 +140,12 @@ def url_for(endpoint, **values):
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
     """"""
-    return _request_ctx_stack.top.url_adapter.build(endpoint, values)
+    ctx = _request_ctx_stack.top
+    if '.' not in endpoint and \
+       ctx.request.endpoint is not None \
+       and '.' in ctx.request.endpoint:
+        endpoint = ctx.request.endpoint.rsplit('.', 1)[0] + '.' + endpoint
+    return ctx.url_adapter.build(endpoint.lstrip('.'), values)
 
 
 def get_template_attribute(template_name, attribute):
@@ -548,7 +559,7 @@ class Flask(object):
         for func, args in module._register_events:
             func(state, *args)
 
-    def add_url_rule(self, rule, endpoint, view_func=None, **options):
+    def add_url_rule(self, rule, endpoint=None, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator.  If a view_func is provided it will be registered with the
         endpoint.
@@ -571,7 +582,7 @@ class Flask(object):
             app.view_functions['index'] = index
 
         .. versionchanged:: 0.2
-           `view_func` parameter added
+           `view_func` parameter added.
 
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
@@ -582,6 +593,10 @@ class Flask(object):
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
         """"""
+        if endpoint is None:
+            assert view_func is not None, 'expected view func if endpoint ' \
+                                          'is not provided.'
+            endpoint = view_func.__name__
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
@@ -654,7 +669,7 @@ class Flask(object):
                         :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
-            self.add_url_rule(rule, f.__name__, f, **options)
+            self.add_url_rule(rule, None, f, **options)
             return f
         return decorator
 
@@ -696,24 +711,17 @@ class Flask(object):
         self.template_context_processors.append(f)
         return f
 
-    def match_request(self):
-        """"""Matches the current request against the URL map and also
-        stores the endpoint and view arguments on the request object
-        is successful, otherwise the exception is stored.
-        """"""
-        rv = _request_ctx_stack.top.url_adapter.match()
-        request.endpoint, request.view_args = rv
-        return rv
-
     def dispatch_request(self):
         """"""Does the request dispatching.  Matches the URL and returns the
         return value of the view or error handler.  This does not have to
         be a response object.  In order to convert the return value to a
         proper response object, call :func:`make_response`.
         """"""
+        req = _request_ctx_stack.top.request
         try:
-            endpoint, values = self.match_request()
-            return self.view_functions[endpoint](**values)
+            if req.routing_exception is not None:
+                raise req.routing_exception
+            return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
             handler = self.error_handlers.get(e.code)
             if handler is None:
","diff --git a/flask.py b/flask.py
index 4c7a1cc4..e569aaaa 100644
--- a/flask.py
+++ b/flask.py
@@ -56,7 +56,7 @@ class Request(RequestBase):
     :attr:`~flask.Flask.request_class` to your subclass.
     """"""
 
-    endpoint = view_args = None
+    endpoint = view_args = routing_exception = None
 
     @cached_property
     def json(self):
@@ -117,6 +117,12 @@ class _RequestContext(object):
         self.g = _RequestGlobals()
         self.flashes = None
 
+        try:
+            self.request.endpoint, self.request.view_args = \
+                self.url_adapter.match()
+        except HTTPException, e:
+            self.request.routing_exception = e
+
     def __enter__(self):
         _request_ctx_stack.push(self)
 
@@ -134,7 +140,12 @@ def url_for(endpoint, **values):
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
     """"""
-    return _request_ctx_stack.top.url_adapter.build(endpoint, values)
+    ctx = _request_ctx_stack.top
+    if '.' not in endpoint and \
+       ctx.request.endpoint is not None \
+       and '.' in ctx.request.endpoint:
+        endpoint = ctx.request.endpoint.rsplit('.', 1)[0] + '.' + endpoint
+    return ctx.url_adapter.build(endpoint.lstrip('.'), values)
 
 
 def get_template_attribute(template_name, attribute):
@@ -548,7 +559,7 @@ class Flask(object):
         for func, args in module._register_events:
             func(state, *args)
 
-    def add_url_rule(self, rule, endpoint, view_func=None, **options):
+    def add_url_rule(self, rule, endpoint=None, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
         decorator.  If a view_func is provided it will be registered with the
         endpoint.
@@ -571,7 +582,7 @@ class Flask(object):
             app.view_functions['index'] = index
 
         .. versionchanged:: 0.2
-           `view_func` parameter added
+           `view_func` parameter added.
 
         :param rule: the URL rule as string
         :param endpoint: the endpoint for the registered URL rule.  Flask
@@ -582,6 +593,10 @@ class Flask(object):
         :param options: the options to be forwarded to the underlying
                         :class:`~werkzeug.routing.Rule` object
         """"""
+        if endpoint is None:
+            assert view_func is not None, 'expected view func if endpoint ' \
+                                          'is not provided.'
+            endpoint = view_func.__name__
         options['endpoint'] = endpoint
         options.setdefault('methods', ('GET',))
         self.url_map.add(Rule(rule, **options))
@@ -654,7 +669,7 @@ class Flask(object):
                         :class:`~werkzeug.routing.Rule` object.
         """"""
         def decorator(f):
-            self.add_url_rule(rule, f.__name__, f, **options)
+            self.add_url_rule(rule, None, f, **options)
             return f
         return decorator
 
@@ -696,24 +711,17 @@ class Flask(object):
         self.template_context_processors.append(f)
         return f
 
-    def match_request(self):
-        """"""Matches the current request against the URL map and also
-        stores the endpoint and view arguments on the request object
-        is successful, otherwise the exception is stored.
-        """"""
-        rv = _request_ctx_stack.top.url_adapter.match()
-        request.endpoint, request.view_args = rv
-        return rv
-
     def dispatch_request(self):
         """"""Does the request dispatching.  Matches the URL and returns the
         return value of the view or error handler.  This does not have to
         be a response object.  In order to convert the return value to a
         proper response object, call :func:`make_response`.
         """"""
+        req = _request_ctx_stack.top.request
         try:
-            endpoint, values = self.match_request()
-            return self.view_functions[endpoint](**values)
+            if req.routing_exception is not None:
+                raise req.routing_exception
+            return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
             handler = self.error_handlers.get(e.code)
             if handler is None:
"
444e6425312a16589130ff36f2830b6f97fbbd4f,e0148a00c0f468784052926f80e8112be7686470,flask.py,flask.py,flask.py,"Basic module support is working, but does not look very nice.","diff --git a/flask.py b/flask.py
index e569aaaa..94072ce9 100644
--- a/flask.py
+++ b/flask.py
@@ -13,6 +13,7 @@ from __future__ import with_statement
 import os
 import sys
 
+from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
@@ -58,6 +59,12 @@ class Request(RequestBase):
 
     endpoint = view_args = routing_exception = None
 
+    @property
+    def module(self):
+        """"""The name of the current module""""""
+        if self.endpoint and '.' in self.endpoint:
+            return self.endpoint.rsplit('.', 1)[0]
+
     @cached_property
     def json(self):
         """"""If the mimetype is `application/json` this will contain the
@@ -141,11 +148,13 @@ def url_for(endpoint, **values):
     :param values: the variable arguments of the URL rule
     """"""
     ctx = _request_ctx_stack.top
-    if '.' not in endpoint and \
-       ctx.request.endpoint is not None \
-       and '.' in ctx.request.endpoint:
-        endpoint = ctx.request.endpoint.rsplit('.', 1)[0] + '.' + endpoint
-    return ctx.url_adapter.build(endpoint.lstrip('.'), values)
+    if '.' not in endpoint:
+        mod = ctx.request.module
+        if mod is not None:
+            endpoint = mod + '.' + endpoint
+    elif endpoint.startswith('.'):
+        endpoint = endpoint[1:]
+    return ctx.url_adapter.build(endpoint, values)
 
 
 def get_template_attribute(template_name, attribute):
@@ -311,6 +320,16 @@ class Module(object):
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         self._record(self._register_rule, (rule, endpoint, view_func, options))
 
+    def before_request(self, f):
+        self._record(lambda s: s.app.before_request_funcs
+            .setdefault(self.name, []).append(f), ())
+        return f
+
+    def after_request(self, f):
+        self._record(lambda s: s.app.after_request_funcs
+            .setdefault(self.name, []).append(f), ())
+        return f
+
     def _record(self, func, args):
         self._register_events.append((func, args))
 
@@ -402,14 +421,14 @@ class Flask(object):
         #: getting hold of the currently logged in user.
         #: To register a function here, use the :meth:`before_request`
         #: decorator.
-        self.before_request_funcs = []
+        self.before_request_funcs = {}
 
         #: a list of functions that are called at the end of the
         #: request.  The function is passed the current response
         #: object and modify it in place or replace it.
         #: To register a function here use the :meth:`after_request`
         #: decorator.
-        self.after_request_funcs = []
+        self.after_request_funcs = {}
 
         #: a list of functions that are called without arguments
         #: to populate the template context.  Each returns a dictionary
@@ -698,12 +717,12 @@ class Flask(object):
 
     def before_request(self, f):
         """"""Registers a function to run before each request.""""""
-        self.before_request_funcs.append(f)
+        self.before_request_funcs.setdefault(None, []).append(f)
         return f
 
     def after_request(self, f):
         """"""Register a function to be run after each request.""""""
-        self.after_request_funcs.append(f)
+        self.after_request_funcs.setdefault(None, []).append(f)
         return f
 
     def context_processor(self, f):
@@ -768,7 +787,11 @@ class Flask(object):
         if it was the return value from the view and further
         request handling is stopped.
         """"""
-        for func in self.before_request_funcs:
+        funcs = self.before_request_funcs.get(None, ())
+        mod = request.module
+        if mod and mod in self.before_request_funcs:
+            funcs = chain(funcs, self.before_request_funcs[mod])
+        for func in funcs:
             rv = func()
             if rv is not None:
                 return rv
@@ -782,10 +805,14 @@ class Flask(object):
         :return: a new response object or the same, has to be an
                  instance of :attr:`response_class`.
         """"""
-        session = _request_ctx_stack.top.session
-        if not isinstance(session, _NullSession):
-            self.save_session(session, response)
-        for handler in self.after_request_funcs:
+        ctx = _request_ctx_stack.top
+        mod = ctx.request.module
+        if not isinstance(ctx.session, _NullSession):
+            self.save_session(ctx.session, response)
+        funcs = self.after_request_funcs.get(None, ())
+        if mod and mod in self.after_request_funcs:
+            funcs = chain(funcs, self.after_request_funcs[mod])
+        for handler in funcs:
             response = handler(response)
         return response
 
","diff --git a/flask.py b/flask.py
index e569aaaa..94072ce9 100644
--- a/flask.py
+++ b/flask.py
@@ -13,6 +13,7 @@ from __future__ import with_statement
 import os
 import sys
 
+from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
@@ -58,6 +59,12 @@ class Request(RequestBase):
 
     endpoint = view_args = routing_exception = None
 
+    @property
+    def module(self):
+        """"""The name of the current module""""""
+        if self.endpoint and '.' in self.endpoint:
+            return self.endpoint.rsplit('.', 1)[0]
+
     @cached_property
     def json(self):
         """"""If the mimetype is `application/json` this will contain the
@@ -141,11 +148,13 @@ def url_for(endpoint, **values):
     :param values: the variable arguments of the URL rule
     """"""
     ctx = _request_ctx_stack.top
-    if '.' not in endpoint and \
-       ctx.request.endpoint is not None \
-       and '.' in ctx.request.endpoint:
-        endpoint = ctx.request.endpoint.rsplit('.', 1)[0] + '.' + endpoint
-    return ctx.url_adapter.build(endpoint.lstrip('.'), values)
+    if '.' not in endpoint:
+        mod = ctx.request.module
+        if mod is not None:
+            endpoint = mod + '.' + endpoint
+    elif endpoint.startswith('.'):
+        endpoint = endpoint[1:]
+    return ctx.url_adapter.build(endpoint, values)
 
 
 def get_template_attribute(template_name, attribute):
@@ -311,6 +320,16 @@ class Module(object):
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         self._record(self._register_rule, (rule, endpoint, view_func, options))
 
+    def before_request(self, f):
+        self._record(lambda s: s.app.before_request_funcs
+            .setdefault(self.name, []).append(f), ())
+        return f
+
+    def after_request(self, f):
+        self._record(lambda s: s.app.after_request_funcs
+            .setdefault(self.name, []).append(f), ())
+        return f
+
     def _record(self, func, args):
         self._register_events.append((func, args))
 
@@ -402,14 +421,14 @@ class Flask(object):
         #: getting hold of the currently logged in user.
         #: To register a function here, use the :meth:`before_request`
         #: decorator.
-        self.before_request_funcs = []
+        self.before_request_funcs = {}
 
         #: a list of functions that are called at the end of the
         #: request.  The function is passed the current response
         #: object and modify it in place or replace it.
         #: To register a function here use the :meth:`after_request`
         #: decorator.
-        self.after_request_funcs = []
+        self.after_request_funcs = {}
 
         #: a list of functions that are called without arguments
         #: to populate the template context.  Each returns a dictionary
@@ -698,12 +717,12 @@ class Flask(object):
 
     def before_request(self, f):
         """"""Registers a function to run before each request.""""""
-        self.before_request_funcs.append(f)
+        self.before_request_funcs.setdefault(None, []).append(f)
         return f
 
     def after_request(self, f):
         """"""Register a function to be run after each request.""""""
-        self.after_request_funcs.append(f)
+        self.after_request_funcs.setdefault(None, []).append(f)
         return f
 
     def context_processor(self, f):
@@ -768,7 +787,11 @@ class Flask(object):
         if it was the return value from the view and further
         request handling is stopped.
         """"""
-        for func in self.before_request_funcs:
+        funcs = self.before_request_funcs.get(None, ())
+        mod = request.module
+        if mod and mod in self.before_request_funcs:
+            funcs = chain(funcs, self.before_request_funcs[mod])
+        for func in funcs:
             rv = func()
             if rv is not None:
                 return rv
@@ -782,10 +805,14 @@ class Flask(object):
         :return: a new response object or the same, has to be an
                  instance of :attr:`response_class`.
         """"""
-        session = _request_ctx_stack.top.session
-        if not isinstance(session, _NullSession):
-            self.save_session(session, response)
-        for handler in self.after_request_funcs:
+        ctx = _request_ctx_stack.top
+        mod = ctx.request.module
+        if not isinstance(ctx.session, _NullSession):
+            self.save_session(ctx.session, response)
+        funcs = self.after_request_funcs.get(None, ())
+        if mod and mod in self.after_request_funcs:
+            funcs = chain(funcs, self.after_request_funcs[mod])
+        for handler in funcs:
             response = handler(response)
         return response
 
"
444e6425312a16589130ff36f2830b6f97fbbd4f,e0148a00c0f468784052926f80e8112be7686470,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Basic module support is working, but does not look very nice.","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 5f07fbe8..2f372514 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -298,6 +298,31 @@ class TemplatingTestCase(unittest.TestCase):
             assert macro('World') == 'Hello World!'
 
 
+class ModuleTestCase(unittest.TestCase):
+
+    def test_basic_module(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module('admin', url_prefix='/admin')
+        @admin.route('/')
+        def index():
+            return 'admin index'
+        @admin.route('/login')
+        def login():
+            return 'admin login'
+        @admin.route('/logout')
+        def logout():
+            return 'admin logout'
+        @app.route('/')
+        def index():
+            return 'the index'
+        app.register_module('admin', admin)
+        c = app.test_client()
+        assert c.get('/').data == 'the index'
+        assert c.get('/admin/').data == 'admin index'
+        assert c.get('/admin/login').data == 'admin login'
+        assert c.get('/admin/logout').data == 'admin logout'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 5f07fbe8..2f372514 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -298,6 +298,31 @@ class TemplatingTestCase(unittest.TestCase):
             assert macro('World') == 'Hello World!'
 
 
+class ModuleTestCase(unittest.TestCase):
+
+    def test_basic_module(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module('admin', url_prefix='/admin')
+        @admin.route('/')
+        def index():
+            return 'admin index'
+        @admin.route('/login')
+        def login():
+            return 'admin login'
+        @admin.route('/logout')
+        def logout():
+            return 'admin logout'
+        @app.route('/')
+        def index():
+            return 'the index'
+        app.register_module('admin', admin)
+        c = app.test_client()
+        assert c.get('/').data == 'the index'
+        assert c.get('/admin/').data == 'admin index'
+        assert c.get('/admin/login').data == 'admin login'
+        assert c.get('/admin/logout').data == 'admin logout'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
"
e0148a00c0f468784052926f80e8112be7686470,5c52fe980eda6065edcc39e6dd346636b1c40768,flask.py,flask.py,flask.py,Added request/response processing based on modules.,"diff --git a/flask.py b/flask.py
index 94072ce9..8d516181 100644
--- a/flask.py
+++ b/flask.py
@@ -336,7 +336,7 @@ class Module(object):
     def _register_rule(self, state, rule, endpoint, view_func, options):
         if self.url_prefix:
             rule = state.url_prefix + rule
-        self.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
+        state.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
                                view_func, **options)
 
 
@@ -573,8 +573,8 @@ class Flask(object):
 
     def register_module(self, module, **options):
         """"""Registers a module with this application.""""""
-        options.setdefault('url_prefix', self.url_prefix)
-        state = _ModuleSetupState(app, options)
+        options.setdefault('url_prefix', module.url_prefix)
+        state = _ModuleSetupState(self, **options)
         for func, args in module._register_events:
             func(state, *args)
 
@@ -809,9 +809,11 @@ class Flask(object):
         mod = ctx.request.module
         if not isinstance(ctx.session, _NullSession):
             self.save_session(ctx.session, response)
-        funcs = self.after_request_funcs.get(None, ())
+        funcs = ()
         if mod and mod in self.after_request_funcs:
             funcs = chain(funcs, self.after_request_funcs[mod])
+        if None in self.after_request_funcs:
+            funcs = chain(funcs, self.after_request_funcs[None])
         for handler in funcs:
             response = handler(response)
         return response
","diff --git a/flask.py b/flask.py
index 94072ce9..8d516181 100644
--- a/flask.py
+++ b/flask.py
@@ -336,7 +336,7 @@ class Module(object):
     def _register_rule(self, state, rule, endpoint, view_func, options):
         if self.url_prefix:
             rule = state.url_prefix + rule
-        self.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
+        state.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
                                view_func, **options)
 
 
@@ -573,8 +573,8 @@ class Flask(object):
 
     def register_module(self, module, **options):
         """"""Registers a module with this application.""""""
-        options.setdefault('url_prefix', self.url_prefix)
-        state = _ModuleSetupState(app, options)
+        options.setdefault('url_prefix', module.url_prefix)
+        state = _ModuleSetupState(self, **options)
         for func, args in module._register_events:
             func(state, *args)
 
@@ -809,9 +809,11 @@ class Flask(object):
         mod = ctx.request.module
         if not isinstance(ctx.session, _NullSession):
             self.save_session(ctx.session, response)
-        funcs = self.after_request_funcs.get(None, ())
+        funcs = ()
         if mod and mod in self.after_request_funcs:
             funcs = chain(funcs, self.after_request_funcs[mod])
+        if None in self.after_request_funcs:
+            funcs = chain(funcs, self.after_request_funcs[None])
         for handler in funcs:
             response = handler(response)
         return response
"
e0148a00c0f468784052926f80e8112be7686470,5c52fe980eda6065edcc39e6dd346636b1c40768,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added request/response processing based on modules.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 2f372514..e57b2f32 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -315,13 +315,48 @@ class ModuleTestCase(unittest.TestCase):
         @app.route('/')
         def index():
             return 'the index'
-        app.register_module('admin', admin)
+        app.register_module(admin)
         c = app.test_client()
         assert c.get('/').data == 'the index'
         assert c.get('/admin/').data == 'admin index'
         assert c.get('/admin/login').data == 'admin login'
         assert c.get('/admin/logout').data == 'admin logout'
 
+    def test_request_processing(self):
+        catched = []
+        app = flask.Flask(__name__)
+        admin = flask.Module('admin', url_prefix='/admin')
+        @admin.before_request
+        def before_admin_request():
+            catched.append('before-admin')
+        @admin.after_request
+        def after_admin_request(response):
+            catched.append('after-admin')
+            return response
+        @admin.route('/')
+        def index():
+            return 'the admin'
+        @app.before_request
+        def before_request():
+            catched.append('before-app')
+        @app.after_request
+        def after_request(response):
+            catched.append('after-app')
+            return response
+        @app.route('/')
+        def index():
+            return 'the index'
+        app.register_module(admin)
+        c = app.test_client()
+
+        assert c.get('/').data == 'the index'
+        assert catched == ['before-app', 'after-app']
+        del catched[:]
+
+        assert c.get('/admin/').data == 'the admin'
+        assert catched == ['before-app', 'before-admin',
+                           'after-admin', 'after-app']
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
@@ -334,6 +369,7 @@ def suite():
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
     suite.addTest(unittest.makeSuite(FlaskrTestCase))
+    suite.addTest(unittest.makeSuite(ModuleTestCase))
     return suite
 
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 2f372514..e57b2f32 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -315,13 +315,48 @@ class ModuleTestCase(unittest.TestCase):
         @app.route('/')
         def index():
             return 'the index'
-        app.register_module('admin', admin)
+        app.register_module(admin)
         c = app.test_client()
         assert c.get('/').data == 'the index'
         assert c.get('/admin/').data == 'admin index'
         assert c.get('/admin/login').data == 'admin login'
         assert c.get('/admin/logout').data == 'admin logout'
 
+    def test_request_processing(self):
+        catched = []
+        app = flask.Flask(__name__)
+        admin = flask.Module('admin', url_prefix='/admin')
+        @admin.before_request
+        def before_admin_request():
+            catched.append('before-admin')
+        @admin.after_request
+        def after_admin_request(response):
+            catched.append('after-admin')
+            return response
+        @admin.route('/')
+        def index():
+            return 'the admin'
+        @app.before_request
+        def before_request():
+            catched.append('before-app')
+        @app.after_request
+        def after_request(response):
+            catched.append('after-app')
+            return response
+        @app.route('/')
+        def index():
+            return 'the index'
+        app.register_module(admin)
+        c = app.test_client()
+
+        assert c.get('/').data == 'the index'
+        assert catched == ['before-app', 'after-app']
+        del catched[:]
+
+        assert c.get('/admin/').data == 'the admin'
+        assert catched == ['before-app', 'before-admin',
+                           'after-admin', 'after-app']
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
@@ -334,6 +369,7 @@ def suite():
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
     suite.addTest(unittest.makeSuite(FlaskrTestCase))
+    suite.addTest(unittest.makeSuite(ModuleTestCase))
     return suite
 
 
"
5c52fe980eda6065edcc39e6dd346636b1c40768,2f181e19496a1fe693d9b20260fe961bb406c53b,flask.py,flask.py,flask.py,Removed unused package_name attribute,"diff --git a/flask.py b/flask.py
index 8d516181..c1a03f26 100644
--- a/flask.py
+++ b/flask.py
@@ -305,9 +305,8 @@ class _ModuleSetupState(object):
 class Module(object):
     """"""Container object that enables pluggable applications""""""
 
-    def __init__(self, name, url_prefix=None, package_name=None):
+    def __init__(self, name, url_prefix=None):
         self.name = name
-        self.package_name = package_name
         self.url_prefix = url_prefix
         self._register_events = []
 
","diff --git a/flask.py b/flask.py
index 8d516181..c1a03f26 100644
--- a/flask.py
+++ b/flask.py
@@ -305,9 +305,8 @@ class _ModuleSetupState(object):
 class Module(object):
     """"""Container object that enables pluggable applications""""""
 
-    def __init__(self, name, url_prefix=None, package_name=None):
+    def __init__(self, name, url_prefix=None):
         self.name = name
-        self.package_name = package_name
         self.url_prefix = url_prefix
         self._register_events = []
 
"
2f181e19496a1fe693d9b20260fe961bb406c53b,67f4b0f31538832f06b9351d15e30c85f449ac7e,flask.py,flask.py,flask.py,Modules are now instanciated with the package name.  This makes it possible to load resources from the folder the module is located in.,"diff --git a/flask.py b/flask.py
index c1a03f26..e07b7923 100644
--- a/flask.py
+++ b/flask.py
@@ -295,6 +295,43 @@ else:
     _tojson_filter = json.dumps
 
 
+class _PackageBoundObject(object):
+
+    def __init__(self, import_name):
+        #: the name of the package or module.  Do not change this once
+        #: it was set by the constructor.
+        self.import_name = import_name
+
+        #: where is the app root located?
+        self.root_path = _get_package_path(self.import_name)
+
+    def open_resource(self, resource):
+        """"""Opens a resource from the application's resource folder.  To see
+        how this works, consider the following folder structure::
+
+            /myapplication.py
+            /schemal.sql
+            /static
+                /style.css
+            /template
+                /layout.html
+                /index.html
+
+        If you want to open the `schema.sql` file you would do the
+        following::
+
+            with app.open_resource('schema.sql') as f:
+                contents = f.read()
+                do_something_with(contents)
+
+        :param resource: the name of the resource.  To access resources within
+                         subfolders use forward slashes as separator.
+        """"""
+        if pkg_resources is None:
+            return open(os.path.join(self.root_path, resource), 'rb')
+        return pkg_resources.resource_stream(self.import_name, resource)
+
+
 class _ModuleSetupState(object):
 
     def __init__(self, app, url_prefix=None):
@@ -302,44 +339,53 @@ class _ModuleSetupState(object):
         self.url_prefix = url_prefix
 
 
-class Module(object):
+class Module(_PackageBoundObject):
     """"""Container object that enables pluggable applications""""""
 
-    def __init__(self, name, url_prefix=None):
+    def __init__(self, import_name, name=None, url_prefix=None):
+        if name is None:
+            assert '.' in import_name, 'name required if package name ' \
+                'does not point to a submodule'
+            name = import_name.rsplit('.', 1)[1]
+        _PackageBoundObject.__init__(self, import_name)
         self.name = name
         self.url_prefix = url_prefix
         self._register_events = []
 
     def route(self, rule, **options):
+        """"""Like :meth:`flask.Flask.route` but for a module""""""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
-        self._record(self._register_rule, (rule, endpoint, view_func, options))
+        """"""Like :meth:`flask.Flask.add_url_rule` but for a module""""""
+        def register_rule(state):
+            the_rule = rule
+            if self.url_prefix:
+                the_rule = state.url_prefix + rule
+            state.app.add_url_rule(the_rule, '%s.%s' % (self.name, endpoint),
+                                   view_func, **options)
+        self._record(register_rule)
 
     def before_request(self, f):
+        """"""Like :meth:`flask.Flask.before_request` but for a module""""""
         self._record(lambda s: s.app.before_request_funcs
-            .setdefault(self.name, []).append(f), ())
+            .setdefault(self.name, []).append(f))
         return f
 
     def after_request(self, f):
+        """"""Like :meth:`flask.Flask.after_request` but for a module""""""
         self._record(lambda s: s.app.after_request_funcs
-            .setdefault(self.name, []).append(f), ())
+            .setdefault(self.name, []).append(f))
         return f
 
-    def _record(self, func, args):
-        self._register_events.append((func, args))
-
-    def _register_rule(self, state, rule, endpoint, view_func, options):
-        if self.url_prefix:
-            rule = state.url_prefix + rule
-        state.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
-                               view_func, **options)
+    def _record(self, func):
+        self._register_events.append(func)
 
 
-class Flask(object):
+class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
     application.  Once it is created it will act as a central registry for
@@ -386,7 +432,9 @@ class Flask(object):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, package_name):
+    def __init__(self, import_name):
+        _PackageBoundObject.__init__(self, import_name)
+
         #: the debug flag.  Set this to `True` to enable debugging of
         #: the application.  In debug mode the debugger will kick in
         #: when an unhandled exception ocurrs and the integrated server
@@ -394,13 +442,6 @@ class Flask(object):
         #: code are detected.
         self.debug = False
 
-        #: the name of the package or module.  Do not change this once
-        #: it was set by the constructor.
-        self.package_name = package_name
-
-        #: where is the app root located?
-        self.root_path = _get_package_path(self.package_name)
-
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -414,27 +455,31 @@ class Flask(object):
         #: decorator.
         self.error_handlers = {}
 
-        #: a list of functions that should be called at the beginning
-        #: of the request before request dispatching kicks in.  This
-        #: can for example be used to open database connections or
-        #: getting hold of the currently logged in user.
-        #: To register a function here, use the :meth:`before_request`
-        #: decorator.
+        #: a dictionary with lists of functions that should be called at the
+        #: beginning of the request.  The key of the dictionary is the name of
+        #: the module this function is active for, `None` for all requests.
+        #: This can for example be used to open database connections or
+        #: getting hold of the currently logged in user.  To register a
+        #: function here, use the :meth:`before_request` decorator.
         self.before_request_funcs = {}
 
-        #: a list of functions that are called at the end of the
-        #: request.  The function is passed the current response
-        #: object and modify it in place or replace it.
-        #: To register a function here use the :meth:`after_request`
-        #: decorator.
+        #: a dictionary with lists of functions that should be called after
+        #: each request.  The key of the dictionary is the name of the module
+        #: this function is active for, `None` for all requests.  This can for
+        #: example be used to open database connections or getting hold of the
+        #: currently logged in user.  To register a function here, use the
+        #: :meth:`before_request` decorator.
         self.after_request_funcs = {}
 
-        #: a list of functions that are called without arguments
-        #: to populate the template context.  Each returns a dictionary
-        #: that the template context is updated with.
-        #: To register a function here, use the :meth:`context_processor`
-        #: decorator.
-        self.template_context_processors = [_default_template_ctx_processor]
+        #: a dictionary with list of functions that are called without arguments
+        #: to populate the template context.  They key of the dictionary is the
+        #: name of the module this function is active for, `None` for all
+        #: requests.  Each returns a dictionary that the template context is
+        #: updated with.  To register a function here, use the
+        #: :meth:`context_processor` decorator.
+        self.template_context_processors = {
+            None: [_default_template_ctx_processor]
+        }
 
         #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
         #: this to change the routing converters after the class was created
@@ -457,7 +502,7 @@ class Flask(object):
             self.add_url_rule(self.static_path + '/<filename>',
                               build_only=True, endpoint='static')
             if pkg_resources is not None:
-                target = (self.package_name, 'static')
+                target = (self.import_name, 'static')
             else:
                 target = os.path.join(self.root_path, 'static')
             self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
@@ -483,7 +528,7 @@ class Flask(object):
         """"""
         if pkg_resources is None:
             return FileSystemLoader(os.path.join(self.root_path, 'templates'))
-        return PackageLoader(self.package_name)
+        return PackageLoader(self.import_name)
 
     def update_template_context(self, context):
         """"""Update the template context with some commonly used variables.
@@ -492,7 +537,11 @@ class Flask(object):
         :param context: the context as a dictionary that is updated in place
                         to add extra variables.
         """"""
-        for func in self.template_context_processors:
+        funcs = self.template_context_processors[None]
+        mod = _request_ctx_stack.top.request.module
+        if mod is not None and mod in self.template_context_processors:
+            funcs = chain(funcs, self.template_context_processors[mod])
+        for func in funcs:
             context.update(func())
 
     def run(self, host='127.0.0.1', port=5000, **options):
@@ -521,32 +570,6 @@ class Flask(object):
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
-    def open_resource(self, resource):
-        """"""Opens a resource from the application's resource folder.  To see
-        how this works, consider the following folder structure::
-
-            /myapplication.py
-            /schemal.sql
-            /static
-                /style.css
-            /template
-                /layout.html
-                /index.html
-
-        If you want to open the `schema.sql` file you would do the
-        following::
-
-            with app.open_resource('schema.sql') as f:
-                contents = f.read()
-                do_something_with(contents)
-
-        :param resource: the name of the resource.  To access resources within
-                         subfolders use forward slashes as separator.
-        """"""
-        if pkg_resources is None:
-            return open(os.path.join(self.root_path, resource), 'rb')
-        return pkg_resources.resource_stream(self.package_name, resource)
-
     def open_session(self, request):
         """"""Creates or opens a new session.  Default implementation stores all
         session data in a signed cookie.  This requires that the
@@ -574,8 +597,8 @@ class Flask(object):
         """"""Registers a module with this application.""""""
         options.setdefault('url_prefix', module.url_prefix)
         state = _ModuleSetupState(self, **options)
-        for func, args in module._register_events:
-            func(state, *args)
+        for func in module._register_events:
+            func(state)
 
     def add_url_rule(self, rule, endpoint=None, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
@@ -726,7 +749,7 @@ class Flask(object):
 
     def context_processor(self, f):
         """"""Registers a template context processor function.""""""
-        self.template_context_processors.append(f)
+        self.template_context_processors[None].append(f)
         return f
 
     def dispatch_request(self):
","diff --git a/flask.py b/flask.py
index c1a03f26..e07b7923 100644
--- a/flask.py
+++ b/flask.py
@@ -295,6 +295,43 @@ else:
     _tojson_filter = json.dumps
 
 
+class _PackageBoundObject(object):
+
+    def __init__(self, import_name):
+        #: the name of the package or module.  Do not change this once
+        #: it was set by the constructor.
+        self.import_name = import_name
+
+        #: where is the app root located?
+        self.root_path = _get_package_path(self.import_name)
+
+    def open_resource(self, resource):
+        """"""Opens a resource from the application's resource folder.  To see
+        how this works, consider the following folder structure::
+
+            /myapplication.py
+            /schemal.sql
+            /static
+                /style.css
+            /template
+                /layout.html
+                /index.html
+
+        If you want to open the `schema.sql` file you would do the
+        following::
+
+            with app.open_resource('schema.sql') as f:
+                contents = f.read()
+                do_something_with(contents)
+
+        :param resource: the name of the resource.  To access resources within
+                         subfolders use forward slashes as separator.
+        """"""
+        if pkg_resources is None:
+            return open(os.path.join(self.root_path, resource), 'rb')
+        return pkg_resources.resource_stream(self.import_name, resource)
+
+
 class _ModuleSetupState(object):
 
     def __init__(self, app, url_prefix=None):
@@ -302,44 +339,53 @@ class _ModuleSetupState(object):
         self.url_prefix = url_prefix
 
 
-class Module(object):
+class Module(_PackageBoundObject):
     """"""Container object that enables pluggable applications""""""
 
-    def __init__(self, name, url_prefix=None):
+    def __init__(self, import_name, name=None, url_prefix=None):
+        if name is None:
+            assert '.' in import_name, 'name required if package name ' \
+                'does not point to a submodule'
+            name = import_name.rsplit('.', 1)[1]
+        _PackageBoundObject.__init__(self, import_name)
         self.name = name
         self.url_prefix = url_prefix
         self._register_events = []
 
     def route(self, rule, **options):
+        """"""Like :meth:`flask.Flask.route` but for a module""""""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
-        self._record(self._register_rule, (rule, endpoint, view_func, options))
+        """"""Like :meth:`flask.Flask.add_url_rule` but for a module""""""
+        def register_rule(state):
+            the_rule = rule
+            if self.url_prefix:
+                the_rule = state.url_prefix + rule
+            state.app.add_url_rule(the_rule, '%s.%s' % (self.name, endpoint),
+                                   view_func, **options)
+        self._record(register_rule)
 
     def before_request(self, f):
+        """"""Like :meth:`flask.Flask.before_request` but for a module""""""
         self._record(lambda s: s.app.before_request_funcs
-            .setdefault(self.name, []).append(f), ())
+            .setdefault(self.name, []).append(f))
         return f
 
     def after_request(self, f):
+        """"""Like :meth:`flask.Flask.after_request` but for a module""""""
         self._record(lambda s: s.app.after_request_funcs
-            .setdefault(self.name, []).append(f), ())
+            .setdefault(self.name, []).append(f))
         return f
 
-    def _record(self, func, args):
-        self._register_events.append((func, args))
-
-    def _register_rule(self, state, rule, endpoint, view_func, options):
-        if self.url_prefix:
-            rule = state.url_prefix + rule
-        state.app.add_url_rule(rule, '%s.%s' % (self.name, endpoint),
-                               view_func, **options)
+    def _record(self, func):
+        self._register_events.append(func)
 
 
-class Flask(object):
+class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
     application.  Once it is created it will act as a central registry for
@@ -386,7 +432,9 @@ class Flask(object):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, package_name):
+    def __init__(self, import_name):
+        _PackageBoundObject.__init__(self, import_name)
+
         #: the debug flag.  Set this to `True` to enable debugging of
         #: the application.  In debug mode the debugger will kick in
         #: when an unhandled exception ocurrs and the integrated server
@@ -394,13 +442,6 @@ class Flask(object):
         #: code are detected.
         self.debug = False
 
-        #: the name of the package or module.  Do not change this once
-        #: it was set by the constructor.
-        self.package_name = package_name
-
-        #: where is the app root located?
-        self.root_path = _get_package_path(self.package_name)
-
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -414,27 +455,31 @@ class Flask(object):
         #: decorator.
         self.error_handlers = {}
 
-        #: a list of functions that should be called at the beginning
-        #: of the request before request dispatching kicks in.  This
-        #: can for example be used to open database connections or
-        #: getting hold of the currently logged in user.
-        #: To register a function here, use the :meth:`before_request`
-        #: decorator.
+        #: a dictionary with lists of functions that should be called at the
+        #: beginning of the request.  The key of the dictionary is the name of
+        #: the module this function is active for, `None` for all requests.
+        #: This can for example be used to open database connections or
+        #: getting hold of the currently logged in user.  To register a
+        #: function here, use the :meth:`before_request` decorator.
         self.before_request_funcs = {}
 
-        #: a list of functions that are called at the end of the
-        #: request.  The function is passed the current response
-        #: object and modify it in place or replace it.
-        #: To register a function here use the :meth:`after_request`
-        #: decorator.
+        #: a dictionary with lists of functions that should be called after
+        #: each request.  The key of the dictionary is the name of the module
+        #: this function is active for, `None` for all requests.  This can for
+        #: example be used to open database connections or getting hold of the
+        #: currently logged in user.  To register a function here, use the
+        #: :meth:`before_request` decorator.
         self.after_request_funcs = {}
 
-        #: a list of functions that are called without arguments
-        #: to populate the template context.  Each returns a dictionary
-        #: that the template context is updated with.
-        #: To register a function here, use the :meth:`context_processor`
-        #: decorator.
-        self.template_context_processors = [_default_template_ctx_processor]
+        #: a dictionary with list of functions that are called without arguments
+        #: to populate the template context.  They key of the dictionary is the
+        #: name of the module this function is active for, `None` for all
+        #: requests.  Each returns a dictionary that the template context is
+        #: updated with.  To register a function here, use the
+        #: :meth:`context_processor` decorator.
+        self.template_context_processors = {
+            None: [_default_template_ctx_processor]
+        }
 
         #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
         #: this to change the routing converters after the class was created
@@ -457,7 +502,7 @@ class Flask(object):
             self.add_url_rule(self.static_path + '/<filename>',
                               build_only=True, endpoint='static')
             if pkg_resources is not None:
-                target = (self.package_name, 'static')
+                target = (self.import_name, 'static')
             else:
                 target = os.path.join(self.root_path, 'static')
             self.wsgi_app = SharedDataMiddleware(self.wsgi_app, {
@@ -483,7 +528,7 @@ class Flask(object):
         """"""
         if pkg_resources is None:
             return FileSystemLoader(os.path.join(self.root_path, 'templates'))
-        return PackageLoader(self.package_name)
+        return PackageLoader(self.import_name)
 
     def update_template_context(self, context):
         """"""Update the template context with some commonly used variables.
@@ -492,7 +537,11 @@ class Flask(object):
         :param context: the context as a dictionary that is updated in place
                         to add extra variables.
         """"""
-        for func in self.template_context_processors:
+        funcs = self.template_context_processors[None]
+        mod = _request_ctx_stack.top.request.module
+        if mod is not None and mod in self.template_context_processors:
+            funcs = chain(funcs, self.template_context_processors[mod])
+        for func in funcs:
             context.update(func())
 
     def run(self, host='127.0.0.1', port=5000, **options):
@@ -521,32 +570,6 @@ class Flask(object):
         from werkzeug import Client
         return Client(self, self.response_class, use_cookies=True)
 
-    def open_resource(self, resource):
-        """"""Opens a resource from the application's resource folder.  To see
-        how this works, consider the following folder structure::
-
-            /myapplication.py
-            /schemal.sql
-            /static
-                /style.css
-            /template
-                /layout.html
-                /index.html
-
-        If you want to open the `schema.sql` file you would do the
-        following::
-
-            with app.open_resource('schema.sql') as f:
-                contents = f.read()
-                do_something_with(contents)
-
-        :param resource: the name of the resource.  To access resources within
-                         subfolders use forward slashes as separator.
-        """"""
-        if pkg_resources is None:
-            return open(os.path.join(self.root_path, resource), 'rb')
-        return pkg_resources.resource_stream(self.package_name, resource)
-
     def open_session(self, request):
         """"""Creates or opens a new session.  Default implementation stores all
         session data in a signed cookie.  This requires that the
@@ -574,8 +597,8 @@ class Flask(object):
         """"""Registers a module with this application.""""""
         options.setdefault('url_prefix', module.url_prefix)
         state = _ModuleSetupState(self, **options)
-        for func, args in module._register_events:
-            func(state, *args)
+        for func in module._register_events:
+            func(state)
 
     def add_url_rule(self, rule, endpoint=None, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
@@ -726,7 +749,7 @@ class Flask(object):
 
     def context_processor(self, f):
         """"""Registers a template context processor function.""""""
-        self.template_context_processors.append(f)
+        self.template_context_processors[None].append(f)
         return f
 
     def dispatch_request(self):
"
2f181e19496a1fe693d9b20260fe961bb406c53b,67f4b0f31538832f06b9351d15e30c85f449ac7e,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Modules are now instanciated with the package name.  This makes it possible to load resources from the folder the module is located in.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index e57b2f32..15b53651 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -302,7 +302,7 @@ class ModuleTestCase(unittest.TestCase):
 
     def test_basic_module(self):
         app = flask.Flask(__name__)
-        admin = flask.Module('admin', url_prefix='/admin')
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
         @admin.route('/')
         def index():
             return 'admin index'
@@ -325,7 +325,7 @@ class ModuleTestCase(unittest.TestCase):
     def test_request_processing(self):
         catched = []
         app = flask.Flask(__name__)
-        admin = flask.Module('admin', url_prefix='/admin')
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
         @admin.before_request
         def before_admin_request():
             catched.append('before-admin')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index e57b2f32..15b53651 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -302,7 +302,7 @@ class ModuleTestCase(unittest.TestCase):
 
     def test_basic_module(self):
         app = flask.Flask(__name__)
-        admin = flask.Module('admin', url_prefix='/admin')
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
         @admin.route('/')
         def index():
             return 'admin index'
@@ -325,7 +325,7 @@ class ModuleTestCase(unittest.TestCase):
     def test_request_processing(self):
         catched = []
         app = flask.Flask(__name__)
-        admin = flask.Module('admin', url_prefix='/admin')
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
         @admin.before_request
         def before_admin_request():
             catched.append('before-admin')
"
67f4b0f31538832f06b9351d15e30c85f449ac7e,c0a9f5d0c4f09dbe8b744609552cbbfa9f14fbc0,docs/api.rst,docs/api.rst,docs/api.rst,Documentation update for the flask module support.,"diff --git a/docs/api.rst b/docs/api.rst
index d285dbfd..0d8b6cf5 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -15,6 +15,15 @@ Application Object
 
 .. autoclass:: Flask
    :members:
+   :inherited-members:
+
+
+Module Objects
+--------------
+
+.. autoclass:: Module
+   :members:
+   :inherited-members:
 
 Incoming Request Data
 ---------------------
","diff --git a/docs/api.rst b/docs/api.rst
index d285dbfd..0d8b6cf5 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -15,6 +15,15 @@ Application Object
 
 .. autoclass:: Flask
    :members:
+   :inherited-members:
+
+
+Module Objects
+--------------
+
+.. autoclass:: Module
+   :members:
+   :inherited-members:
 
 Incoming Request Data
 ---------------------
"
67f4b0f31538832f06b9351d15e30c85f449ac7e,c0a9f5d0c4f09dbe8b744609552cbbfa9f14fbc0,flask.py,flask.py,flask.py,Documentation update for the flask module support.,"diff --git a/flask.py b/flask.py
index e07b7923..6d242aa1 100644
--- a/flask.py
+++ b/flask.py
@@ -340,7 +340,49 @@ class _ModuleSetupState(object):
 
 
 class Module(_PackageBoundObject):
-    """"""Container object that enables pluggable applications""""""
+    """"""Container object that enables pluggable applications.  A module can
+    be used to organize larger applications.  They represent blueprints that,
+    in combination with a :class:`Flask` object are used to create a large
+    application.
+
+    A module is like an application bound to an `import_name`.  Multiple
+    modules can share the same import names, but in that case a `name` has
+    to be provided to keep them apart.  If different import names are used,
+    the rightmost part of the import name is used as name.
+
+    Here an example structure for a larger appliation::
+
+        /myapplication
+            /__init__.py
+            /views
+                /__init__.py
+                /admin.py
+                /frontend.py
+
+    The `myapplication/__init__.py` can look like this::
+
+        from flask import Flask
+        from myapplication.views.admin import admin
+        from myapplication.views.frontend import frontend
+
+        app = Flask(__name__)
+        app.register_module(admin, url_prefix='/admin')
+        app.register_module(frontend)
+
+    And here an example view module (`myapplication/views/admin.py`)::
+
+        from flask import Module
+
+        admin = Module(__name__)
+
+        @admin.route('/')
+        def index():
+            pass
+
+        @admin.route('/login')
+        def login():
+            pass
+    """"""
 
     def __init__(self, import_name, name=None, url_prefix=None):
         if name is None:
@@ -353,14 +395,18 @@ class Module(_PackageBoundObject):
         self._register_events = []
 
     def route(self, rule, **options):
-        """"""Like :meth:`flask.Flask.route` but for a module""""""
+        """"""Like :meth:`Flask.route` but for a module.  The endpoint for the
+        :func:`url_for` function is prefixed with the name of the module.
+        """"""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
-        """"""Like :meth:`flask.Flask.add_url_rule` but for a module""""""
+        """"""Like :meth:`Flask.add_url_rule` but for a module.  The endpoint for
+        the :func:`url_for` function is prefixed with the name of the module.
+        """"""
         def register_rule(state):
             the_rule = rule
             if self.url_prefix:
@@ -370,17 +416,39 @@ class Module(_PackageBoundObject):
         self._record(register_rule)
 
     def before_request(self, f):
-        """"""Like :meth:`flask.Flask.before_request` but for a module""""""
+        """"""Like :meth:`Flask.before_request` but for a module.  This function
+        is only executed before each request that is handled by a function of
+        that module.
+        """"""
         self._record(lambda s: s.app.before_request_funcs
             .setdefault(self.name, []).append(f))
         return f
 
+    def before_app_request(self, f):
+        """"""Like :meth:`Flask.before_request`.  Such a function is executed
+        before each request.
+        """"""
+        self._record(lambda s: s.app.before_request_funcs
+            .setdefault(None, []).append(f))
+        return f
+
     def after_request(self, f):
-        """"""Like :meth:`flask.Flask.after_request` but for a module""""""
+        """"""Like :meth:`Flask.after_request` but for a module.  This function
+        is only executed after each request that is handled by a function of
+        that module.
+        """"""
         self._record(lambda s: s.app.after_request_funcs
             .setdefault(self.name, []).append(f))
         return f
 
+    def after_app_request(self, f):
+        """"""Like :meth:`Flask.after_request` but for a module.  Such a function
+        is executed after each request.
+        """"""
+        self._record(lambda s: s.app.after_request_funcs
+            .setdefault(None, []).append(f))
+        return f
+
     def _record(self, func):
         self._register_events.append(func)
 
@@ -594,7 +662,11 @@ class Flask(_PackageBoundObject):
         session.save_cookie(response, self.session_cookie_name)
 
     def register_module(self, module, **options):
-        """"""Registers a module with this application.""""""
+        """"""Registers a module with this application.  The keyword argument
+        of this function are the same as the ones for the constructor of the
+        :class:`Module` class and will override the values of the module if
+        provided.
+        """"""
         options.setdefault('url_prefix', module.url_prefix)
         state = _ModuleSetupState(self, **options)
         for func in module._register_events:
","diff --git a/flask.py b/flask.py
index e07b7923..6d242aa1 100644
--- a/flask.py
+++ b/flask.py
@@ -340,7 +340,49 @@ class _ModuleSetupState(object):
 
 
 class Module(_PackageBoundObject):
-    """"""Container object that enables pluggable applications""""""
+    """"""Container object that enables pluggable applications.  A module can
+    be used to organize larger applications.  They represent blueprints that,
+    in combination with a :class:`Flask` object are used to create a large
+    application.
+
+    A module is like an application bound to an `import_name`.  Multiple
+    modules can share the same import names, but in that case a `name` has
+    to be provided to keep them apart.  If different import names are used,
+    the rightmost part of the import name is used as name.
+
+    Here an example structure for a larger appliation::
+
+        /myapplication
+            /__init__.py
+            /views
+                /__init__.py
+                /admin.py
+                /frontend.py
+
+    The `myapplication/__init__.py` can look like this::
+
+        from flask import Flask
+        from myapplication.views.admin import admin
+        from myapplication.views.frontend import frontend
+
+        app = Flask(__name__)
+        app.register_module(admin, url_prefix='/admin')
+        app.register_module(frontend)
+
+    And here an example view module (`myapplication/views/admin.py`)::
+
+        from flask import Module
+
+        admin = Module(__name__)
+
+        @admin.route('/')
+        def index():
+            pass
+
+        @admin.route('/login')
+        def login():
+            pass
+    """"""
 
     def __init__(self, import_name, name=None, url_prefix=None):
         if name is None:
@@ -353,14 +395,18 @@ class Module(_PackageBoundObject):
         self._register_events = []
 
     def route(self, rule, **options):
-        """"""Like :meth:`flask.Flask.route` but for a module""""""
+        """"""Like :meth:`Flask.route` but for a module.  The endpoint for the
+        :func:`url_for` function is prefixed with the name of the module.
+        """"""
         def decorator(f):
             self.add_url_rule(rule, f.__name__, f, **options)
             return f
         return decorator
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
-        """"""Like :meth:`flask.Flask.add_url_rule` but for a module""""""
+        """"""Like :meth:`Flask.add_url_rule` but for a module.  The endpoint for
+        the :func:`url_for` function is prefixed with the name of the module.
+        """"""
         def register_rule(state):
             the_rule = rule
             if self.url_prefix:
@@ -370,17 +416,39 @@ class Module(_PackageBoundObject):
         self._record(register_rule)
 
     def before_request(self, f):
-        """"""Like :meth:`flask.Flask.before_request` but for a module""""""
+        """"""Like :meth:`Flask.before_request` but for a module.  This function
+        is only executed before each request that is handled by a function of
+        that module.
+        """"""
         self._record(lambda s: s.app.before_request_funcs
             .setdefault(self.name, []).append(f))
         return f
 
+    def before_app_request(self, f):
+        """"""Like :meth:`Flask.before_request`.  Such a function is executed
+        before each request.
+        """"""
+        self._record(lambda s: s.app.before_request_funcs
+            .setdefault(None, []).append(f))
+        return f
+
     def after_request(self, f):
-        """"""Like :meth:`flask.Flask.after_request` but for a module""""""
+        """"""Like :meth:`Flask.after_request` but for a module.  This function
+        is only executed after each request that is handled by a function of
+        that module.
+        """"""
         self._record(lambda s: s.app.after_request_funcs
             .setdefault(self.name, []).append(f))
         return f
 
+    def after_app_request(self, f):
+        """"""Like :meth:`Flask.after_request` but for a module.  Such a function
+        is executed after each request.
+        """"""
+        self._record(lambda s: s.app.after_request_funcs
+            .setdefault(None, []).append(f))
+        return f
+
     def _record(self, func):
         self._register_events.append(func)
 
@@ -594,7 +662,11 @@ class Flask(_PackageBoundObject):
         session.save_cookie(response, self.session_cookie_name)
 
     def register_module(self, module, **options):
-        """"""Registers a module with this application.""""""
+        """"""Registers a module with this application.  The keyword argument
+        of this function are the same as the ones for the constructor of the
+        :class:`Module` class and will override the values of the module if
+        provided.
+        """"""
         options.setdefault('url_prefix', module.url_prefix)
         state = _ModuleSetupState(self, **options)
         for func in module._register_events:
"
a862ead5f22f9d4592c1c85bda285a4ded59b631,ef34638f5d24c07a5582cbb60755fd4dfbec9a79,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Updated docs for external server information.  This fixes #14.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 526d8f7b..6d641d26 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -54,6 +54,24 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
+.. _public-server:
+
+.. admonition:: Externally Visible Server
+
+   If you run the server you will notice that the server is only available
+   from your own computer, not from any other in the network.  This is the
+   default because in debugging mode a user of the application can execute
+   arbitrary Python code on your computer.  If you have `debug` disabled
+   or trust the users on your network, you can make the server publicly
+   available.
+
+   Just change the call of the :meth:`~flask.Flask.run` method to look
+   like this::
+
+       app.run(host='0.0.0.0')
+
+   This tells your operating system to listen on a public IP.
+
 
 Debug Mode
 ----------
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 526d8f7b..6d641d26 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -54,6 +54,24 @@ So what did that code do?
 
 To stop the server, hit control-C.
 
+.. _public-server:
+
+.. admonition:: Externally Visible Server
+
+   If you run the server you will notice that the server is only available
+   from your own computer, not from any other in the network.  This is the
+   default because in debugging mode a user of the application can execute
+   arbitrary Python code on your computer.  If you have `debug` disabled
+   or trust the users on your network, you can make the server publicly
+   available.
+
+   Just change the call of the :meth:`~flask.Flask.run` method to look
+   like this::
+
+       app.run(host='0.0.0.0')
+
+   This tells your operating system to listen on a public IP.
+
 
 Debug Mode
 ----------
"
a862ead5f22f9d4592c1c85bda285a4ded59b631,ef34638f5d24c07a5582cbb60755fd4dfbec9a79,docs/tutorial/setup.rst,docs/tutorial/setup.rst,docs/tutorial/setup.rst,Updated docs for external server information.  This fixes #14.,"diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index 24b76561..1214c22f 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -57,13 +57,8 @@ without problems.  When you head over to the server you will get an 404
 page not found error because we don't have any views yet.  But we will
 focus on that a little later.  First we should get the database working.
 
-.. admonition:: Troubleshooting
+.. admonition:: Externally Visible Server
 
-   If you notice later that the browser cannot connect to the server
-   during development, you might want to try this line instead::
-
-       app.run(host='127.0.0.1')
-
-   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
-   default and not every browser is happy with that.  This forces IPv4
-   usage.
+   Want your server to be publically available?  Check out the
+   :ref:`externally visible server <public-server>` section for more
+   information.
","diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index 24b76561..1214c22f 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -57,13 +57,8 @@ without problems.  When you head over to the server you will get an 404
 page not found error because we don't have any views yet.  But we will
 focus on that a little later.  First we should get the database working.
 
-.. admonition:: Troubleshooting
+.. admonition:: Externally Visible Server
 
-   If you notice later that the browser cannot connect to the server
-   during development, you might want to try this line instead::
-
-       app.run(host='127.0.0.1')
-
-   In a nutshell: Werkzeug starts up as IPv6 on many operating systems by
-   default and not every browser is happy with that.  This forces IPv4
-   usage.
+   Want your server to be publically available?  Check out the
+   :ref:`externally visible server <public-server>` section for more
+   information.
"
5144d3b65a564c148e6ea12969303f58d137449b,0da39c76e3c67293aef2234b43aff8728d9002eb,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,More documentation updates :),"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 4d54e49c..65678a15 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -17,6 +17,9 @@ this::
             login.html
             ...
 
+Simple Packages
+---------------
+
 To convert that into a larger one, just create a new folder
 `yourapplication` inside the existing one and move everything below it.
 Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
@@ -71,6 +74,20 @@ And this is what `views.py` would look like::
     def index():
         return 'Hello World!'
 
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /views.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
 .. admonition:: Circular Imports
 
    Every Python programmer hates them, and yet we just added some:
@@ -84,3 +101,99 @@ And this is what `views.py` would look like::
    There are still some problems with that approach but if you want to use
    decorators there is no way around that.  Check out the
    :ref:`becomingbig` section for some inspiration how to deal with that.
+
+
+.. _working-with-modules:
+
+Working with Modules
+--------------------
+
+For larger applications with more than a dozen views it makes sense to
+split the views into module.  First let's look at the typical struture of
+such an application::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /views
+                __init__.py
+                admin.py
+                frontend.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+The views are stored in the `yourapplication.views` package.  Just make
+sure to place an empty `__init__.py` file in there.  Let's start with the
+`admin.py` file in the view package.
+
+First we have to create a :class:`~flask.Module` object with the name of
+the package.  This works very similar to the :class:`~flask.Flask` object
+you have already worked with, it just does not support all of the method,
+but most of them are the same.
+
+Long story short, here a nice and concise example::
+
+    from flask import Module
+
+    admin = Module(__name__)
+
+    @admin.route('/')
+    def index():
+        pass
+
+    @admin.route('/login')
+    def login():
+        pass
+
+    @admin.route('/logout')
+    def login():
+        pass
+
+Do the same with the `frontend.py` and then make sure to register the
+modules in the application (`__init__.py`) like this::
+
+    from flask import Flask
+    from yourapplication.views.admin import admin
+    from yourapplication.views.frontend import frontend
+
+    app = Flask(__name__)
+    app.register_module(admin)
+    app.register_module(frontend)
+
+So what is different when working with modules?  It mainly affects URL
+generation.  Remember the :func:`~flask.url_for` function?  When not
+working with modules it accepts the name of the function as first
+argument.  This first argument is called the ""endpoint"".  When you are
+working with modules you can use the name of the function like you did
+without, when generating modules from a function or template in the same
+module.  If you want to generate the URL to another module, prefix it with
+the name of the module and a dot.
+
+Confused?  Let's clear that up with some examples.  Imagine you have a
+method in one module (say `admin`) and you want to redirect to a
+different module (say `frontend`).  This would look like this::
+
+    @admin.route('/to_frontend')
+    def to_frontend():
+        return redirect(url_for('frontend.index'))
+
+    @frontend.route('/')
+    def index():
+        return ""I'm the frontend index""
+
+Now let's say we only want to redirect to a different module in the same
+module.  Then we can either use the full qualified endpoint name like we
+did in the example above, or we just use the function name::
+
+    @frontend.route('/to_index')
+    def to_index():
+        return redirect(url_for('index'))
+
+    @frontend.route('/')
+    def index():
+        return ""I'm the index""
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 4d54e49c..65678a15 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -17,6 +17,9 @@ this::
             login.html
             ...
 
+Simple Packages
+---------------
+
 To convert that into a larger one, just create a new folder
 `yourapplication` inside the existing one and move everything below it.
 Then rename `yourapplication.py` to `__init__.py`.  (Make sure to delete
@@ -71,6 +74,20 @@ And this is what `views.py` would look like::
     def index():
         return 'Hello World!'
 
+You should then end up with something like that::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /views.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
 .. admonition:: Circular Imports
 
    Every Python programmer hates them, and yet we just added some:
@@ -84,3 +101,99 @@ And this is what `views.py` would look like::
    There are still some problems with that approach but if you want to use
    decorators there is no way around that.  Check out the
    :ref:`becomingbig` section for some inspiration how to deal with that.
+
+
+.. _working-with-modules:
+
+Working with Modules
+--------------------
+
+For larger applications with more than a dozen views it makes sense to
+split the views into module.  First let's look at the typical struture of
+such an application::
+
+    /yourapplication
+        /yourapplication
+            /__init__.py
+            /views
+                __init__.py
+                admin.py
+                frontend.py
+            /static
+                /style.css
+            /templates
+                layout.html
+                index.html
+                login.html
+                ...
+
+The views are stored in the `yourapplication.views` package.  Just make
+sure to place an empty `__init__.py` file in there.  Let's start with the
+`admin.py` file in the view package.
+
+First we have to create a :class:`~flask.Module` object with the name of
+the package.  This works very similar to the :class:`~flask.Flask` object
+you have already worked with, it just does not support all of the method,
+but most of them are the same.
+
+Long story short, here a nice and concise example::
+
+    from flask import Module
+
+    admin = Module(__name__)
+
+    @admin.route('/')
+    def index():
+        pass
+
+    @admin.route('/login')
+    def login():
+        pass
+
+    @admin.route('/logout')
+    def login():
+        pass
+
+Do the same with the `frontend.py` and then make sure to register the
+modules in the application (`__init__.py`) like this::
+
+    from flask import Flask
+    from yourapplication.views.admin import admin
+    from yourapplication.views.frontend import frontend
+
+    app = Flask(__name__)
+    app.register_module(admin)
+    app.register_module(frontend)
+
+So what is different when working with modules?  It mainly affects URL
+generation.  Remember the :func:`~flask.url_for` function?  When not
+working with modules it accepts the name of the function as first
+argument.  This first argument is called the ""endpoint"".  When you are
+working with modules you can use the name of the function like you did
+without, when generating modules from a function or template in the same
+module.  If you want to generate the URL to another module, prefix it with
+the name of the module and a dot.
+
+Confused?  Let's clear that up with some examples.  Imagine you have a
+method in one module (say `admin`) and you want to redirect to a
+different module (say `frontend`).  This would look like this::
+
+    @admin.route('/to_frontend')
+    def to_frontend():
+        return redirect(url_for('frontend.index'))
+
+    @frontend.route('/')
+    def index():
+        return ""I'm the frontend index""
+
+Now let's say we only want to redirect to a different module in the same
+module.  Then we can either use the full qualified endpoint name like we
+did in the example above, or we just use the function name::
+
+    @frontend.route('/to_index')
+    def to_index():
+        return redirect(url_for('index'))
+
+    @frontend.route('/')
+    def index():
+        return ""I'm the index""
"
5144d3b65a564c148e6ea12969303f58d137449b,0da39c76e3c67293aef2234b43aff8728d9002eb,flask.py,flask.py,flask.py,More documentation updates :),"diff --git a/flask.py b/flask.py
index 1442650c..0993e6a0 100644
--- a/flask.py
+++ b/flask.py
@@ -143,6 +143,19 @@ class _RequestContext(object):
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
+    The endpoint is relative to the active module if modules are in use.
+
+    Here some examples:
+
+    ==================== ======================= =============================
+    Active Module        Target Endpoint         Target Function
+    ==================== ======================= =============================
+    `None`               ``'index'``             `index` of the application
+    `None`               ``'.index'``            `index` of the application
+    ``'admin'``          ``'index'``             `index` of the `admin` module
+    any                  ``'.index'``            `index` of the application
+    any                  ``'admin.index'``       `index` of the `admin` module
+    ==================== ======================= =============================
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
@@ -382,6 +395,9 @@ class Module(_PackageBoundObject):
         @admin.route('/login')
         def login():
             pass
+
+    For a gentle introduction into modules, checkout the
+    :ref:`working-with-modules` section.
     """"""
 
     def __init__(self, import_name, name=None, url_prefix=None):
","diff --git a/flask.py b/flask.py
index 1442650c..0993e6a0 100644
--- a/flask.py
+++ b/flask.py
@@ -143,6 +143,19 @@ class _RequestContext(object):
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
+    The endpoint is relative to the active module if modules are in use.
+
+    Here some examples:
+
+    ==================== ======================= =============================
+    Active Module        Target Endpoint         Target Function
+    ==================== ======================= =============================
+    `None`               ``'index'``             `index` of the application
+    `None`               ``'.index'``            `index` of the application
+    ``'admin'``          ``'index'``             `index` of the `admin` module
+    any                  ``'.index'``            `index` of the application
+    any                  ``'admin.index'``       `index` of the `admin` module
+    ==================== ======================= =============================
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
@@ -382,6 +395,9 @@ class Module(_PackageBoundObject):
         @admin.route('/login')
         def login():
             pass
+
+    For a gentle introduction into modules, checkout the
+    :ref:`working-with-modules` section.
     """"""
 
     def __init__(self, import_name, name=None, url_prefix=None):
"
ef34638f5d24c07a5582cbb60755fd4dfbec9a79,0c54d0a0e5dfec25cd60329e09622d42905d0969,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added pattern for file uploads.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 8122deb7..b0b5fb72 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -16,6 +16,7 @@ end of the request, the database connection is closed again.
    packages
    sqlite3
    sqlalchemy
+   fileuploads
    wtforms
    templateinheritance
    flashing
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 8122deb7..b0b5fb72 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -16,6 +16,7 @@ end of the request, the database connection is closed again.
    packages
    sqlite3
    sqlalchemy
+   fileuploads
    wtforms
    templateinheritance
    flashing
"
c21caa5047f966aa5f6a3d0e5e4611abd44ae861,85d43079d137c3f15e3ed7a9545ba2db92718194,docs/patterns/fileuploads.rst,,docs/patterns/fileuploads.rst,Added missing file (fileupload docs),"diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
new file mode 100644
index 00000000..fd94605d
--- /dev/null
+++ b/docs/patterns/fileuploads.rst
@@ -0,0 +1,158 @@
+Uploading Files
+===============
+
+Ah yes, the good old problem of file uploads.  The basic idea of file
+uploads is actually quite simple.  It basically works like this:
+
+1. A ``<form>`` tag is marked with ``enctype=multipart/form-data``
+   and an ``<input type=file>`` is placed in that form.
+2. The application accesses the file from the :attr:`~flask.request.files`
+   dictionary on the request object.
+3. use the :meth:`~werkzeug.FileStorage.save` method of the file to save
+   the file permanently somewhere on the filesystem.
+
+A Gentle Introduction
+---------------------
+
+Let's start with a very basic application that uploads a file to a
+specific upload folder and displays a file to the user.  Let's look at the
+bootstrapping code for our application::
+
+    import os
+    from flask import Flask, request, redirect, url_for
+    from werkzeug import secure_filename
+
+    UPLOAD_FOLDER = '/path/to/the/uploads'
+    ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])
+
+    app = Flask(__name__)
+    app.add_url_rule('/uploads/<filename>', 'uploaded_file',
+                     build_only=True)
+
+So first we need a couple of imports.  Most should be straightforward, the
+:func:`werkzeug.secure_filename` is explained a little bit later.  The
+`UPLOAD_FOLDER` is where we will store the uploaded files and the
+`ALLOWED_EXTENSIONS` is the set of allowed file extensions.  Then we add a
+URL rule by hand to the application.  Now usually we're not doing that, so
+why here?  The reasons is that we want the webserver (or our development
+server) to serve these files for us and so we only need a rule to generate
+the URL to these files.
+
+Why do we limit the extensions that are allowed?  You probably don't want
+your users to be able to upload everything there if the server is directly
+sending out the data to the client.  That way you can make sure that users
+are not able to upload HTML files that would cause XSS problems.  Also
+make sure to disallow `.php` files if the server executes them, but who
+has PHP installed on his server, right? :)
+
+Next the functions that check if an extension is valid and that uploads
+the file and redirects the user to the URL for the uploaded file::
+
+    def allowed_file(filename):
+        return '.' in filename and \
+               filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
+
+    @app.route('/')
+    def upload_file():
+        if request.method == 'POST':
+            file = request.files['file']
+            if file and allowed_file(file.filename):
+                filename = secure_filename(file.filename)
+                file.save(os.path.join(UPLOAD_FOLDER, filename))
+                return redirect(url_for('uploaded_file',
+                                        filename=filename))
+        return '''
+        <!doctype html>
+        <title>Upload new File</title>
+        <h1>Upload new File</h1>
+        <form action="""" method=post enctype=multipart/form-data>
+          <p><input type=file name=file>
+             <input type=submit value=Upload>
+        </form>
+        '''
+
+So what does that :func:`~werkzeug.secure_filename` function actually do?
+Now the problem is that there is that principle called ""never trust user
+input"".  This is also true for the filename of an uploaded file.  All
+submitted form data can be forged, and filenames can be dangerous.  For
+the moment just remember: always use that function to secure a filename
+before storing it directly on the filesystem.
+
+.. admonition:: Information for the Pros
+
+   So you're interested in what that :func:`~werkzeug.secure_filename`
+   function does and what the problem is if you're not using it?  So just
+   imagine someone would send the following information as `filename` to
+   your application::
+
+      filename = ""../../../../home/username/.bashrc""
+
+   Assuming the number of ``../`` is correct and you would join this with
+   the `UPLOAD_FOLDER` the user might have the ability to modify a file on
+   the server's filesystem he should not modify.  This does require some
+   knowledge about how the application looks like, but trust me, hackers
+   are patient :)
+
+   Now let's look how that function works:
+
+   >>> secure_filename('../../../../home/username/.bashrc')
+   'home_username_.bashrc'
+
+Now if we run that application, you will notice that uploading works, but
+you won't actually see that uploaded file.  Well, you would have to
+configure the server to serve that file for you.  This is not handy for
+development situations or when you are just too lazy to properly set up
+the server.  Would be nice to have the files still be available in that
+situation, and that is really easy to do, just hook in a middleware::
+
+    from werkzeug import SharedDataMiddleware
+    app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {
+        '/uploads':  UPLOAD_FOLDER
+    })
+
+If you now run the application everything should work as expected.
+
+
+Improving Uploads
+-----------------
+
+So how exactly does Flask handle uploads?  Well it will store them in the
+webserver's memory if the files are reasonable small otherwise in a
+temporary location (as returned by :func:`tempfile.gettempdir`).  But how
+do you specify the maximum file size after which an upload is aborted?  By
+default Flask will happily accept file uploads to an unlimited amount of
+memory, but you can limit that by subclassing the request and overriding
+the Werkzeug provided :attr:`~werkzeug.BaseRequest.max_form_memory_size`
+attribute::
+
+    from flask import Flask, Request
+
+    class LimitedRequest(Request):
+        max_form_memory_size = 16 * 1024 * 1024
+
+    app = Flask(__name__)
+    app.request_class = LimitedRequest
+
+The code above will limited the maximum allowed payload to 16 megabytes.
+If a larger file is transmitted, Flask will raise an
+:exc:`~werkzeug.exceptions.RequestEntityTooLarge` exception.
+
+
+Upload Progress Bars
+--------------------
+
+A while ago many developers had the idea to read the incoming file in
+small chunks and store the upload progress in the database to be able to
+poll the progress with JavaScript from the client.  Long story short: the
+client asks the server every 5 seconds how much he has transmitted
+already.  Do you realize the irony?  The client is asking for something he
+should already know.
+
+Now there are better solutions to that work faster and more reliable.  The
+web changed a lot lately and you can use HTML5, Java, Silverlight or Flash
+to get a nicer uploading experience on the client side.  Look at the
+following libraries for some nice examples how to do that:
+
+-   `Plupload <http://www.plupload.com/>`_ - HTML5, Java, Flash
+-   `SWFUpload <http://www.swfupload.org/>`_ - Flash
+-   `JumpLoader <http://jumploader.com/>`_ - Java
","diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
new file mode 100644
index 00000000..fd94605d
--- /dev/null
+++ b/docs/patterns/fileuploads.rst
@@ -0,0 +1,158 @@
+Uploading Files
+===============
+
+Ah yes, the good old problem of file uploads.  The basic idea of file
+uploads is actually quite simple.  It basically works like this:
+
+1. A ``<form>`` tag is marked with ``enctype=multipart/form-data``
+   and an ``<input type=file>`` is placed in that form.
+2. The application accesses the file from the :attr:`~flask.request.files`
+   dictionary on the request object.
+3. use the :meth:`~werkzeug.FileStorage.save` method of the file to save
+   the file permanently somewhere on the filesystem.
+
+A Gentle Introduction
+---------------------
+
+Let's start with a very basic application that uploads a file to a
+specific upload folder and displays a file to the user.  Let's look at the
+bootstrapping code for our application::
+
+    import os
+    from flask import Flask, request, redirect, url_for
+    from werkzeug import secure_filename
+
+    UPLOAD_FOLDER = '/path/to/the/uploads'
+    ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])
+
+    app = Flask(__name__)
+    app.add_url_rule('/uploads/<filename>', 'uploaded_file',
+                     build_only=True)
+
+So first we need a couple of imports.  Most should be straightforward, the
+:func:`werkzeug.secure_filename` is explained a little bit later.  The
+`UPLOAD_FOLDER` is where we will store the uploaded files and the
+`ALLOWED_EXTENSIONS` is the set of allowed file extensions.  Then we add a
+URL rule by hand to the application.  Now usually we're not doing that, so
+why here?  The reasons is that we want the webserver (or our development
+server) to serve these files for us and so we only need a rule to generate
+the URL to these files.
+
+Why do we limit the extensions that are allowed?  You probably don't want
+your users to be able to upload everything there if the server is directly
+sending out the data to the client.  That way you can make sure that users
+are not able to upload HTML files that would cause XSS problems.  Also
+make sure to disallow `.php` files if the server executes them, but who
+has PHP installed on his server, right? :)
+
+Next the functions that check if an extension is valid and that uploads
+the file and redirects the user to the URL for the uploaded file::
+
+    def allowed_file(filename):
+        return '.' in filename and \
+               filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
+
+    @app.route('/')
+    def upload_file():
+        if request.method == 'POST':
+            file = request.files['file']
+            if file and allowed_file(file.filename):
+                filename = secure_filename(file.filename)
+                file.save(os.path.join(UPLOAD_FOLDER, filename))
+                return redirect(url_for('uploaded_file',
+                                        filename=filename))
+        return '''
+        <!doctype html>
+        <title>Upload new File</title>
+        <h1>Upload new File</h1>
+        <form action="""" method=post enctype=multipart/form-data>
+          <p><input type=file name=file>
+             <input type=submit value=Upload>
+        </form>
+        '''
+
+So what does that :func:`~werkzeug.secure_filename` function actually do?
+Now the problem is that there is that principle called ""never trust user
+input"".  This is also true for the filename of an uploaded file.  All
+submitted form data can be forged, and filenames can be dangerous.  For
+the moment just remember: always use that function to secure a filename
+before storing it directly on the filesystem.
+
+.. admonition:: Information for the Pros
+
+   So you're interested in what that :func:`~werkzeug.secure_filename`
+   function does and what the problem is if you're not using it?  So just
+   imagine someone would send the following information as `filename` to
+   your application::
+
+      filename = ""../../../../home/username/.bashrc""
+
+   Assuming the number of ``../`` is correct and you would join this with
+   the `UPLOAD_FOLDER` the user might have the ability to modify a file on
+   the server's filesystem he should not modify.  This does require some
+   knowledge about how the application looks like, but trust me, hackers
+   are patient :)
+
+   Now let's look how that function works:
+
+   >>> secure_filename('../../../../home/username/.bashrc')
+   'home_username_.bashrc'
+
+Now if we run that application, you will notice that uploading works, but
+you won't actually see that uploaded file.  Well, you would have to
+configure the server to serve that file for you.  This is not handy for
+development situations or when you are just too lazy to properly set up
+the server.  Would be nice to have the files still be available in that
+situation, and that is really easy to do, just hook in a middleware::
+
+    from werkzeug import SharedDataMiddleware
+    app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {
+        '/uploads':  UPLOAD_FOLDER
+    })
+
+If you now run the application everything should work as expected.
+
+
+Improving Uploads
+-----------------
+
+So how exactly does Flask handle uploads?  Well it will store them in the
+webserver's memory if the files are reasonable small otherwise in a
+temporary location (as returned by :func:`tempfile.gettempdir`).  But how
+do you specify the maximum file size after which an upload is aborted?  By
+default Flask will happily accept file uploads to an unlimited amount of
+memory, but you can limit that by subclassing the request and overriding
+the Werkzeug provided :attr:`~werkzeug.BaseRequest.max_form_memory_size`
+attribute::
+
+    from flask import Flask, Request
+
+    class LimitedRequest(Request):
+        max_form_memory_size = 16 * 1024 * 1024
+
+    app = Flask(__name__)
+    app.request_class = LimitedRequest
+
+The code above will limited the maximum allowed payload to 16 megabytes.
+If a larger file is transmitted, Flask will raise an
+:exc:`~werkzeug.exceptions.RequestEntityTooLarge` exception.
+
+
+Upload Progress Bars
+--------------------
+
+A while ago many developers had the idea to read the incoming file in
+small chunks and store the upload progress in the database to be able to
+poll the progress with JavaScript from the client.  Long story short: the
+client asks the server every 5 seconds how much he has transmitted
+already.  Do you realize the irony?  The client is asking for something he
+should already know.
+
+Now there are better solutions to that work faster and more reliable.  The
+web changed a lot lately and you can use HTML5, Java, Silverlight or Flash
+to get a nicer uploading experience on the client side.  Look at the
+following libraries for some nice examples how to do that:
+
+-   `Plupload <http://www.plupload.com/>`_ - HTML5, Java, Flash
+-   `SWFUpload <http://www.swfupload.org/>`_ - Flash
+-   `JumpLoader <http://jumploader.com/>`_ - Java
"
0c54d0a0e5dfec25cd60329e09622d42905d0969,58fa088abc0f0e511d934e822f917b796d418bb3,docs/patterns/fileuploads.rst,,docs/patterns/fileuploads.rst,Added missing file (fileupload docs),"diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
new file mode 100644
index 00000000..fd94605d
--- /dev/null
+++ b/docs/patterns/fileuploads.rst
@@ -0,0 +1,158 @@
+Uploading Files
+===============
+
+Ah yes, the good old problem of file uploads.  The basic idea of file
+uploads is actually quite simple.  It basically works like this:
+
+1. A ``<form>`` tag is marked with ``enctype=multipart/form-data``
+   and an ``<input type=file>`` is placed in that form.
+2. The application accesses the file from the :attr:`~flask.request.files`
+   dictionary on the request object.
+3. use the :meth:`~werkzeug.FileStorage.save` method of the file to save
+   the file permanently somewhere on the filesystem.
+
+A Gentle Introduction
+---------------------
+
+Let's start with a very basic application that uploads a file to a
+specific upload folder and displays a file to the user.  Let's look at the
+bootstrapping code for our application::
+
+    import os
+    from flask import Flask, request, redirect, url_for
+    from werkzeug import secure_filename
+
+    UPLOAD_FOLDER = '/path/to/the/uploads'
+    ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])
+
+    app = Flask(__name__)
+    app.add_url_rule('/uploads/<filename>', 'uploaded_file',
+                     build_only=True)
+
+So first we need a couple of imports.  Most should be straightforward, the
+:func:`werkzeug.secure_filename` is explained a little bit later.  The
+`UPLOAD_FOLDER` is where we will store the uploaded files and the
+`ALLOWED_EXTENSIONS` is the set of allowed file extensions.  Then we add a
+URL rule by hand to the application.  Now usually we're not doing that, so
+why here?  The reasons is that we want the webserver (or our development
+server) to serve these files for us and so we only need a rule to generate
+the URL to these files.
+
+Why do we limit the extensions that are allowed?  You probably don't want
+your users to be able to upload everything there if the server is directly
+sending out the data to the client.  That way you can make sure that users
+are not able to upload HTML files that would cause XSS problems.  Also
+make sure to disallow `.php` files if the server executes them, but who
+has PHP installed on his server, right? :)
+
+Next the functions that check if an extension is valid and that uploads
+the file and redirects the user to the URL for the uploaded file::
+
+    def allowed_file(filename):
+        return '.' in filename and \
+               filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
+
+    @app.route('/')
+    def upload_file():
+        if request.method == 'POST':
+            file = request.files['file']
+            if file and allowed_file(file.filename):
+                filename = secure_filename(file.filename)
+                file.save(os.path.join(UPLOAD_FOLDER, filename))
+                return redirect(url_for('uploaded_file',
+                                        filename=filename))
+        return '''
+        <!doctype html>
+        <title>Upload new File</title>
+        <h1>Upload new File</h1>
+        <form action="""" method=post enctype=multipart/form-data>
+          <p><input type=file name=file>
+             <input type=submit value=Upload>
+        </form>
+        '''
+
+So what does that :func:`~werkzeug.secure_filename` function actually do?
+Now the problem is that there is that principle called ""never trust user
+input"".  This is also true for the filename of an uploaded file.  All
+submitted form data can be forged, and filenames can be dangerous.  For
+the moment just remember: always use that function to secure a filename
+before storing it directly on the filesystem.
+
+.. admonition:: Information for the Pros
+
+   So you're interested in what that :func:`~werkzeug.secure_filename`
+   function does and what the problem is if you're not using it?  So just
+   imagine someone would send the following information as `filename` to
+   your application::
+
+      filename = ""../../../../home/username/.bashrc""
+
+   Assuming the number of ``../`` is correct and you would join this with
+   the `UPLOAD_FOLDER` the user might have the ability to modify a file on
+   the server's filesystem he should not modify.  This does require some
+   knowledge about how the application looks like, but trust me, hackers
+   are patient :)
+
+   Now let's look how that function works:
+
+   >>> secure_filename('../../../../home/username/.bashrc')
+   'home_username_.bashrc'
+
+Now if we run that application, you will notice that uploading works, but
+you won't actually see that uploaded file.  Well, you would have to
+configure the server to serve that file for you.  This is not handy for
+development situations or when you are just too lazy to properly set up
+the server.  Would be nice to have the files still be available in that
+situation, and that is really easy to do, just hook in a middleware::
+
+    from werkzeug import SharedDataMiddleware
+    app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {
+        '/uploads':  UPLOAD_FOLDER
+    })
+
+If you now run the application everything should work as expected.
+
+
+Improving Uploads
+-----------------
+
+So how exactly does Flask handle uploads?  Well it will store them in the
+webserver's memory if the files are reasonable small otherwise in a
+temporary location (as returned by :func:`tempfile.gettempdir`).  But how
+do you specify the maximum file size after which an upload is aborted?  By
+default Flask will happily accept file uploads to an unlimited amount of
+memory, but you can limit that by subclassing the request and overriding
+the Werkzeug provided :attr:`~werkzeug.BaseRequest.max_form_memory_size`
+attribute::
+
+    from flask import Flask, Request
+
+    class LimitedRequest(Request):
+        max_form_memory_size = 16 * 1024 * 1024
+
+    app = Flask(__name__)
+    app.request_class = LimitedRequest
+
+The code above will limited the maximum allowed payload to 16 megabytes.
+If a larger file is transmitted, Flask will raise an
+:exc:`~werkzeug.exceptions.RequestEntityTooLarge` exception.
+
+
+Upload Progress Bars
+--------------------
+
+A while ago many developers had the idea to read the incoming file in
+small chunks and store the upload progress in the database to be able to
+poll the progress with JavaScript from the client.  Long story short: the
+client asks the server every 5 seconds how much he has transmitted
+already.  Do you realize the irony?  The client is asking for something he
+should already know.
+
+Now there are better solutions to that work faster and more reliable.  The
+web changed a lot lately and you can use HTML5, Java, Silverlight or Flash
+to get a nicer uploading experience on the client side.  Look at the
+following libraries for some nice examples how to do that:
+
+-   `Plupload <http://www.plupload.com/>`_ - HTML5, Java, Flash
+-   `SWFUpload <http://www.swfupload.org/>`_ - Flash
+-   `JumpLoader <http://jumploader.com/>`_ - Java
","diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
new file mode 100644
index 00000000..fd94605d
--- /dev/null
+++ b/docs/patterns/fileuploads.rst
@@ -0,0 +1,158 @@
+Uploading Files
+===============
+
+Ah yes, the good old problem of file uploads.  The basic idea of file
+uploads is actually quite simple.  It basically works like this:
+
+1. A ``<form>`` tag is marked with ``enctype=multipart/form-data``
+   and an ``<input type=file>`` is placed in that form.
+2. The application accesses the file from the :attr:`~flask.request.files`
+   dictionary on the request object.
+3. use the :meth:`~werkzeug.FileStorage.save` method of the file to save
+   the file permanently somewhere on the filesystem.
+
+A Gentle Introduction
+---------------------
+
+Let's start with a very basic application that uploads a file to a
+specific upload folder and displays a file to the user.  Let's look at the
+bootstrapping code for our application::
+
+    import os
+    from flask import Flask, request, redirect, url_for
+    from werkzeug import secure_filename
+
+    UPLOAD_FOLDER = '/path/to/the/uploads'
+    ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif'])
+
+    app = Flask(__name__)
+    app.add_url_rule('/uploads/<filename>', 'uploaded_file',
+                     build_only=True)
+
+So first we need a couple of imports.  Most should be straightforward, the
+:func:`werkzeug.secure_filename` is explained a little bit later.  The
+`UPLOAD_FOLDER` is where we will store the uploaded files and the
+`ALLOWED_EXTENSIONS` is the set of allowed file extensions.  Then we add a
+URL rule by hand to the application.  Now usually we're not doing that, so
+why here?  The reasons is that we want the webserver (or our development
+server) to serve these files for us and so we only need a rule to generate
+the URL to these files.
+
+Why do we limit the extensions that are allowed?  You probably don't want
+your users to be able to upload everything there if the server is directly
+sending out the data to the client.  That way you can make sure that users
+are not able to upload HTML files that would cause XSS problems.  Also
+make sure to disallow `.php` files if the server executes them, but who
+has PHP installed on his server, right? :)
+
+Next the functions that check if an extension is valid and that uploads
+the file and redirects the user to the URL for the uploaded file::
+
+    def allowed_file(filename):
+        return '.' in filename and \
+               filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
+
+    @app.route('/')
+    def upload_file():
+        if request.method == 'POST':
+            file = request.files['file']
+            if file and allowed_file(file.filename):
+                filename = secure_filename(file.filename)
+                file.save(os.path.join(UPLOAD_FOLDER, filename))
+                return redirect(url_for('uploaded_file',
+                                        filename=filename))
+        return '''
+        <!doctype html>
+        <title>Upload new File</title>
+        <h1>Upload new File</h1>
+        <form action="""" method=post enctype=multipart/form-data>
+          <p><input type=file name=file>
+             <input type=submit value=Upload>
+        </form>
+        '''
+
+So what does that :func:`~werkzeug.secure_filename` function actually do?
+Now the problem is that there is that principle called ""never trust user
+input"".  This is also true for the filename of an uploaded file.  All
+submitted form data can be forged, and filenames can be dangerous.  For
+the moment just remember: always use that function to secure a filename
+before storing it directly on the filesystem.
+
+.. admonition:: Information for the Pros
+
+   So you're interested in what that :func:`~werkzeug.secure_filename`
+   function does and what the problem is if you're not using it?  So just
+   imagine someone would send the following information as `filename` to
+   your application::
+
+      filename = ""../../../../home/username/.bashrc""
+
+   Assuming the number of ``../`` is correct and you would join this with
+   the `UPLOAD_FOLDER` the user might have the ability to modify a file on
+   the server's filesystem he should not modify.  This does require some
+   knowledge about how the application looks like, but trust me, hackers
+   are patient :)
+
+   Now let's look how that function works:
+
+   >>> secure_filename('../../../../home/username/.bashrc')
+   'home_username_.bashrc'
+
+Now if we run that application, you will notice that uploading works, but
+you won't actually see that uploaded file.  Well, you would have to
+configure the server to serve that file for you.  This is not handy for
+development situations or when you are just too lazy to properly set up
+the server.  Would be nice to have the files still be available in that
+situation, and that is really easy to do, just hook in a middleware::
+
+    from werkzeug import SharedDataMiddleware
+    app.wsgi_app = SharedDataMiddleware(app.wsgi_app, {
+        '/uploads':  UPLOAD_FOLDER
+    })
+
+If you now run the application everything should work as expected.
+
+
+Improving Uploads
+-----------------
+
+So how exactly does Flask handle uploads?  Well it will store them in the
+webserver's memory if the files are reasonable small otherwise in a
+temporary location (as returned by :func:`tempfile.gettempdir`).  But how
+do you specify the maximum file size after which an upload is aborted?  By
+default Flask will happily accept file uploads to an unlimited amount of
+memory, but you can limit that by subclassing the request and overriding
+the Werkzeug provided :attr:`~werkzeug.BaseRequest.max_form_memory_size`
+attribute::
+
+    from flask import Flask, Request
+
+    class LimitedRequest(Request):
+        max_form_memory_size = 16 * 1024 * 1024
+
+    app = Flask(__name__)
+    app.request_class = LimitedRequest
+
+The code above will limited the maximum allowed payload to 16 megabytes.
+If a larger file is transmitted, Flask will raise an
+:exc:`~werkzeug.exceptions.RequestEntityTooLarge` exception.
+
+
+Upload Progress Bars
+--------------------
+
+A while ago many developers had the idea to read the incoming file in
+small chunks and store the upload progress in the database to be able to
+poll the progress with JavaScript from the client.  Long story short: the
+client asks the server every 5 seconds how much he has transmitted
+already.  Do you realize the irony?  The client is asking for something he
+should already know.
+
+Now there are better solutions to that work faster and more reliable.  The
+web changed a lot lately and you can use HTML5, Java, Silverlight or Flash
+to get a nicer uploading experience on the client side.  Look at the
+following libraries for some nice examples how to do that:
+
+-   `Plupload <http://www.plupload.com/>`_ - HTML5, Java, Flash
+-   `SWFUpload <http://www.swfupload.org/>`_ - Flash
+-   `JumpLoader <http://jumploader.com/>`_ - Java
"
58fa088abc0f0e511d934e822f917b796d418bb3,a9bb965b6dcd931cefdc7dd05fa4c672b5dff69c,flask.py,flask.py,flask.py,add a decorator to add custom template filter,"diff --git a/flask.py b/flask.py
index 10feaf22..6d557b26 100644
--- a/flask.py
+++ b/flask.py
@@ -12,6 +12,7 @@
 from __future__ import with_statement
 import os
 import sys
+import types
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
@@ -639,6 +640,27 @@ class Flask(object):
             return f
         return decorator
 
+    def template_filter(self, arg=None):
+        """"""A decorator that is used to register custom template filter.
+        You can specify a name for the filter, otherwise the function
+        name will be used. Example::
+
+          @app.template_filter
+          def reverse(s):
+              return s[::-1]
+
+        :param name: the optional name of the filter, otherwise the
+                     function name will be used.
+        """"""
+        if type(arg) is types.FunctionType:
+            self.jinja_env.filters[arg.__name__] = arg
+            return arg
+
+        def decorator(f):
+            self.jinja_env.filters[arg or f.__name__] = f
+            return f
+        return decorator
+
     def before_request(self, f):
         """"""Registers a function to run before each request.""""""
         self.before_request_funcs.append(f)
","diff --git a/flask.py b/flask.py
index 10feaf22..6d557b26 100644
--- a/flask.py
+++ b/flask.py
@@ -12,6 +12,7 @@
 from __future__ import with_statement
 import os
 import sys
+import types
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
@@ -639,6 +640,27 @@ class Flask(object):
             return f
         return decorator
 
+    def template_filter(self, arg=None):
+        """"""A decorator that is used to register custom template filter.
+        You can specify a name for the filter, otherwise the function
+        name will be used. Example::
+
+          @app.template_filter
+          def reverse(s):
+              return s[::-1]
+
+        :param name: the optional name of the filter, otherwise the
+                     function name will be used.
+        """"""
+        if type(arg) is types.FunctionType:
+            self.jinja_env.filters[arg.__name__] = arg
+            return arg
+
+        def decorator(f):
+            self.jinja_env.filters[arg or f.__name__] = f
+            return f
+        return decorator
+
     def before_request(self, f):
         """"""Registers a function to run before each request.""""""
         self.before_request_funcs.append(f)
"
58fa088abc0f0e511d934e822f917b796d418bb3,a9bb965b6dcd931cefdc7dd05fa4c672b5dff69c,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,add a decorator to add custom template filter,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 917f4168..91edb9c2 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -311,6 +311,32 @@ class TemplatingTestCase(unittest.TestCase):
             macro = flask.get_template_attribute('_macro.html', 'hello')
             assert macro('World') == 'Hello World!'
 
+    def test_template_filter_not_called(self):
+        app = flask.Flask(__name__)
+        @app.template_filter
+        def my_reverse(s):
+            return s[::-1]
+        assert 'my_reverse' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['my_reverse'] == my_reverse
+        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
+
+    def test_template_filter_called(self):
+        app = flask.Flask(__name__)
+        @app.template_filter()
+        def my_reverse(s):
+            return s[::-1]
+        assert 'my_reverse' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['my_reverse'] == my_reverse
+        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
+
+    def test_template_filter_with_name(self):
+        app = flask.Flask(__name__)
+        @app.template_filter('strrev')
+        def my_reverse(s):
+            return s[::-1]
+        assert 'strrev' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['strrev'] == my_reverse
+        assert app.jinja_env.filters['strrev']('abcd') == 'dcba'
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 917f4168..91edb9c2 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -311,6 +311,32 @@ class TemplatingTestCase(unittest.TestCase):
             macro = flask.get_template_attribute('_macro.html', 'hello')
             assert macro('World') == 'Hello World!'
 
+    def test_template_filter_not_called(self):
+        app = flask.Flask(__name__)
+        @app.template_filter
+        def my_reverse(s):
+            return s[::-1]
+        assert 'my_reverse' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['my_reverse'] == my_reverse
+        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
+
+    def test_template_filter_called(self):
+        app = flask.Flask(__name__)
+        @app.template_filter()
+        def my_reverse(s):
+            return s[::-1]
+        assert 'my_reverse' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['my_reverse'] == my_reverse
+        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
+
+    def test_template_filter_with_name(self):
+        app = flask.Flask(__name__)
+        @app.template_filter('strrev')
+        def my_reverse(s):
+            return s[::-1]
+        assert 'strrev' in  app.jinja_env.filters.keys()
+        assert app.jinja_env.filters['strrev'] == my_reverse
+        assert app.jinja_env.filters['strrev']('abcd') == 'dcba'
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
"
a9bb965b6dcd931cefdc7dd05fa4c672b5dff69c,5c9ef2c44dce5afc99a0b3b539ebaafe9b8ce3c5,flask.py,flask.py,flask.py,the template_filter now expects the parentheses,"diff --git a/flask.py b/flask.py
index 6d557b26..216f9af8 100644
--- a/flask.py
+++ b/flask.py
@@ -640,24 +640,20 @@ class Flask(object):
             return f
         return decorator
 
-    def template_filter(self, arg=None):
+    def template_filter(self, name=None):
         """"""A decorator that is used to register custom template filter.
         You can specify a name for the filter, otherwise the function
         name will be used. Example::
 
-          @app.template_filter
+          @app.template_filter()
           def reverse(s):
               return s[::-1]
 
         :param name: the optional name of the filter, otherwise the
                      function name will be used.
         """"""
-        if type(arg) is types.FunctionType:
-            self.jinja_env.filters[arg.__name__] = arg
-            return arg
-
         def decorator(f):
-            self.jinja_env.filters[arg or f.__name__] = f
+            self.jinja_env.filters[name or f.__name__] = f
             return f
         return decorator
 
","diff --git a/flask.py b/flask.py
index 6d557b26..216f9af8 100644
--- a/flask.py
+++ b/flask.py
@@ -640,24 +640,20 @@ class Flask(object):
             return f
         return decorator
 
-    def template_filter(self, arg=None):
+    def template_filter(self, name=None):
         """"""A decorator that is used to register custom template filter.
         You can specify a name for the filter, otherwise the function
         name will be used. Example::
 
-          @app.template_filter
+          @app.template_filter()
           def reverse(s):
               return s[::-1]
 
         :param name: the optional name of the filter, otherwise the
                      function name will be used.
         """"""
-        if type(arg) is types.FunctionType:
-            self.jinja_env.filters[arg.__name__] = arg
-            return arg
-
         def decorator(f):
-            self.jinja_env.filters[arg or f.__name__] = f
+            self.jinja_env.filters[name or f.__name__] = f
             return f
         return decorator
 
"
a9bb965b6dcd931cefdc7dd05fa4c672b5dff69c,5c9ef2c44dce5afc99a0b3b539ebaafe9b8ce3c5,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,the template_filter now expects the parentheses,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 91edb9c2..6f5a4d38 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -311,16 +311,7 @@ class TemplatingTestCase(unittest.TestCase):
             macro = flask.get_template_attribute('_macro.html', 'hello')
             assert macro('World') == 'Hello World!'
 
-    def test_template_filter_not_called(self):
-        app = flask.Flask(__name__)
-        @app.template_filter
-        def my_reverse(s):
-            return s[::-1]
-        assert 'my_reverse' in  app.jinja_env.filters.keys()
-        assert app.jinja_env.filters['my_reverse'] == my_reverse
-        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
-
-    def test_template_filter_called(self):
+    def test_template_filter(self):
         app = flask.Flask(__name__)
         @app.template_filter()
         def my_reverse(s):
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 91edb9c2..6f5a4d38 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -311,16 +311,7 @@ class TemplatingTestCase(unittest.TestCase):
             macro = flask.get_template_attribute('_macro.html', 'hello')
             assert macro('World') == 'Hello World!'
 
-    def test_template_filter_not_called(self):
-        app = flask.Flask(__name__)
-        @app.template_filter
-        def my_reverse(s):
-            return s[::-1]
-        assert 'my_reverse' in  app.jinja_env.filters.keys()
-        assert app.jinja_env.filters['my_reverse'] == my_reverse
-        assert app.jinja_env.filters['my_reverse']('abcd') == 'dcba'
-
-    def test_template_filter_called(self):
+    def test_template_filter(self):
         app = flask.Flask(__name__)
         @app.template_filter()
         def my_reverse(s):
"
5c9ef2c44dce5afc99a0b3b539ebaafe9b8ce3c5,4395e9493cc33d49b53889f9f726458f05f1a475,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,add tests for template_filter using a real template,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6f5a4d38..b976015a 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -329,6 +329,29 @@ class TemplatingTestCase(unittest.TestCase):
         assert app.jinja_env.filters['strrev'] == my_reverse
         assert app.jinja_env.filters['strrev']('abcd') == 'dcba'
 
+    def test_template_filter_with_template(self):
+        app = flask.Flask(__name__)
+        @app.template_filter()
+        def super_reverse(s):
+            return s[::-1]
+        @app.route('/')
+        def index():
+            return flask.render_template('template_filter.html', value='abcd')
+        rv = app.test_client().get('/')
+        assert rv.data == 'dcba'
+
+    def test_template_filter_with_name_and_template(self):
+        app = flask.Flask(__name__)
+        @app.template_filter('super_reverse')
+        def my_reverse(s):
+            return s[::-1]
+        @app.route('/')
+        def index():
+            return flask.render_template('template_filter.html', value='abcd')
+        rv = app.test_client().get('/')
+        assert rv.data == 'dcba'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6f5a4d38..b976015a 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -329,6 +329,29 @@ class TemplatingTestCase(unittest.TestCase):
         assert app.jinja_env.filters['strrev'] == my_reverse
         assert app.jinja_env.filters['strrev']('abcd') == 'dcba'
 
+    def test_template_filter_with_template(self):
+        app = flask.Flask(__name__)
+        @app.template_filter()
+        def super_reverse(s):
+            return s[::-1]
+        @app.route('/')
+        def index():
+            return flask.render_template('template_filter.html', value='abcd')
+        rv = app.test_client().get('/')
+        assert rv.data == 'dcba'
+
+    def test_template_filter_with_name_and_template(self):
+        app = flask.Flask(__name__)
+        @app.template_filter('super_reverse')
+        def my_reverse(s):
+            return s[::-1]
+        @app.route('/')
+        def index():
+            return flask.render_template('template_filter.html', value='abcd')
+        rv = app.test_client().get('/')
+        assert rv.data == 'dcba'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
"
5c9ef2c44dce5afc99a0b3b539ebaafe9b8ce3c5,4395e9493cc33d49b53889f9f726458f05f1a475,tests/templates/template_filter.html,,tests/templates/template_filter.html,add tests for template_filter using a real template,"diff --git a/tests/templates/template_filter.html b/tests/templates/template_filter.html
new file mode 100644
index 00000000..af46cd94
--- /dev/null
+++ b/tests/templates/template_filter.html
@@ -0,0 +1 @@
+{{ value|super_reverse }}
\ No newline at end of file
","diff --git a/tests/templates/template_filter.html b/tests/templates/template_filter.html
new file mode 100644
index 00000000..af46cd94
--- /dev/null
+++ b/tests/templates/template_filter.html
@@ -0,0 +1 @@
+{{ value|super_reverse }}
\ No newline at end of file
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/conf.py,docs/conf.py,docs/conf.py,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/conf.py b/docs/conf.py
index 03e27217..f4756ae0 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -172,35 +172,27 @@ htmlhelp_basename = 'Flaskdoc'
 
 # -- Options for LaTeX output --------------------------------------------------
 
-# The paper size ('letter' or 'a4').
-#latex_paper_size = 'letter'
-
-# The font size ('10pt', '11pt' or '12pt').
-#latex_font_size = '10pt'
-
 # Grouping the document tree into LaTeX files. List of tuples
 # (source start file, target name, title, author, documentclass [howto/manual]).
 latex_documents = [
-  ('index', 'Flask.tex', u'Flask Documentation',
+  ('latexindex', 'Flask.tex', u'Flask Documentation',
    u'Armin Ronacher', 'manual'),
 ]
 
-# The name of an image file (relative to this directory) to place at the top of
-# the title page.
-#latex_logo = None
-
-# For ""manual"" documents, if this is true, then toplevel headings are parts,
-# not chapters.
-#latex_use_parts = False
-
-# Additional stuff for the LaTeX preamble.
-#latex_preamble = ''
-
 # Documents to append as an appendix to all manuals.
 #latex_appendices = []
 
 # If false, no module index is generated.
-#latex_use_modindex = True
+latex_use_modindex = False
+
+latex_elements = {
+    'fontpkg':      r'\usepackage{mathpazo}',
+    'papersize':    'a4paper',
+    'pointsize':    '12pt',
+    'preamble':     r'\usepackage{flaskstyle}'
+}
+
+latex_additional_files = ['flaskstyle.sty', 'logo.pdf']
 
 
 # -- Options for Epub output ---------------------------------------------------
","diff --git a/docs/conf.py b/docs/conf.py
index 03e27217..f4756ae0 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -172,35 +172,27 @@ htmlhelp_basename = 'Flaskdoc'
 
 # -- Options for LaTeX output --------------------------------------------------
 
-# The paper size ('letter' or 'a4').
-#latex_paper_size = 'letter'
-
-# The font size ('10pt', '11pt' or '12pt').
-#latex_font_size = '10pt'
-
 # Grouping the document tree into LaTeX files. List of tuples
 # (source start file, target name, title, author, documentclass [howto/manual]).
 latex_documents = [
-  ('index', 'Flask.tex', u'Flask Documentation',
+  ('latexindex', 'Flask.tex', u'Flask Documentation',
    u'Armin Ronacher', 'manual'),
 ]
 
-# The name of an image file (relative to this directory) to place at the top of
-# the title page.
-#latex_logo = None
-
-# For ""manual"" documents, if this is true, then toplevel headings are parts,
-# not chapters.
-#latex_use_parts = False
-
-# Additional stuff for the LaTeX preamble.
-#latex_preamble = ''
-
 # Documents to append as an appendix to all manuals.
 #latex_appendices = []
 
 # If false, no module index is generated.
-#latex_use_modindex = True
+latex_use_modindex = False
+
+latex_elements = {
+    'fontpkg':      r'\usepackage{mathpazo}',
+    'papersize':    'a4paper',
+    'pointsize':    '12pt',
+    'preamble':     r'\usepackage{flaskstyle}'
+}
+
+latex_additional_files = ['flaskstyle.sty', 'logo.pdf']
 
 
 # -- Options for Epub output ---------------------------------------------------
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/contents.rst,,docs/contents.rst,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/contents.rst b/docs/contents.rst
new file mode 100644
index 00000000..72491049
--- /dev/null
+++ b/docs/contents.rst
@@ -0,0 +1,41 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   patterns/index
+   deploying/index
+   becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
","diff --git a/docs/contents.rst b/docs/contents.rst
new file mode 100644
index 00000000..72491049
--- /dev/null
+++ b/docs/contents.rst
@@ -0,0 +1,41 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   patterns/index
+   deploying/index
+   becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/flaskstyle.sty,,docs/flaskstyle.sty,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
new file mode 100644
index 00000000..71d9ccc7
--- /dev/null
+++ b/docs/flaskstyle.sty
@@ -0,0 +1,73 @@
+\pagenumbering{arabic}
+\definecolor{TitleColor}{rgb}{0,0,0}
+\definecolor{InnerLinkColor}{rgb}{0,0,0}
+
+\renewcommand{\maketitle}{%
+  \begin{titlepage}%
+    \let\footnotesize\small
+    \let\footnoterule\relax
+    \ifsphinxpdfoutput
+      \begingroup
+      % This \def is required to deal with multi-line authors; it
+      % changes \\ to ', ' (comma-space), making it pass muster for
+      % generating document info in the PDF file.
+      \def\\{, }
+      \pdfinfo{
+        /Author (\@author)
+        /Title (\@title)
+      }
+      \endgroup
+    \fi
+    \begin{flushright}%
+      %\sphinxlogo%
+      {\center
+        \vspace*{3cm}
+      	\includegraphics{logo.pdf}
+        \vspace{3cm}
+	\par
+        {\rm\Huge \@title \par}%
+        {\em\LARGE \py@release\releaseinfo \par}
+        {\large
+         \@date \par
+         \py@authoraddress \par
+        }}%
+    \end{flushright}%\par
+    \@thanks
+  \end{titlepage}%
+  \cleardoublepage%
+  \setcounter{footnote}{0}%
+  \let\thanks\relax\let\maketitle\relax
+  %\gdef\@thanks{}\gdef\@author{}\gdef\@title{}
+}
+
+\fancypagestyle{normal}{
+  \fancyhf{}
+  \fancyfoot[LE,RO]{{\thepage}}
+  \fancyfoot[LO]{{\nouppercase{\rightmark}}}
+  \fancyfoot[RE]{{\nouppercase{\leftmark}}}
+  \fancyhead[LE,RO]{{ \@title, \py@release}}
+  \renewcommand{\headrulewidth}{0.4pt}
+  \renewcommand{\footrulewidth}{0.4pt}
+}
+
+\fancypagestyle{plain}{
+  \fancyhf{}
+  \fancyfoot[LE,RO]{{\thepage}}
+  \renewcommand{\headrulewidth}{0pt}
+  \renewcommand{\footrulewidth}{0.4pt}
+}
+
+\titleformat{\section}{\Large}%
+            {\py@TitleColor\thesection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\subsection}{\large}%
+            {\py@TitleColor\thesubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\subsubsection}{}%
+            {\py@TitleColor\thesubsubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\paragraph}{\large}%
+            {\py@TitleColor}{0em}{\py@TitleColor}{\py@NormalColor}
+
+\ChNameVar{\raggedleft\normalsize}
+\ChNumVar{\raggedleft \bfseries\Large}
+\ChTitleVar{\raggedleft \rm\Huge}
+
+\usepackage{inconsolata}
","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
new file mode 100644
index 00000000..71d9ccc7
--- /dev/null
+++ b/docs/flaskstyle.sty
@@ -0,0 +1,73 @@
+\pagenumbering{arabic}
+\definecolor{TitleColor}{rgb}{0,0,0}
+\definecolor{InnerLinkColor}{rgb}{0,0,0}
+
+\renewcommand{\maketitle}{%
+  \begin{titlepage}%
+    \let\footnotesize\small
+    \let\footnoterule\relax
+    \ifsphinxpdfoutput
+      \begingroup
+      % This \def is required to deal with multi-line authors; it
+      % changes \\ to ', ' (comma-space), making it pass muster for
+      % generating document info in the PDF file.
+      \def\\{, }
+      \pdfinfo{
+        /Author (\@author)
+        /Title (\@title)
+      }
+      \endgroup
+    \fi
+    \begin{flushright}%
+      %\sphinxlogo%
+      {\center
+        \vspace*{3cm}
+      	\includegraphics{logo.pdf}
+        \vspace{3cm}
+	\par
+        {\rm\Huge \@title \par}%
+        {\em\LARGE \py@release\releaseinfo \par}
+        {\large
+         \@date \par
+         \py@authoraddress \par
+        }}%
+    \end{flushright}%\par
+    \@thanks
+  \end{titlepage}%
+  \cleardoublepage%
+  \setcounter{footnote}{0}%
+  \let\thanks\relax\let\maketitle\relax
+  %\gdef\@thanks{}\gdef\@author{}\gdef\@title{}
+}
+
+\fancypagestyle{normal}{
+  \fancyhf{}
+  \fancyfoot[LE,RO]{{\thepage}}
+  \fancyfoot[LO]{{\nouppercase{\rightmark}}}
+  \fancyfoot[RE]{{\nouppercase{\leftmark}}}
+  \fancyhead[LE,RO]{{ \@title, \py@release}}
+  \renewcommand{\headrulewidth}{0.4pt}
+  \renewcommand{\footrulewidth}{0.4pt}
+}
+
+\fancypagestyle{plain}{
+  \fancyhf{}
+  \fancyfoot[LE,RO]{{\thepage}}
+  \renewcommand{\headrulewidth}{0pt}
+  \renewcommand{\footrulewidth}{0.4pt}
+}
+
+\titleformat{\section}{\Large}%
+            {\py@TitleColor\thesection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\subsection}{\large}%
+            {\py@TitleColor\thesubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\subsubsection}{}%
+            {\py@TitleColor\thesubsubsection}{0.5em}{\py@TitleColor}{\py@NormalColor}
+\titleformat{\paragraph}{\large}%
+            {\py@TitleColor}{0em}{\py@TitleColor}{\py@NormalColor}
+
+\ChNameVar{\raggedleft\normalsize}
+\ChNumVar{\raggedleft \bfseries\Large}
+\ChTitleVar{\raggedleft \rm\Huge}
+
+\usepackage{inconsolata}
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/index.rst,docs/index.rst,docs/index.rst,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/index.rst b/docs/index.rst
index 1f3b6460..e7ab260b 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,44 +25,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   patterns/index
-   deploying/index
-   becomingbig
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
+.. include:: contents.rst
","diff --git a/docs/index.rst b/docs/index.rst
index 1f3b6460..e7ab260b 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,44 +25,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   patterns/index
-   deploying/index
-   becomingbig
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
+.. include:: contents.rst
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/latexindex.rst,,docs/latexindex.rst,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/latexindex.rst b/docs/latexindex.rst
new file mode 100644
index 00000000..be54f2de
--- /dev/null
+++ b/docs/latexindex.rst
@@ -0,0 +1,4 @@
+Flask Documentation
+===================
+
+.. include:: contents.rst
","diff --git a/docs/latexindex.rst b/docs/latexindex.rst
new file mode 100644
index 00000000..be54f2de
--- /dev/null
+++ b/docs/latexindex.rst
@@ -0,0 +1,4 @@
+Flask Documentation
+===================
+
+.. include:: contents.rst
"
4395e9493cc33d49b53889f9f726458f05f1a475,3ac4ec670c881668aaedb2c3937bae5e10984988,docs/logo.pdf,docs/logo.pdf,docs/logo.pdf,Beefed up PDF docs.  They actually look like something now.,"diff --git a/docs/logo.pdf b/docs/logo.pdf
new file mode 100644
index 00000000..49c5060e
Binary files /dev/null and b/docs/logo.pdf differ
","diff --git a/docs/logo.pdf b/docs/logo.pdf
new file mode 100644
index 00000000..49c5060e
Binary files /dev/null and b/docs/logo.pdf differ
"
3ac4ec670c881668aaedb2c3937bae5e10984988,d22428bc8e8c3cf5e6006497cb8164decde31924,Makefile,Makefile,Makefile,Updated Makefile to also upload and build pdf docs.,"diff --git a/Makefile b/Makefile
index c62cf587..c9f0a113 100644
--- a/Makefile
+++ b/Makefile
@@ -11,4 +11,7 @@ clean-pyc:
 	find . -name '*~' -exec rm -f {} +
 
 upload-docs:
-	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	$(MAKE) -C docs dirhtml latex
+	$(MAKE) -C docs/_build/latex all-pdf
+	scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	scp -r docs/_build/latex/Flask.pdf pocoo.org:/var/www/flask.pocoo.org/docs/flask-docs.pdf
","diff --git a/Makefile b/Makefile
index c62cf587..c9f0a113 100644
--- a/Makefile
+++ b/Makefile
@@ -11,4 +11,7 @@ clean-pyc:
 	find . -name '*~' -exec rm -f {} +
 
 upload-docs:
-	$(MAKE) -C docs dirhtml && scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	$(MAKE) -C docs dirhtml latex
+	$(MAKE) -C docs/_build/latex all-pdf
+	scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
+	scp -r docs/_build/latex/Flask.pdf pocoo.org:/var/www/flask.pocoo.org/docs/flask-docs.pdf
"
d22428bc8e8c3cf5e6006497cb8164decde31924,606b006e2391d12fec5313ce606d82463d7aad07,Makefile,Makefile,Makefile,Fixed at least one build warning by renaming files.,"diff --git a/Makefile b/Makefile
index c9f0a113..94ad0077 100644
--- a/Makefile
+++ b/Makefile
@@ -11,7 +11,9 @@ clean-pyc:
 	find . -name '*~' -exec rm -f {} +
 
 upload-docs:
-	$(MAKE) -C docs dirhtml latex
+	$(MAKE) -C docs html dirhtml latex
 	$(MAKE) -C docs/_build/latex all-pdf
+	cd docs/_build/; mv html flask-docs; zip -r flask-docs.zip flask-docs; mv flask-docs html
 	scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
 	scp -r docs/_build/latex/Flask.pdf pocoo.org:/var/www/flask.pocoo.org/docs/flask-docs.pdf
+	scp -r docs/_build/flask-docs.zip pocoo.org:/var/www/flask.pocoo.org/docs/
","diff --git a/Makefile b/Makefile
index c9f0a113..94ad0077 100644
--- a/Makefile
+++ b/Makefile
@@ -11,7 +11,9 @@ clean-pyc:
 	find . -name '*~' -exec rm -f {} +
 
 upload-docs:
-	$(MAKE) -C docs dirhtml latex
+	$(MAKE) -C docs html dirhtml latex
 	$(MAKE) -C docs/_build/latex all-pdf
+	cd docs/_build/; mv html flask-docs; zip -r flask-docs.zip flask-docs; mv flask-docs html
 	scp -r docs/_build/dirhtml/* pocoo.org:/var/www/flask.pocoo.org/docs/
 	scp -r docs/_build/latex/Flask.pdf pocoo.org:/var/www/flask.pocoo.org/docs/flask-docs.pdf
+	scp -r docs/_build/flask-docs.zip pocoo.org:/var/www/flask.pocoo.org/docs/
"
d22428bc8e8c3cf5e6006497cb8164decde31924,606b006e2391d12fec5313ce606d82463d7aad07,docs/contents.rst.inc,docs/contents.rst,docs/contents.rst.inc,Fixed at least one build warning by renaming files.,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
new file mode 100644
index 00000000..72491049
--- /dev/null
+++ b/docs/contents.rst.inc
@@ -0,0 +1,41 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   patterns/index
+   deploying/index
+   becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
new file mode 100644
index 00000000..72491049
--- /dev/null
+++ b/docs/contents.rst.inc
@@ -0,0 +1,41 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   patterns/index
+   deploying/index
+   becomingbig
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
"
d22428bc8e8c3cf5e6006497cb8164decde31924,606b006e2391d12fec5313ce606d82463d7aad07,docs/index.rst,docs/index.rst,docs/index.rst,Fixed at least one build warning by renaming files.,"diff --git a/docs/index.rst b/docs/index.rst
index e7ab260b..2c3159c7 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,4 +25,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-.. include:: contents.rst
+.. include:: contents.rst.inc
","diff --git a/docs/index.rst b/docs/index.rst
index e7ab260b..2c3159c7 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -25,4 +25,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-.. include:: contents.rst
+.. include:: contents.rst.inc
"
d22428bc8e8c3cf5e6006497cb8164decde31924,606b006e2391d12fec5313ce606d82463d7aad07,docs/latexindex.rst,docs/latexindex.rst,docs/latexindex.rst,Fixed at least one build warning by renaming files.,"diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index be54f2de..0b611b45 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -1,4 +1,4 @@
 Flask Documentation
 ===================
 
-.. include:: contents.rst
+.. include:: contents.rst.inc
","diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index be54f2de..0b611b45 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -1,4 +1,4 @@
 Flask Documentation
 ===================
 
-.. include:: contents.rst
+.. include:: contents.rst.inc
"
606b006e2391d12fec5313ce606d82463d7aad07,f419937d2c5f2db16a8157a0a061b92c38876649,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,License after API docs,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 72491049..1e9e7df9 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -17,25 +17,25 @@ web development.
    deploying/index
    becomingbig
 
-Additional Notes
-----------------
+API Reference
+-------------
 
-Design notes, legal information and changelog are here for the interested:
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
 
 .. toctree::
    :maxdepth: 2
 
-   design
-   license
-   changelog
+   api
 
-API Reference
--------------
+Additional Notes
+----------------
 
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
+Design notes, legal information and changelog are here for the interested:
 
 .. toctree::
    :maxdepth: 2
 
-   api
+   design
+   license
+   changelog
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 72491049..1e9e7df9 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -17,6 +17,17 @@ web development.
    deploying/index
    becomingbig
 
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
 Additional Notes
 ----------------
 
@@ -28,14 +39,3 @@ Design notes, legal information and changelog are here for the interested:
    design
    license
    changelog
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
"
f419937d2c5f2db16a8157a0a061b92c38876649,4559e4f0f14272fb4fb31f3bf79bf592a9f781df,docs/patterns/caching.rst,,docs/patterns/caching.rst,Added docs on caching and decorators.,"diff --git a/docs/patterns/caching.rst b/docs/patterns/caching.rst
new file mode 100644
index 00000000..7a811b82
--- /dev/null
+++ b/docs/patterns/caching.rst
@@ -0,0 +1,69 @@
+.. _caching-pattern:
+
+Caching
+=======
+
+When your application runs slow, throw some caches in.  Well, at least
+it's the easiest way to speed up things.  What does a cache do?  Say you
+have a function that takes some time to complete but the results would
+still be good enough if they were 5 minutes old.  So then the idea is that
+you actually put the result of that calculation into a cache for some
+time.
+
+Flask itself does not provide caching for you, but Werkzeug, one of the
+libraries it is based on, has some very basic cache support.  It supports
+multiple cache backends, normally you want to use a memcached server.
+
+Setting up a Cache
+------------------
+
+You create a cache object once and keep it around, similar to how
+:class:`~flask.Flask` objects are created.  If you are using the
+development server you can create a
+:class:`~werkzeug.contrib.cache.SimpleCache` object, that one is a simple
+cache that keeps the item stored in the memory of the Python interpreter::
+
+    from werkzeug.contrib.cache import SimpleCache
+    cache = SimpleCache()
+
+If you want to use memcached, make sure to have one of the memcache modules
+supported (you get them from `PyPI <http://pypi.python.org/>`_) and a
+memcached server running somewhere.  This is how you connect to such an
+memcached server then::
+
+    from werkzeug.contrib.cache import MemcachedCache
+    cache = MemcachedCache(['127.0.0.1:11211'])
+
+If you are using appengine, you can connect to the appengine memcache
+server easily::
+
+    from werkzeug.contrib.cache import GAEMemcachedCache
+    cache = GAEMemcachedCache()
+
+Using a Cache
+-------------
+
+Now how can one use such a cache?  There are two very important
+operations: :meth:`~werkzeug.contrib.cache.BaseCache.get` and 
+:meth:`~werkzeug.contrib.cache.BaseCache.set`.  This is how to use them:
+
+To get an item from the cache call
+:meth:`~werkzeug.contrib.cache.BaseCache.get` with a string as key name.
+If something is in the cache, it is returned.  Otherwise that function
+will return `None`::
+
+    rv = cache.get('my-item')
+
+To add items to the cache, use the :meth:`~werkzeug.contrib.cache.BaseCache.set`
+method instead.  The first argument is the key and the second the value
+that should be set.  Also a timeout can be provided after which the cache
+will automatically remove item.
+
+Here a full example how this looks like normally::
+
+    def get_my_item():
+        rv = cache.get('my-item')
+        if rv is None:
+            rv = calculate_value()
+            cache.set('my-item', rv, timeout=5 * 60)
+        return rv
","diff --git a/docs/patterns/caching.rst b/docs/patterns/caching.rst
new file mode 100644
index 00000000..7a811b82
--- /dev/null
+++ b/docs/patterns/caching.rst
@@ -0,0 +1,69 @@
+.. _caching-pattern:
+
+Caching
+=======
+
+When your application runs slow, throw some caches in.  Well, at least
+it's the easiest way to speed up things.  What does a cache do?  Say you
+have a function that takes some time to complete but the results would
+still be good enough if they were 5 minutes old.  So then the idea is that
+you actually put the result of that calculation into a cache for some
+time.
+
+Flask itself does not provide caching for you, but Werkzeug, one of the
+libraries it is based on, has some very basic cache support.  It supports
+multiple cache backends, normally you want to use a memcached server.
+
+Setting up a Cache
+------------------
+
+You create a cache object once and keep it around, similar to how
+:class:`~flask.Flask` objects are created.  If you are using the
+development server you can create a
+:class:`~werkzeug.contrib.cache.SimpleCache` object, that one is a simple
+cache that keeps the item stored in the memory of the Python interpreter::
+
+    from werkzeug.contrib.cache import SimpleCache
+    cache = SimpleCache()
+
+If you want to use memcached, make sure to have one of the memcache modules
+supported (you get them from `PyPI <http://pypi.python.org/>`_) and a
+memcached server running somewhere.  This is how you connect to such an
+memcached server then::
+
+    from werkzeug.contrib.cache import MemcachedCache
+    cache = MemcachedCache(['127.0.0.1:11211'])
+
+If you are using appengine, you can connect to the appengine memcache
+server easily::
+
+    from werkzeug.contrib.cache import GAEMemcachedCache
+    cache = GAEMemcachedCache()
+
+Using a Cache
+-------------
+
+Now how can one use such a cache?  There are two very important
+operations: :meth:`~werkzeug.contrib.cache.BaseCache.get` and 
+:meth:`~werkzeug.contrib.cache.BaseCache.set`.  This is how to use them:
+
+To get an item from the cache call
+:meth:`~werkzeug.contrib.cache.BaseCache.get` with a string as key name.
+If something is in the cache, it is returned.  Otherwise that function
+will return `None`::
+
+    rv = cache.get('my-item')
+
+To add items to the cache, use the :meth:`~werkzeug.contrib.cache.BaseCache.set`
+method instead.  The first argument is the key and the second the value
+that should be set.  Also a timeout can be provided after which the cache
+will automatically remove item.
+
+Here a full example how this looks like normally::
+
+    def get_my_item():
+        rv = cache.get('my-item')
+        if rv is None:
+            rv = calculate_value()
+            cache.set('my-item', rv, timeout=5 * 60)
+        return rv
"
f419937d2c5f2db16a8157a0a061b92c38876649,4559e4f0f14272fb4fb31f3bf79bf592a9f781df,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added docs on caching and decorators.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index b0b5fb72..513647c9 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,8 @@ end of the request, the database connection is closed again.
    sqlite3
    sqlalchemy
    fileuploads
+   caching
+   viewdecorators
    wtforms
    templateinheritance
    flashing
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index b0b5fb72..513647c9 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,8 @@ end of the request, the database connection is closed again.
    sqlite3
    sqlalchemy
    fileuploads
+   caching
+   viewdecorators
    wtforms
    templateinheritance
    flashing
"
f419937d2c5f2db16a8157a0a061b92c38876649,4559e4f0f14272fb4fb31f3bf79bf592a9f781df,docs/patterns/viewdecorators.rst,,docs/patterns/viewdecorators.rst,Added docs on caching and decorators.,"diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
new file mode 100644
index 00000000..22da533c
--- /dev/null
+++ b/docs/patterns/viewdecorators.rst
@@ -0,0 +1,93 @@
+View Decorators
+===============
+
+Python has a really interesting feature called function decorators.  This
+allow some really neat things for web applications.  Because each view in
+Flask is a function decorators can be used to inject additional
+functionality to one or more functions.  The :meth:`~flask.Flask.route`
+decorator is the one you probably used already.  But there are use cases
+for implementing your own decorator.  For instance, imagine you have a
+view that should only be used by people that are logged in to.  If a user
+goes to the site and is not logged in, he should be redirected to the
+login page.  This is a good example of a use case where a decorator is an
+excellent solution.
+
+Login Required Decorator
+------------------------
+
+So let's implement such a decorator.  A decorator is a function that
+returns a function.  Pretty simple actually.  The only thing you have to
+keep in mind when implementing something like this is to update the
+`__name__`, `__module__` and some other attributes of a function.  This is
+often forgotten, but you don't have to do that by hand, there is a
+function for that that is used like a decorator (:func:`functools.wraps`).
+
+This example assumes that the login page is called ``'login'`` and that
+the current user is stored as `g.user` and `None` if there is no-one
+logged in::
+
+    from functools import wraps
+    from flask import g, request, redirect, url_for
+
+    def login_required(f):
+        @wraps(f)
+        def decorated_function(*args, **kwargs):
+            if g.user is None:
+                return redirect(url_for('login', next=request.url))
+            return f(*args, **kwargs)
+        return decorated_function
+
+So how would you use that decorator now?  Apply it as innermost decorator
+to a view function.  When applying further decorators, always remember
+that the :meth:`~flask.Flask.route` decorator is the outermost::
+
+    @app.route('/secret_page')
+    @login_required
+    def secret_page():
+        pass
+
+Caching Decorator
+-----------------
+
+Imagine you have a view function that does an expensive calculation and
+because of that you would like to cache the generated results for a
+certain amount of time.  A decorator would be nice for that.  We're
+assuming you have set up a cache like mentioned in :ref:`caching-pattern`.
+
+Here an example cache function.  It generates the cache key from a
+specific prefix (actually a format string) and the current path of the
+request.  Notice that we are using a function that first creates the
+decorator that then decorates the function.  Sounds awful? Unfortunately
+it is a little bit more complex, but the code should still be
+straightforward to read.
+
+The decorated function will then work as follows
+
+1. get the unique cache key for the current request base on the current
+   path.
+2. get the value for that key from the cache. If the cache returned
+   something we will return that value.
+3. otherwise the original function is called and the return value is
+   stored in the cache for the timeout provided (by default 5 minutes).
+
+Here the code::
+
+    from functools import wraps
+    from flask import request
+
+    def cached(timeout=5 * 60, key='view/%s'):
+        def decorator(f):
+            @wraps(f)
+            def decorated_function(*args, **kwargs):
+                cache_key = key % request.path
+                rv = cache.get(cache_key)
+                if rv is not None:
+                    return rv
+                rv = f(*args, **kwargs)
+                cache.set(cache_key, rv, timeout=timeout)
+                return rv
+            return decorated_function
+        return decorator
+
+Notice that this assumes an instanciated `cache` object is available, see
+:ref:`caching-pattern` for more information.
","diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
new file mode 100644
index 00000000..22da533c
--- /dev/null
+++ b/docs/patterns/viewdecorators.rst
@@ -0,0 +1,93 @@
+View Decorators
+===============
+
+Python has a really interesting feature called function decorators.  This
+allow some really neat things for web applications.  Because each view in
+Flask is a function decorators can be used to inject additional
+functionality to one or more functions.  The :meth:`~flask.Flask.route`
+decorator is the one you probably used already.  But there are use cases
+for implementing your own decorator.  For instance, imagine you have a
+view that should only be used by people that are logged in to.  If a user
+goes to the site and is not logged in, he should be redirected to the
+login page.  This is a good example of a use case where a decorator is an
+excellent solution.
+
+Login Required Decorator
+------------------------
+
+So let's implement such a decorator.  A decorator is a function that
+returns a function.  Pretty simple actually.  The only thing you have to
+keep in mind when implementing something like this is to update the
+`__name__`, `__module__` and some other attributes of a function.  This is
+often forgotten, but you don't have to do that by hand, there is a
+function for that that is used like a decorator (:func:`functools.wraps`).
+
+This example assumes that the login page is called ``'login'`` and that
+the current user is stored as `g.user` and `None` if there is no-one
+logged in::
+
+    from functools import wraps
+    from flask import g, request, redirect, url_for
+
+    def login_required(f):
+        @wraps(f)
+        def decorated_function(*args, **kwargs):
+            if g.user is None:
+                return redirect(url_for('login', next=request.url))
+            return f(*args, **kwargs)
+        return decorated_function
+
+So how would you use that decorator now?  Apply it as innermost decorator
+to a view function.  When applying further decorators, always remember
+that the :meth:`~flask.Flask.route` decorator is the outermost::
+
+    @app.route('/secret_page')
+    @login_required
+    def secret_page():
+        pass
+
+Caching Decorator
+-----------------
+
+Imagine you have a view function that does an expensive calculation and
+because of that you would like to cache the generated results for a
+certain amount of time.  A decorator would be nice for that.  We're
+assuming you have set up a cache like mentioned in :ref:`caching-pattern`.
+
+Here an example cache function.  It generates the cache key from a
+specific prefix (actually a format string) and the current path of the
+request.  Notice that we are using a function that first creates the
+decorator that then decorates the function.  Sounds awful? Unfortunately
+it is a little bit more complex, but the code should still be
+straightforward to read.
+
+The decorated function will then work as follows
+
+1. get the unique cache key for the current request base on the current
+   path.
+2. get the value for that key from the cache. If the cache returned
+   something we will return that value.
+3. otherwise the original function is called and the return value is
+   stored in the cache for the timeout provided (by default 5 minutes).
+
+Here the code::
+
+    from functools import wraps
+    from flask import request
+
+    def cached(timeout=5 * 60, key='view/%s'):
+        def decorator(f):
+            @wraps(f)
+            def decorated_function(*args, **kwargs):
+                cache_key = key % request.path
+                rv = cache.get(cache_key)
+                if rv is not None:
+                    return rv
+                rv = f(*args, **kwargs)
+                cache.set(cache_key, rv, timeout=timeout)
+                return rv
+            return decorated_function
+        return decorator
+
+Notice that this assumes an instanciated `cache` object is available, see
+:ref:`caching-pattern` for more information.
"
4559e4f0f14272fb4fb31f3bf79bf592a9f781df,2ba88eefb54f76fc974181babac07ffc7c1f7e73,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,docs/patterns/wtforms.rst,Fixed simple typo,"diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index bbceee8a..d62c5bd3 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -42,7 +42,7 @@ In the view function, the usage of this form looks like this::
                         form.password.data)
             db_session.add(user)
             flash('Thanks for registering')
-            redirect(url_for('login'))
+            return redirect(url_for('login'))
         return render_template('register.html', form=form)
 
 Notice that we are implying that the view is using SQLAlchemy here
","diff --git a/docs/patterns/wtforms.rst b/docs/patterns/wtforms.rst
index bbceee8a..d62c5bd3 100644
--- a/docs/patterns/wtforms.rst
+++ b/docs/patterns/wtforms.rst
@@ -42,7 +42,7 @@ In the view function, the usage of this form looks like this::
                         form.password.data)
             db_session.add(user)
             flash('Thanks for registering')
-            redirect(url_for('login'))
+            return redirect(url_for('login'))
         return render_template('register.html', form=form)
 
 Notice that we are implying that the view is using SQLAlchemy here
"
2ba88eefb54f76fc974181babac07ffc7c1f7e73,36717b02731ad7d86ba8effbe27e70405e48cd9b,Makefile,Makefile,Makefile,Added support for long running sessions.  This closes #16.,"diff --git a/Makefile b/Makefile
index 94ad0077..62d763d2 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-.PHONY: clean-pyc test
+.PHONY: clean-pyc test upload-docs
 
 all: clean-pyc test
 
","diff --git a/Makefile b/Makefile
index 94ad0077..62d763d2 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-.PHONY: clean-pyc test
+.PHONY: clean-pyc test upload-docs
 
 all: clean-pyc test
 
"
2ba88eefb54f76fc974181babac07ffc7c1f7e73,36717b02731ad7d86ba8effbe27e70405e48cd9b,docs/api.rst,docs/api.rst,docs/api.rst,Added support for long running sessions.  This closes #16.,"diff --git a/docs/api.rst b/docs/api.rst
index d285dbfd..3961dc99 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -174,6 +174,13 @@ To access the current session you can use the :class:`session` object:
           # so mark it as modified yourself
           session.modified = True
 
+    .. attribute:: permanent
+
+       If set to `True` the session life for
+       :attr:`~flask.Flask.permanent_session_lifetime` seconds.  The
+       default is 31 days.  If set to `False` (which is the default) the
+       session will be deleted when the user closes the browser.
+
 
 Application Globals
 -------------------
","diff --git a/docs/api.rst b/docs/api.rst
index d285dbfd..3961dc99 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -174,6 +174,13 @@ To access the current session you can use the :class:`session` object:
           # so mark it as modified yourself
           session.modified = True
 
+    .. attribute:: permanent
+
+       If set to `True` the session life for
+       :attr:`~flask.Flask.permanent_session_lifetime` seconds.  The
+       default is 31 days.  If set to `False` (which is the default) the
+       session will be deleted when the user closes the browser.
+
 
 Application Globals
 -------------------
"
2ba88eefb54f76fc974181babac07ffc7c1f7e73,36717b02731ad7d86ba8effbe27e70405e48cd9b,flask.py,flask.py,flask.py,Added support for long running sessions.  This closes #16.,"diff --git a/flask.py b/flask.py
index 216f9af8..32b690ca 100644
--- a/flask.py
+++ b/flask.py
@@ -13,6 +13,7 @@ from __future__ import with_statement
 import os
 import sys
 import types
+from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
@@ -86,7 +87,20 @@ class _RequestGlobals(object):
     pass
 
 
-class _NullSession(SecureCookie):
+class Session(SecureCookie):
+    """"""Expands the session for support for switching between permanent
+    and non-permanent sessions.
+    """"""
+
+    def _get_permanent(self):
+        return self.get('_permanent', False)
+    def _set_permanent(self, value):
+        self['_permanent'] = bool(value)
+    permanent = property(_get_permanent, _set_permanent)
+    del _get_permanent, _set_permanent
+
+
+class _NullSession(Session):
     """"""Class used to generate nicer error messages if sessions are not
     available.  Will still allow read-only access to the empty session
     but fail on setting.
@@ -317,6 +331,11 @@ class Flask(object):
     #: The secure cookie uses this for the name of the session cookie
     session_cookie_name = 'session'
 
+    #: A :class:`~datetime.timedelta` which is used to set the expiration
+    #: date of a permanent session.  The default is 31 days which makes a
+    #: permanent session survive for roughly one month.
+    permanent_session_lifetime = timedelta(days=31)
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
@@ -493,7 +512,7 @@ class Flask(object):
         """"""
         key = self.secret_key
         if key is not None:
-            return SecureCookie.load_cookie(request, self.session_cookie_name,
+            return Session.load_cookie(request, self.session_cookie_name,
                                        secret_key=key)
 
     def save_session(self, session, response):
@@ -505,7 +524,11 @@ class Flask(object):
                         object)
         :param response: an instance of :attr:`response_class`
         """"""
-        session.save_cookie(response, self.session_cookie_name)
+        expires = None
+        if session.permanent:
+            expires = datetime.utcnow() + self.permanent_session_lifetime
+        session.save_cookie(response, self.session_cookie_name,
+                            expires=expires, httponly=True)
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
","diff --git a/flask.py b/flask.py
index 216f9af8..32b690ca 100644
--- a/flask.py
+++ b/flask.py
@@ -13,6 +13,7 @@ from __future__ import with_statement
 import os
 import sys
 import types
+from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
@@ -86,7 +87,20 @@ class _RequestGlobals(object):
     pass
 
 
-class _NullSession(SecureCookie):
+class Session(SecureCookie):
+    """"""Expands the session for support for switching between permanent
+    and non-permanent sessions.
+    """"""
+
+    def _get_permanent(self):
+        return self.get('_permanent', False)
+    def _set_permanent(self, value):
+        self['_permanent'] = bool(value)
+    permanent = property(_get_permanent, _set_permanent)
+    del _get_permanent, _set_permanent
+
+
+class _NullSession(Session):
     """"""Class used to generate nicer error messages if sessions are not
     available.  Will still allow read-only access to the empty session
     but fail on setting.
@@ -317,6 +331,11 @@ class Flask(object):
     #: The secure cookie uses this for the name of the session cookie
     session_cookie_name = 'session'
 
+    #: A :class:`~datetime.timedelta` which is used to set the expiration
+    #: date of a permanent session.  The default is 31 days which makes a
+    #: permanent session survive for roughly one month.
+    permanent_session_lifetime = timedelta(days=31)
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
@@ -493,7 +512,7 @@ class Flask(object):
         """"""
         key = self.secret_key
         if key is not None:
-            return SecureCookie.load_cookie(request, self.session_cookie_name,
+            return Session.load_cookie(request, self.session_cookie_name,
                                        secret_key=key)
 
     def save_session(self, session, response):
@@ -505,7 +524,11 @@ class Flask(object):
                         object)
         :param response: an instance of :attr:`response_class`
         """"""
-        session.save_cookie(response, self.session_cookie_name)
+        expires = None
+        if session.permanent:
+            expires = datetime.utcnow() + self.permanent_session_lifetime
+        session.save_cookie(response, self.session_cookie_name,
+                            expires=expires, httponly=True)
 
     def add_url_rule(self, rule, endpoint, view_func=None, **options):
         """"""Connects a URL rule.  Works exactly like the :meth:`route`
"
2ba88eefb54f76fc974181babac07ffc7c1f7e73,36717b02731ad7d86ba8effbe27e70405e48cd9b,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added support for long running sessions.  This closes #16.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b976015a..1759f8b9 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -11,11 +11,14 @@
 """"""
 from __future__ import with_statement
 import os
+import re
 import sys
 import flask
 import unittest
 import tempfile
 import warnings
+from datetime import datetime
+from werkzeug import parse_date
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -118,6 +121,30 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_session_expiration(self):
+        permanent = True
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/')
+        def index():
+            flask.session['test'] = 42
+            flask.session.permanent = permanent
+            return ''
+        rv = app.test_client().get('/')
+        assert 'set-cookie' in rv.headers
+        match = re.search(r'\bexpires=([^;]+)', rv.headers['set-cookie'])
+        expires = parse_date(match.group())
+        expected = datetime.utcnow() + app.permanent_session_lifetime
+        assert expires.year == expected.year
+        assert expires.month == expected.month
+        assert expires.day == expected.day
+
+        permanent = False
+        rv = app.test_client().get('/')
+        assert 'set-cookie' in rv.headers
+        match = re.search(r'\bexpires=([^;]+)', rv.headers['set-cookie'])
+        assert match is None
+
     def test_flashes(self):
         app = flask.Flask(__name__)
         app.secret_key = 'testkey'
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b976015a..1759f8b9 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -11,11 +11,14 @@
 """"""
 from __future__ import with_statement
 import os
+import re
 import sys
 import flask
 import unittest
 import tempfile
 import warnings
+from datetime import datetime
+from werkzeug import parse_date
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -118,6 +121,30 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             expect_exception(flask.session.__setitem__, 'foo', 42)
             expect_exception(flask.session.pop, 'foo')
 
+    def test_session_expiration(self):
+        permanent = True
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+        @app.route('/')
+        def index():
+            flask.session['test'] = 42
+            flask.session.permanent = permanent
+            return ''
+        rv = app.test_client().get('/')
+        assert 'set-cookie' in rv.headers
+        match = re.search(r'\bexpires=([^;]+)', rv.headers['set-cookie'])
+        expires = parse_date(match.group())
+        expected = datetime.utcnow() + app.permanent_session_lifetime
+        assert expires.year == expected.year
+        assert expires.month == expected.month
+        assert expires.day == expected.day
+
+        permanent = False
+        rv = app.test_client().get('/')
+        assert 'set-cookie' in rv.headers
+        match = re.search(r'\bexpires=([^;]+)', rv.headers['set-cookie'])
+        assert match is None
+
     def test_flashes(self):
         app = flask.Flask(__name__)
         app.secret_key = 'testkey'
"
36717b02731ad7d86ba8effbe27e70405e48cd9b,31493850de3d7765d09419aa49b98089f79da3c2,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Fixed typo in flask quickstart docs. This fixes #21,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 6d641d26..4be9a63f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -452,7 +452,7 @@ transmitted in a `POST` or `PUT` request) you can use the
 :attr:`~flask.request.form` attribute.  Here a full example of the two
 attributes mentioned above::
 
-    @app.route('/login', method=['POST', 'GET'])
+    @app.route('/login', methods=['POST', 'GET'])
     def login():
         error = None
         if request.method == 'POST':
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 6d641d26..4be9a63f 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -452,7 +452,7 @@ transmitted in a `POST` or `PUT` request) you can use the
 :attr:`~flask.request.form` attribute.  Here a full example of the two
 attributes mentioned above::
 
-    @app.route('/login', method=['POST', 'GET'])
+    @app.route('/login', methods=['POST', 'GET'])
     def login():
         error = None
         if request.method == 'POST':
"
31493850de3d7765d09419aa49b98089f79da3c2,f1603d33f266ab24eda604f76632fa604b91e3f9,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Docs mention query args now.  This fixes #20,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 4be9a63f..59e36bcc 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -160,6 +160,8 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+.. _url-building:
+
 URL Building
 ````````````
 
@@ -167,7 +169,8 @@ If it can match URLs, can it also generate them?  Of course you can.  To
 build a URL to a specific function you can use the :func:`~flask.url_for`
 function.  It accepts the name of the function as first argument and a
 number of keyword arguments, each corresponding to the variable part of
-the URL rule.  Here some examples:
+the URL rule.  Unknown variable parts are appended to the URL as query
+parameter.  Here some examples:
 
 >>> from flask import Flask, url_for
 >>> app = Flask(__name__)
@@ -184,9 +187,11 @@ the URL rule.  Here some examples:
 ...  print url_for('index')
 ...  print url_for('login')
 ...  print url_for('profile', username='John Doe')
+...  print url_for('login', next='/')
 ... 
 /
 /login
+/login?next=/
 /user/John%20Doe
 
 (This also uses the :meth:`~flask.Flask.test_request_context` method
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 4be9a63f..59e36bcc 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -160,6 +160,8 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+.. _url-building:
+
 URL Building
 ````````````
 
@@ -167,7 +169,8 @@ If it can match URLs, can it also generate them?  Of course you can.  To
 build a URL to a specific function you can use the :func:`~flask.url_for`
 function.  It accepts the name of the function as first argument and a
 number of keyword arguments, each corresponding to the variable part of
-the URL rule.  Here some examples:
+the URL rule.  Unknown variable parts are appended to the URL as query
+parameter.  Here some examples:
 
 >>> from flask import Flask, url_for
 >>> app = Flask(__name__)
@@ -184,9 +187,11 @@ the URL rule.  Here some examples:
 ...  print url_for('index')
 ...  print url_for('login')
 ...  print url_for('profile', username='John Doe')
+...  print url_for('login', next='/')
 ... 
 /
 /login
+/login?next=/
 /user/John%20Doe
 
 (This also uses the :meth:`~flask.Flask.test_request_context` method
"
31493850de3d7765d09419aa49b98089f79da3c2,f1603d33f266ab24eda604f76632fa604b91e3f9,flask.py,flask.py,flask.py,Docs mention query args now.  This fixes #20,"diff --git a/flask.py b/flask.py
index 32b690ca..c1c3fdb7 100644
--- a/flask.py
+++ b/flask.py
@@ -145,6 +145,10 @@ class _RequestContext(object):
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
+    Variable arguments that are unknown to the target endpoint are appended
+    to the generated URL as query arguments.
+
+    For more information, head over to the :ref:`Quickstart <url-building>`.
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
","diff --git a/flask.py b/flask.py
index 32b690ca..c1c3fdb7 100644
--- a/flask.py
+++ b/flask.py
@@ -145,6 +145,10 @@ class _RequestContext(object):
 
 def url_for(endpoint, **values):
     """"""Generates a URL to the given endpoint with the method provided.
+    Variable arguments that are unknown to the target endpoint are appended
+    to the generated URL as query arguments.
+
+    For more information, head over to the :ref:`Quickstart <url-building>`.
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
"
f1603d33f266ab24eda604f76632fa604b91e3f9,a9284afde97c30d136e8ec675794c7cdcf4ca277,docs/tutorial/testing.rst,docs/tutorial/testing.rst,docs/tutorial/testing.rst,Fixed typo in tutorial.  This fixes #19,"diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index 3d1aa806..c3075e3a 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -2,8 +2,7 @@ Bonus: Testing the Application
 ===============================
 
 Now that you have finished the application and everything works as
-expected, it's probably not the best idea to add automated tests to
-simplify modifications in the future.  The application above is used as a
-basic example of how to perform unittesting in the :ref:`testing` section
-of the documentation.  Go there to see how easy it is to test Flask
-applications.
+expected, it's probably not a good idea to add automated tests to simplify
+modifications in the future.  The application above is used as a basic
+example of how to perform unittesting in the :ref:`testing` section of the
+documentation.  Go there to see how easy it is to test Flask applications.
","diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index 3d1aa806..c3075e3a 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -2,8 +2,7 @@ Bonus: Testing the Application
 ===============================
 
 Now that you have finished the application and everything works as
-expected, it's probably not the best idea to add automated tests to
-simplify modifications in the future.  The application above is used as a
-basic example of how to perform unittesting in the :ref:`testing` section
-of the documentation.  Go there to see how easy it is to test Flask
-applications.
+expected, it's probably not a good idea to add automated tests to simplify
+modifications in the future.  The application above is used as a basic
+example of how to perform unittesting in the :ref:`testing` section of the
+documentation.  Go there to see how easy it is to test Flask applications.
"
a9284afde97c30d136e8ec675794c7cdcf4ca277,8d49440d8b881b2df2c10085a58d3a4e4085147e,docs/testing.rst,docs/testing.rst,docs/testing.rst,Added example for context bound objects to the testing docs.  This fixes #18,"diff --git a/docs/testing.rst b/docs/testing.rst
index 0901792b..be72e746 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -195,3 +195,22 @@ suite.
 
 .. _MiniTwit Example:
    http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
+
+
+Other Testing Tricks
+--------------------
+
+Besides using the test client we used above there is also the
+:meth:`~flask.Flask.test_request_context` method that in combination with
+the `with` statement can be used to activate a request context
+temporarily.  With that you can access the :class:`~flask.request`,
+:class:`~flask.g` and :class:`~flask.session` objects like in view
+functions.  Here a full example that showcases this::
+
+    app = flask.Flask(__name__)
+
+    with app.test_request_context('/?name=Peter'):
+        assert flask.request.path == '/'
+        assert flask.request.args['name'] == 'Peter'
+
+All the other objects that are context bound can be used the same.
","diff --git a/docs/testing.rst b/docs/testing.rst
index 0901792b..be72e746 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -195,3 +195,22 @@ suite.
 
 .. _MiniTwit Example:
    http://github.com/mitsuhiko/flask/tree/master/examples/minitwit/
+
+
+Other Testing Tricks
+--------------------
+
+Besides using the test client we used above there is also the
+:meth:`~flask.Flask.test_request_context` method that in combination with
+the `with` statement can be used to activate a request context
+temporarily.  With that you can access the :class:`~flask.request`,
+:class:`~flask.g` and :class:`~flask.session` objects like in view
+functions.  Here a full example that showcases this::
+
+    app = flask.Flask(__name__)
+
+    with app.test_request_context('/?name=Peter'):
+        assert flask.request.path == '/'
+        assert flask.request.args['name'] == 'Peter'
+
+All the other objects that are context bound can be used the same.
"
8d49440d8b881b2df2c10085a58d3a4e4085147e,a7266ffb90d109f94da96e9eea5f5bb4ff8ddc71,docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,Added @templated decorator to the patterns.,"diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
index 22da533c..f777a294 100644
--- a/docs/patterns/viewdecorators.rst
+++ b/docs/patterns/viewdecorators.rst
@@ -91,3 +91,52 @@ Here the code::
 
 Notice that this assumes an instanciated `cache` object is available, see
 :ref:`caching-pattern` for more information.
+
+
+Templating Decorator
+--------------------
+
+A common pattern invented by the TurboGears guys a while back is a
+templating decorator.  The idea of that decorator is that you return a
+dictionary with the values passed to the template from the view function
+and the template is automatically rendered.  With that, the following
+three examples do exactly the same::
+
+    @app.route('/')
+    def index():
+        return render_template('index.html', value=42)
+
+    @app.route('/')
+    @templated('index.html')
+    def index():
+        return dict(value=42)
+
+    @app.route('/')
+    @templated()
+    def index():
+        return dict(value=42)
+
+As you can see, if no template name is provided it will use the endpoint
+of the URL map + ``'.html'``.  Otherwise the provided template name is
+used.  When the decorated function returns, the dictionary returned is
+passed to the template rendering function.  If `None` is returned, an
+empty dictionary is assumed.
+
+Here the code for that decorator::
+
+    from functools import wraps
+    from flask import request
+
+    def templated(template=None):
+        def decorator(f):
+            @wraps(f)
+            def decorated_function(*args, **kwargs):
+                template_name = template
+                if template_name is None:
+                    template_name = request.endpoint + '.html'
+                ctx = f(*args, **kwargs)
+                if ctx is None:
+                    ctx = {}
+                return render_template(template_name, **ctx)
+            return decorated_function
+        return decorator
","diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
index 22da533c..f777a294 100644
--- a/docs/patterns/viewdecorators.rst
+++ b/docs/patterns/viewdecorators.rst
@@ -91,3 +91,52 @@ Here the code::
 
 Notice that this assumes an instanciated `cache` object is available, see
 :ref:`caching-pattern` for more information.
+
+
+Templating Decorator
+--------------------
+
+A common pattern invented by the TurboGears guys a while back is a
+templating decorator.  The idea of that decorator is that you return a
+dictionary with the values passed to the template from the view function
+and the template is automatically rendered.  With that, the following
+three examples do exactly the same::
+
+    @app.route('/')
+    def index():
+        return render_template('index.html', value=42)
+
+    @app.route('/')
+    @templated('index.html')
+    def index():
+        return dict(value=42)
+
+    @app.route('/')
+    @templated()
+    def index():
+        return dict(value=42)
+
+As you can see, if no template name is provided it will use the endpoint
+of the URL map + ``'.html'``.  Otherwise the provided template name is
+used.  When the decorated function returns, the dictionary returned is
+passed to the template rendering function.  If `None` is returned, an
+empty dictionary is assumed.
+
+Here the code for that decorator::
+
+    from functools import wraps
+    from flask import request
+
+    def templated(template=None):
+        def decorator(f):
+            @wraps(f)
+            def decorated_function(*args, **kwargs):
+                template_name = template
+                if template_name is None:
+                    template_name = request.endpoint + '.html'
+                ctx = f(*args, **kwargs)
+                if ctx is None:
+                    ctx = {}
+                return render_template(template_name, **ctx)
+            return decorated_function
+        return decorator
"
eeb0e949518720ff5302bcf336fc72dea44737d0,7e1db5978c3c7aedcb43d7e2036edc85b0a22a6b,docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,docs/patterns/viewdecorators.rst,Added module support to templated decorator.,"diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
index f777a294..49620ff8 100644
--- a/docs/patterns/viewdecorators.rst
+++ b/docs/patterns/viewdecorators.rst
@@ -117,10 +117,10 @@ three examples do exactly the same::
         return dict(value=42)
 
 As you can see, if no template name is provided it will use the endpoint
-of the URL map + ``'.html'``.  Otherwise the provided template name is
-used.  When the decorated function returns, the dictionary returned is
-passed to the template rendering function.  If `None` is returned, an
-empty dictionary is assumed.
+of the URL map with dots converted to slashes + ``'.html'``.  Otherwise
+the provided template name is used.  When the decorated function returns,
+the dictionary returned is passed to the template rendering function.  If
+`None` is returned, an empty dictionary is assumed.
 
 Here the code for that decorator::
 
@@ -133,7 +133,8 @@ Here the code for that decorator::
             def decorated_function(*args, **kwargs):
                 template_name = template
                 if template_name is None:
-                    template_name = request.endpoint + '.html'
+                    template_name = request.endpoint \
+                        .replace('.', '/') + '.html'
                 ctx = f(*args, **kwargs)
                 if ctx is None:
                     ctx = {}
","diff --git a/docs/patterns/viewdecorators.rst b/docs/patterns/viewdecorators.rst
index f777a294..49620ff8 100644
--- a/docs/patterns/viewdecorators.rst
+++ b/docs/patterns/viewdecorators.rst
@@ -117,10 +117,10 @@ three examples do exactly the same::
         return dict(value=42)
 
 As you can see, if no template name is provided it will use the endpoint
-of the URL map + ``'.html'``.  Otherwise the provided template name is
-used.  When the decorated function returns, the dictionary returned is
-passed to the template rendering function.  If `None` is returned, an
-empty dictionary is assumed.
+of the URL map with dots converted to slashes + ``'.html'``.  Otherwise
+the provided template name is used.  When the decorated function returns,
+the dictionary returned is passed to the template rendering function.  If
+`None` is returned, an empty dictionary is assumed.
 
 Here the code for that decorator::
 
@@ -133,7 +133,8 @@ Here the code for that decorator::
             def decorated_function(*args, **kwargs):
                 template_name = template
                 if template_name is None:
-                    template_name = request.endpoint + '.html'
+                    template_name = request.endpoint \
+                        .replace('.', '/') + '.html'
                 ctx = f(*args, **kwargs)
                 if ctx is None:
                     ctx = {}
"
a7266ffb90d109f94da96e9eea5f5bb4ff8ddc71,75461c1467bbb2d83ee787bb13f4a338a4b8ad3e,CHANGES,CHANGES,CHANGES,Added _external support to url_for,"diff --git a/CHANGES b/CHANGES
index ce7289da..c3489d27 100644
--- a/CHANGES
+++ b/CHANGES
@@ -14,6 +14,7 @@ Version 0.2
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
+- added external URL support.
 
 Version 0.1
 -----------
","diff --git a/CHANGES b/CHANGES
index ce7289da..c3489d27 100644
--- a/CHANGES
+++ b/CHANGES
@@ -14,6 +14,7 @@ Version 0.2
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
+- added external URL support.
 
 Version 0.1
 -----------
"
a7266ffb90d109f94da96e9eea5f5bb4ff8ddc71,75461c1467bbb2d83ee787bb13f4a338a4b8ad3e,flask.py,flask.py,flask.py,Added _external support to url_for,"diff --git a/flask.py b/flask.py
index c1c3fdb7..a50b95be 100644
--- a/flask.py
+++ b/flask.py
@@ -152,8 +152,11 @@ def url_for(endpoint, **values):
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
+    :param _external: if set to `True`, an absolute URL is generated.
     """"""
-    return _request_ctx_stack.top.url_adapter.build(endpoint, values)
+    external = values.pop('_external', False)
+    return _request_ctx_stack.top.url_adapter.build(endpoint, values,
+                                                    force_external=external)
 
 
 def get_template_attribute(template_name, attribute):
","diff --git a/flask.py b/flask.py
index c1c3fdb7..a50b95be 100644
--- a/flask.py
+++ b/flask.py
@@ -152,8 +152,11 @@ def url_for(endpoint, **values):
 
     :param endpoint: the endpoint of the URL (name of the function)
     :param values: the variable arguments of the URL rule
+    :param _external: if set to `True`, an absolute URL is generated.
     """"""
-    return _request_ctx_stack.top.url_adapter.build(endpoint, values)
+    external = values.pop('_external', False)
+    return _request_ctx_stack.top.url_adapter.build(endpoint, values,
+                                                    force_external=external)
 
 
 def get_template_attribute(template_name, attribute):
"
a7266ffb90d109f94da96e9eea5f5bb4ff8ddc71,75461c1467bbb2d83ee787bb13f4a338a4b8ad3e,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added _external support to url_for,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 1759f8b9..f9369e36 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -227,6 +227,8 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             pass
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+            assert flask.url_for('hello', name='test x', _external=True) \
+                == 'http://localhost/hello/test%20x'
 
     def test_custom_converters(self):
         from werkzeug.routing import BaseConverter
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 1759f8b9..f9369e36 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -227,6 +227,8 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             pass
         with app.test_request_context():
             assert flask.url_for('hello', name='test x') == '/hello/test%20x'
+            assert flask.url_for('hello', name='test x', _external=True) \
+                == 'http://localhost/hello/test%20x'
 
     def test_custom_converters(self):
         from werkzeug.routing import BaseConverter
"
75461c1467bbb2d83ee787bb13f4a338a4b8ad3e,d0eefb01d16bd058172363a9847b5d98ccd1abc9,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added link to snippets website to the patterns docs.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 513647c9..9678e3be 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -10,6 +10,9 @@ changes are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
+There are more user contributed snippets and patterns in the `Flask
+Snippet Archives <http://flask.pocoo.org/snippets/>`_.
+
 .. toctree::
    :maxdepth: 2
 
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 513647c9..9678e3be 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -10,6 +10,9 @@ changes are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
+There are more user contributed snippets and patterns in the `Flask
+Snippet Archives <http://flask.pocoo.org/snippets/>`_.
+
 .. toctree::
    :maxdepth: 2
 
"
d0eefb01d16bd058172363a9847b5d98ccd1abc9,9248a7baca5bc616a60f9b63b525e872fbfddef2,flask.py,flask.py,flask.py,None responses fail properly now.  This fixes #24,"diff --git a/flask.py b/flask.py
index a50b95be..c1229d6e 100644
--- a/flask.py
+++ b/flask.py
@@ -752,10 +752,7 @@ class Flask(object):
         :param rv: the return value from the view function
         """"""
         if rv is None:
-            from warnings import warn
-            warn(Warning('View function did not return a response'),
-                 stacklevel=2)
-            return u''
+            raise ValueError('View function did not return a response')
         if isinstance(rv, self.response_class):
             return rv
         if isinstance(rv, basestring):
","diff --git a/flask.py b/flask.py
index a50b95be..c1229d6e 100644
--- a/flask.py
+++ b/flask.py
@@ -752,10 +752,7 @@ class Flask(object):
         :param rv: the return value from the view function
         """"""
         if rv is None:
-            from warnings import warn
-            warn(Warning('View function did not return a response'),
-                 stacklevel=2)
-            return u''
+            raise ValueError('View function did not return a response')
         if isinstance(rv, self.response_class):
             return rv
         if isinstance(rv, basestring):
"
9248a7baca5bc616a60f9b63b525e872fbfddef2,dffb3d091c0e42b7254fe88218811c24c0054f7e,flask.py,flask.py,flask.py,Removed useless import and adapted tests,"diff --git a/flask.py b/flask.py
index c1229d6e..02014fd2 100644
--- a/flask.py
+++ b/flask.py
@@ -12,7 +12,6 @@
 from __future__ import with_statement
 import os
 import sys
-import types
 from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
","diff --git a/flask.py b/flask.py
index c1229d6e..02014fd2 100644
--- a/flask.py
+++ b/flask.py
@@ -12,7 +12,6 @@
 from __future__ import with_statement
 import os
 import sys
-import types
 from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
"
9248a7baca5bc616a60f9b63b525e872fbfddef2,dffb3d091c0e42b7254fe88218811c24c0054f7e,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Removed useless import and adapted tests,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f9369e36..f8f74264 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -255,17 +255,17 @@ class BasicFunctionalityTestCase(unittest.TestCase):
                 == '/static/index.html'
 
     def test_none_response(self):
-        warnings.filterwarnings('error', 'View function did not return')
         app = flask.Flask(__name__)
         @app.route('/')
         def test():
             return None
         try:
             app.test_client().get('/')
-        except Warning:
+        except ValueError, e:
+            assert str(e) == 'View function did not return a response'
             pass
         else:
-            assert ""Expected warning""
+            assert ""Expected ValueError""
 
 
 class JSONTestCase(unittest.TestCase):
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f9369e36..f8f74264 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -255,17 +255,17 @@ class BasicFunctionalityTestCase(unittest.TestCase):
                 == '/static/index.html'
 
     def test_none_response(self):
-        warnings.filterwarnings('error', 'View function did not return')
         app = flask.Flask(__name__)
         @app.route('/')
         def test():
             return None
         try:
             app.test_client().get('/')
-        except Warning:
+        except ValueError, e:
+            assert str(e) == 'View function did not return a response'
             pass
         else:
-            assert ""Expected warning""
+            assert ""Expected ValueError""
 
 
 class JSONTestCase(unittest.TestCase):
"
dffb3d091c0e42b7254fe88218811c24c0054f7e,f345af8d9d33e6164747c865c29a72186a470c22,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,docs/patterns/sqlalchemy.rst,Use unicode in SQLAlchemy pattern.,"diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 32d41c08..3945c1fa 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -25,7 +25,7 @@ Here the example `database.py` module for your application::
     from sqlalchemy.orm import scoped_session, sessionmaker
     from sqlalchemy.ext.declarative import declarative_base
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     db_session = scoped_session(sessionmaker(autocommit=False,
                                              autoflush=False,
                                              bind=engine)) 
@@ -104,7 +104,7 @@ Here is an example `database.py` module for your application::
     from sqlalchemy import create_engine, MetaData
     from sqlalchemy.orm import scoped_session, sessionmaker
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     metadata = MetaData()
     db_session = scoped_session(sessionmaker(autocommit=False,
                                              autoflush=False,
@@ -156,7 +156,7 @@ you basically only need the engine::
 
     from sqlalchemy import create_engine, MetaData
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     metadata = MetaData(bind=engine)
 
 Then you can either declare the tables in your code like in the examples
","diff --git a/docs/patterns/sqlalchemy.rst b/docs/patterns/sqlalchemy.rst
index 32d41c08..3945c1fa 100644
--- a/docs/patterns/sqlalchemy.rst
+++ b/docs/patterns/sqlalchemy.rst
@@ -25,7 +25,7 @@ Here the example `database.py` module for your application::
     from sqlalchemy.orm import scoped_session, sessionmaker
     from sqlalchemy.ext.declarative import declarative_base
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     db_session = scoped_session(sessionmaker(autocommit=False,
                                              autoflush=False,
                                              bind=engine)) 
@@ -104,7 +104,7 @@ Here is an example `database.py` module for your application::
     from sqlalchemy import create_engine, MetaData
     from sqlalchemy.orm import scoped_session, sessionmaker
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     metadata = MetaData()
     db_session = scoped_session(sessionmaker(autocommit=False,
                                              autoflush=False,
@@ -156,7 +156,7 @@ you basically only need the engine::
 
     from sqlalchemy import create_engine, MetaData
 
-    engine = create_engine('sqlite:////tmp/test.db')
+    engine = create_engine('sqlite:////tmp/test.db', convert_unicode=True)
     metadata = MetaData(bind=engine)
 
 Then you can either declare the tables in your code like in the examples
"
f345af8d9d33e6164747c865c29a72186a470c22,67fc46526234653b0a519e9f1e8a05a2c40c80f8,flask.py,flask.py,flask.py,"Fix typo, remove useless import, limit lines to 79 columns.","diff --git a/flask.py b/flask.py
index 02014fd2..28becb3f 100644
--- a/flask.py
+++ b/flask.py
@@ -87,14 +87,16 @@ class _RequestGlobals(object):
 
 
 class Session(SecureCookie):
-    """"""Expands the session for support for switching between permanent
+    """"""Expands the session with support for switching between permanent
     and non-permanent sessions.
     """"""
 
     def _get_permanent(self):
         return self.get('_permanent', False)
+
     def _set_permanent(self, value):
         self['_permanent'] = bool(value)
+
     permanent = property(_get_permanent, _set_permanent)
     del _get_permanent, _set_permanent
 
@@ -391,7 +393,7 @@ class Flask(object):
         #: decorator.
         self.after_request_funcs = []
 
-        #: a list of functions that are called without arguments
+        #: a list of functions that are called without argument
         #: to populate the template context.  Each returns a dictionary
         #: that the template context is updated with.
         #: To register a function here, use the :meth:`context_processor`
","diff --git a/flask.py b/flask.py
index 02014fd2..28becb3f 100644
--- a/flask.py
+++ b/flask.py
@@ -87,14 +87,16 @@ class _RequestGlobals(object):
 
 
 class Session(SecureCookie):
-    """"""Expands the session for support for switching between permanent
+    """"""Expands the session with support for switching between permanent
     and non-permanent sessions.
     """"""
 
     def _get_permanent(self):
         return self.get('_permanent', False)
+
     def _set_permanent(self, value):
         self['_permanent'] = bool(value)
+
     permanent = property(_get_permanent, _set_permanent)
     del _get_permanent, _set_permanent
 
@@ -391,7 +393,7 @@ class Flask(object):
         #: decorator.
         self.after_request_funcs = []
 
-        #: a list of functions that are called without arguments
+        #: a list of functions that are called without argument
         #: to populate the template context.  Each returns a dictionary
         #: that the template context is updated with.
         #: To register a function here, use the :meth:`context_processor`
"
f345af8d9d33e6164747c865c29a72186a470c22,67fc46526234653b0a519e9f1e8a05a2c40c80f8,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Fix typo, remove useless import, limit lines to 79 columns.","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f8f74264..1daf0d4b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,7 +16,6 @@ import sys
 import flask
 import unittest
 import tempfile
-import warnings
 from datetime import datetime
 from werkzeug import parse_date
 
@@ -191,7 +190,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             flask.abort(404)
         @app.route('/error')
         def error():
-            1/0
+            1 // 0
         c = app.test_client()
         rv = c.get('/')
         assert rv.status_code == 404
@@ -236,7 +235,8 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             def to_python(self, value):
                 return value.split(',')
             def to_url(self, value):
-                return ','.join(super(ListConverter, self).to_url(x) for x in value)
+                base_to_url = super(ListConverter, self).to_url
+                return ','.join(base_to_url(x) for x in value)
         app = flask.Flask(__name__)
         app.url_map.converters['list'] = ListConverter
         @app.route('/<list:args>')
@@ -297,10 +297,11 @@ class JSONTestCase(unittest.TestCase):
 
     def test_template_escaping(self):
         app = flask.Flask(__name__)
+        render = flask.render_template_string
         with app.test_request_context():
-            rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
+            rv = render('{{ ""</script>""|tojson|safe }}')
             assert rv == '""<\\/script>""'
-            rv = flask.render_template_string('{{ ""<\0/script>""|tojson|safe }}')
+            rv = render('{{ ""<\0/script>""|tojson|safe }}')
             assert rv == '""<\\u0000\\/script>""'
 
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f8f74264..1daf0d4b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,7 +16,6 @@ import sys
 import flask
 import unittest
 import tempfile
-import warnings
 from datetime import datetime
 from werkzeug import parse_date
 
@@ -191,7 +190,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             flask.abort(404)
         @app.route('/error')
         def error():
-            1/0
+            1 // 0
         c = app.test_client()
         rv = c.get('/')
         assert rv.status_code == 404
@@ -236,7 +235,8 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             def to_python(self, value):
                 return value.split(',')
             def to_url(self, value):
-                return ','.join(super(ListConverter, self).to_url(x) for x in value)
+                base_to_url = super(ListConverter, self).to_url
+                return ','.join(base_to_url(x) for x in value)
         app = flask.Flask(__name__)
         app.url_map.converters['list'] = ListConverter
         @app.route('/<list:args>')
@@ -297,10 +297,11 @@ class JSONTestCase(unittest.TestCase):
 
     def test_template_escaping(self):
         app = flask.Flask(__name__)
+        render = flask.render_template_string
         with app.test_request_context():
-            rv = flask.render_template_string('{{ ""</script>""|tojson|safe }}')
+            rv = render('{{ ""</script>""|tojson|safe }}')
             assert rv == '""<\\/script>""'
-            rv = flask.render_template_string('{{ ""<\0/script>""|tojson|safe }}')
+            rv = render('{{ ""<\0/script>""|tojson|safe }}')
             assert rv == '""<\\u0000\\/script>""'
 
 
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/openidexample.py,,examples/openidexample/openidexample.py,Added OpenID example,"diff --git a/examples/openidexample/openidexample.py b/examples/openidexample/openidexample.py
new file mode 100644
index 00000000..6a7301ea
--- /dev/null
+++ b/examples/openidexample/openidexample.py
@@ -0,0 +1,165 @@
+# -*- coding: utf-8 -*-
+""""""
+    OpenID Example
+    ~~~~~~~~~~~~~~
+
+    This simple application shows how OpenID can be used in an application.
+
+    Dependencies:
+
+    -   python-openid
+    -   SQLAlchemy
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from flask import Flask, render_template, request, g, session, flash, \
+     redirect, url_for, abort
+from simpleopenid import SimpleOpenID
+
+from sqlalchemy import create_engine, Column, Integer, String
+from sqlalchemy.orm import scoped_session, sessionmaker
+from sqlalchemy.ext.declarative import declarative_base
+
+# configuration
+DATABASE_URI = 'sqlite:////tmp/openidexample.db'
+OPENID_FS_PATH = '/tmp/openidexample-store'
+SECRET_KEY = 'development key'
+DEBUG = True
+
+# setup flask
+app = Flask(__name__)
+app.debug = DEBUG
+app.secret_key = SECRET_KEY
+
+# setup simpleopenid
+oid = SimpleOpenID(OPENID_FS_PATH)
+
+# setup sqlalchemy
+engine = create_engine(DATABASE_URI)
+db_session = scoped_session(sessionmaker(autocommit=False,
+                                         autoflush=False,
+                                         bind=engine))
+Base = declarative_base()
+Base.query = db_session.query_property()
+
+def init_db():
+    Base.metadata.create_all(bind=engine)
+
+
+class User(Base):
+    __tablename__ = 'users'
+    id = Column(Integer, primary_key=True)
+    name = Column(String(60))
+    email = Column(String(200))
+    openid = Column(String(200))
+
+    def __init__(self, name, email, openid):
+        self.name = name
+        self.email = email
+        self.openid = openid
+
+
+@app.before_request
+def before_request():
+    g.user = None
+    if 'openid' in session:
+        g.user = User.query.filter_by(openid=session['openid']).first()
+
+
+@app.route('/')
+def index():
+    return render_template('index.html')
+
+
+@app.route('/login', methods=['GET', 'POST'])
+@oid.loginhandler
+def login():
+    """"""Does the login via OpenID.  Has to call into `oid.try_login`
+    to start the OpenID machinery.
+    """"""
+    # if we are already logged in, go back to were we came from
+    if g.user is not None:
+        return redirect(oid.get_next_url())
+    if request.method == 'POST':
+        openid = request.form.get('openid')
+        if openid:
+            return oid.try_login(openid)
+    return render_template('login.html', next_url=oid.get_next_url())
+
+
+@oid.after_login
+def create_or_login(identity_url):
+    """"""This is called when login with OpenID succeeded and it's not
+    necessary to figure out if this is the users's first login or not.
+    This function has to redirect otherwise the user will be presented
+    with a terrible URL which we certainly don't want.
+    """"""
+    session['openid'] = identity_url
+    user = User.query.filter_by(openid=identity_url).first()
+    if user is not None:
+        flash(u'Successfully signed in')
+        g.user = user
+        return redirect(oid.get_next_url())
+    return redirect(url_for('create_profile', next=oid.get_next_url()))
+
+
+@app.route('/create-profile', methods=['GET', 'POST'])
+def create_profile():
+    """"""If this is the user's first login, the create_or_login function
+    will redirect here so that the user can set up his profile.
+    """"""
+    if g.user is not None or 'openid' not in session:
+        return redirect(url_for('index'))
+    if request.method == 'POST':
+        name = request.form['name']
+        email = request.form['email']
+        if not name:
+            flash(u'Error: you have to provide a name')
+        elif '@' not in email:
+            flash(u'Error: you have to enter a valid email address')
+        else:
+            flash(u'Profile successfully created')
+            db_session.add(User(name, email, session['openid']))
+            db_session.commit()
+            return redirect(oid.get_next_url())
+    return render_template('create_profile.html', next_url=oid.get_next_url())
+
+
+@app.route('/profile', methods=['GET', 'POST'])
+def edit_profile():
+    """"""Updates a profile""""""
+    if g.user is None:
+        abort(401)
+    form = dict(name=g.user.name, email=g.user.email)
+    if request.method == 'POST':
+        if 'delete' in request.form:
+            db_session.delete(g.user)
+            db_session.commit()
+            session['openid'] = None
+            flash(u'Profile deleted')
+            return redirect(url_for('index'))
+        form['name'] = request.form['name']
+        form['email'] = request.form['email']
+        if not form['name']:
+            flash(u'Error: you have to provide a name')
+        elif '@' not in form['email']:
+            flash(u'Error: you have to enter a valid email address')
+        else:
+            flash(u'Profile successfully created')
+            g.user.name = form['name']
+            g.user.email = form['email']
+            db_session.commit()
+            return redirect(url_for('edit_profile'))
+    return render_template('edit_profile.html', form=form)
+
+
+@app.route('/logout')
+def logout():
+    session.pop('openid', None)
+    flash(u'You were signed out')
+    return redirect(oid.get_next_url())
+
+
+if __name__ == '__main__':
+    app.run()
","diff --git a/examples/openidexample/openidexample.py b/examples/openidexample/openidexample.py
new file mode 100644
index 00000000..6a7301ea
--- /dev/null
+++ b/examples/openidexample/openidexample.py
@@ -0,0 +1,165 @@
+# -*- coding: utf-8 -*-
+""""""
+    OpenID Example
+    ~~~~~~~~~~~~~~
+
+    This simple application shows how OpenID can be used in an application.
+
+    Dependencies:
+
+    -   python-openid
+    -   SQLAlchemy
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from flask import Flask, render_template, request, g, session, flash, \
+     redirect, url_for, abort
+from simpleopenid import SimpleOpenID
+
+from sqlalchemy import create_engine, Column, Integer, String
+from sqlalchemy.orm import scoped_session, sessionmaker
+from sqlalchemy.ext.declarative import declarative_base
+
+# configuration
+DATABASE_URI = 'sqlite:////tmp/openidexample.db'
+OPENID_FS_PATH = '/tmp/openidexample-store'
+SECRET_KEY = 'development key'
+DEBUG = True
+
+# setup flask
+app = Flask(__name__)
+app.debug = DEBUG
+app.secret_key = SECRET_KEY
+
+# setup simpleopenid
+oid = SimpleOpenID(OPENID_FS_PATH)
+
+# setup sqlalchemy
+engine = create_engine(DATABASE_URI)
+db_session = scoped_session(sessionmaker(autocommit=False,
+                                         autoflush=False,
+                                         bind=engine))
+Base = declarative_base()
+Base.query = db_session.query_property()
+
+def init_db():
+    Base.metadata.create_all(bind=engine)
+
+
+class User(Base):
+    __tablename__ = 'users'
+    id = Column(Integer, primary_key=True)
+    name = Column(String(60))
+    email = Column(String(200))
+    openid = Column(String(200))
+
+    def __init__(self, name, email, openid):
+        self.name = name
+        self.email = email
+        self.openid = openid
+
+
+@app.before_request
+def before_request():
+    g.user = None
+    if 'openid' in session:
+        g.user = User.query.filter_by(openid=session['openid']).first()
+
+
+@app.route('/')
+def index():
+    return render_template('index.html')
+
+
+@app.route('/login', methods=['GET', 'POST'])
+@oid.loginhandler
+def login():
+    """"""Does the login via OpenID.  Has to call into `oid.try_login`
+    to start the OpenID machinery.
+    """"""
+    # if we are already logged in, go back to were we came from
+    if g.user is not None:
+        return redirect(oid.get_next_url())
+    if request.method == 'POST':
+        openid = request.form.get('openid')
+        if openid:
+            return oid.try_login(openid)
+    return render_template('login.html', next_url=oid.get_next_url())
+
+
+@oid.after_login
+def create_or_login(identity_url):
+    """"""This is called when login with OpenID succeeded and it's not
+    necessary to figure out if this is the users's first login or not.
+    This function has to redirect otherwise the user will be presented
+    with a terrible URL which we certainly don't want.
+    """"""
+    session['openid'] = identity_url
+    user = User.query.filter_by(openid=identity_url).first()
+    if user is not None:
+        flash(u'Successfully signed in')
+        g.user = user
+        return redirect(oid.get_next_url())
+    return redirect(url_for('create_profile', next=oid.get_next_url()))
+
+
+@app.route('/create-profile', methods=['GET', 'POST'])
+def create_profile():
+    """"""If this is the user's first login, the create_or_login function
+    will redirect here so that the user can set up his profile.
+    """"""
+    if g.user is not None or 'openid' not in session:
+        return redirect(url_for('index'))
+    if request.method == 'POST':
+        name = request.form['name']
+        email = request.form['email']
+        if not name:
+            flash(u'Error: you have to provide a name')
+        elif '@' not in email:
+            flash(u'Error: you have to enter a valid email address')
+        else:
+            flash(u'Profile successfully created')
+            db_session.add(User(name, email, session['openid']))
+            db_session.commit()
+            return redirect(oid.get_next_url())
+    return render_template('create_profile.html', next_url=oid.get_next_url())
+
+
+@app.route('/profile', methods=['GET', 'POST'])
+def edit_profile():
+    """"""Updates a profile""""""
+    if g.user is None:
+        abort(401)
+    form = dict(name=g.user.name, email=g.user.email)
+    if request.method == 'POST':
+        if 'delete' in request.form:
+            db_session.delete(g.user)
+            db_session.commit()
+            session['openid'] = None
+            flash(u'Profile deleted')
+            return redirect(url_for('index'))
+        form['name'] = request.form['name']
+        form['email'] = request.form['email']
+        if not form['name']:
+            flash(u'Error: you have to provide a name')
+        elif '@' not in form['email']:
+            flash(u'Error: you have to enter a valid email address')
+        else:
+            flash(u'Profile successfully created')
+            g.user.name = form['name']
+            g.user.email = form['email']
+            db_session.commit()
+            return redirect(url_for('edit_profile'))
+    return render_template('edit_profile.html', form=form)
+
+
+@app.route('/logout')
+def logout():
+    session.pop('openid', None)
+    flash(u'You were signed out')
+    return redirect(oid.get_next_url())
+
+
+if __name__ == '__main__':
+    app.run()
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/simpleopenid.py,,examples/openidexample/simpleopenid.py,Added OpenID example,"diff --git a/examples/openidexample/simpleopenid.py b/examples/openidexample/simpleopenid.py
new file mode 100644
index 00000000..c8e86463
--- /dev/null
+++ b/examples/openidexample/simpleopenid.py
@@ -0,0 +1,108 @@
+# -*- coding: utf-8 -*-
+""""""
+    simpleopenid
+    ~~~~~~~~~~~~
+
+    Tiny wrapper around python-openid to make working with the basic
+    API in a flask application easier.  Adapt this code for your own
+    project if necessary.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from functools import wraps
+
+from flask import request, session, flash, redirect
+from werkzeug import url_quote
+
+from openid.association import Association
+from openid.store.interface import OpenIDStore
+from openid.store.filestore import FileOpenIDStore
+from openid.consumer.consumer import Consumer, SUCCESS, CANCEL
+from openid.consumer import discover
+from openid.store import nonce
+
+# python-openid is a really stupid library in that regard, we have
+# to disable logging by monkey patching
+from openid import oidutil
+oidutil.log = lambda *a, **kw: None
+
+
+class SimpleOpenID(object):
+    """"""Simple helper class for OpenID auth.""""""
+
+    def __init__(self, store_path):
+        self.store_path = store_path
+        self.after_login_func = None
+
+    def create_store(self):
+        """"""Creates the filesystem store""""""
+        return FileOpenIDStore(self.store_path)
+
+    def signal_error(self, msg):
+        """"""Signals an error.  It does this by flashing a message""""""
+        flash(u'Error: ' + msg)
+
+    def get_next_url(self):
+        """"""Return the URL where we want to redirect to.""""""
+        return request.values.get('next') or \
+               request.referrer or \
+               request.url_root
+
+    def get_current_url(self):
+        """"""the current URL + next""""""
+        return request.base_url + '?next=' + url_quote(self.get_next_url())
+
+    def get_success_url(self):
+        """"""Return the success URL""""""
+        return self.get_current_url() + '&openid_complete=yes'
+
+    def errorhandler(f):
+        """"""Called if an error occours with the message.  By default
+        ``'Error: message'`` is flashed.
+        """"""
+        self.signal_error = f
+        return f
+
+    def after_login(self, f):
+        """"""This function will be called after login.  It must redirect to
+        a different place and remember the user somewhere.  The session
+        is not modified by SimpleOpenID.
+        """"""
+        self.after_login_func = f
+        return f
+
+    def loginhandler(self, f):
+        """"""Marks a function as login handler.  This decorator injects some
+        more OpenID required logic.
+        """"""
+        self.login_endpoint = f.__name__
+        @wraps(f)
+        def decorated(*args, **kwargs):
+            if request.args.get('openid_complete') != u'yes':
+                return f(*args, **kwargs)
+            consumer = Consumer(session, self.create_store())
+            openid_response = consumer.complete(request.args.to_dict(),
+                                                self.get_current_url())
+            if openid_response.status == SUCCESS:
+                return self.after_login_func(openid_response.identity_url)
+            elif openid_response.status == CANCEL:
+                self.signal_error(u'The request was cancelled')
+                return redirect(self.get_current_url())
+            self.signal_error(u'OpenID authentication error')
+            return redirect(self.get_current_url())
+        return decorated
+
+    def try_login(self, identity_url):
+        """"""This tries to login with the given identity URL.  This function
+        must be called from the login_handler.
+        """"""
+        try:
+            consumer = Consumer(session, self.create_store())
+            auth_request = consumer.begin(identity_url)
+        except discover.DiscoveryFailure:
+            self.signal_error(u'The OpenID was invalid')
+            return redirect(self.get_current_url())
+        trust_root = request.host_url
+        return redirect(auth_request.redirectURL(request.host_url,
+                                                 self.get_success_url()))
","diff --git a/examples/openidexample/simpleopenid.py b/examples/openidexample/simpleopenid.py
new file mode 100644
index 00000000..c8e86463
--- /dev/null
+++ b/examples/openidexample/simpleopenid.py
@@ -0,0 +1,108 @@
+# -*- coding: utf-8 -*-
+""""""
+    simpleopenid
+    ~~~~~~~~~~~~
+
+    Tiny wrapper around python-openid to make working with the basic
+    API in a flask application easier.  Adapt this code for your own
+    project if necessary.
+
+    :copyright: (c) 2010 by Armin Ronacher.
+    :license: BSD, see LICENSE for more details.
+""""""
+from functools import wraps
+
+from flask import request, session, flash, redirect
+from werkzeug import url_quote
+
+from openid.association import Association
+from openid.store.interface import OpenIDStore
+from openid.store.filestore import FileOpenIDStore
+from openid.consumer.consumer import Consumer, SUCCESS, CANCEL
+from openid.consumer import discover
+from openid.store import nonce
+
+# python-openid is a really stupid library in that regard, we have
+# to disable logging by monkey patching
+from openid import oidutil
+oidutil.log = lambda *a, **kw: None
+
+
+class SimpleOpenID(object):
+    """"""Simple helper class for OpenID auth.""""""
+
+    def __init__(self, store_path):
+        self.store_path = store_path
+        self.after_login_func = None
+
+    def create_store(self):
+        """"""Creates the filesystem store""""""
+        return FileOpenIDStore(self.store_path)
+
+    def signal_error(self, msg):
+        """"""Signals an error.  It does this by flashing a message""""""
+        flash(u'Error: ' + msg)
+
+    def get_next_url(self):
+        """"""Return the URL where we want to redirect to.""""""
+        return request.values.get('next') or \
+               request.referrer or \
+               request.url_root
+
+    def get_current_url(self):
+        """"""the current URL + next""""""
+        return request.base_url + '?next=' + url_quote(self.get_next_url())
+
+    def get_success_url(self):
+        """"""Return the success URL""""""
+        return self.get_current_url() + '&openid_complete=yes'
+
+    def errorhandler(f):
+        """"""Called if an error occours with the message.  By default
+        ``'Error: message'`` is flashed.
+        """"""
+        self.signal_error = f
+        return f
+
+    def after_login(self, f):
+        """"""This function will be called after login.  It must redirect to
+        a different place and remember the user somewhere.  The session
+        is not modified by SimpleOpenID.
+        """"""
+        self.after_login_func = f
+        return f
+
+    def loginhandler(self, f):
+        """"""Marks a function as login handler.  This decorator injects some
+        more OpenID required logic.
+        """"""
+        self.login_endpoint = f.__name__
+        @wraps(f)
+        def decorated(*args, **kwargs):
+            if request.args.get('openid_complete') != u'yes':
+                return f(*args, **kwargs)
+            consumer = Consumer(session, self.create_store())
+            openid_response = consumer.complete(request.args.to_dict(),
+                                                self.get_current_url())
+            if openid_response.status == SUCCESS:
+                return self.after_login_func(openid_response.identity_url)
+            elif openid_response.status == CANCEL:
+                self.signal_error(u'The request was cancelled')
+                return redirect(self.get_current_url())
+            self.signal_error(u'OpenID authentication error')
+            return redirect(self.get_current_url())
+        return decorated
+
+    def try_login(self, identity_url):
+        """"""This tries to login with the given identity URL.  This function
+        must be called from the login_handler.
+        """"""
+        try:
+            consumer = Consumer(session, self.create_store())
+            auth_request = consumer.begin(identity_url)
+        except discover.DiscoveryFailure:
+            self.signal_error(u'The OpenID was invalid')
+            return redirect(self.get_current_url())
+        trust_root = request.host_url
+        return redirect(auth_request.redirectURL(request.host_url,
+                                                 self.get_success_url()))
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/static/openid.png,examples/openidexample/static/openid.png,examples/openidexample/static/openid.png,Added OpenID example,"diff --git a/examples/openidexample/static/openid.png b/examples/openidexample/static/openid.png
new file mode 100644
index 00000000..ce7954ab
Binary files /dev/null and b/examples/openidexample/static/openid.png differ
","diff --git a/examples/openidexample/static/openid.png b/examples/openidexample/static/openid.png
new file mode 100644
index 00000000..ce7954ab
Binary files /dev/null and b/examples/openidexample/static/openid.png differ
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/static/style.css,,examples/openidexample/static/style.css,Added OpenID example,"diff --git a/examples/openidexample/static/style.css b/examples/openidexample/static/style.css
new file mode 100644
index 00000000..33d9816b
--- /dev/null
+++ b/examples/openidexample/static/style.css
@@ -0,0 +1,39 @@
+body {
+    font-family: 'Georgia', serif;
+    font-size: 16px;
+    margin: 30px;
+    padding: 0;
+}
+
+a {
+    color: #335E79;
+}
+
+p.message {
+    color: #335E79;
+    padding: 10px;
+    background: #CADEEB;
+}
+
+input {
+    font-family: 'Georgia', serif;
+    font-size: 16px;
+    border: 1px solid black;
+    color: #335E79;
+    padding: 2px;
+}
+
+input[type=""submit""] {
+    background: #CADEEB;
+    color: #335E79;
+    border-color: #335E79;
+}
+
+input[name=""openid""] {
+    background: url(openid.png) 4px no-repeat;
+    padding-left: 24px;
+}
+
+h1, h2 {
+    font-weight: normal;
+}
","diff --git a/examples/openidexample/static/style.css b/examples/openidexample/static/style.css
new file mode 100644
index 00000000..33d9816b
--- /dev/null
+++ b/examples/openidexample/static/style.css
@@ -0,0 +1,39 @@
+body {
+    font-family: 'Georgia', serif;
+    font-size: 16px;
+    margin: 30px;
+    padding: 0;
+}
+
+a {
+    color: #335E79;
+}
+
+p.message {
+    color: #335E79;
+    padding: 10px;
+    background: #CADEEB;
+}
+
+input {
+    font-family: 'Georgia', serif;
+    font-size: 16px;
+    border: 1px solid black;
+    color: #335E79;
+    padding: 2px;
+}
+
+input[type=""submit""] {
+    background: #CADEEB;
+    color: #335E79;
+    border-color: #335E79;
+}
+
+input[name=""openid""] {
+    background: url(openid.png) 4px no-repeat;
+    padding-left: 24px;
+}
+
+h1, h2 {
+    font-weight: normal;
+}
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/templates/create_profile.html,,examples/openidexample/templates/create_profile.html,Added OpenID example,"diff --git a/examples/openidexample/templates/create_profile.html b/examples/openidexample/templates/create_profile.html
new file mode 100644
index 00000000..73a469a2
--- /dev/null
+++ b/examples/openidexample/templates/create_profile.html
@@ -0,0 +1,22 @@
+{% extends ""layout.html"" %}
+{% block title %}Create Profile{% endblock %}
+{% block body %}
+  <h2>Create Profile</h2>
+  <p>
+    Hey!  This is the first time you signed in on this website.  In
+    order to proceed we need a couple of more information from you:
+  <form action="""" method=post>
+    <dl>
+      <dt>Name:
+      <dd><input type=text name=name size=30 value=""{{ request.form.name }}"">
+      <dt>E-Mail
+      <dd><input type=text name=email size=30 value=""{{ request.form.email }}"">
+    </dl>
+    <p>
+      <input type=submit value=""Create profile"">
+      <input type=hidden name=next value=""{{ next_url }}"">
+  </form>
+  <p>
+    If you don't want to proceed, you can <a href=""{{ url_for('logout')
+    }}"">sign out</a> again.
+{% endblock %}
","diff --git a/examples/openidexample/templates/create_profile.html b/examples/openidexample/templates/create_profile.html
new file mode 100644
index 00000000..73a469a2
--- /dev/null
+++ b/examples/openidexample/templates/create_profile.html
@@ -0,0 +1,22 @@
+{% extends ""layout.html"" %}
+{% block title %}Create Profile{% endblock %}
+{% block body %}
+  <h2>Create Profile</h2>
+  <p>
+    Hey!  This is the first time you signed in on this website.  In
+    order to proceed we need a couple of more information from you:
+  <form action="""" method=post>
+    <dl>
+      <dt>Name:
+      <dd><input type=text name=name size=30 value=""{{ request.form.name }}"">
+      <dt>E-Mail
+      <dd><input type=text name=email size=30 value=""{{ request.form.email }}"">
+    </dl>
+    <p>
+      <input type=submit value=""Create profile"">
+      <input type=hidden name=next value=""{{ next_url }}"">
+  </form>
+  <p>
+    If you don't want to proceed, you can <a href=""{{ url_for('logout')
+    }}"">sign out</a> again.
+{% endblock %}
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/templates/edit_profile.html,,examples/openidexample/templates/edit_profile.html,Added OpenID example,"diff --git a/examples/openidexample/templates/edit_profile.html b/examples/openidexample/templates/edit_profile.html
new file mode 100644
index 00000000..a9b6b877
--- /dev/null
+++ b/examples/openidexample/templates/edit_profile.html
@@ -0,0 +1,16 @@
+{% extends ""layout.html"" %}
+{% block title %}Edit Profile{% endblock %}
+{% block body %}
+  <h2>Edit Profile</h2>
+  <form action="""" method=post>
+    <dl>
+      <dt>Name:
+      <dd><input type=text name=name size=30 value=""{{ form.name }}"">
+      <dt>E-Mail
+      <dd><input type=text name=email size=30 value=""{{ form.email }}"">
+    </dl>
+    <p>
+      <input type=submit value=""Update profile"">
+      <input type=submit name=delete value=""Delete"">
+  </form>
+{% endblock %}
","diff --git a/examples/openidexample/templates/edit_profile.html b/examples/openidexample/templates/edit_profile.html
new file mode 100644
index 00000000..a9b6b877
--- /dev/null
+++ b/examples/openidexample/templates/edit_profile.html
@@ -0,0 +1,16 @@
+{% extends ""layout.html"" %}
+{% block title %}Edit Profile{% endblock %}
+{% block body %}
+  <h2>Edit Profile</h2>
+  <form action="""" method=post>
+    <dl>
+      <dt>Name:
+      <dd><input type=text name=name size=30 value=""{{ form.name }}"">
+      <dt>E-Mail
+      <dd><input type=text name=email size=30 value=""{{ form.email }}"">
+    </dl>
+    <p>
+      <input type=submit value=""Update profile"">
+      <input type=submit name=delete value=""Delete"">
+  </form>
+{% endblock %}
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/templates/index.html,,examples/openidexample/templates/index.html,Added OpenID example,"diff --git a/examples/openidexample/templates/index.html b/examples/openidexample/templates/index.html
new file mode 100644
index 00000000..54f5161b
--- /dev/null
+++ b/examples/openidexample/templates/index.html
@@ -0,0 +1,10 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  <h2>Overview</h2>
+  {% if g.user %}
+  <p>
+    Hello {{ g.user.name }}!
+  {% endif %}
+  <p>
+    This is just an example page so that something is here.
+{% endblock %}
","diff --git a/examples/openidexample/templates/index.html b/examples/openidexample/templates/index.html
new file mode 100644
index 00000000..54f5161b
--- /dev/null
+++ b/examples/openidexample/templates/index.html
@@ -0,0 +1,10 @@
+{% extends ""layout.html"" %}
+{% block body %}
+  <h2>Overview</h2>
+  {% if g.user %}
+  <p>
+    Hello {{ g.user.name }}!
+  {% endif %}
+  <p>
+    This is just an example page so that something is here.
+{% endblock %}
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/templates/layout.html,,examples/openidexample/templates/layout.html,Added OpenID example,"diff --git a/examples/openidexample/templates/layout.html b/examples/openidexample/templates/layout.html
new file mode 100644
index 00000000..3fad7c07
--- /dev/null
+++ b/examples/openidexample/templates/layout.html
@@ -0,0 +1,18 @@
+<!doctype html>
+<title>{% block title %}Welcome{% endblock %} | Flask OpenID Example</title>
+<link rel=stylesheet type=text/css href=""{{ url_for('static',
+  filename='style.css') }}"">
+<h1>Flask OpenID Example</h1>
+<ul class=navigation>
+  <li><a href=""{{ url_for('index') }}"">overview</a>
+  {% if g.user %}
+  <li><a href=""{{ url_for('edit_profile') }}"">profile</a>
+  <li><a href=""{{ url_for('logout') }}"">sign out [{{ g.user.name }}]</a>
+  {% else %}
+  <li><a href=""{{ url_for('login') }}"">sign in</a>
+  {% endif %}
+</ul>
+{% for message in get_flashed_messages() %}
+  <p class=message>{{ message }}
+{% endfor %}
+{% block body %}{% endblock %}
","diff --git a/examples/openidexample/templates/layout.html b/examples/openidexample/templates/layout.html
new file mode 100644
index 00000000..3fad7c07
--- /dev/null
+++ b/examples/openidexample/templates/layout.html
@@ -0,0 +1,18 @@
+<!doctype html>
+<title>{% block title %}Welcome{% endblock %} | Flask OpenID Example</title>
+<link rel=stylesheet type=text/css href=""{{ url_for('static',
+  filename='style.css') }}"">
+<h1>Flask OpenID Example</h1>
+<ul class=navigation>
+  <li><a href=""{{ url_for('index') }}"">overview</a>
+  {% if g.user %}
+  <li><a href=""{{ url_for('edit_profile') }}"">profile</a>
+  <li><a href=""{{ url_for('logout') }}"">sign out [{{ g.user.name }}]</a>
+  {% else %}
+  <li><a href=""{{ url_for('login') }}"">sign in</a>
+  {% endif %}
+</ul>
+{% for message in get_flashed_messages() %}
+  <p class=message>{{ message }}
+{% endfor %}
+{% block body %}{% endblock %}
"
67fc46526234653b0a519e9f1e8a05a2c40c80f8,bc0c0559e384dc88441775a3907487f4a2b515b4,examples/openidexample/templates/login.html,,examples/openidexample/templates/login.html,Added OpenID example,"diff --git a/examples/openidexample/templates/login.html b/examples/openidexample/templates/login.html
new file mode 100644
index 00000000..9c7c8ade
--- /dev/null
+++ b/examples/openidexample/templates/login.html
@@ -0,0 +1,12 @@
+{% extends ""layout.html"" %}
+{% block title %}Sign in{% endblock %}
+{% block body %}
+  <h2>Sign in</h2>
+  <form action="""" method=post>
+    <p>
+      OpenID:
+      <input type=text name=openid size=30>
+      <input type=submit value=""Sign in"">
+      <input type=hidden name=next value=""{{ next_url }}"">
+  </form>
+{% endblock %}
","diff --git a/examples/openidexample/templates/login.html b/examples/openidexample/templates/login.html
new file mode 100644
index 00000000..9c7c8ade
--- /dev/null
+++ b/examples/openidexample/templates/login.html
@@ -0,0 +1,12 @@
+{% extends ""layout.html"" %}
+{% block title %}Sign in{% endblock %}
+{% block body %}
+  <h2>Sign in</h2>
+  <form action="""" method=post>
+    <p>
+      OpenID:
+      <input type=text name=openid size=30>
+      <input type=submit value=""Sign in"">
+      <input type=hidden name=next value=""{{ next_url }}"">
+  </form>
+{% endblock %}
"
720bede150d835be0ffedf4d480482552c90908d,a921aef6c47cecbacef5173f03c07c52e6bc8fea,flask.py,flask.py,flask.py,Fixed late binding of url_prefix.  This fixes #29.,"diff --git a/flask.py b/flask.py
index 268dec38..1d0fa852 100644
--- a/flask.py
+++ b/flask.py
@@ -448,7 +448,7 @@ class Module(_PackageBoundObject):
         """"""
         def register_rule(state):
             the_rule = rule
-            if self.url_prefix:
+            if state.url_prefix:
                 the_rule = state.url_prefix + rule
             state.app.add_url_rule(the_rule, '%s.%s' % (self.name, endpoint),
                                    view_func, **options)
","diff --git a/flask.py b/flask.py
index 268dec38..1d0fa852 100644
--- a/flask.py
+++ b/flask.py
@@ -448,7 +448,7 @@ class Module(_PackageBoundObject):
         """"""
         def register_rule(state):
             the_rule = rule
-            if self.url_prefix:
+            if state.url_prefix:
                 the_rule = state.url_prefix + rule
             state.app.add_url_rule(the_rule, '%s.%s' % (self.name, endpoint),
                                    view_func, **options)
"
720bede150d835be0ffedf4d480482552c90908d,a921aef6c47cecbacef5173f03c07c52e6bc8fea,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed late binding of url_prefix.  This fixes #29.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index d57370f8..8b3f7640 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -441,6 +441,15 @@ class ModuleTestCase(unittest.TestCase):
         assert catched == ['before-app', 'before-admin',
                            'after-admin', 'after-app']
 
+    def test_late_binding(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin')
+        @admin.route('/')
+        def index():
+            return '42'
+        app.register_module(admin, url_prefix='/admin')
+        assert app.test_client().get('/admin/').data == '42'
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index d57370f8..8b3f7640 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -441,6 +441,15 @@ class ModuleTestCase(unittest.TestCase):
         assert catched == ['before-app', 'before-admin',
                            'after-admin', 'after-app']
 
+    def test_late_binding(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin')
+        @admin.route('/')
+        def index():
+            return '42'
+        app.register_module(admin, url_prefix='/admin')
+        assert app.test_client().get('/admin/').data == '42'
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
"
bc0c0559e384dc88441775a3907487f4a2b515b4,f6da77e894a939b838e02fb744fa3031abfc96ec,docs/api.rst,docs/api.rst,docs/api.rst,Fixed URL examples.  This fixes #30.,"diff --git a/docs/api.rst b/docs/api.rst
index 3961dc99..ac761565 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -104,8 +104,8 @@ Incoming Request Data
       ============= ======================================================
       `path`        ``/page.html``
       `script_root` ``/myapplication``
-      `url`         ``http://www.example.com/myapplication/page.html``
-      `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
+      `base_url`    ``http://www.example.com/myapplication/page.html``
+      `url`         ``http://www.example.com/myapplication/page.html?x=y``
       `url_root`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
","diff --git a/docs/api.rst b/docs/api.rst
index 3961dc99..ac761565 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -104,8 +104,8 @@ Incoming Request Data
       ============= ======================================================
       `path`        ``/page.html``
       `script_root` ``/myapplication``
-      `url`         ``http://www.example.com/myapplication/page.html``
-      `base_url`    ``http://www.example.com/myapplication/page.html?x=y``
+      `base_url`    ``http://www.example.com/myapplication/page.html``
+      `url`         ``http://www.example.com/myapplication/page.html?x=y``
       `url_root`    ``http://www.example.com/myapplication/``
       ============= ======================================================
 
"
7f837901cb9b3ba7d68ea0a983d86dfc508a9c6d,745638e774063de206aae930df71789de13e7c73,flask.py,flask.py,flask.py,Added missing decorators for module wide context processors.  This fixes #25.,"diff --git a/flask.py b/flask.py
index 1d0fa852..c5516c4f 100644
--- a/flask.py
+++ b/flask.py
@@ -465,7 +465,7 @@ class Module(_PackageBoundObject):
 
     def before_app_request(self, f):
         """"""Like :meth:`Flask.before_request`.  Such a function is executed
-        before each request.
+        before each request, even if outside of a module.
         """"""
         self._record(lambda s: s.app.before_request_funcs
             .setdefault(None, []).append(f))
@@ -482,12 +482,28 @@ class Module(_PackageBoundObject):
 
     def after_app_request(self, f):
         """"""Like :meth:`Flask.after_request` but for a module.  Such a function
-        is executed after each request.
+        is executed after each request, even if outside of the module.
         """"""
         self._record(lambda s: s.app.after_request_funcs
             .setdefault(None, []).append(f))
         return f
 
+    def context_processor(self, f):
+        """"""Like :meth:`Flask.context_processor` but for a modul.  This
+        function is only executed for requests handled by a module.
+        """"""
+        self._record(lambda s: s.app.template_context_processors
+            .setdefault(self.name, []).append(f))
+        return f
+
+    def app_context_processor(self, f):
+        """"""Like :meth:`Flask.context_processor` but for a module.  Such a
+        function is executed each request, even if outside of the module.
+        """"""
+        self._record(lambda s: s.app.template_context_processors
+            .setdefault(None, []).append(f))
+        return f
+
     def _record(self, func):
         self._register_events.append(func)
 
","diff --git a/flask.py b/flask.py
index 1d0fa852..c5516c4f 100644
--- a/flask.py
+++ b/flask.py
@@ -465,7 +465,7 @@ class Module(_PackageBoundObject):
 
     def before_app_request(self, f):
         """"""Like :meth:`Flask.before_request`.  Such a function is executed
-        before each request.
+        before each request, even if outside of a module.
         """"""
         self._record(lambda s: s.app.before_request_funcs
             .setdefault(None, []).append(f))
@@ -482,12 +482,28 @@ class Module(_PackageBoundObject):
 
     def after_app_request(self, f):
         """"""Like :meth:`Flask.after_request` but for a module.  Such a function
-        is executed after each request.
+        is executed after each request, even if outside of the module.
         """"""
         self._record(lambda s: s.app.after_request_funcs
             .setdefault(None, []).append(f))
         return f
 
+    def context_processor(self, f):
+        """"""Like :meth:`Flask.context_processor` but for a modul.  This
+        function is only executed for requests handled by a module.
+        """"""
+        self._record(lambda s: s.app.template_context_processors
+            .setdefault(self.name, []).append(f))
+        return f
+
+    def app_context_processor(self, f):
+        """"""Like :meth:`Flask.context_processor` but for a module.  Such a
+        function is executed each request, even if outside of the module.
+        """"""
+        self._record(lambda s: s.app.template_context_processors
+            .setdefault(None, []).append(f))
+        return f
+
     def _record(self, func):
         self._register_events.append(func)
 
"
7f837901cb9b3ba7d68ea0a983d86dfc508a9c6d,745638e774063de206aae930df71789de13e7c73,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added missing decorators for module wide context processors.  This fixes #25.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 8b3f7640..1240dadd 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -441,6 +441,29 @@ class ModuleTestCase(unittest.TestCase):
         assert catched == ['before-app', 'before-admin',
                            'after-admin', 'after-app']
 
+    def test_context_processors(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
+        @app.context_processor
+        def inject_all_regualr():
+            return {'a': 1}
+        @admin.context_processor
+        def inject_admin():
+            return {'b': 2}
+        @admin.app_context_processor
+        def inject_all_module():
+            return {'c': 3}
+        @app.route('/')
+        def index():
+            return flask.render_template_string('{{ a }}{{ b }}{{ c }}')
+        @admin.route('/')
+        def index():
+            return flask.render_template_string('{{ a }}{{ b }}{{ c }}')
+        app.register_module(admin)
+        c = app.test_client()
+        assert c.get('/').data == '13'
+        assert c.get('/admin/').data == '123'
+
     def test_late_binding(self):
         app = flask.Flask(__name__)
         admin = flask.Module(__name__, 'admin')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 8b3f7640..1240dadd 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -441,6 +441,29 @@ class ModuleTestCase(unittest.TestCase):
         assert catched == ['before-app', 'before-admin',
                            'after-admin', 'after-app']
 
+    def test_context_processors(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin', url_prefix='/admin')
+        @app.context_processor
+        def inject_all_regualr():
+            return {'a': 1}
+        @admin.context_processor
+        def inject_admin():
+            return {'b': 2}
+        @admin.app_context_processor
+        def inject_all_module():
+            return {'c': 3}
+        @app.route('/')
+        def index():
+            return flask.render_template_string('{{ a }}{{ b }}{{ c }}')
+        @admin.route('/')
+        def index():
+            return flask.render_template_string('{{ a }}{{ b }}{{ c }}')
+        app.register_module(admin)
+        c = app.test_client()
+        assert c.get('/').data == '13'
+        assert c.get('/admin/').data == '123'
+
     def test_late_binding(self):
         app = flask.Flask(__name__)
         admin = flask.Module(__name__, 'admin')
"
745638e774063de206aae930df71789de13e7c73,b93ec1465be95a8303cbed99589273f562928103,CHANGES,CHANGES,CHANGES,Documented module changes in CHANGES,"diff --git a/CHANGES b/CHANGES
index c3489d27..ae523e86 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,8 @@ Version 0.2
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
+- module support and internal request handling refactoring
+  to better support pluggable applications.
 
 Version 0.1
 -----------
","diff --git a/CHANGES b/CHANGES
index c3489d27..ae523e86 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,8 @@ Version 0.2
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
+- module support and internal request handling refactoring
+  to better support pluggable applications.
 
 Version 0.1
 -----------
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/openidexample.py,examples/openidexample/openidexample.py,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/openidexample.py b/examples/openidexample/openidexample.py
deleted file mode 100644
index 6a7301ea..00000000
--- a/examples/openidexample/openidexample.py
+++ /dev/null
@@ -1,165 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    OpenID Example
-    ~~~~~~~~~~~~~~
-
-    This simple application shows how OpenID can be used in an application.
-
-    Dependencies:
-
-    -   python-openid
-    -   SQLAlchemy
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from flask import Flask, render_template, request, g, session, flash, \
-     redirect, url_for, abort
-from simpleopenid import SimpleOpenID
-
-from sqlalchemy import create_engine, Column, Integer, String
-from sqlalchemy.orm import scoped_session, sessionmaker
-from sqlalchemy.ext.declarative import declarative_base
-
-# configuration
-DATABASE_URI = 'sqlite:////tmp/openidexample.db'
-OPENID_FS_PATH = '/tmp/openidexample-store'
-SECRET_KEY = 'development key'
-DEBUG = True
-
-# setup flask
-app = Flask(__name__)
-app.debug = DEBUG
-app.secret_key = SECRET_KEY
-
-# setup simpleopenid
-oid = SimpleOpenID(OPENID_FS_PATH)
-
-# setup sqlalchemy
-engine = create_engine(DATABASE_URI)
-db_session = scoped_session(sessionmaker(autocommit=False,
-                                         autoflush=False,
-                                         bind=engine))
-Base = declarative_base()
-Base.query = db_session.query_property()
-
-def init_db():
-    Base.metadata.create_all(bind=engine)
-
-
-class User(Base):
-    __tablename__ = 'users'
-    id = Column(Integer, primary_key=True)
-    name = Column(String(60))
-    email = Column(String(200))
-    openid = Column(String(200))
-
-    def __init__(self, name, email, openid):
-        self.name = name
-        self.email = email
-        self.openid = openid
-
-
-@app.before_request
-def before_request():
-    g.user = None
-    if 'openid' in session:
-        g.user = User.query.filter_by(openid=session['openid']).first()
-
-
-@app.route('/')
-def index():
-    return render_template('index.html')
-
-
-@app.route('/login', methods=['GET', 'POST'])
-@oid.loginhandler
-def login():
-    """"""Does the login via OpenID.  Has to call into `oid.try_login`
-    to start the OpenID machinery.
-    """"""
-    # if we are already logged in, go back to were we came from
-    if g.user is not None:
-        return redirect(oid.get_next_url())
-    if request.method == 'POST':
-        openid = request.form.get('openid')
-        if openid:
-            return oid.try_login(openid)
-    return render_template('login.html', next_url=oid.get_next_url())
-
-
-@oid.after_login
-def create_or_login(identity_url):
-    """"""This is called when login with OpenID succeeded and it's not
-    necessary to figure out if this is the users's first login or not.
-    This function has to redirect otherwise the user will be presented
-    with a terrible URL which we certainly don't want.
-    """"""
-    session['openid'] = identity_url
-    user = User.query.filter_by(openid=identity_url).first()
-    if user is not None:
-        flash(u'Successfully signed in')
-        g.user = user
-        return redirect(oid.get_next_url())
-    return redirect(url_for('create_profile', next=oid.get_next_url()))
-
-
-@app.route('/create-profile', methods=['GET', 'POST'])
-def create_profile():
-    """"""If this is the user's first login, the create_or_login function
-    will redirect here so that the user can set up his profile.
-    """"""
-    if g.user is not None or 'openid' not in session:
-        return redirect(url_for('index'))
-    if request.method == 'POST':
-        name = request.form['name']
-        email = request.form['email']
-        if not name:
-            flash(u'Error: you have to provide a name')
-        elif '@' not in email:
-            flash(u'Error: you have to enter a valid email address')
-        else:
-            flash(u'Profile successfully created')
-            db_session.add(User(name, email, session['openid']))
-            db_session.commit()
-            return redirect(oid.get_next_url())
-    return render_template('create_profile.html', next_url=oid.get_next_url())
-
-
-@app.route('/profile', methods=['GET', 'POST'])
-def edit_profile():
-    """"""Updates a profile""""""
-    if g.user is None:
-        abort(401)
-    form = dict(name=g.user.name, email=g.user.email)
-    if request.method == 'POST':
-        if 'delete' in request.form:
-            db_session.delete(g.user)
-            db_session.commit()
-            session['openid'] = None
-            flash(u'Profile deleted')
-            return redirect(url_for('index'))
-        form['name'] = request.form['name']
-        form['email'] = request.form['email']
-        if not form['name']:
-            flash(u'Error: you have to provide a name')
-        elif '@' not in form['email']:
-            flash(u'Error: you have to enter a valid email address')
-        else:
-            flash(u'Profile successfully created')
-            g.user.name = form['name']
-            g.user.email = form['email']
-            db_session.commit()
-            return redirect(url_for('edit_profile'))
-    return render_template('edit_profile.html', form=form)
-
-
-@app.route('/logout')
-def logout():
-    session.pop('openid', None)
-    flash(u'You were signed out')
-    return redirect(oid.get_next_url())
-
-
-if __name__ == '__main__':
-    app.run()
","diff --git a/examples/openidexample/openidexample.py b/examples/openidexample/openidexample.py
deleted file mode 100644
index 6a7301ea..00000000
--- a/examples/openidexample/openidexample.py
+++ /dev/null
@@ -1,165 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    OpenID Example
-    ~~~~~~~~~~~~~~
-
-    This simple application shows how OpenID can be used in an application.
-
-    Dependencies:
-
-    -   python-openid
-    -   SQLAlchemy
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from flask import Flask, render_template, request, g, session, flash, \
-     redirect, url_for, abort
-from simpleopenid import SimpleOpenID
-
-from sqlalchemy import create_engine, Column, Integer, String
-from sqlalchemy.orm import scoped_session, sessionmaker
-from sqlalchemy.ext.declarative import declarative_base
-
-# configuration
-DATABASE_URI = 'sqlite:////tmp/openidexample.db'
-OPENID_FS_PATH = '/tmp/openidexample-store'
-SECRET_KEY = 'development key'
-DEBUG = True
-
-# setup flask
-app = Flask(__name__)
-app.debug = DEBUG
-app.secret_key = SECRET_KEY
-
-# setup simpleopenid
-oid = SimpleOpenID(OPENID_FS_PATH)
-
-# setup sqlalchemy
-engine = create_engine(DATABASE_URI)
-db_session = scoped_session(sessionmaker(autocommit=False,
-                                         autoflush=False,
-                                         bind=engine))
-Base = declarative_base()
-Base.query = db_session.query_property()
-
-def init_db():
-    Base.metadata.create_all(bind=engine)
-
-
-class User(Base):
-    __tablename__ = 'users'
-    id = Column(Integer, primary_key=True)
-    name = Column(String(60))
-    email = Column(String(200))
-    openid = Column(String(200))
-
-    def __init__(self, name, email, openid):
-        self.name = name
-        self.email = email
-        self.openid = openid
-
-
-@app.before_request
-def before_request():
-    g.user = None
-    if 'openid' in session:
-        g.user = User.query.filter_by(openid=session['openid']).first()
-
-
-@app.route('/')
-def index():
-    return render_template('index.html')
-
-
-@app.route('/login', methods=['GET', 'POST'])
-@oid.loginhandler
-def login():
-    """"""Does the login via OpenID.  Has to call into `oid.try_login`
-    to start the OpenID machinery.
-    """"""
-    # if we are already logged in, go back to were we came from
-    if g.user is not None:
-        return redirect(oid.get_next_url())
-    if request.method == 'POST':
-        openid = request.form.get('openid')
-        if openid:
-            return oid.try_login(openid)
-    return render_template('login.html', next_url=oid.get_next_url())
-
-
-@oid.after_login
-def create_or_login(identity_url):
-    """"""This is called when login with OpenID succeeded and it's not
-    necessary to figure out if this is the users's first login or not.
-    This function has to redirect otherwise the user will be presented
-    with a terrible URL which we certainly don't want.
-    """"""
-    session['openid'] = identity_url
-    user = User.query.filter_by(openid=identity_url).first()
-    if user is not None:
-        flash(u'Successfully signed in')
-        g.user = user
-        return redirect(oid.get_next_url())
-    return redirect(url_for('create_profile', next=oid.get_next_url()))
-
-
-@app.route('/create-profile', methods=['GET', 'POST'])
-def create_profile():
-    """"""If this is the user's first login, the create_or_login function
-    will redirect here so that the user can set up his profile.
-    """"""
-    if g.user is not None or 'openid' not in session:
-        return redirect(url_for('index'))
-    if request.method == 'POST':
-        name = request.form['name']
-        email = request.form['email']
-        if not name:
-            flash(u'Error: you have to provide a name')
-        elif '@' not in email:
-            flash(u'Error: you have to enter a valid email address')
-        else:
-            flash(u'Profile successfully created')
-            db_session.add(User(name, email, session['openid']))
-            db_session.commit()
-            return redirect(oid.get_next_url())
-    return render_template('create_profile.html', next_url=oid.get_next_url())
-
-
-@app.route('/profile', methods=['GET', 'POST'])
-def edit_profile():
-    """"""Updates a profile""""""
-    if g.user is None:
-        abort(401)
-    form = dict(name=g.user.name, email=g.user.email)
-    if request.method == 'POST':
-        if 'delete' in request.form:
-            db_session.delete(g.user)
-            db_session.commit()
-            session['openid'] = None
-            flash(u'Profile deleted')
-            return redirect(url_for('index'))
-        form['name'] = request.form['name']
-        form['email'] = request.form['email']
-        if not form['name']:
-            flash(u'Error: you have to provide a name')
-        elif '@' not in form['email']:
-            flash(u'Error: you have to enter a valid email address')
-        else:
-            flash(u'Profile successfully created')
-            g.user.name = form['name']
-            g.user.email = form['email']
-            db_session.commit()
-            return redirect(url_for('edit_profile'))
-    return render_template('edit_profile.html', form=form)
-
-
-@app.route('/logout')
-def logout():
-    session.pop('openid', None)
-    flash(u'You were signed out')
-    return redirect(oid.get_next_url())
-
-
-if __name__ == '__main__':
-    app.run()
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/simpleopenid.py,examples/openidexample/simpleopenid.py,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/simpleopenid.py b/examples/openidexample/simpleopenid.py
deleted file mode 100644
index c8e86463..00000000
--- a/examples/openidexample/simpleopenid.py
+++ /dev/null
@@ -1,108 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    simpleopenid
-    ~~~~~~~~~~~~
-
-    Tiny wrapper around python-openid to make working with the basic
-    API in a flask application easier.  Adapt this code for your own
-    project if necessary.
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from functools import wraps
-
-from flask import request, session, flash, redirect
-from werkzeug import url_quote
-
-from openid.association import Association
-from openid.store.interface import OpenIDStore
-from openid.store.filestore import FileOpenIDStore
-from openid.consumer.consumer import Consumer, SUCCESS, CANCEL
-from openid.consumer import discover
-from openid.store import nonce
-
-# python-openid is a really stupid library in that regard, we have
-# to disable logging by monkey patching
-from openid import oidutil
-oidutil.log = lambda *a, **kw: None
-
-
-class SimpleOpenID(object):
-    """"""Simple helper class for OpenID auth.""""""
-
-    def __init__(self, store_path):
-        self.store_path = store_path
-        self.after_login_func = None
-
-    def create_store(self):
-        """"""Creates the filesystem store""""""
-        return FileOpenIDStore(self.store_path)
-
-    def signal_error(self, msg):
-        """"""Signals an error.  It does this by flashing a message""""""
-        flash(u'Error: ' + msg)
-
-    def get_next_url(self):
-        """"""Return the URL where we want to redirect to.""""""
-        return request.values.get('next') or \
-               request.referrer or \
-               request.url_root
-
-    def get_current_url(self):
-        """"""the current URL + next""""""
-        return request.base_url + '?next=' + url_quote(self.get_next_url())
-
-    def get_success_url(self):
-        """"""Return the success URL""""""
-        return self.get_current_url() + '&openid_complete=yes'
-
-    def errorhandler(f):
-        """"""Called if an error occours with the message.  By default
-        ``'Error: message'`` is flashed.
-        """"""
-        self.signal_error = f
-        return f
-
-    def after_login(self, f):
-        """"""This function will be called after login.  It must redirect to
-        a different place and remember the user somewhere.  The session
-        is not modified by SimpleOpenID.
-        """"""
-        self.after_login_func = f
-        return f
-
-    def loginhandler(self, f):
-        """"""Marks a function as login handler.  This decorator injects some
-        more OpenID required logic.
-        """"""
-        self.login_endpoint = f.__name__
-        @wraps(f)
-        def decorated(*args, **kwargs):
-            if request.args.get('openid_complete') != u'yes':
-                return f(*args, **kwargs)
-            consumer = Consumer(session, self.create_store())
-            openid_response = consumer.complete(request.args.to_dict(),
-                                                self.get_current_url())
-            if openid_response.status == SUCCESS:
-                return self.after_login_func(openid_response.identity_url)
-            elif openid_response.status == CANCEL:
-                self.signal_error(u'The request was cancelled')
-                return redirect(self.get_current_url())
-            self.signal_error(u'OpenID authentication error')
-            return redirect(self.get_current_url())
-        return decorated
-
-    def try_login(self, identity_url):
-        """"""This tries to login with the given identity URL.  This function
-        must be called from the login_handler.
-        """"""
-        try:
-            consumer = Consumer(session, self.create_store())
-            auth_request = consumer.begin(identity_url)
-        except discover.DiscoveryFailure:
-            self.signal_error(u'The OpenID was invalid')
-            return redirect(self.get_current_url())
-        trust_root = request.host_url
-        return redirect(auth_request.redirectURL(request.host_url,
-                                                 self.get_success_url()))
","diff --git a/examples/openidexample/simpleopenid.py b/examples/openidexample/simpleopenid.py
deleted file mode 100644
index c8e86463..00000000
--- a/examples/openidexample/simpleopenid.py
+++ /dev/null
@@ -1,108 +0,0 @@
-# -*- coding: utf-8 -*-
-""""""
-    simpleopenid
-    ~~~~~~~~~~~~
-
-    Tiny wrapper around python-openid to make working with the basic
-    API in a flask application easier.  Adapt this code for your own
-    project if necessary.
-
-    :copyright: (c) 2010 by Armin Ronacher.
-    :license: BSD, see LICENSE for more details.
-""""""
-from functools import wraps
-
-from flask import request, session, flash, redirect
-from werkzeug import url_quote
-
-from openid.association import Association
-from openid.store.interface import OpenIDStore
-from openid.store.filestore import FileOpenIDStore
-from openid.consumer.consumer import Consumer, SUCCESS, CANCEL
-from openid.consumer import discover
-from openid.store import nonce
-
-# python-openid is a really stupid library in that regard, we have
-# to disable logging by monkey patching
-from openid import oidutil
-oidutil.log = lambda *a, **kw: None
-
-
-class SimpleOpenID(object):
-    """"""Simple helper class for OpenID auth.""""""
-
-    def __init__(self, store_path):
-        self.store_path = store_path
-        self.after_login_func = None
-
-    def create_store(self):
-        """"""Creates the filesystem store""""""
-        return FileOpenIDStore(self.store_path)
-
-    def signal_error(self, msg):
-        """"""Signals an error.  It does this by flashing a message""""""
-        flash(u'Error: ' + msg)
-
-    def get_next_url(self):
-        """"""Return the URL where we want to redirect to.""""""
-        return request.values.get('next') or \
-               request.referrer or \
-               request.url_root
-
-    def get_current_url(self):
-        """"""the current URL + next""""""
-        return request.base_url + '?next=' + url_quote(self.get_next_url())
-
-    def get_success_url(self):
-        """"""Return the success URL""""""
-        return self.get_current_url() + '&openid_complete=yes'
-
-    def errorhandler(f):
-        """"""Called if an error occours with the message.  By default
-        ``'Error: message'`` is flashed.
-        """"""
-        self.signal_error = f
-        return f
-
-    def after_login(self, f):
-        """"""This function will be called after login.  It must redirect to
-        a different place and remember the user somewhere.  The session
-        is not modified by SimpleOpenID.
-        """"""
-        self.after_login_func = f
-        return f
-
-    def loginhandler(self, f):
-        """"""Marks a function as login handler.  This decorator injects some
-        more OpenID required logic.
-        """"""
-        self.login_endpoint = f.__name__
-        @wraps(f)
-        def decorated(*args, **kwargs):
-            if request.args.get('openid_complete') != u'yes':
-                return f(*args, **kwargs)
-            consumer = Consumer(session, self.create_store())
-            openid_response = consumer.complete(request.args.to_dict(),
-                                                self.get_current_url())
-            if openid_response.status == SUCCESS:
-                return self.after_login_func(openid_response.identity_url)
-            elif openid_response.status == CANCEL:
-                self.signal_error(u'The request was cancelled')
-                return redirect(self.get_current_url())
-            self.signal_error(u'OpenID authentication error')
-            return redirect(self.get_current_url())
-        return decorated
-
-    def try_login(self, identity_url):
-        """"""This tries to login with the given identity URL.  This function
-        must be called from the login_handler.
-        """"""
-        try:
-            consumer = Consumer(session, self.create_store())
-            auth_request = consumer.begin(identity_url)
-        except discover.DiscoveryFailure:
-            self.signal_error(u'The OpenID was invalid')
-            return redirect(self.get_current_url())
-        trust_root = request.host_url
-        return redirect(auth_request.redirectURL(request.host_url,
-                                                 self.get_success_url()))
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/static/openid.png,examples/openidexample/static/openid.png,examples/openidexample/static/openid.png,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/static/openid.png b/examples/openidexample/static/openid.png
deleted file mode 100644
index ce7954ab..00000000
Binary files a/examples/openidexample/static/openid.png and /dev/null differ
","diff --git a/examples/openidexample/static/openid.png b/examples/openidexample/static/openid.png
deleted file mode 100644
index ce7954ab..00000000
Binary files a/examples/openidexample/static/openid.png and /dev/null differ
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/static/style.css,examples/openidexample/static/style.css,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/static/style.css b/examples/openidexample/static/style.css
deleted file mode 100644
index 33d9816b..00000000
--- a/examples/openidexample/static/style.css
+++ /dev/null
@@ -1,39 +0,0 @@
-body {
-    font-family: 'Georgia', serif;
-    font-size: 16px;
-    margin: 30px;
-    padding: 0;
-}
-
-a {
-    color: #335E79;
-}
-
-p.message {
-    color: #335E79;
-    padding: 10px;
-    background: #CADEEB;
-}
-
-input {
-    font-family: 'Georgia', serif;
-    font-size: 16px;
-    border: 1px solid black;
-    color: #335E79;
-    padding: 2px;
-}
-
-input[type=""submit""] {
-    background: #CADEEB;
-    color: #335E79;
-    border-color: #335E79;
-}
-
-input[name=""openid""] {
-    background: url(openid.png) 4px no-repeat;
-    padding-left: 24px;
-}
-
-h1, h2 {
-    font-weight: normal;
-}
","diff --git a/examples/openidexample/static/style.css b/examples/openidexample/static/style.css
deleted file mode 100644
index 33d9816b..00000000
--- a/examples/openidexample/static/style.css
+++ /dev/null
@@ -1,39 +0,0 @@
-body {
-    font-family: 'Georgia', serif;
-    font-size: 16px;
-    margin: 30px;
-    padding: 0;
-}
-
-a {
-    color: #335E79;
-}
-
-p.message {
-    color: #335E79;
-    padding: 10px;
-    background: #CADEEB;
-}
-
-input {
-    font-family: 'Georgia', serif;
-    font-size: 16px;
-    border: 1px solid black;
-    color: #335E79;
-    padding: 2px;
-}
-
-input[type=""submit""] {
-    background: #CADEEB;
-    color: #335E79;
-    border-color: #335E79;
-}
-
-input[name=""openid""] {
-    background: url(openid.png) 4px no-repeat;
-    padding-left: 24px;
-}
-
-h1, h2 {
-    font-weight: normal;
-}
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/templates/create_profile.html,examples/openidexample/templates/create_profile.html,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/templates/create_profile.html b/examples/openidexample/templates/create_profile.html
deleted file mode 100644
index 73a469a2..00000000
--- a/examples/openidexample/templates/create_profile.html
+++ /dev/null
@@ -1,22 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Create Profile{% endblock %}
-{% block body %}
-  <h2>Create Profile</h2>
-  <p>
-    Hey!  This is the first time you signed in on this website.  In
-    order to proceed we need a couple of more information from you:
-  <form action="""" method=post>
-    <dl>
-      <dt>Name:
-      <dd><input type=text name=name size=30 value=""{{ request.form.name }}"">
-      <dt>E-Mail
-      <dd><input type=text name=email size=30 value=""{{ request.form.email }}"">
-    </dl>
-    <p>
-      <input type=submit value=""Create profile"">
-      <input type=hidden name=next value=""{{ next_url }}"">
-  </form>
-  <p>
-    If you don't want to proceed, you can <a href=""{{ url_for('logout')
-    }}"">sign out</a> again.
-{% endblock %}
","diff --git a/examples/openidexample/templates/create_profile.html b/examples/openidexample/templates/create_profile.html
deleted file mode 100644
index 73a469a2..00000000
--- a/examples/openidexample/templates/create_profile.html
+++ /dev/null
@@ -1,22 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Create Profile{% endblock %}
-{% block body %}
-  <h2>Create Profile</h2>
-  <p>
-    Hey!  This is the first time you signed in on this website.  In
-    order to proceed we need a couple of more information from you:
-  <form action="""" method=post>
-    <dl>
-      <dt>Name:
-      <dd><input type=text name=name size=30 value=""{{ request.form.name }}"">
-      <dt>E-Mail
-      <dd><input type=text name=email size=30 value=""{{ request.form.email }}"">
-    </dl>
-    <p>
-      <input type=submit value=""Create profile"">
-      <input type=hidden name=next value=""{{ next_url }}"">
-  </form>
-  <p>
-    If you don't want to proceed, you can <a href=""{{ url_for('logout')
-    }}"">sign out</a> again.
-{% endblock %}
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/templates/edit_profile.html,examples/openidexample/templates/edit_profile.html,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/templates/edit_profile.html b/examples/openidexample/templates/edit_profile.html
deleted file mode 100644
index a9b6b877..00000000
--- a/examples/openidexample/templates/edit_profile.html
+++ /dev/null
@@ -1,16 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Edit Profile{% endblock %}
-{% block body %}
-  <h2>Edit Profile</h2>
-  <form action="""" method=post>
-    <dl>
-      <dt>Name:
-      <dd><input type=text name=name size=30 value=""{{ form.name }}"">
-      <dt>E-Mail
-      <dd><input type=text name=email size=30 value=""{{ form.email }}"">
-    </dl>
-    <p>
-      <input type=submit value=""Update profile"">
-      <input type=submit name=delete value=""Delete"">
-  </form>
-{% endblock %}
","diff --git a/examples/openidexample/templates/edit_profile.html b/examples/openidexample/templates/edit_profile.html
deleted file mode 100644
index a9b6b877..00000000
--- a/examples/openidexample/templates/edit_profile.html
+++ /dev/null
@@ -1,16 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Edit Profile{% endblock %}
-{% block body %}
-  <h2>Edit Profile</h2>
-  <form action="""" method=post>
-    <dl>
-      <dt>Name:
-      <dd><input type=text name=name size=30 value=""{{ form.name }}"">
-      <dt>E-Mail
-      <dd><input type=text name=email size=30 value=""{{ form.email }}"">
-    </dl>
-    <p>
-      <input type=submit value=""Update profile"">
-      <input type=submit name=delete value=""Delete"">
-  </form>
-{% endblock %}
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/templates/index.html,examples/openidexample/templates/index.html,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/templates/index.html b/examples/openidexample/templates/index.html
deleted file mode 100644
index 54f5161b..00000000
--- a/examples/openidexample/templates/index.html
+++ /dev/null
@@ -1,10 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-  <h2>Overview</h2>
-  {% if g.user %}
-  <p>
-    Hello {{ g.user.name }}!
-  {% endif %}
-  <p>
-    This is just an example page so that something is here.
-{% endblock %}
","diff --git a/examples/openidexample/templates/index.html b/examples/openidexample/templates/index.html
deleted file mode 100644
index 54f5161b..00000000
--- a/examples/openidexample/templates/index.html
+++ /dev/null
@@ -1,10 +0,0 @@
-{% extends ""layout.html"" %}
-{% block body %}
-  <h2>Overview</h2>
-  {% if g.user %}
-  <p>
-    Hello {{ g.user.name }}!
-  {% endif %}
-  <p>
-    This is just an example page so that something is here.
-{% endblock %}
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/templates/layout.html,examples/openidexample/templates/layout.html,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/templates/layout.html b/examples/openidexample/templates/layout.html
deleted file mode 100644
index 3fad7c07..00000000
--- a/examples/openidexample/templates/layout.html
+++ /dev/null
@@ -1,18 +0,0 @@
-<!doctype html>
-<title>{% block title %}Welcome{% endblock %} | Flask OpenID Example</title>
-<link rel=stylesheet type=text/css href=""{{ url_for('static',
-  filename='style.css') }}"">
-<h1>Flask OpenID Example</h1>
-<ul class=navigation>
-  <li><a href=""{{ url_for('index') }}"">overview</a>
-  {% if g.user %}
-  <li><a href=""{{ url_for('edit_profile') }}"">profile</a>
-  <li><a href=""{{ url_for('logout') }}"">sign out [{{ g.user.name }}]</a>
-  {% else %}
-  <li><a href=""{{ url_for('login') }}"">sign in</a>
-  {% endif %}
-</ul>
-{% for message in get_flashed_messages() %}
-  <p class=message>{{ message }}
-{% endfor %}
-{% block body %}{% endblock %}
","diff --git a/examples/openidexample/templates/layout.html b/examples/openidexample/templates/layout.html
deleted file mode 100644
index 3fad7c07..00000000
--- a/examples/openidexample/templates/layout.html
+++ /dev/null
@@ -1,18 +0,0 @@
-<!doctype html>
-<title>{% block title %}Welcome{% endblock %} | Flask OpenID Example</title>
-<link rel=stylesheet type=text/css href=""{{ url_for('static',
-  filename='style.css') }}"">
-<h1>Flask OpenID Example</h1>
-<ul class=navigation>
-  <li><a href=""{{ url_for('index') }}"">overview</a>
-  {% if g.user %}
-  <li><a href=""{{ url_for('edit_profile') }}"">profile</a>
-  <li><a href=""{{ url_for('logout') }}"">sign out [{{ g.user.name }}]</a>
-  {% else %}
-  <li><a href=""{{ url_for('login') }}"">sign in</a>
-  {% endif %}
-</ul>
-{% for message in get_flashed_messages() %}
-  <p class=message>{{ message }}
-{% endfor %}
-{% block body %}{% endblock %}
"
f6da77e894a939b838e02fb744fa3031abfc96ec,da8f88a22eab8195e48fa4ef63c6a3195c860eb0,examples/openidexample/templates/login.html,examples/openidexample/templates/login.html,,"Removed OpenID example, that's now in flaskext.openid anyways.","diff --git a/examples/openidexample/templates/login.html b/examples/openidexample/templates/login.html
deleted file mode 100644
index 9c7c8ade..00000000
--- a/examples/openidexample/templates/login.html
+++ /dev/null
@@ -1,12 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Sign in{% endblock %}
-{% block body %}
-  <h2>Sign in</h2>
-  <form action="""" method=post>
-    <p>
-      OpenID:
-      <input type=text name=openid size=30>
-      <input type=submit value=""Sign in"">
-      <input type=hidden name=next value=""{{ next_url }}"">
-  </form>
-{% endblock %}
","diff --git a/examples/openidexample/templates/login.html b/examples/openidexample/templates/login.html
deleted file mode 100644
index 9c7c8ade..00000000
--- a/examples/openidexample/templates/login.html
+++ /dev/null
@@ -1,12 +0,0 @@
-{% extends ""layout.html"" %}
-{% block title %}Sign in{% endblock %}
-{% block body %}
-  <h2>Sign in</h2>
-  <form action="""" method=post>
-    <p>
-      OpenID:
-      <input type=text name=openid size=30>
-      <input type=submit value=""Sign in"">
-      <input type=hidden name=next value=""{{ next_url }}"">
-  </form>
-{% endblock %}
"
da8f88a22eab8195e48fa4ef63c6a3195c860eb0,34e3d64892f2281aa1b6f6357c345b0a357ee51a,docs/_themes/flasky/static/flasky.css_t,docs/_themes/flasky/static/flasky.css_t,,"Removed theme, this is now refactored to an external reusable theme.","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
deleted file mode 100644
index 04c5c5f6..00000000
--- a/docs/_themes/flasky/static/flasky.css_t
+++ /dev/null
@@ -1,344 +0,0 @@
-/*
- * flasky.css_t
- * ~~~~~~~~~~~~
- *
- * Sphinx stylesheet -- flasky theme based on nature theme.
- *
- * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
- * :license: BSD, see LICENSE for details.
- *
- */
- 
-@import url(""basic.css"");
- 
-/* -- page layout ----------------------------------------------------------- */
- 
-body {
-    font-family: 'Georgia', serif;
-    font-size: 17px;
-    background-color: #ddd;
-    color: #000;
-    margin: 0;
-    padding: 0;
-}
-
-div.document {
-    background: #fafafa;
-}
-
-div.documentwrapper {
-    float: left;
-    width: 100%;
-}
-
-div.bodywrapper {
-    margin: 0 0 0 230px;
-}
-
-hr {
-    border: 1px solid #B1B4B6;
-}
- 
-div.body {
-    background-color: #ffffff;
-    color: #3E4349;
-    padding: 0 30px 30px 30px;
-    min-height: 34em;
-}
-
-img.floatingflask {
-    padding: 0 0 10px 10px;
-    float: right;
-}
- 
-div.footer {
-    position: absolute;
-    right: 0;
-    margin-top: -70px;
-    text-align: right;
-    color: #888;
-    padding: 10px;
-    font-size: 14px;
-}
- 
-div.footer a {
-    color: #888;
-    text-decoration: underline;
-}
- 
-div.related {
-    line-height: 32px;
-    color: #888;
-}
-
-div.related ul {
-    padding: 0 0 0 10px;
-}
- 
-div.related a {
-    color: #444;
-}
- 
-div.sphinxsidebar {
-    font-size: 14px;
-    line-height: 1.5;
-}
-
-div.sphinxsidebarwrapper {
-    padding: 0 20px;
-}
-
-div.sphinxsidebarwrapper p.logo {
-    padding: 20px 0 10px 0;
-    margin: 0;
-    text-align: center;
-}
- 
-div.sphinxsidebar h3,
-div.sphinxsidebar h4 {
-    font-family: 'Garamond', 'Georgia', serif;
-    color: #222;
-    font-size: 24px;
-    font-weight: normal;
-    margin: 20px 0 5px 0;
-    padding: 0;
-}
-
-div.sphinxsidebar h4 {
-    font-size: 20px;
-}
- 
-div.sphinxsidebar h3 a {
-    color: #444;
-}
- 
-div.sphinxsidebar p {
-    color: #555;
-    margin: 10px 0;
-}
- 
-div.sphinxsidebar ul {
-    margin: 10px 0;
-    padding: 0;
-    color: #000;
-}
- 
-div.sphinxsidebar a {
-    color: #444;
-    text-decoration: none;
-}
-
-div.sphinxsidebar a:hover {
-    text-decoration: underline;
-}
- 
-div.sphinxsidebar input {
-    border: 1px solid #ccc;
-    font-family: 'Georgia', serif;
-    font-size: 1em;
-}
- 
-/* -- body styles ----------------------------------------------------------- */
- 
-a {
-    color: #004B6B;
-    text-decoration: underline;
-}
- 
-a:hover {
-    color: #6D4100;
-    text-decoration: underline;
-}
-
-div.body {
-    padding-bottom: 40px; /* saved for footer */
-}
- 
-div.body h1,
-div.body h2,
-div.body h3,
-div.body h4,
-div.body h5,
-div.body h6 {
-    font-family: 'Garamond', 'Georgia', serif;
-    font-weight: normal;
-    margin: 30px 0px 10px 0px;
-    padding: 0;
-}
- 
-div.body h1 { margin-top: 0; padding-top: 20px; font-size: 240%; }
-div.body h2 { font-size: 180%; }
-div.body h3 { font-size: 150%; }
-div.body h4 { font-size: 130%; }
-div.body h5 { font-size: 100%; }
-div.body h6 { font-size: 100%; }
- 
-a.headerlink {
-    color: white;
-    padding: 0 4px;
-    text-decoration: none;
-}
- 
-a.headerlink:hover {
-    color: #444;
-    background: #eaeaea;
-}
- 
-div.body p, div.body dd, div.body li {
-    line-height: 1.4em;
-}
-
-div.admonition {
-    background: #fafafa;
-    margin: 20px -30px;
-    padding: 10px 30px;
-    border-top: 1px solid #ccc;
-    border-bottom: 1px solid #ccc;
-}
-
-div.admonition p.admonition-title {
-    font-family: 'Garamond', 'Georgia', serif;
-    font-weight: normal;
-    font-size: 24px;
-    margin: 0 0 10px 0;
-    padding: 0;
-    line-height: 1;
-}
-
-div.admonition p.last {
-    margin-bottom: 0;
-}
-
-div.highlight{
-    background-color: white;
-}
-
-dt:target, .highlight {
-    background: #FAF3E8;
-}
-
-div.note {
-    background-color: #eee;
-    border: 1px solid #ccc;
-}
- 
-div.seealso {
-    background-color: #ffc;
-    border: 1px solid #ff6;
-}
- 
-div.topic {
-    background-color: #eee;
-}
- 
-div.warning {
-    background-color: #ffe4e4;
-    border: 1px solid #f66;
-}
- 
-p.admonition-title {
-    display: inline;
-}
- 
-p.admonition-title:after {
-    content: "":"";
-}
-
-pre, tt {
-    font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono', monospace;
-    font-size: 0.9em;
-}
-
-img.screenshot {
-}
-
-tt.descname, tt.descclassname {
-    font-size: 0.95em;
-}
-
-tt.descname {
-    padding-right: 0.08em;
-}
-
-img.screenshot {
-    -moz-box-shadow: 2px 2px 4px #eee;
-    -webkit-box-shadow: 2px 2px 4px #eee;
-    box-shadow: 2px 2px 4px #eee;
-}
-
-table.docutils {
-    border: 1px solid #888;
-    -moz-box-shadow: 2px 2px 4px #eee;
-    -webkit-box-shadow: 2px 2px 4px #eee;
-    box-shadow: 2px 2px 4px #eee;
-}
-
-table.docutils td, table.docutils th {
-    border: 1px solid #888;
-    padding: 0.25em 0.7em;
-}
-
-table.field-list, table.footnote {
-    border: none;
-    -moz-box-shadow: none;
-    -webkit-box-shadow: none;
-    box-shadow: none;
-}
-
-table.footnote {
-    margin: 15px 0;
-    width: 100%;
-    border: 1px solid #eee;
-}
-
-table.field-list th {
-    padding: 0 0.8em 0 0;
-}
-
-table.field-list td {
-    padding: 0;
-}
-
-table.footnote td {
-    padding: 0.5em;
-}
-
-dl {
-    margin: 0;
-    padding: 0;
-}
-
-dl dd {
-    margin-left: 30px;
-}
- 
-pre {
-    background: #eee;
-    padding: 7px 30px;
-    margin: 15px -30px;
-    line-height: 1.3em;
-}
-
-dl pre {
-    margin-left: -60px;
-    padding-left: 60px;
-}
-
-dl dl pre {
-    margin-left: -90px;
-    padding-left: 90px;
-}
- 
-tt {
-    background-color: #ecf0f3;
-    color: #222;
-    /* padding: 1px 2px; */
-}
-
-tt.xref, a tt {
-    background-color: #FBFBFB;
-}
-
-a:hover tt {
-    background: #EEE;
-}
","diff --git a/docs/_themes/flasky/static/flasky.css_t b/docs/_themes/flasky/static/flasky.css_t
deleted file mode 100644
index 04c5c5f6..00000000
--- a/docs/_themes/flasky/static/flasky.css_t
+++ /dev/null
@@ -1,344 +0,0 @@
-/*
- * flasky.css_t
- * ~~~~~~~~~~~~
- *
- * Sphinx stylesheet -- flasky theme based on nature theme.
- *
- * :copyright: Copyright 2007-2010 by the Sphinx team, see AUTHORS.
- * :license: BSD, see LICENSE for details.
- *
- */
- 
-@import url(""basic.css"");
- 
-/* -- page layout ----------------------------------------------------------- */
- 
-body {
-    font-family: 'Georgia', serif;
-    font-size: 17px;
-    background-color: #ddd;
-    color: #000;
-    margin: 0;
-    padding: 0;
-}
-
-div.document {
-    background: #fafafa;
-}
-
-div.documentwrapper {
-    float: left;
-    width: 100%;
-}
-
-div.bodywrapper {
-    margin: 0 0 0 230px;
-}
-
-hr {
-    border: 1px solid #B1B4B6;
-}
- 
-div.body {
-    background-color: #ffffff;
-    color: #3E4349;
-    padding: 0 30px 30px 30px;
-    min-height: 34em;
-}
-
-img.floatingflask {
-    padding: 0 0 10px 10px;
-    float: right;
-}
- 
-div.footer {
-    position: absolute;
-    right: 0;
-    margin-top: -70px;
-    text-align: right;
-    color: #888;
-    padding: 10px;
-    font-size: 14px;
-}
- 
-div.footer a {
-    color: #888;
-    text-decoration: underline;
-}
- 
-div.related {
-    line-height: 32px;
-    color: #888;
-}
-
-div.related ul {
-    padding: 0 0 0 10px;
-}
- 
-div.related a {
-    color: #444;
-}
- 
-div.sphinxsidebar {
-    font-size: 14px;
-    line-height: 1.5;
-}
-
-div.sphinxsidebarwrapper {
-    padding: 0 20px;
-}
-
-div.sphinxsidebarwrapper p.logo {
-    padding: 20px 0 10px 0;
-    margin: 0;
-    text-align: center;
-}
- 
-div.sphinxsidebar h3,
-div.sphinxsidebar h4 {
-    font-family: 'Garamond', 'Georgia', serif;
-    color: #222;
-    font-size: 24px;
-    font-weight: normal;
-    margin: 20px 0 5px 0;
-    padding: 0;
-}
-
-div.sphinxsidebar h4 {
-    font-size: 20px;
-}
- 
-div.sphinxsidebar h3 a {
-    color: #444;
-}
- 
-div.sphinxsidebar p {
-    color: #555;
-    margin: 10px 0;
-}
- 
-div.sphinxsidebar ul {
-    margin: 10px 0;
-    padding: 0;
-    color: #000;
-}
- 
-div.sphinxsidebar a {
-    color: #444;
-    text-decoration: none;
-}
-
-div.sphinxsidebar a:hover {
-    text-decoration: underline;
-}
- 
-div.sphinxsidebar input {
-    border: 1px solid #ccc;
-    font-family: 'Georgia', serif;
-    font-size: 1em;
-}
- 
-/* -- body styles ----------------------------------------------------------- */
- 
-a {
-    color: #004B6B;
-    text-decoration: underline;
-}
- 
-a:hover {
-    color: #6D4100;
-    text-decoration: underline;
-}
-
-div.body {
-    padding-bottom: 40px; /* saved for footer */
-}
- 
-div.body h1,
-div.body h2,
-div.body h3,
-div.body h4,
-div.body h5,
-div.body h6 {
-    font-family: 'Garamond', 'Georgia', serif;
-    font-weight: normal;
-    margin: 30px 0px 10px 0px;
-    padding: 0;
-}
- 
-div.body h1 { margin-top: 0; padding-top: 20px; font-size: 240%; }
-div.body h2 { font-size: 180%; }
-div.body h3 { font-size: 150%; }
-div.body h4 { font-size: 130%; }
-div.body h5 { font-size: 100%; }
-div.body h6 { font-size: 100%; }
- 
-a.headerlink {
-    color: white;
-    padding: 0 4px;
-    text-decoration: none;
-}
- 
-a.headerlink:hover {
-    color: #444;
-    background: #eaeaea;
-}
- 
-div.body p, div.body dd, div.body li {
-    line-height: 1.4em;
-}
-
-div.admonition {
-    background: #fafafa;
-    margin: 20px -30px;
-    padding: 10px 30px;
-    border-top: 1px solid #ccc;
-    border-bottom: 1px solid #ccc;
-}
-
-div.admonition p.admonition-title {
-    font-family: 'Garamond', 'Georgia', serif;
-    font-weight: normal;
-    font-size: 24px;
-    margin: 0 0 10px 0;
-    padding: 0;
-    line-height: 1;
-}
-
-div.admonition p.last {
-    margin-bottom: 0;
-}
-
-div.highlight{
-    background-color: white;
-}
-
-dt:target, .highlight {
-    background: #FAF3E8;
-}
-
-div.note {
-    background-color: #eee;
-    border: 1px solid #ccc;
-}
- 
-div.seealso {
-    background-color: #ffc;
-    border: 1px solid #ff6;
-}
- 
-div.topic {
-    background-color: #eee;
-}
- 
-div.warning {
-    background-color: #ffe4e4;
-    border: 1px solid #f66;
-}
- 
-p.admonition-title {
-    display: inline;
-}
- 
-p.admonition-title:after {
-    content: "":"";
-}
-
-pre, tt {
-    font-family: 'Consolas', 'Menlo', 'Deja Vu Sans Mono', 'Bitstream Vera Sans Mono', monospace;
-    font-size: 0.9em;
-}
-
-img.screenshot {
-}
-
-tt.descname, tt.descclassname {
-    font-size: 0.95em;
-}
-
-tt.descname {
-    padding-right: 0.08em;
-}
-
-img.screenshot {
-    -moz-box-shadow: 2px 2px 4px #eee;
-    -webkit-box-shadow: 2px 2px 4px #eee;
-    box-shadow: 2px 2px 4px #eee;
-}
-
-table.docutils {
-    border: 1px solid #888;
-    -moz-box-shadow: 2px 2px 4px #eee;
-    -webkit-box-shadow: 2px 2px 4px #eee;
-    box-shadow: 2px 2px 4px #eee;
-}
-
-table.docutils td, table.docutils th {
-    border: 1px solid #888;
-    padding: 0.25em 0.7em;
-}
-
-table.field-list, table.footnote {
-    border: none;
-    -moz-box-shadow: none;
-    -webkit-box-shadow: none;
-    box-shadow: none;
-}
-
-table.footnote {
-    margin: 15px 0;
-    width: 100%;
-    border: 1px solid #eee;
-}
-
-table.field-list th {
-    padding: 0 0.8em 0 0;
-}
-
-table.field-list td {
-    padding: 0;
-}
-
-table.footnote td {
-    padding: 0.5em;
-}
-
-dl {
-    margin: 0;
-    padding: 0;
-}
-
-dl dd {
-    margin-left: 30px;
-}
- 
-pre {
-    background: #eee;
-    padding: 7px 30px;
-    margin: 15px -30px;
-    line-height: 1.3em;
-}
-
-dl pre {
-    margin-left: -60px;
-    padding-left: 60px;
-}
-
-dl dl pre {
-    margin-left: -90px;
-    padding-left: 90px;
-}
- 
-tt {
-    background-color: #ecf0f3;
-    color: #222;
-    /* padding: 1px 2px; */
-}
-
-tt.xref, a tt {
-    background-color: #FBFBFB;
-}
-
-a:hover tt {
-    background: #EEE;
-}
"
da8f88a22eab8195e48fa4ef63c6a3195c860eb0,34e3d64892f2281aa1b6f6357c345b0a357ee51a,docs/_themes/flasky/theme.conf,docs/_themes/flasky/theme.conf,,"Removed theme, this is now refactored to an external reusable theme.","diff --git a/docs/_themes/flasky/theme.conf b/docs/_themes/flasky/theme.conf
deleted file mode 100644
index cb9eb465..00000000
--- a/docs/_themes/flasky/theme.conf
+++ /dev/null
@@ -1,3 +0,0 @@
-[theme]
-inherit = basic
-stylesheet = flasky.css
","diff --git a/docs/_themes/flasky/theme.conf b/docs/_themes/flasky/theme.conf
deleted file mode 100644
index cb9eb465..00000000
--- a/docs/_themes/flasky/theme.conf
+++ /dev/null
@@ -1,3 +0,0 @@
-[theme]
-inherit = basic
-stylesheet = flasky.css
"
da8f88a22eab8195e48fa4ef63c6a3195c860eb0,34e3d64892f2281aa1b6f6357c345b0a357ee51a,docs/conf.py,docs/conf.py,docs/conf.py,"Removed theme, this is now refactored to an external reusable theme.","diff --git a/docs/conf.py b/docs/conf.py
index f4756ae0..ff5951b3 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -16,7 +16,7 @@ import sys, os
 # If extensions (or modules to document with autodoc) are in another directory,
 # add these directories to sys.path here. If the directory is relative to the
 # documentation root, use os.path.abspath to make it absolute, like shown here.
-sys.path.append(os.path.abspath('.'))
+sys.path.append(os.path.abspath('_themes'))
 
 # -- General configuration -----------------------------------------------------
 
@@ -79,9 +79,6 @@ exclude_patterns = ['_build']
 # output. They are ignored by default.
 #show_authors = False
 
-# The name of the Pygments (syntax highlighting) style to use.
-pygments_style = 'flaskext.FlaskyStyle'
-
 # A list of ignored prefixes for module index sorting.
 #modindex_common_prefix = []
 
@@ -90,7 +87,7 @@ pygments_style = 'flaskext.FlaskyStyle'
 
 # The theme to use for HTML and HTML Help pages.  Major themes that come with
 # Sphinx are currently 'default' and 'sphinxdoc'.
-html_theme = 'flasky'
+html_theme = 'flask'
 
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
","diff --git a/docs/conf.py b/docs/conf.py
index f4756ae0..ff5951b3 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -16,7 +16,7 @@ import sys, os
 # If extensions (or modules to document with autodoc) are in another directory,
 # add these directories to sys.path here. If the directory is relative to the
 # documentation root, use os.path.abspath to make it absolute, like shown here.
-sys.path.append(os.path.abspath('.'))
+sys.path.append(os.path.abspath('_themes'))
 
 # -- General configuration -----------------------------------------------------
 
@@ -79,9 +79,6 @@ exclude_patterns = ['_build']
 # output. They are ignored by default.
 #show_authors = False
 
-# The name of the Pygments (syntax highlighting) style to use.
-pygments_style = 'flaskext.FlaskyStyle'
-
 # A list of ignored prefixes for module index sorting.
 #modindex_common_prefix = []
 
@@ -90,7 +87,7 @@ pygments_style = 'flaskext.FlaskyStyle'
 
 # The theme to use for HTML and HTML Help pages.  Major themes that come with
 # Sphinx are currently 'default' and 'sphinxdoc'.
-html_theme = 'flasky'
+html_theme = 'flask'
 
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
"
34e3d64892f2281aa1b6f6357c345b0a357ee51a,4156bd412f2c27359844fbacdae1eb4983c94b8b,.gitmodules,,.gitmodules,added theme submodule,"diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 00000000..bf7b494f
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule ""docs/_themes""]
+	path = docs/_themes
+	url = git://github.com/mitsuhiko/flask-sphinx-themes.git
","diff --git a/.gitmodules b/.gitmodules
new file mode 100644
index 00000000..bf7b494f
--- /dev/null
+++ b/.gitmodules
@@ -0,0 +1,3 @@
+[submodule ""docs/_themes""]
+	path = docs/_themes
+	url = git://github.com/mitsuhiko/flask-sphinx-themes.git
"
34e3d64892f2281aa1b6f6357c345b0a357ee51a,4156bd412f2c27359844fbacdae1eb4983c94b8b,docs/_themes,,docs/_themes,added theme submodule,"diff --git a/docs/_themes b/docs/_themes
new file mode 160000
index 00000000..11cb6b51
--- /dev/null
+++ b/docs/_themes
@@ -0,0 +1 @@
+Subproject commit 11cb6b51c9ea3bc8f94afa3d7411b617f9db2570
","diff --git a/docs/_themes b/docs/_themes
new file mode 160000
index 00000000..11cb6b51
--- /dev/null
+++ b/docs/_themes
@@ -0,0 +1 @@
+Subproject commit 11cb6b51c9ea3bc8f94afa3d7411b617f9db2570
"
4156bd412f2c27359844fbacdae1eb4983c94b8b,2d87e9bc37ef1ce8f9068fac92783a4fe3d3d382,CHANGES,CHANGES,CHANGES,Added support for send_file,"diff --git a/CHANGES b/CHANGES
index c3489d27..b2f54fdc 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,7 @@ Version 0.2
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
+- added support for :func:`~flask.send_file`
 
 Version 0.1
 -----------
","diff --git a/CHANGES b/CHANGES
index c3489d27..b2f54fdc 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,7 @@ Version 0.2
   view function.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
+- added support for :func:`~flask.send_file`
 
 Version 0.1
 -----------
"
4156bd412f2c27359844fbacdae1eb4983c94b8b,2d87e9bc37ef1ce8f9068fac92783a4fe3d3d382,docs/api.rst,docs/api.rst,docs/api.rst,Added support for send_file,"diff --git a/docs/api.rst b/docs/api.rst
index ac761565..3e46dde4 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -213,6 +213,8 @@ Useful Functions and Classes
 
 .. autofunction:: redirect
 
+.. autofunction:: send_file
+
 .. autofunction:: escape
 
 .. autoclass:: Markup
","diff --git a/docs/api.rst b/docs/api.rst
index ac761565..3e46dde4 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -213,6 +213,8 @@ Useful Functions and Classes
 
 .. autofunction:: redirect
 
+.. autofunction:: send_file
+
 .. autofunction:: escape
 
 .. autoclass:: Markup
"
4156bd412f2c27359844fbacdae1eb4983c94b8b,2d87e9bc37ef1ce8f9068fac92783a4fe3d3d382,flask.py,flask.py,flask.py,Added support for send_file,"diff --git a/flask.py b/flask.py
index 28becb3f..3d1a8b7b 100644
--- a/flask.py
+++ b/flask.py
@@ -12,12 +12,13 @@
 from __future__ import with_statement
 import os
 import sys
+import mimetypes
 from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property
+     ImmutableDict, cached_property, wrap_file, Headers
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
@@ -235,6 +236,71 @@ def jsonify(*args, **kwargs):
         indent=None if request.is_xhr else 2), mimetype='application/json')
 
 
+def send_file(filename_or_fp, mimetype=None, as_attachment=False,
+              attachment_filename=None):
+    """"""Sends the contents of a file to the client.  This will use the
+    most efficient method available and configured.  By default it will
+    try to use the WSGI server's file_wrapper support.  Alternatively
+    you can set the application's :attr:`~Flask.use_x_sendfile` attribute
+    to ``True`` to directly emit an `X-Sendfile` header.  This however
+    requires support of the underlying webserver for `X-Sendfile`.
+
+    By default it will try to guess the mimetype for you, but you can
+    also explicitly provide one.  For extra security you probably want
+    to sent certain files as attachment (HTML for instance).
+
+    .. versionadded:: 0.2
+
+    :param filename_or_fp: the filename of the file to send.  This is
+                           relative to the :attr:`~Flask.root_path` if a
+                           relative path is specified.
+                           Alternatively a file object might be provided
+                           in which case `X-Sendfile` might not work and
+                           fall back to the traditional method.
+    :param mimetype: the mimetype of the file if provided, otherwise
+                     auto detection happens.
+    :param as_attachment: set to `True` if you want to send this file with
+                          a ``Content-Disposition: attachment`` header.
+    :param attachment_filename: the filename for the attachment if it
+                                differs from the file's filename.
+    """"""
+    if isinstance(filename_or_fp, basestring):
+        filename = filename_or_fp
+        file = None
+    else:
+        file = filename_or_fp
+        filename = getattr(file, 'name', None)
+    if filename is not None:
+        filename = os.path.join(current_app.root_path, filename)
+    if mimetype is None and (filename or attachment_filename):
+        mimetype = mimetypes.guess_type(filename or attachment_filename)[0]
+    if mimetype is None:
+        mimetype = 'application/octet-stream'
+
+    headers = Headers()
+    if as_attachment:
+        if attachment_filename is None:
+            if filename is None:
+                raise TypeError('filename unavailable, required for '
+                                'sending as attachment')
+            attachment_filename = os.path.basename(filename)
+        headers.add('Content-Disposition', 'attachment',
+                    filename=attachment_filename)
+
+    if current_app.use_x_sendfile and filename:
+        if file is not None:
+            file.close()
+        headers['X-Sendfile'] = filename
+        data = None
+    else:
+        if file is None:
+            file = open(filename, 'rb')
+        data = wrap_file(request.environ, file)
+
+    return Response(data, mimetype=mimetype, headers=headers,
+                    direct_passthrough=True)
+
+
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
@@ -344,6 +410,13 @@ class Flask(object):
     #: permanent session survive for roughly one month.
     permanent_session_lifetime = timedelta(days=31)
 
+    #: Enable this if you want to use the X-Sendfile feature.  Keep in
+    #: mind that the server has to support this.  This only affects files
+    #: sent with the :func:`send_file` method.
+    #:
+    #: .. versionadded:: 0.2
+    use_x_sendfile = False
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
","diff --git a/flask.py b/flask.py
index 28becb3f..3d1a8b7b 100644
--- a/flask.py
+++ b/flask.py
@@ -12,12 +12,13 @@
 from __future__ import with_statement
 import os
 import sys
+import mimetypes
 from datetime import datetime, timedelta
 
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property
+     ImmutableDict, cached_property, wrap_file, Headers
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException
 from werkzeug.contrib.securecookie import SecureCookie
@@ -235,6 +236,71 @@ def jsonify(*args, **kwargs):
         indent=None if request.is_xhr else 2), mimetype='application/json')
 
 
+def send_file(filename_or_fp, mimetype=None, as_attachment=False,
+              attachment_filename=None):
+    """"""Sends the contents of a file to the client.  This will use the
+    most efficient method available and configured.  By default it will
+    try to use the WSGI server's file_wrapper support.  Alternatively
+    you can set the application's :attr:`~Flask.use_x_sendfile` attribute
+    to ``True`` to directly emit an `X-Sendfile` header.  This however
+    requires support of the underlying webserver for `X-Sendfile`.
+
+    By default it will try to guess the mimetype for you, but you can
+    also explicitly provide one.  For extra security you probably want
+    to sent certain files as attachment (HTML for instance).
+
+    .. versionadded:: 0.2
+
+    :param filename_or_fp: the filename of the file to send.  This is
+                           relative to the :attr:`~Flask.root_path` if a
+                           relative path is specified.
+                           Alternatively a file object might be provided
+                           in which case `X-Sendfile` might not work and
+                           fall back to the traditional method.
+    :param mimetype: the mimetype of the file if provided, otherwise
+                     auto detection happens.
+    :param as_attachment: set to `True` if you want to send this file with
+                          a ``Content-Disposition: attachment`` header.
+    :param attachment_filename: the filename for the attachment if it
+                                differs from the file's filename.
+    """"""
+    if isinstance(filename_or_fp, basestring):
+        filename = filename_or_fp
+        file = None
+    else:
+        file = filename_or_fp
+        filename = getattr(file, 'name', None)
+    if filename is not None:
+        filename = os.path.join(current_app.root_path, filename)
+    if mimetype is None and (filename or attachment_filename):
+        mimetype = mimetypes.guess_type(filename or attachment_filename)[0]
+    if mimetype is None:
+        mimetype = 'application/octet-stream'
+
+    headers = Headers()
+    if as_attachment:
+        if attachment_filename is None:
+            if filename is None:
+                raise TypeError('filename unavailable, required for '
+                                'sending as attachment')
+            attachment_filename = os.path.basename(filename)
+        headers.add('Content-Disposition', 'attachment',
+                    filename=attachment_filename)
+
+    if current_app.use_x_sendfile and filename:
+        if file is not None:
+            file.close()
+        headers['X-Sendfile'] = filename
+        data = None
+    else:
+        if file is None:
+            file = open(filename, 'rb')
+        data = wrap_file(request.environ, file)
+
+    return Response(data, mimetype=mimetype, headers=headers,
+                    direct_passthrough=True)
+
+
 def render_template(template_name, **context):
     """"""Renders a template from the template folder with the given
     context.
@@ -344,6 +410,13 @@ class Flask(object):
     #: permanent session survive for roughly one month.
     permanent_session_lifetime = timedelta(days=31)
 
+    #: Enable this if you want to use the X-Sendfile feature.  Keep in
+    #: mind that the server has to support this.  This only affects files
+    #: sent with the :func:`send_file` method.
+    #:
+    #: .. versionadded:: 0.2
+    use_x_sendfile = False
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
"
4156bd412f2c27359844fbacdae1eb4983c94b8b,2d87e9bc37ef1ce8f9068fac92783a4fe3d3d382,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added support for send_file,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 1daf0d4b..29ae2762 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -17,7 +17,8 @@ import flask
 import unittest
 import tempfile
 from datetime import datetime
-from werkzeug import parse_date
+from werkzeug import parse_date, parse_options_header
+from cStringIO import StringIO
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -382,6 +383,87 @@ class TemplatingTestCase(unittest.TestCase):
         assert rv.data == 'dcba'
 
 
+class SendfileTestCase(unittest.TestCase):
+
+    def test_send_file_regular(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            rv = flask.send_file('static/index.html')
+            assert rv.direct_passthrough
+            assert rv.mimetype == 'text/html'
+            with app.open_resource('static/index.html') as f:
+                assert rv.data == f.read()
+
+    def test_send_file_xsendfile(self):
+        app = flask.Flask(__name__)
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            rv = flask.send_file('static/index.html')
+            assert rv.direct_passthrough
+            assert 'x-sendfile' in rv.headers
+            assert rv.headers['x-sendfile'] == \
+                os.path.join(app.root_path, 'static/index.html')
+            assert rv.mimetype == 'text/html'
+
+    def test_send_file_object(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f)
+            with app.open_resource('static/index.html') as f:
+                assert rv.data == f.read()
+            assert rv.mimetype == 'text/html'
+
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f)
+            assert rv.mimetype == 'text/html'
+            assert 'x-sendfile' in rv.headers
+            assert rv.headers['x-sendfile'] == \
+                os.path.join(app.root_path, 'static/index.html')
+
+        app.use_x_sendfile = False
+        with app.test_request_context():
+            f = StringIO('Test')
+            rv = flask.send_file(f)
+            assert rv.data == 'Test'
+            assert rv.mimetype == 'application/octet-stream'
+            f = StringIO('Test')
+            rv = flask.send_file(f, mimetype='text/plain')
+            assert rv.data == 'Test'
+            assert rv.mimetype == 'text/plain'
+
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            f = StringIO('Test')
+            rv = flask.send_file(f)
+            assert 'x-sendfile' not in rv.headers
+
+    def test_attachment(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f, as_attachment=True)
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+
+        with app.test_request_context():
+            assert options['filename'] == 'index.html'
+            rv = flask.send_file('static/index.html', as_attachment=True)
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+            assert options['filename'] == 'index.html'
+
+        with app.test_request_context():
+            rv = flask.send_file(StringIO('Test'), as_attachment=True,
+                                 attachment_filename='index.txt')
+            assert rv.mimetype == 'text/plain'
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+            assert options['filename'] == 'index.txt'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -389,6 +471,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ContextTestCase))
     suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
     suite.addTest(unittest.makeSuite(TemplatingTestCase))
+    suite.addTest(unittest.makeSuite(SendfileTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 1daf0d4b..29ae2762 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -17,7 +17,8 @@ import flask
 import unittest
 import tempfile
 from datetime import datetime
-from werkzeug import parse_date
+from werkzeug import parse_date, parse_options_header
+from cStringIO import StringIO
 
 
 example_path = os.path.join(os.path.dirname(__file__), '..', 'examples')
@@ -382,6 +383,87 @@ class TemplatingTestCase(unittest.TestCase):
         assert rv.data == 'dcba'
 
 
+class SendfileTestCase(unittest.TestCase):
+
+    def test_send_file_regular(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            rv = flask.send_file('static/index.html')
+            assert rv.direct_passthrough
+            assert rv.mimetype == 'text/html'
+            with app.open_resource('static/index.html') as f:
+                assert rv.data == f.read()
+
+    def test_send_file_xsendfile(self):
+        app = flask.Flask(__name__)
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            rv = flask.send_file('static/index.html')
+            assert rv.direct_passthrough
+            assert 'x-sendfile' in rv.headers
+            assert rv.headers['x-sendfile'] == \
+                os.path.join(app.root_path, 'static/index.html')
+            assert rv.mimetype == 'text/html'
+
+    def test_send_file_object(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f)
+            with app.open_resource('static/index.html') as f:
+                assert rv.data == f.read()
+            assert rv.mimetype == 'text/html'
+
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f)
+            assert rv.mimetype == 'text/html'
+            assert 'x-sendfile' in rv.headers
+            assert rv.headers['x-sendfile'] == \
+                os.path.join(app.root_path, 'static/index.html')
+
+        app.use_x_sendfile = False
+        with app.test_request_context():
+            f = StringIO('Test')
+            rv = flask.send_file(f)
+            assert rv.data == 'Test'
+            assert rv.mimetype == 'application/octet-stream'
+            f = StringIO('Test')
+            rv = flask.send_file(f, mimetype='text/plain')
+            assert rv.data == 'Test'
+            assert rv.mimetype == 'text/plain'
+
+        app.use_x_sendfile = True
+        with app.test_request_context():
+            f = StringIO('Test')
+            rv = flask.send_file(f)
+            assert 'x-sendfile' not in rv.headers
+
+    def test_attachment(self):
+        app = flask.Flask(__name__)
+        with app.test_request_context():
+            f = open(os.path.join(app.root_path, 'static/index.html'))
+            rv = flask.send_file(f, as_attachment=True)
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+
+        with app.test_request_context():
+            assert options['filename'] == 'index.html'
+            rv = flask.send_file('static/index.html', as_attachment=True)
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+            assert options['filename'] == 'index.html'
+
+        with app.test_request_context():
+            rv = flask.send_file(StringIO('Test'), as_attachment=True,
+                                 attachment_filename='index.txt')
+            assert rv.mimetype == 'text/plain'
+            value, options = parse_options_header(rv.headers['Content-Disposition'])
+            assert value == 'attachment'
+            assert options['filename'] == 'index.txt'
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -389,6 +471,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ContextTestCase))
     suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
     suite.addTest(unittest.makeSuite(TemplatingTestCase))
+    suite.addTest(unittest.makeSuite(SendfileTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
"
2d87e9bc37ef1ce8f9068fac92783a4fe3d3d382,5bb2b55a2880b3c91dbcd6580f3d25ee23c6655c,docs/conf.py,docs/conf.py,docs/conf.py,Explicitly set the pygments style for the PDF,"diff --git a/docs/conf.py b/docs/conf.py
index ff5951b3..2048ab6e 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -234,3 +234,5 @@ intersphinx_mapping = {
     'http://www.sqlalchemy.org/docs/': None,
     'http://wtforms.simplecodes.com/docs/0.5/': None
 }
+
+pygments_style = 'flask_theme_support.FlaskyStyle'
","diff --git a/docs/conf.py b/docs/conf.py
index ff5951b3..2048ab6e 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -234,3 +234,5 @@ intersphinx_mapping = {
     'http://www.sqlalchemy.org/docs/': None,
     'http://wtforms.simplecodes.com/docs/0.5/': None
 }
+
+pygments_style = 'flask_theme_support.FlaskyStyle'
"
5bb2b55a2880b3c91dbcd6580f3d25ee23c6655c,f80e1d3b5ab8e718cc67c814cbfd9aee9c95f45f,flask.py,flask.py,flask.py,Added note on send_file security.,"diff --git a/flask.py b/flask.py
index 3d1a8b7b..ac33ba49 100644
--- a/flask.py
+++ b/flask.py
@@ -249,6 +249,13 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,
     also explicitly provide one.  For extra security you probably want
     to sent certain files as attachment (HTML for instance).
 
+    Please never pass filenames to this function from user sources without
+    checking them first.  Something like this is usually sufficient to
+    avoid security problems::
+
+        if '..' in filename or filename.startswith('/'):
+            abort(404)
+
     .. versionadded:: 0.2
 
     :param filename_or_fp: the filename of the file to send.  This is
","diff --git a/flask.py b/flask.py
index 3d1a8b7b..ac33ba49 100644
--- a/flask.py
+++ b/flask.py
@@ -249,6 +249,13 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,
     also explicitly provide one.  For extra security you probably want
     to sent certain files as attachment (HTML for instance).
 
+    Please never pass filenames to this function from user sources without
+    checking them first.  Something like this is usually sufficient to
+    avoid security problems::
+
+        if '..' in filename or filename.startswith('/'):
+            abort(404)
+
     .. versionadded:: 0.2
 
     :param filename_or_fp: the filename of the file to send.  This is
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,CHANGES,CHANGES,CHANGES,Added logo with new slogan,"diff --git a/CHANGES b/CHANGES
index 485902e7..5c645435 100644
--- a/CHANGES
+++ b/CHANGES
@@ -6,18 +6,22 @@ Here you can see the full list of changes between each Flask release.
 Version 0.2
 -----------
 
-[unreleased; current development version]
+Released on May 12th, codename Jägermeister
 
 - various bugfixes
 - integrated JSON support
 - added :func:`~flask.get_template_attribute` helper function.
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
+- refactored internal request dispatching.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
 - added support for :func:`~flask.send_file`
 - module support and internal request handling refactoring
   to better support pluggable applications.
+- sessions can be set to be permanent now on a per-session basis.
+- better error reporting on missing secret keys.
+- added support for Google Appengine.
 
 Version 0.1
 -----------
","diff --git a/CHANGES b/CHANGES
index 485902e7..5c645435 100644
--- a/CHANGES
+++ b/CHANGES
@@ -6,18 +6,22 @@ Here you can see the full list of changes between each Flask release.
 Version 0.2
 -----------
 
-[unreleased; current development version]
+Released on May 12th, codename Jägermeister
 
 - various bugfixes
 - integrated JSON support
 - added :func:`~flask.get_template_attribute` helper function.
 - :meth:`~flask.Flask.add_url_rule` can now also register a
   view function.
+- refactored internal request dispatching.
 - server listens on 127.0.0.1 by default now to fix issues with chrome.
 - added external URL support.
 - added support for :func:`~flask.send_file`
 - module support and internal request handling refactoring
   to better support pluggable applications.
+- sessions can be set to be permanent now on a per-session basis.
+- better error reporting on missing secret keys.
+- added support for Google Appengine.
 
 Version 0.1
 -----------
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,Makefile,Makefile,Makefile,Added logo with new slogan,"diff --git a/Makefile b/Makefile
index 62d763d2..b46bb3b5 100644
--- a/Makefile
+++ b/Makefile
@@ -5,6 +5,9 @@ all: clean-pyc test
 test:
 	python tests/flask_tests.py
 
+release:
+	python setup.py release sdist upload
+
 clean-pyc:
 	find . -name '*.pyc' -exec rm -f {} +
 	find . -name '*.pyo' -exec rm -f {} +
","diff --git a/Makefile b/Makefile
index 62d763d2..b46bb3b5 100644
--- a/Makefile
+++ b/Makefile
@@ -5,6 +5,9 @@ all: clean-pyc test
 test:
 	python tests/flask_tests.py
 
+release:
+	python setup.py release sdist upload
+
 clean-pyc:
 	find . -name '*.pyc' -exec rm -f {} +
 	find . -name '*.pyo' -exec rm -f {} +
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,artwork/logo-full.svg,artwork/logo-full.svg,artwork/logo-full.svg,Added logo with new slogan,"diff --git a/artwork/logo-full.svg b/artwork/logo-full.svg
old mode 100755
new mode 100644
index 43465a4d..8c0748a2
--- a/artwork/logo-full.svg
+++ b/artwork/logo-full.svg
@@ -142,188 +142,149 @@
        d=""M 96.944917,182.03377 C 89.662681,176.30608 81.894549,170.81448 76.586317,163.08166 65.416842,149.44499 56.816875,133.6567 50.937585,117.06515 47.383955,106.27654 46.166898,94.709824 41.585799,84.338096 c -4.792287,-7.533044 0.821224,-15.767897 9.072722,-18.16242 3.673742,-0.705104 10.133327,-4.170258 2.335951,-1.693539 -6.990592,5.128871 -7.667129,-4.655603 -0.498823,-5.27517 4.892026,-0.650249 6.692895,-4.655044 5.019966,-8.260251 -5.251326,-3.424464 12.733737,-7.18801 3.684373,-12.297799 -9.426987,-10.170666 13.186339,-12.128546 7.607283,-0.577786 -1.335447,8.882061 15.801226,-1.627907 11.825117,8.628945 4.041283,4.925694 15.133562,1.1211 14.85838,8.031392 5.887092,0.404678 7.907562,5.358061 13.433992,5.738347 5.72759,2.586557 16.1108,4.624792 18.0598,11.079149 -5.68242,4.498756 -18.84089,-9.292674 -19.47305,3.160397 1.71659,18.396078 1.27926,37.346439 8.00986,54.864989 3.18353,10.60759 10.9012,18.95779 17.87109,27.21946 6.66875,8.09126 15.70186,13.78715 24.90885,18.58338 8.07647,3.80901 16.78383,6.33528 25.58583,7.92044 3.5701,-2.7307 9.87303,-12.8828 15.44238,-8.60188 0.26423,4.81007 -11.0541,10.05512 -0.53248,9.5235 6.17819,-1.86378 10.46336,4.77803 15.55099,-1.21289 4.68719,5.55206 19.48197,-3.54734 16.14693,7.80115 -4.50972,2.90955 -11.08689,1.15142 -15.60404,5.15397 -7.44757,-3.71979 -13.37691,3.32843 -21.6219,2.43707 -9.15641,1.64002 -18.4716,2.30204 -27.75473,2.31642 -15.22952,-1.20328 -30.78158,-1.71049 -45.26969,-7.01291 -8.16166,-2.37161 -16.12649,-7.01887 -23.299683,-11.66829 z m 12.862043,5.5729 c 7.9696,3.44651 15.76243,7.07889 24.49656,8.17457 13.85682,1.92727 28.16653,4.89163 42.07301,2.18757 -6.2939,-2.84199 -12.80077,1.10719 -19.07096,-2.0322 -7.52033,1.61821 -15.59049,-0.41223 -23.23574,-1.41189 -8.69395,-3.87259 -18.0762,-6.53549 -26.21772,-11.56219 -10.173155,-3.71578 5.26142,4.76524 8.00873,5.45214 6.35952,3.60969 -6.99343,-1.85044 -8.87589,-3.35101 -5.32648,-2.9879 -6.00529,-2.36357 -0.52745,0.67085 1.10332,0.64577 2.19359,1.32226 3.34946,1.87216 z M 94.642259,176.88976 c 7.722781,2.86052 -0.03406,-5.43082 -3.572941,-4.94904 -1.567906,-2.72015 -5.9903,-4.43854 -2.870721,-5.89973 -5.611524,1.9481 -5.878319,-7.40814 -8.516004,-6.07139 -5.936516,-1.87454 -2.310496,-8.51501 -9.381929,-12.59292 -0.645488,-4.29697 -7.02577,-8.02393 -9.060801,-14.50525 -0.898786,-3.31843 -7.208336,-12.84783 -3.332369,-3.97927 3.300194,8.53747 9.106618,15.84879 13.93868,23.15175 3.752083,6.95328 8.182497,14.22026 15.015767,18.55788 2.303436,2.20963 4.527452,5.59533 7.780318,6.28797 z M 72.39456,152.46355 c 0.26956,-1.16626 1.412424,2.52422 0,0 z m 31.49641,27.85526 c 1.71013,-0.76577 -2.45912,-0.96476 0,0 z m 4.19228,1.52924 c -0.43419,-2.1116 -1.91376,1.18074 0,0 z m 5.24749,2.18891 c 2.49828,-2.37871 -3.85009,-1.49983 0,0 z m 8.99389,5.01274 c 1.51811,-2.2439 -4.85872,-0.84682 0,0 z m -17.2707,-12.03933 c 3.88031,-2.51023 -5.01186,-0.0347 0,0 z m 3.9366,1.96293 c -0.11004,-1.32709 -1.40297,0.59432 0,0 z m 19.67473,12.28006 c 3.16281,1.99601 18.46961,4.3749 8.88477,0.81847 -1.60377,0.33811 -17.77263,-4.57336 -8.88477,-0.81847 z M 97.430958,166.92721 c -0.307503,-1.33094 -4.909341,-1.4694 0,0 z m 9.159302,5.33813 c 2.38371,-1.66255 -4.94757,-1.28235 0,0 z m 7.70426,4.72382 c 3.42065,-1.28963 -5.54907,-1.29571 0,0 z M 93.703927,162.86805 c 3.711374,2.84621 14.967683,0.36473 5.683776,-1.69906 -4.225516,-2.2524 -13.74889,-3.79415 -7.25757,1.35821 l 1.573785,0.34088 9e-6,-3e-5 z m 25.808723,15.75216 c 1.54595,-2.63388 -6.48298,-1.50411 0,0 z m -7.84249,-6.23284 c 9.0752,2.56719 -7.63142,-5.739 -2.23911,-0.94466 l 1.19513,0.54082 1.04399,0.4039 -1e-5,-6e-5 z m 15.72354,9.0878 c 8.59474,0.082 -7.76304,-1.18486 0,1e-5 l 0,-1e-5 z M 90.396984,157.89545 c -0.335695,-1.60094 -2.120962,0.13419 0,0 z m 51.535396,31.73502 c 0.2292,-2.89141 -2.80486,2.15157 0,0 z m -36.86817,-22.75299 c -0.51986,-1.52251 -2.68548,-0.0622 0,0 z m -13.852128,-9.98649 c 4.934237,-0.29629 -6.755322,-2.17418 0,0 z M 74.802387,146.28394 c -0.614146,-2.36536 -5.369213,-4.2519 0,0 z m 43.079323,27.33941 c -0.90373,-1.0307 -0.4251,0.22546 0,0 z m 26.81408,16.45475 c -0.086,-1.57503 -1.46039,0.59616 0,0 z m -29.18712,-18.90528 c 0.48266,-2.02932 -4.20741,-0.61442 0,0 z M 95.532612,158.51286 c 3.670785,-0.39305 -5.880434,-2.48161 0,0 z M 129.32396,179.51 c 5.72042,-2.26627 -5.57541,-1.10635 0,0 z m -17.57682,-11.93145 c 6.59278,0.85002 -7.84442,-4.48425 -1.44651,-0.4773 l 1.4465,0.47734 1e-5,-4e-5 z m 22.91296,14.0886 c 6.15514,-3.67975 4.12588,8.61677 10.44254,1.0388 6.23086,-4.54942 -5.38086,5.62451 2.29838,0.81116 5.55359,-3.71438 13.75643,1.76075 18.93848,3.5472 3.72659,-0.18307 7.34938,3.22236 11.16973,1.15059 7.3542,-1.98082 -14.38097,-2.93789 -8.68344,-6.4523 -6.72914,1.95848 -11.70093,-2.33483 -15.01213,-6.64508 -7.54812,-1.74298 -16.27548,-5.602 -20.04257,-12.28184 -1.5359,-2.50802 2.21884,0.35333 -1.32586,-3.74638 -4.54834,-4.04546 -6.81948,-8.63766 -9.87278,-13.5552 -3.64755,-1.94587 -4.07249,-7.67345 -4.44123,-0.19201 0.0289,-4.72164 -4.40393,-7.89964 -5.48589,-6.57859 -0.0194,-4.54721 4.74396,-2.26787 1.40945,-5.63228 -0.71771,-4.71302 -3.08085,-9.6241 -3.79115,-14.9453 -1.1036,-2.56502 -0.15541,-8.05863 -3.76662,-2.25204 -1.31566,6.13669 -0.43668,-7.54129 1.6093,-3.03083 2.68543,-4.60251 -0.9641,-4.0612 -1.11361,-3.42211 1.74931,-3.88333 1.10719,-9.39159 -0.45644,-7.29023 0.93213,-4.11586 1.47259,-15.147529 -1.3951,-13.192579 1.73833,-4.303958 3.29668,-19.694077 -4.24961,-13.826325 -3.058358,0.04294 -8.354541,1.110195 -10.858032,2.355243 7.849502,4.326857 -0.789543,1.562577 -3.984808,0.874879 -0.416343,4.003642 -3.58119,2.272086 -7.535123,2.311339 6.315273,0.781339 -3.075253,6.458962 -6.698132,4.253506 -4.705102,2.248756 4.060621,7.862038 0.0944,9.597586 0.487433,2.616581 -7.208227,-0.944906 -6.603832,5.097711 -4.56774,-1.92155 -0.628961,7.16796 1.656273,4.09382 7.768882,2.10261 5.469108,6.89631 5.666947,11.44992 -1.265833,2.6534 -6.249495,-6.23691 -1.109939,-5.82517 -4.054715,-6.58674 -4.485232,-2.38081 -7.854566,0.67911 -0.783857,0.22222 8.5944,4.35376 2.709059,6.3967 5.177884,0.79894 5.325199,5.33008 6.379284,8.19735 3.11219,3.24152 2.475226,-3.57931 6.199071,0.31623 -2.356488,-3.4705 -12.48183,-9.77839 -4.329567,-7.7553 -0.04358,-3.49291 -1.474412,-6.30951 1.02322,-6.24118 2.473367,-4.47926 -2.590385,11.044 2.984725,5.35124 1.543285,-0.67388 1.92554,-4.48494 4.699544,0.35989 4.029096,3.96363 1.45533,6.83577 -4.228162,3.20648 1.016828,3.44946 7.603062,4.68217 6.365348,10.07646 1.3121,4.7444 3.147844,2.99695 4.747999,2.72266 1.25523,4.60973 1.968016,1.2201 2.027559,-0.97355 5.747357,1.23033 4.401142,4.62773 6.199456,7.00134 3.960416,1.78761 -5.668696,-12.11713 1.130659,-4.18106 7.153577,6.4586 2.682797,9.15464 -3.736856,8.11995 4.063129,-0.32824 5.373423,5.49305 10.455693,5.28853 4.63456,2.20477 7.77237,10.67291 -0.21613,7.1478 -2.77074,-2.49821 -12.575734,-5.5801 -4.56731,-0.82823 7.39657,3.42523 13.27117,5.47432 20.40487,9.77384 5.10535,3.64464 7.31104,7.81908 9.24607,8.64541 -4.29084,2.04946 -12.93089,-1.63655 -6.51514,-2.76618 -4.00168,-0.72894 -8.50258,-2.75259 -4.66961,2.2333 3.25926,2.72127 11.54708,2.43298 13.0328,2.74132 -1.25934,2.77488 -3.4207,2.99556 0.0516,3.21078 -3.87375,2.06438 1.24216,2.38403 1.60114,3.56362 z m -7.9215,-22.36993 c -2.35682,-2.46475 -2.9662,-7.08134 -0.41852,-3.06426 1.30648,0.52466 4.18523,7.54428 0.41857,3.06426 l -5e-5,0 z m 25.79733,16.38693 c 1.47004,-0.0952 0.0427,1.11681 0,0 z m -29.51867,-22.43039 c -0.0904,-3.72637 0.8525,2.87419 0,0 z m -2.56392,-3.44965 c -2.96446,-5.72787 3.73721,1.62212 0,0 z M 89.382646,128.35916 c 1.7416,-0.46446 0.856841,2.97864 0,0 z m 24.728294,13.40357 c 1.06957,-4.01654 1.25692,3.37014 0,0 z M 96.64115,129.61525 c -1.231543,-2.21638 2.576009,2.07865 0,0 z m 14.99279,4.80618 c -2.80851,-6.29223 1.98836,-3.43699 0.62135,1.03124 l -0.62135,-1.03124 0,0 z M 85.778757,117.17864 c -1.255624,-2.06432 -3.332663,-8.12135 -2.663982,-9.97042 0.604935,3.0114 6.403914,12.95956 2.844571,4.12096 -3.933386,-7.40908 4.701805,2.40491 5.590052,4.2529 0.413624,1.83837 -2.426789,-0.50225 -0.502192,3.80828 -3.509809,-4.90766 -2.071967,2.71088 -5.268449,-2.21172 z m -7.990701,-5.50612 c 0.328938,-4.79981 1.829262,3.29132 0,0 z m 3.594293,1.23728 c 1.715175,-3.62282 2.908243,5.05052 0,0 z m -8.64616,-6.68847 c -2.974956,-2.95622 -5.127809,-5.68132 0.139193,-1.83474 2.029482,0.0792 -4.509002,-6.19705 0.488751,-1.99305 5.25531,0.95822 2.5951,8.61674 -0.627944,3.82779 z m 4.541717,-0.11873 c 1.727646,-1.71203 0.917172,1.6853 0,0 z m 2.794587,0.8959 c -2.619181,-4.9094 3.178801,2.05822 0,0 z m -5.55546,-5.30909 c -8.64844,-7.696511 10.867309,4.02451 1.4129,1.4269 l -1.412955,-1.42683 5.5e-5,-7e-5 z m 24.77908,14.39717 c -3.742506,-2.24398 -0.991777,-15.79747 0.284503,-6.52785 3.638294,-1.17695 -0.200879,4.78728 2.512784,4.73208 -0.42767,3.76305 -1.64169,5.11594 -2.797287,1.79577 z m 9.165207,5.41684 c 0.36705,-4.08462 0.77249,2.79262 0,0 z m -1.59198,-1.57295 c 0.41206,-1.74497 0.0426,2.05487 0,0 z M 76.213566,99.16032 c -5.556046,-7.665657 16.147323,7.75413 3.558556,1.9443 -1.315432,-0.34404 -2.898208,-0.46688 -3.558556,-1.9443 z m 17.649112,9.35749 c -0.525779,-6.45461 1.174169,1.06991 -1.92e-4,-2e-5 l 1.92e-4,2e-5 z m 13.399762,8.59585 c 1.03698,-3.67668 0.0773,2.43221 0,0 z M 77.064685,96.23472 c 3.302172,-0.706291 13.684695,5.79939 4.150224,1.85832 -1.059396,-1.17279 -3.317802,-0.63994 -4.150224,-1.85832 z m 28.356745,14.13312 c 0.35296,-6.60002 1.97138,-3.94233 0.0122,0.94474 l -0.0121,-0.94473 -5e-5,-1e-5 z M 79.52277,93.938099 c 1.345456,-1.97361 -3.571631,-8.923063 0.708795,-2.492797 1.849543,1.469605 5.355103,2.461959 2.260017,3.080216 4.867744,4.294162 -1.187244,1.163612 -2.968812,-0.587419 z m 24.49612,14.368161 c 0.92952,-7.51843 0.81971,4.40485 0,0 z M 76.712755,86.993902 c 1.027706,-0.439207 0.542746,1.369335 0,0 z m 6.389622,3.803092 c 1.644416,-3.450522 3.03351,3.848297 0,0 z m 18.023553,10.026276 c -0.0174,-1.3252 0.34003,1.92765 0,0 z m -1.04404,-2.31139 c -2.501612,-6.171646 2.32693,3.26759 0,0 z m -1.536003,-4.046372 c -0.419906,-2.550188 1.427129,3.203862 -7.3e-5,-9e-6 l 7.3e-5,9e-6 z m 2.499773,-4.063514 c -1.71663,-3.025123 2.16777,-13.331073 2.60122,-6.939418 -1.81185,4.980256 -0.52268,7.766309 0.74129,1.086388 2.33417,-5.257159 -0.50421,10.374054 -3.34255,5.853057 l 4e-5,-2.7e-5 z m 2.56889,-15.326649 c 0.74833,-0.918921 0.16609,1.107082 0,0 z m -4.290016,84.534235 c -1.017552,-0.88802 0.127775,0.56506 0,0 z m 8.837726,4.47065 c 4.91599,1.26135 4.89086,-0.76487 0.44782,-1.36683 -2.3898,-2.22316 -9.930475,-4.58124 -3.18119,-0.27586 0.44699,1.13227 1.85944,1.10589 2.73337,1.64269 z M 90.708067,152.48725 c 2.708244,2.01956 10.201213,5.72375 3.858186,0.76868 2.138588,-2.48467 -4.093336,-3.80722 -2.026067,-5.46927 -5.258175,-3.21755 -4.147962,-2.93133 -0.464111,-2.8301 -6.319385,-2.82462 0.912163,-2.61333 0.571661,-4.06067 -2.436706,-0.48126 -12.103074,-4.29664 -6.416395,0.31341 -5.780887,-2.94751 -1.377603,1.09799 -3.12488,0.67029 -5.911336,-1.61178 5.264392,4.50224 -0.938845,2.98448 3.391327,2.6875 9.128301,6.88393 1.433786,2.84407 -1.013816,1.45934 5.506273,3.67136 7.106665,4.77911 z m 9.243194,5.31013 c 11.238769,3.62163 -5.510018,-4.4246 0,0 z m 47.316399,28.66432 c 0.14496,-2.22965 -1.53604,1.90201 0,0 z m 4.86324,2.04679 c 2.59297,-2.51255 0.106,4.00222 4.29655,-0.61509 0.0453,-3.30544 -0.12904,-5.25783 -4.81563,-1.24252 -1.29194,0.71648 -1.86871,3.76288 0.51908,1.85761 z M 74.932378,140.02637 c -0.796355,-3.1304 -5.581949,-3.11418 0,0 z m 5.193029,3.40294 c -1.928397,-3.19739 -6.880525,-2.89469 0,0 z m 29.543373,17.81697 c 2.8844,2.56199 13.24761,1.87984 3.50331,0.31527 -1.44321,-2.13386 -9.16415,-1.6203 -3.50331,-0.31527 z m 40.61236,25.08153 c 4.43933,-3.72512 -4.30122,1.66183 0,0 z m 9.2328,6.34473 c 0.0277,-1.19543 -1.91352,0.52338 0,0 z m 0.0142,-1.6736 c 4.91602,-5.20866 -4.76346,0.30807 -4e-5,0 l 4e-5,0 z M 62.15981,129.33339 c -4.189944,-5.97826 -2.604586,-8.66544 -6.645136,-13.54677 -0.764913,-3.73279 -6.931672,-12.20326 -3.189579,-3.22947 3.42754,5.24836 4.446054,13.37434 9.834715,16.77624 z m 95.82635,60.00977 c 9.04429,-5.84575 -3.7125,-2.54641 0,0 z m 6.9041,2.70461 c 4.52911,-3.88867 -2.86491,-0.81334 0,0 z M 73.393094,133.41838 c 1.296204,-1.92838 -3.347642,-0.24666 0,0 z m 90.055596,56.78275 c 4.38526,-2.82746 -1.01036,-2.39335 -0.79483,0.26003 l 0.79484,-0.26003 -1e-5,0 z m -59.51386,-37.51178 c -0.15075,-1.90924 -2.31574,0.16206 0,0 z m 3.67794,2.11629 c -1.16888,-2.36318 -1.79716,0.37121 0,0 z m 62.8725,37.30625 c 5.61806,-4.05283 -3.4056,-0.77594 -1.17927,0.76785 l 1.17927,-0.76785 0,0 z m -2.15131,-1.03979 c 4.57663,-3.83506 -4.83183,1.69954 0,0 z m 10.99163,7.31983 c 3.0728,-2.05816 -3.73316,-0.66575 0,0 z M 76.211249,132.02781 c 4.118965,0.92286 16.460394,10.1439 9.179466,0.63772 -3.728991,-1.10384 -1.492605,-10.21906 -5.29621,-8.60579 2.552972,4.2649 2.100461,6.08018 -3.259642,3.3914 -6.736808,-3.28853 -3.785888,1.6297 -2.469293,2.98518 -1.794185,0.40772 2.373226,1.5572 1.845679,1.59149 z m -18.76588,-14.82026 c 0.737407,-3.04991 -6.789814,-16.77881 -3.554464,-6.87916 1.167861,2.07373 1.049123,6.00387 3.554464,6.87916 z m 34.443451,21.23513 c -2.120989,-1.77378 -0.100792,-0.25103 0,0 z m 5.222997,1.21548 c -0.0027,-3.23079 -5.77326,-1.31196 0,0 z m 45.261473,28.53321 c -0.86326,-2.20739 -3.41229,-0.0512 8e-5,4e-5 l -8e-5,-4e-5 z m 2.17351,1.58769 c -0.32087,-1.23546 -1.25399,0.23848 0,0 z m 17.94015,11.3001 c 1.72546,-1.27472 -2.15318,-0.1628 0,0 z M 66.819057,119.6006 c 4.935243,-1.91072 -5.28775,-1.36248 0,0 z m 71.569733,45.08937 c -0.0549,-3.19499 -3.14622,0.79264 0,0 z M 64.869152,115.05675 c 3.170167,-1.07084 -2.932663,-0.70531 0,0 z m 9.201532,4.45726 c -0.0575,-1.05014 -0.973336,0.39747 0,0 z m 112.231406,68.82181 c 4.0765,-0.8265 13.36606,2.07489 14.86752,-1.08086 -4.95044,-0.12019 -17.12734,-3.49263 -17.70346,0.80479 l 1.08368,0.17072 1.75226,0.10534 0,1e-5 z M 76.995161,120.25099 c 0.07087,-3.23755 -2.524669,-0.12092 0,0 z M 52.801998,103.4687 c -1.098703,-6.16843 -4.178791,-0.93357 0,0 z m 5.769195,1.45013 c 0.07087,-1.9807 -5.280562,-1.78224 0,0 z m 3.296917,1.61923 c -0.953019,-0.77196 -0.745959,0.97521 0,0 z m 20.744719,13.30775 c 0.976615,-0.89718 -2.312116,-0.66455 0,0 z M 59.672204,102.88617 c -0.557624,-4.65897 -6.681999,-0.69805 0,0 z M 47.844441,95.21166 c -0.168219,-2.150189 -1.152625,0.81111 0,0 z m 1.759336,-1.328672 c -0.28703,-2.549584 -1.510515,0.324387 0,0 z m 9.720792,5.802442 c 4.110486,-1.61465 -7.487254,-3.33984 -0.839893,-0.30506 l 0.839893,0.30506 z m 130.097601,80.35913 c 2.63092,-2.4121 -3.34373,-0.74577 0,0 z m 15.71669,8.14691 c 1.05433,-3.1186 -2.65452,0.41058 0,0 z M 60.318012,94.590436 c 0.433018,-3.016773 -3.258762,0.59902 0,0 z M 46.487687,85.324242 c -0.742965,-4.25911 -0.64134,-11.735065 6.465133,-9.208583 -9.485962,1.883339 6.56534,11.790095 4.538357,3.968363 3.988626,0.195294 7.802669,-2.357284 5.709487,1.516403 7.85876,-0.867958 13.307129,-7.682612 20.898169,-6.72768 5.913058,-0.782493 12.378182,-1.375955 18.750257,-3.756157 5.23905,-0.37743 10.28235,-6.018062 7.41068,-9.361383 -7.14456,-0.604513 -14.62339,0.289393 -22.520112,1.858993 -8.750559,1.819117 -16.699014,5.275307 -25.528125,6.758866 -8.605891,1.15604 1.730998,3.185165 -0.734074,3.637227 -4.490681,1.558136 5.355488,2.608852 -0.582182,4.251428 C 57.228283,77.56448 53.411411,76.304535 54.977788,72.440196 46.7341,73.50992 39.490264,76.931325 46.003276,85.320342 l 0.484402,0.0037 9e-6,-2.56e-4 z m 19.864291,-10.1168 c 1.932856,-7.120464 10.355229,5.859274 3.168052,0.945776 -0.858453,-0.642457 -2.2703,-1.166588 -3.168052,-0.945776 z m 0.376038,-3.452197 c 2.789661,-2.078257 1.482964,1.16516 0,0 z m 3.542213,0.05622 c 0.251833,-3.27648 8.108752,1.73455 1.295517,1.179499 l -1.295517,-1.179499 0,0 z m 4.84543,-1.948193 c 1.769481,-2.067535 0.50862,1.83906 0,0 z m 1.239563,-0.83005 c 2.946379,-3.540216 16.68561,-2.259413 6.628966,-0.34519 -2.695543,-2.029363 -4.761797,1.196575 -6.628966,0.34519 z m 17.930017,-2.763886 c -0.448199,-9.670222 8.907771,3.436477 0,0 z m 5.087539,-0.02784 c 1.860022,-4.873906 7.218072,-1.955774 0.860732,-0.979407 0.13805,0.518656 -0.18642,2.516173 -0.860732,0.979407 z M 58.311842,92.088739 c 5.55753,-3.403212 -5.899945,-2.952541 0,0 l 0,0 z m 4.109214,1.141866 c 1.948513,-2.071884 -4.233857,-0.840369 0,0 z M 50.313395,84.63767 c 3.175569,-2.439416 -3.757842,-0.927473 0,0 z M 214.41578,187.30012 c 0.0918,-2.83019 -2.42718,1.27537 0,0 z m -16.67487,-11.37935 c 0.47417,-3.25845 -2.14286,0.28408 0,0 z m 21.26022,12.47672 c 4.43994,0.015 13.45265,-1.37884 3.79217,-1.37442 -1.51594,0.23641 -8.83311,0.18571 -3.79216,1.37439 l -1e-5,3e-5 z M 66.035603,91.23339 c 3.593258,-0.246807 5.621861,-3.963629 -0.694932,-3.749977 -9.789949,-1.013541 8.637508,3.352129 -1.255898,2.10383 -1.329368,0.880346 1.873606,1.889721 1.95083,1.646147 z m 3.164618,1.601748 c -0.375177,-2.307063 -1.111156,1.225591 0,0 z m 3.753896,-10.009901 c 1.559281,-1.934055 -2.157697,-0.517053 0,0 z M 61.003998,62.84999 c 6.412879,-2.181631 15.182392,-4.633087 18.210335,1.074184 -3.081589,-3.70893 -1.24361,-7.360157 1.666959,-1.937407 4.115576,5.486669 6.175915,-2.495489 3.499086,-4.335821 3.050468,3.790246 6.520044,5.581281 2.042429,0.239564 4.865693,-5.852929 -9.742712,0.766433 -13.063105,0.699775 -1.597564,0.717062 -16.493576,3.79889 -12.355704,4.259705 z m 3.75831,-7.197834 c 3.657324,-2.760416 12.648968,1.641989 6.879078,-2.743367 -0.564117,-0.498292 -12.636077,3.325475 -6.879078,2.743367 z m 13.333489,0.550473 c 4.280389,0.109225 -1.84632,-5.750287 3.254304,-3.095159 -0.837696,-2.736627 -5.938558,-3.248956 -8.432316,-4.342312 -1.410474,2.502054 2.870977,7.471102 5.178012,7.437471 z M 67.100291,44.099162 c 1.480803,-2.007406 -2.59521,1.017699 0,0 z m 5.449586,1.304353 c 6.897867,-0.914901 -1.758292,-2.970542 -1.389954,-0.07352 l 1.389954,0.07352 0,-9e-6 z M 62.374386,37.441437 c -4.856866,-6.340205 9.133987,1.065769 4.199411,-5.572646 -4.153254,-3.307245 -8.144297,3.721775 -4.199411,5.572646 z m 62.330124,33.572802 c 2.22762,-3.948988 -9.19697,-5.323011 -1.5009,-1.399578 0.70858,0.236781 0.54821,1.6727 1.5009,1.399578 z""
        id=""path2900"" />
     <g
-       style=""font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-       id=""text3844"">
-      <path
-         d=""m 166.92789,156.32883 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91863,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48113,-0.57422 -1.49024,-0.82031 -0.009,-0.20964 -0.005,-0.94336 0.0137,-2.20118 0.0274,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60058 -0.0182,-2.00976 -0.0273,-3.34276 -0.0273,-3.99903 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51953 -0.23698,-0.082 -0.35547,-0.23241 -0.35547,-0.45118 0,-0.19138 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48761 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42382,0.69727 0,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46484,0.38281 1.09375,-0.62889 2.23307,-0.94335 3.41797,-0.94336 1.36718,10e-6 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90268 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03907,-3.07617 -0.65625,-0.7565 -1.45378,-1.13475 -2.39257,-1.13476 -0.64715,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33724 -0.94336,0.69271 -0.94336,1.0664 l 0,3.66406 c 0,1.75912 0.9707,2.63868 2.91211,2.63868 1.01171,0 1.82747,-0.32585 2.44727,-0.97754 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2841"" />
-      <path
-         d=""m 179.35562,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2843"" />
-      <path
-         d=""m 191.11343,160.70383 c -1e-5,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02148,0.77929 -1.54949,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54493,-2.18749 -1.54493,-3.77343 0,-1.70443 0.59245,-3.12174 1.77735,-4.25196 1.15755,-1.10285 2.57942,-1.65428 4.26562,-1.65429 1.02083,1e-5 1.9095,0.14584 2.66602,0.4375 0.6927,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13672,1e-5 -0.45118,-0.19595 -0.94335,-0.58789 -0.92059,-0.72915 -1.64064,-1.09374 -2.16016,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83398,2.78906 -1e-5,1.431 0.40103,2.57488 1.20312,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98242,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.1914,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2845"" />
-      <path
-         d=""m 204.26578,161.155 c -1e-5,0.19141 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25554,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94335,-0.51953 -0.27345,-0.34636 -0.46486,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37174,-0.21875 -1.87304,-0.65625 -0.54688,-0.48307 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28776,-0.916 3.36328,-0.91601 1.85026,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75196,0.88867 0.10025,1e-5 0.29165,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49218,-0.0684 0.26431,0 0.39648,0.17773 0.39649,0.5332 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29492,1.10743 -3.29492,2.14649 0,1.04818 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2847"" />
-      <path
-         d=""m 218.74429,161.31906 c -1e-5,0.18229 -0.4284,0.46029 -1.28515,0.83399 -0.72918,0.31901 -1.09376,0.47851 -1.09375,0.47851 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -1e-5,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17772 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26431 1.3444,-0.53319 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,10e-6 0.47851,0.2142 0.47851,0.64258 0,1e-5 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.9616 -0.041,1.87533 -0.041,2.74121 l 0,1.64063 c -1e-5,1.11198 0.21874,1.87304 0.65625,2.2832 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46093 l 0,-2.4336 c -1e-5,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20962 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -1e-5,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00717 1.42188,1.08008 0.31899,0.0274 0.4785,0.15039 0.47851,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2849"" />
-      <path
-         d=""m 229.34,159.52805 c -1e-5,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74285,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85678,0 -1.71355,-0.0911 -2.57032,-0.27344 -0.73828,-0.16406 -1.16666,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10938,-0.73372 0.32813,-0.75195 0.21875,-0.0273 0.40559,0.0911 0.56054,0.35547 0.6836,1.19401 1.78646,1.79101 3.3086,1.79101 1.28515,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31901,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48307,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37826,-1.74999 1.13477,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50586,1.06641 0.30077,0.22787 1.00715,0.58334 2.11914,1.0664 1.16666,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.82031,1.2168 0.82032,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2851"" />
-      <path
-         d=""m 242.08218,160.17062 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -10e-6,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2853"" />
-      <path
-         d=""m 259.58218,159.52805 c -10e-6,0.96614 -0.37142,1.73405 -1.11425,2.30371 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2855"" />
-      <path
-         d=""m 273.84195,156.95773 c -10e-6,1.58594 -0.5879,2.92807 -1.76367,4.02637 -1.17579,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.44921,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.59309 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65625,0.80209 1.51302,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2857"" />
-      <path
-         d=""m 298.39664,162.09836 c -3e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.8594,-0.13672 -3.59117,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.53321,-0.47852 -10e-6,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82945,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28257,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12305,-0.38281 0,-0.23698 0.25976,-0.38282 0.7793,-0.4375 0.56509,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.6836,-2.32421 -0.40105,-0.49218 -0.91146,-0.73828 -1.53125,-0.73829 -0.91146,10e-6 -1.73177,0.18458 -2.46093,0.55371 -0.72918,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14582,0.95703 0.4375,1.17578 0.26431,0.20052 0.74283,0.32357 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -1e-5,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41015,-0.10938 0.61523,-0.64258 0.61523,-1.59961 l 0,-4.19727 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31446 0,-0.16405 0.47396,-0.5104 1.42188,-1.03906 1.0026,-0.56509 1.61783,-0.84764 1.8457,-0.84766 0.1914,2e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83398,-0.42383 0.5651,-0.35546 1.07552,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43748 2.31055,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32811,0.41017 0.32813,0.41016 -2e-5,1e-5 0.23696,-0.13671 0.71093,-0.41016 0.55598,-0.319 1.0983,-0.56965 1.62696,-0.75195 0.77472,-0.27343 1.52667,-0.41014 2.25586,-0.41016 2.49737,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64711,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22787 0.72461,0.41016 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2859"" />
-      <path
-         d=""m 309.94937,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2861"" />
-      <path
-         d=""m 319.49234,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35548,0 -0.57423,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13022 0.10026,1.84571 0.30079,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2863"" />
-      <path
-         d=""m 326.34195,146.64914 c -10e-6,0.41929 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36005 -0.65853,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49903,-1.12109 0.33267,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39452,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41472 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57877,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28255,-0.10025 -0.42383,-0.25064 -0.42383,-0.45117 0,-0.26432 0.20508,-0.46028 0.61524,-0.58789 0.76562,-0.23697 1.44465,-0.55143 2.03711,-0.94336 0.47395,-0.32812 0.76562,-0.49218 0.875,-0.49219 0.36457,10e-6 0.54231,0.23699 0.5332,0.71094 -0.0365,2.38802 -0.0547,4.82162 -0.0547,7.30078 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48308 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2865"" />
+       style=""font-size:40px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
+       id=""text3850"">
       <path
-         d=""m 351.9357,162.09836 c -2e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.85939,-0.13672 -3.59116,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.5332,-0.47852 -2e-5,-0.27344 0.24151,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82944,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12304,-0.38281 -10e-6,-0.23698 0.25975,-0.38282 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.68359,-2.32421 -0.40106,-0.49218 -0.91147,-0.73828 -1.53125,-0.73829 -0.91147,10e-6 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14583,0.95703 0.4375,1.17578 0.26432,0.20052 0.74283,0.32357 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41016,-0.10938 0.61523,-0.64258 0.61524,-1.59961 l 0,-4.19727 c -10e-6,-1.0664 -0.28712,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15722,-0.31446 -1e-5,-0.16405 0.47395,-0.5104 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84764 1.8457,-0.84766 0.19141,2e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51757,-0.43748 2.31054,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41014 2.25586,-0.41016 2.49738,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2867"" />
+         d=""m 229.85182,43.77803 c -0.79695,3.140714 -1.28913,8.414146 -1.47656,15.820313 -7e-5,1.453199 -0.65632,2.179761 -1.96875,2.179687 -1.31257,7.4e-5 -2.22663,-0.632738 -2.74219,-1.898437 -1.40631,-3.421796 -2.74225,-5.812419 -4.00781,-7.171875 -1.50006,-1.593666 -3.49225,-2.554603 -5.97656,-2.882813 -2.67193,-0.421789 -9.32818,-0.632726 -19.96875,-0.632812 -2.43754,8.6e-5 -4.03129,0.257898 -4.78125,0.773437 -0.46879,0.32821 -0.70316,1.031335 -0.70313,2.109375 l 0,31.851563 c -3e-5,1.078175 0.67966,1.5938 2.03906,1.546875 4.17184,-0.04682 10.21871,-0.328075 18.14063,-0.84375 1.54682,-0.187449 2.58979,-0.691355 3.12891,-1.511719 0.539,-0.820259 1.06634,-2.941351 1.58203,-6.363281 0.32806,-1.87494 1.42963,-2.601502 3.30468,-2.179688 1.59369,0.328186 2.27338,1.054747 2.03907,2.179688 -1.31256,6.375052 -1.73444,14.671919 -1.26563,24.890627 0.0468,1.21878 -0.72662,1.87503 -2.32031,1.96875 -1.31256,0.14065 -2.13287,-0.56247 -2.46094,-2.10938 -1.2188,-5.859333 -3.48052,-8.988236 -6.78515,-9.386716 -3.30474,-0.398394 -8.68364,-0.597612 -16.13672,-0.597656 -0.84379,4.4e-5 -1.26566,0.304731 -1.26563,0.914062 l 0,31.64063 c -3e-5,2.34375 0.86716,3.9375 2.60156,4.78125 1.35934,0.70313 4.28903,1.33594 8.78907,1.89843 2.29683,0.23438 3.30464,1.24219 3.02343,3.02344 -0.28129,1.54688 -2.34379,2.15625 -6.1875,1.82813 -11.1094,-0.89063 -20.27345,-0.84375 -27.49218,0.14062 -2.01564,0.28125 -3.02345,-0.53906 -3.02344,-2.46094 -1e-5,-1.21874 1.0078,-1.92187 3.02344,-2.10937 4.59373,-0.51562 6.8906,-4.54687 6.89062,-12.09375 l 0,-60.187502 c -2e-5,-3.093671 -0.5508,-5.472575 -1.65234,-7.136719 -1.10158,-1.663977 -3.15236,-3.175695 -6.15235,-4.535156 -1.87501,-0.843661 -2.57813,-1.992098 -2.10937,-3.445313 0.23436,-0.890532 0.60936,-1.382719 1.125,-1.476562 0.46874,-0.140532 1.71092,-0.04678 3.72656,0.28125 2.95311,0.468842 9.91404,0.703217 20.88281,0.703125 12.93746,9.2e-5 24.11713,-0.281158 33.53907,-0.84375 3.14055,-0.187407 4.71086,0.07041 4.71093,0.773437 -7e-5,0.187592 -0.0235,0.375092 -0.0703,0.5625 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2830"" />
       <path
-         d=""m 363.48843,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2869"" />
+         d=""m 275.55495,133.14522 c -4e-5,1.875 -1.05473,2.69531 -3.16407,2.46094 -6.46877,-0.60938 -14.48439,-0.51563 -24.04687,0.28125 -1.92189,0.18749 -3.10548,0.14062 -3.55078,-0.14063 -0.44532,-0.28125 -0.66798,-1.05469 -0.66797,-2.32031 -1e-5,-1.125 1.27733,-2.07422 3.83203,-2.84766 2.55467,-0.77343 3.83202,-3.08202 3.83203,-6.92578 l 0,-63.632812 c -1e-5,-3.796796 -0.55079,-6.585856 -1.65234,-8.367188 -1.10158,-1.781164 -3.03517,-3.163975 -5.80078,-4.148437 -1.45313,-0.515537 -2.1797,-1.242099 -2.17969,-2.179688 -1e-5,-1.406158 1.05468,-2.460845 3.16406,-3.164062 3.18749,-1.031156 6.49217,-2.624904 9.91406,-4.78125 2.81248,-1.687401 4.59373,-2.53115 5.34375,-2.53125 1.73435,1e-4 2.60154,1.195412 2.60157,3.585937 -3e-5,-0.187403 -0.0938,2.156345 -0.28125,7.03125 -0.14065,4.64071 -0.18753,9.211018 -0.14063,13.710938 l 0.28125,62.789062 c -2e-5,2.85939 0.7031,4.9336 2.10938,6.22266 1.40622,1.28906 3.82028,2.14453 7.24218,2.5664 2.10934,0.23438 3.16403,1.03126 3.16407,2.39063 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2832"" />
       <path
-         d=""m 374.04312,159.52805 c -10e-6,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74284,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28516,-0.45117 -0.0729,-0.1276 -0.10937,-0.75195 -0.10937,-1.87305 0,-0.48307 0.10937,-0.73372 0.32812,-0.75195 0.21875,-0.0273 0.4056,0.0911 0.56055,0.35547 0.68359,1.19401 1.78645,1.79101 3.30859,1.79101 1.28515,0 1.92773,-0.44661 1.92774,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85938,-1.05274 -1.33073,-0.59244 -2.2194,-1.11197 -2.66601,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13476,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.81641,-0.79297 0.73827,1e-5 1.41275,0.0593 2.02344,0.17774 0.65624,0.1185 0.99803,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60157,-0.15039 -0.72006,-1.17577 -1.63151,-1.76366 -2.73437,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87305,1.20312 0,0.44662 0.16862,0.80209 0.50586,1.06641 0.30078,0.22787 1.00716,0.58334 2.11914,1.0664 1.16666,0.50131 1.95963,0.95248 2.37891,1.35352 0.54686,0.51953 0.8203,1.2168 0.82031,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2871"" />
+         d=""m 339.67995,128.43428 c -7e-5,0.98438 -1.79303,2.47266 -5.37891,4.46484 -3.58599,1.99219 -6.45708,2.98828 -8.61328,2.98829 -1.82817,-10e-6 -3.44536,-0.89063 -4.85156,-2.67188 -1.40629,-1.78125 -2.39067,-2.67187 -2.95313,-2.67187 -0.42191,0 -2.64847,0.96094 -6.67969,2.88281 -4.03128,1.92187 -8.08596,2.88281 -12.16406,2.88281 -3.84377,0 -7.0547,-1.125 -9.63281,-3.375 -2.81251,-2.48437 -4.21876,-5.85937 -4.21875,-10.125 -1e-5,-8.10935 9.28123,-13.92185 27.84375,-17.4375 3.18746,-0.60934 4.80465,-1.89841 4.85156,-3.86719 l 0.14063,-4.499997 c 0.28121,-7.687454 -3.11723,-11.5312 -10.19532,-11.53125 -2.01565,5e-5 -3.9258,1.804735 -5.73046,5.414062 -1.80471,3.609416 -4.39456,5.554727 -7.76954,5.835938 -3.84376,0.375038 -5.76563,-1.242148 -5.76562,-4.851563 -1e-5,-2.249954 2.85936,-4.874951 8.57812,-7.875 5.99998,-3.14057 11.7656,-4.710881 17.29688,-4.710937 9.51558,5.6e-5 14.22651,4.523489 14.13281,13.570312 l -0.28125,28.968755 c -0.0469,3.04688 1.24214,4.57032 3.86719,4.57031 0.51557,1e-5 1.49994,-0.11718 2.95312,-0.35156 1.45307,-0.23437 2.29682,-0.35156 2.53125,-0.35157 1.35932,1e-5 2.039,0.91407 2.03907,2.74219 z M 318.0237,112.40303 c 0.0468,-1.17185 -0.2227,-1.94529 -0.8086,-2.32031 -0.58597,-0.37498 -1.51175,-0.44529 -2.77734,-0.21094 -11.2969,2.01565 -16.94533,5.69533 -16.94531,11.03906 -2e-5,5.39064 2.92966,8.08595 8.78906,8.08594 2.34372,1e-5 4.75778,-0.44531 7.24219,-1.33594 2.90621,-1.03124 4.35933,-2.27342 4.35937,-3.72656 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2834"" />
       <path
-         d=""m 394.4689,161.155 c -1e-5,0.19141 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51953 -0.27345,-0.34636 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54687,-0.48307 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61979,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0274,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98243,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11425,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51075,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28775,-0.916 3.36328,-0.91601 1.85025,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75195,0.88867 0.10025,1e-5 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49219,-0.0684 0.26431,0 0.39647,0.17773 0.39648,0.5332 z m -4.21093,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29493,1.10743 -3.29492,2.14649 -1e-5,1.04818 0.56965,1.57226 1.70898,1.57226 0.45573,0 0.92513,-0.0866 1.40821,-0.25976 0.56509,-0.20052 0.84764,-0.44206 0.84765,-0.72461 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2873"" />
+         d=""m 392.13307,120.06709 c -5e-5,4.96876 -1.9102,8.91798 -5.73047,11.84766 -3.82035,2.92969 -9.03519,4.39453 -15.64453,4.39453 -4.40627,0 -8.81252,-0.46875 -13.21875,-1.40625 -3.79688,-0.84375 -6.00001,-1.61719 -6.60937,-2.32031 -0.37501,-0.65625 -0.56251,-3.86718 -0.5625,-9.63281 -1e-5,-2.48436 0.56249,-3.77343 1.6875,-3.86719 1.12499,-0.14061 2.08592,0.46876 2.88281,1.82812 3.51561,6.14064 9.18748,9.21095 17.01562,9.21094 6.60934,1e-5 9.91403,-2.29687 9.91407,-6.89062 -4e-5,-2.01562 -0.75004,-3.70311 -2.25,-5.0625 -1.64066,-1.54686 -4.82816,-3.35155 -9.5625,-5.41407 -6.84377,-3.04685 -11.41408,-5.71872 -13.71094,-8.01562 -2.48439,-2.43747 -3.72657,-5.718716 -3.72656,-9.843752 -1e-5,-5.062455 1.9453,-8.999951 5.83593,-11.8125 3.60936,-2.718695 8.43748,-4.078069 14.48438,-4.078125 3.79684,5.6e-5 7.26559,0.304743 10.40625,0.914062 3.37496,0.60943 5.13277,1.359429 5.27344,2.25 0.37495,2.625051 1.14839,6.421922 2.32031,11.390625 0.14058,0.609416 -0.51567,1.101603 -1.96875,1.476563 -1.54692,0.328165 -2.57817,0.07035 -3.09375,-0.773438 -3.70317,-6.046828 -8.39066,-9.070262 -14.0625,-9.070312 -6.4219,5e-5 -9.63283,2.062548 -9.63281,6.1875 -2e-5,2.296916 0.86716,4.12504 2.60156,5.484375 1.54685,1.171912 5.17966,3.000035 10.89844,5.484372 5.99996,2.57816 10.07808,4.89847 12.23437,6.96094 2.81245,2.6719 4.2187,6.25783 4.21875,10.75781 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2836"" />
       <path
-         d=""m 415.11343,156.58859 c -10e-6,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18946 -2.47689,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49218 -0.0912,-0.0365 -0.13672,0.18684 -0.13671,0.66992 l 0,4.11523 c -1e-5,0.66536 0.54231,1.09375 1.62695,1.28516 0.50129,0.0911 0.81803,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19825,0.38965 -10e-6,0.30988 -0.20509,0.45116 -0.61524,0.42382 -1.91407,-0.12761 -3.5957,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16862 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.7793,-0.56054 0.44661,-0.1823 0.66991,-0.6198 0.66992,-1.3125 l 0,-12.0586 c -10e-6,-0.97525 -0.26889,-1.58593 -0.80664,-1.83203 -0.63803,-0.28254 -0.95704,-0.51496 -0.95703,-0.69727 -10e-6,-0.20051 0.18684,-0.3509 0.56054,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49024,-0.6289 0.42838,-0.24609 0.68814,-0.36913 0.77929,-0.36914 0.27344,1e-5 0.49674,0.25066 0.66993,0.75195 0.2552,0.72918 0.42382,1.09376 0.50585,1.09375 0.0182,1e-5 0.41016,-0.21418 1.17579,-0.64258 0.83853,-0.46483 1.65884,-0.69725 2.46093,-0.69726 1.30338,1e-5 2.3789,0.36915 3.22657,1.10742 1.0117,0.86589 1.51756,2.11915 1.51757,3.75976 z m -2.32421,1.09375 c -2e-5,-1.48567 -0.36916,-2.64322 -1.10743,-3.47265 -0.60157,-0.6927 -1.30795,-1.03906 -2.11914,-1.03907 -0.62891,10e-6 -1.23047,0.21876 -1.80468,0.65625 -0.75652,0.56512 -1.13478,1.35353 -1.13477,2.36524 l 0,3.86914 c -10e-6,0.24609 0.34635,0.50586 1.03906,0.7793 0.74739,0.30078 1.55859,0.45117 2.4336,0.45117 1.79556,0 2.69334,-1.20313 2.69336,-3.60938 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2875"" />
+         d=""m 473.69557,132.72334 c -7e-5,1.64063 -1.10163,2.50782 -3.30469,2.60157 -3.28131,0.0469 -7.57037,0.28124 -12.86718,0.70312 -2.62506,0.51562 -4.50006,0.1875 -5.625,-0.98437 -7.4063,-7.96875 -13.68754,-16.31249 -18.84375,-25.03125 -0.42191,-0.74998 -0.96097,-1.12498 -1.61719,-1.125 -0.79691,2e-5 -2.17972,0.70315 -4.14844,2.10937 -2.20315,1.21877 -3.30471,2.95315 -3.30469,5.20313 -2e-5,1.59376 0.0469,3.89064 0.14063,6.89062 0.0937,3.00001 0.84372,4.96876 2.25,5.90625 0.98435,0.65626 3.25778,1.17188 6.82031,1.54688 2.20309,0.28125 3.30465,1.10156 3.30469,2.46093 -4e-5,1.07813 -0.17582,1.7461 -0.52734,2.00391 -0.3516,0.25781 -1.27738,0.31641 -2.77735,0.17578 -4.68753,-0.42187 -12.60939,-0.1875 -23.76562,0.70313 -2.81251,0.23437 -4.33595,-0.11719 -4.57032,-1.05469 -0.0937,-0.32813 -0.14063,-0.79688 -0.14062,-1.40625 -1e-5,-1.45312 1.42968,-2.55469 4.28906,-3.30469 2.57811,-0.65624 3.86718,-3.67968 3.86719,-9.07031 l 0,-61.453127 c -1e-5,-3.843671 -0.37501,-6.515543 -1.125,-8.015625 -1.03126,-1.92179 -3.18751,-3.421788 -6.46875,-4.5 -1.54688,-0.515536 -2.32032,-1.242098 -2.32031,-2.179688 -1e-5,-1.359283 1.10155,-2.413969 3.30468,-3.164062 3.51562,-1.17178 6.86718,-2.788966 10.05469,-4.851563 2.57811,-1.6874 4.17186,-2.531149 4.78125,-2.53125 1.92185,1.01e-4 2.88279,1.21885 2.88281,3.65625 -2e-5,-0.328027 -0.0235,1.992283 -0.0703,6.960938 -0.0469,3.421962 -0.0703,8.015707 -0.0703,13.78125 l 0.14062,44.015627 c -2e-5,1.21878 0.3281,1.82815 0.98438,1.82812 0.7031,3e-5 1.78122,-0.60934 3.23437,-1.82812 3.8906,-3.046842 8.67184,-7.031213 14.34375,-11.953127 1.12496,-1.17183 1.68746,-2.109329 1.6875,-2.8125 -4e-5,-1.265577 -1.89848,-2.156201 -5.69531,-2.671875 -1.64066,-0.18745 -2.4141,-1.101512 -2.32031,-2.742188 0.14059,-1.64057 0.9609,-2.343695 2.46094,-2.109375 3.37495,0.468805 8.29682,0.726617 14.76562,0.773438 4.49994,0.04693 8.9765,0.07037 13.42969,0.07031 1.45306,0.04693 2.17962,0.914116 2.17969,2.601563 -7e-5,1.5938 -1.14851,2.460986 -3.44532,2.601562 -3.60943,0.140674 -7.00787,0.960986 -10.19531,2.460938 -4.45317,2.015669 -9.21098,5.554728 -14.27344,10.617187 -0.37504,0.281286 -0.56254,0.632845 -0.5625,1.054685 -4e-5,0.65629 0.79684,2.2266 2.39063,4.71094 5.85933,8.90627 11.39057,15.63283 16.59375,20.17969 3.32806,2.85938 6.44525,4.28907 9.35156,4.28906 2.15618,1e-5 3.49212,0.15235 4.00781,0.45703 0.51556,0.30469 0.77337,1.11329 0.77344,2.42578 z""
+         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2838"" />
+    </g>
+    <g
+       style=""font-size:40px;font-style:normal;font-weight:normal;line-height:89.99999762%;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
+       id=""text2870""
+       transform=""translate(0,4)"">
       <path
-         d=""m 429.20914,156.95773 c -2e-5,1.58594 -0.58791,2.92807 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.4492,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 285.18048,153.2296 c -2e-5,0.16407 -0.31447,0.33269 -0.94336,0.50586 -0.41017,0.10938 -0.75653,0.48308 -1.03906,1.12109 -1.64064,3.64584 -3.10809,6.58529 -4.40234,8.81836 -0.0274,0.0547 -0.0957,0.0775 -0.20508,0.0684 -0.10028,-0.009 -0.16864,-0.041 -0.20508,-0.0957 -0.21876,-0.32813 -0.77931,-1.47201 -1.68164,-3.43164 -0.82944,-1.80469 -1.27605,-2.70703 -1.33985,-2.70703 -0.10027,0 -0.5879,0.87044 -1.46289,2.61132 -0.99349,1.94141 -1.58138,3.04883 -1.76367,3.32227 -0.0274,0.0638 -0.0912,0.0911 -0.1914,0.082 -0.10027,0 -0.17775,-0.0365 -0.23243,-0.10937 -0.66537,-1.03907 -2.19662,-3.88281 -4.59375,-8.53125 -0.27344,-0.54687 -0.57877,-0.89322 -0.91601,-1.03907 -0.58334,-0.2552 -0.875,-0.44204 -0.875,-0.56054 0,-0.35546 0.19596,-0.51497 0.58789,-0.47852 1.75911,0.1823 3.29947,0.14584 4.62109,-0.10937 0.30078,-0.0547 0.45117,0.0456 0.45117,0.30078 0,0.35548 -0.20508,0.58334 -0.61523,0.68359 -0.53777,0.12761 -0.80665,0.32814 -0.80664,0.60156 -1e-5,0.17319 0.0638,0.4284 0.19141,0.76563 0.32812,0.84766 0.8203,1.92318 1.47656,3.22656 0.65624,1.30339 1.03905,1.95508 1.14844,1.95508 0.0729,0 0.46027,-0.67903 1.16211,-2.03711 0.70181,-1.35807 1.05272,-2.11002 1.05273,-2.25586 -1e-5,-0.35546 -0.1185,-0.73827 -0.35547,-1.14844 -0.28256,-0.60155 -0.61069,-0.96158 -0.98437,-1.08008 -0.60157,-0.20962 -0.90236,-0.4147 -0.90235,-0.61523 -1e-5,-0.36457 0.20507,-0.51496 0.61524,-0.45117 1.40363,0.19142 2.88931,0.15496 4.45703,-0.10938 0.30077,-0.0547 0.45116,0.0365 0.45117,0.27344 -1e-5,0.34637 -0.22332,0.56056 -0.66992,0.64258 -0.52866,0.10027 -0.79298,0.36915 -0.79297,0.80664 -10e-6,0.20964 0.0592,0.45574 0.17773,0.73828 1.40364,3.4362 2.21483,5.1543 2.4336,5.1543 0.082,0 0.4466,-0.66992 1.09375,-2.00977 0.69269,-1.43098 1.17576,-2.58397 1.44922,-3.45898 0.0182,-0.0456 0.0273,-0.0957 0.0273,-0.15039 -2e-5,-0.39192 -0.30536,-0.69726 -0.91602,-0.91602 -0.47397,-0.15494 -0.71095,-0.32811 -0.71093,-0.51953 -2e-5,-0.319 0.15037,-0.44205 0.45117,-0.36914 0.41014,0.0912 1.14842,0.15952 2.21484,0.20508 1.00259,0.0365 1.66339,0.0319 1.98242,-0.0137 0.37368,-0.0456 0.56053,0.0592 0.56055,0.31445 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2877"" />
       <path
-         d=""m 441.19937,160.70383 c -10e-6,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02149,0.77929 -1.54948,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54492,-2.18749 -1.54492,-3.77343 0,-1.70443 0.59245,-3.12174 1.77734,-4.25196 1.15755,-1.10285 2.57943,-1.65428 4.26563,-1.65429 1.02082,1e-5 1.9095,0.14584 2.66602,0.4375 0.69269,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13673,1e-5 -0.45118,-0.19595 -0.94336,-0.58789 -0.92058,-0.72915 -1.64063,-1.09374 -2.16015,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83399,2.78906 0,1.431 0.40104,2.57488 1.20313,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98241,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.19139,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 297.29376,160.98155 c -1e-5,0.39193 -0.52865,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -10e-6,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41016,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.40561,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,10e-6 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2879"" />
       <path
-         d=""m 456.73062,161.98898 c -10e-6,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47201,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.1914 -1.44011,-1.54948 -2.66147,-3.17188 -3.66406,-4.86719 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64257,1.01172 -1e-5,0.3099 0.009,0.75652 0.0273,1.33985 0.0182,0.58333 0.16406,0.96614 0.4375,1.14843 0.1914,0.12761 0.63346,0.22787 1.32617,0.30079 0.42838,0.0547 0.64257,0.21419 0.64258,0.47851 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91146,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88867,-0.20508 -0.0182,-0.0638 -0.0274,-0.15495 -0.0274,-0.27344 0,-0.28255 0.278,-0.49674 0.83399,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75195,-1.76367 l 0,-11.94922 c 0,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20052,-0.37368 -0.61979,-0.66535 -1.25781,-0.875 -0.30079,-0.10024 -0.45118,-0.24152 -0.45117,-0.42383 -10e-6,-0.2643 0.21419,-0.46938 0.64257,-0.61523 0.68359,-0.22785 1.33529,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.8112,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56055,0.71094 -1e-5,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0274,8.55859 c -1e-5,0.23699 0.0638,0.35548 0.1914,0.35547 0.13672,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32421 0.21874,-0.22786 0.32812,-0.41015 0.32813,-0.54688 -1e-5,-0.24608 -0.36915,-0.41926 -1.10743,-0.51953 -0.31901,-0.0365 -0.4694,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22332,0.47853 -0.66992,0.50586 -0.70184,0.0273 -1.36265,0.18686 -1.98243,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13932,1.73178 2.21484,3.03972 3.22656,3.92383 0.64713,0.55599 1.25325,0.83399 1.81836,0.83399 0.41926,0 0.67903,0.0296 0.7793,0.0889 0.10025,0.0592 0.15038,0.21648 0.15039,0.47168 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 311.11603,157.13976 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91862,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48112,-0.57422 -1.49024,-0.82032 -0.009,-0.20963 -0.005,-0.94335 0.0137,-2.20117 0.0273,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60059 -0.0182,-2.00975 -0.0274,-3.34275 -0.0274,-3.99902 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51954 -0.23698,-0.082 -0.35547,-0.2324 -0.35547,-0.45117 0,-0.19139 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48762 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42383,0.69727 -1e-5,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46485,0.38281 1.09374,-0.62889 2.23306,-0.94335 3.41796,-0.94336 1.36718,1e-5 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90267 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03906,-3.07617 -0.65626,-0.7565 -1.45379,-1.13476 -2.39258,-1.13477 -0.64714,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33725 -0.94336,0.69272 -0.94335,1.06641 l 0,3.66406 c -1e-5,1.75912 0.97069,2.63868 2.9121,2.63867 1.01172,1e-5 1.82747,-0.32584 2.44727,-0.97753 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2881"" />
       <path
-         d=""m 468.26968,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 333.23712,161.93858 c 0.0365,0.082 0.0547,0.14128 0.0547,0.17774 -2e-5,0.1914 -0.46486,0.50586 -1.39453,0.94336 -1.07553,0.5013 -1.709,0.75195 -1.90039,0.75195 -0.16408,0 -0.3532,-0.27572 -0.56739,-0.82715 -0.2142,-0.55143 -0.36231,-0.82715 -0.44433,-0.82715 0.009,0 -0.50815,0.23926 -1.55176,0.71778 -1.04363,0.47851 -1.83432,0.71777 -2.37207,0.71777 -1.20313,0 -2.24675,-0.43294 -3.13086,-1.29883 -1.06641,-1.02994 -1.59961,-2.4746 -1.59961,-4.33398 0,-1.55859 0.62891,-2.90299 1.88672,-4.03321 1.11198,-0.99347 2.24674,-1.49022 3.4043,-1.49023 0.8203,1e-5 1.80012,0.10483 2.93945,0.31445 0.35546,0.0638 0.53319,-0.041 0.5332,-0.31445 l 0,-4.67578 c -1e-5,-0.52863 -0.12761,-0.90233 -0.38281,-1.12109 -0.16407,-0.14582 -0.55144,-0.319 -1.16211,-0.51954 -0.29167,-0.10935 -0.43751,-0.28709 -0.4375,-0.5332 -10e-6,-0.22785 0.19596,-0.39647 0.58789,-0.50586 0.53775,-0.16404 1.18033,-0.43748 1.92774,-0.82031 0.61978,-0.32811 1.00259,-0.49217 1.14843,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,12.42773 c -10e-6,0.51954 0.23241,0.7793 0.69727,0.7793 0.17316,0 0.40558,-0.0273 0.69726,-0.082 0.319,-0.0547 0.53319,0.0501 0.64258,0.31445 z m -4.22461,-1.35351 0,-4.89453 c -1e-5,-0.40104 -0.35548,-0.81575 -1.0664,-1.24414 -0.75652,-0.45572 -1.57683,-0.68359 -2.46094,-0.6836 -1.90495,1e-5 -2.85743,1.17579 -2.85742,3.52735 -10e-6,1.25781 0.37825,2.33333 1.13476,3.22656 0.75651,0.89323 1.64518,1.33984 2.66602,1.33984 0.46483,0 1.01171,-0.15494 1.64062,-0.46484 0.6289,-0.3099 0.94335,-0.57878 0.94336,-0.80664 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2883"" />
       <path
-         d=""m 477.81265,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99804,-0.41699 -0.14584,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30534,0.18231 0.31446,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35547,0 -0.57422,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c -10e-6,1.13022 0.10025,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10937,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 345.09064,160.98155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20509 0.35547,0.47852 -2e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,10e-6 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2885"" />
       <path
-         d=""m 267.56656,187.18898 c -2e-5,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47202,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.19141 -1.44012,-1.54947 -2.66147,-3.17187 -3.66406,-4.86718 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64258,1.01172 0,0.3099 0.009,0.75652 0.0274,1.33985 0.0182,0.58333 0.16405,0.96614 0.4375,1.14843 0.1914,0.12761 0.63345,0.22787 1.32617,0.30078 0.42838,0.0547 0.64257,0.2142 0.64258,0.47852 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91147,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88868,-0.20508 -0.0182,-0.0638 -0.0273,-0.15495 -0.0273,-0.27344 0,-0.28255 0.27799,-0.49674 0.83398,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75196,-1.76367 l 0,-11.94922 c -1e-5,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20053,-0.37368 -0.6198,-0.66535 -1.25782,-0.875 -0.30078,-0.10024 -0.45117,-0.24152 -0.45117,-0.42383 0,-0.2643 0.21419,-0.46938 0.64258,-0.61523 0.68359,-0.22785 1.33528,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.81119,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56054,0.71094 0,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0273,8.55859 c 0,0.23699 0.0638,0.35548 0.19141,0.35547 0.13671,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32422 0.21874,-0.22785 0.32811,-0.41014 0.32812,-0.54687 -10e-6,-0.24608 -0.36915,-0.41926 -1.10742,-0.51953 -0.31902,-0.0365 -0.46941,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22333,0.47853 -0.66993,0.50586 -0.70183,0.0274 -1.36264,0.18686 -1.98242,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13931,1.73178 2.21483,3.03972 3.22656,3.92383 0.64713,0.55599 1.25324,0.83399 1.81836,0.83399 0.41926,0 0.67902,0.0296 0.7793,0.0889 0.10024,0.0592 0.15037,0.21647 0.15039,0.47168 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 360.08868,153.20226 c -1e-5,0.17318 -0.28712,0.35092 -0.86132,0.5332 -0.37371,0.10938 -0.69272,0.48308 -0.95704,1.12109 -0.44662,1.07553 -1.22592,2.65235 -2.33789,4.73047 -0.93881,1.75912 -1.66342,3.04427 -2.17382,3.85547 -0.0274,0.0638 -0.0866,0.0911 -0.17774,0.082 -0.0912,-0.009 -0.15951,-0.0456 -0.20508,-0.10937 -1.93229,-2.77995 -3.58659,-5.6237 -4.96289,-8.53125 -0.29167,-0.61979 -0.57878,-0.96614 -0.86133,-1.03907 -0.52864,-0.20962 -0.79296,-0.39647 -0.79296,-0.56054 0,-0.36458 0.17773,-0.52408 0.5332,-0.47852 0.55599,0.0729 1.38086,0.0912 2.47461,0.0547 1.05729,-0.0273 1.80012,-0.082 2.22851,-0.16406 0.26432,-0.0547 0.39648,0.0456 0.39649,0.30078 -10e-6,0.31902 -0.18686,0.5241 -0.56055,0.61523 -0.71094,0.19142 -1.06641,0.43751 -1.0664,0.73828 -1e-5,0.13673 0.0456,0.33269 0.13671,0.58789 0.30989,0.76564 0.86588,1.87078 1.66797,3.31543 0.80208,1.44467 1.25781,2.167 1.36719,2.167 0.082,0 0.46939,-0.69271 1.16211,-2.07813 0.72916,-1.46744 1.25324,-2.65234 1.57227,-3.55469 0.0456,-0.10025 0.0683,-0.20051 0.0684,-0.30078 -1e-5,-0.35546 -0.21876,-0.64712 -0.65625,-0.875 -0.42839,-0.17317 -0.64258,-0.33723 -0.64257,-0.49219 -10e-6,-0.319 0.14126,-0.45116 0.42382,-0.39648 0.36458,0.0638 1.00716,0.1185 1.92774,0.16406 0.92056,0.0456 1.51756,0.0547 1.79101,0.0274 0.33723,-0.0638 0.50585,0.0319 0.50586,0.28711 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2887"" />
       <path
-         d=""m 283.31656,187.4214 c -2e-5,0.28256 -0.20509,0.41016 -0.61524,0.38282 -1.95964,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -10e-6,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76108 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68164,1.43554 0.42838,0.0365 0.64258,0.17318 0.64258,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46485,0.0137 -1.43099,-0.0547 -2.90755,0.0182 -4.42968,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42382 -10e-6,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51041,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41016,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55011,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27148,0.46484 0.41015,0.082 0.61522,0.23242 0.61524,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 372.21564,160.98155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20509 0.35547,0.47852 -2e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,10e-6 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2889"" />
       <path
-         d=""m 289.48257,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31445,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -1e-5,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51951 1.07324,-0.51953 0.92969,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15495,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24153,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79296,-0.66081 0.79297,-1.51758 l 0,-3.58203 c -1e-5,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20053,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20507,-0.46027 0.61523,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 -10e-6,0.59245 0.0866,1.01627 0.25976,1.27148 0.1914,0.28255 0.55599,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 380.66486,162.88194 c -10e-6,0.36459 -0.20509,0.52409 -0.61524,0.47852 -1.25782,-0.11849 -2.81641,-0.10026 -4.67578,0.0547 -0.3737,0.0365 -0.60384,0.0273 -0.69043,-0.0274 -0.0866,-0.0547 -0.12988,-0.20508 -0.12988,-0.45117 0,-0.21875 0.24837,-0.40332 0.74512,-0.55371 0.49674,-0.15039 0.74511,-0.59928 0.74511,-1.34668 l 0,-12.37305 c 0,-0.73826 -0.1071,-1.28058 -0.32129,-1.62695 -0.21419,-0.34634 -0.59017,-0.61522 -1.12793,-0.80664 -0.28255,-0.10024 -0.42383,-0.24152 -0.42382,-0.42383 -1e-5,-0.27342 0.20507,-0.4785 0.61523,-0.61523 0.61979,-0.20051 1.26237,-0.5104 1.92773,-0.92969 0.54687,-0.32811 0.89323,-0.49217 1.03907,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -10e-6,-0.0364 -0.0182,0.41929 -0.0547,1.36718 -0.0273,0.90236 -0.0365,1.79104 -0.0273,2.66602 l 0.0547,12.20898 c 0,0.556 0.13672,0.95932 0.41016,1.20997 0.27343,0.25065 0.74283,0.41699 1.4082,0.49902 0.41015,0.0456 0.61523,0.20052 0.61524,0.46484 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2891"" />
       <path
-         d=""m 303.00406,169.01906 c -10e-6,0.38283 -0.17319,0.82945 -0.51953,1.33984 -0.34637,0.51044 -0.6198,0.76565 -0.82031,0.76563 -0.24611,2e-5 -0.50587,-0.12303 -0.7793,-0.36914 -0.57423,-0.41014 -1.08009,-0.61522 -1.51758,-0.61524 -1.73178,2e-5 -2.59766,1.21226 -2.59766,3.63672 l 0,2.93946 c 0,0.45574 0.39193,0.6517 1.17579,0.58789 l 1.73632,-0.13672 c 0.68359,-0.0547 1.05729,0.0547 1.1211,0.32812 0.0182,0.0912 0.0273,0.22332 0.0273,0.39649 -10e-6,0.3737 -0.0911,0.60613 -0.27344,0.69726 -0.10938,0.0638 -0.39193,0.0957 -0.84765,0.0957 l -1.73633,0 c -0.77475,1e-5 -1.17579,0.16407 -1.20313,0.49218 -0.0182,0.19142 -0.0182,2.17384 0,5.94727 0,0.51042 0.23698,0.875 0.71094,1.09375 0.35546,0.17318 0.94791,0.29167 1.77735,0.35547 0.32811,0.0273 0.52635,0.0661 0.59472,0.11621 0.0684,0.0501 0.10253,0.19824 0.10254,0.44433 -10e-6,0.28256 -0.0387,0.45118 -0.11621,0.50586 -0.0775,0.0547 -0.27117,0.0729 -0.58105,0.0547 -2.01433,-0.10937 -3.82358,-0.082 -5.42774,0.082 -0.41927,0.0456 -0.67448,0.0456 -0.76562,0 -0.0912,-0.0456 -0.13672,-0.20507 -0.13672,-0.47851 0,-0.22787 0.26432,-0.41472 0.79297,-0.56055 0.6289,-0.17318 0.94335,-0.6289 0.94336,-1.36719 l 0,-5.31836 c -10e-6,-0.55598 -0.0866,-0.94335 -0.25977,-1.16211 -0.11849,-0.14582 -0.34636,-0.27342 -0.68359,-0.38281 -0.52865,-0.16405 -0.79297,-0.42382 -0.79297,-0.7793 0,-0.24608 0.10937,-0.40103 0.32812,-0.46484 0.0729,-0.0182 0.30078,-0.0319 0.6836,-0.041 0.32812,-0.009 0.5332,-0.082 0.61523,-0.21875 0.0547,-0.10025 0.082,-0.34635 0.082,-0.73829 l 0,-2.17382 c 0,-1.73176 0.71094,-3.14908 2.13281,-4.25196 1.35807,-1.04816 3.02604,-1.57224 5.00391,-1.57226 0.8203,2e-5 1.23046,0.25067 1.23047,0.75195 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 393.9129,157.76866 c -10e-6,1.58594 -0.5879,2.92806 -1.76367,4.02637 -1.17579,1.09831 -2.63412,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61524,-2.97135 1.84571,-4.07422 1.194,-1.0664 2.62043,-1.5996 4.27929,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43554 0.96614,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36524,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91601,2.48145 -1e-5,1.56771 0.35546,2.78907 1.0664,3.66406 0.65625,0.80209 1.51302,1.20313 2.57032,1.20313 1.00259,0 1.79556,-0.33268 2.3789,-0.99805 0.58333,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2893"" />
       <path
-         d=""m 312.84781,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.3763,0 -2.53385,-0.45117 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c 0,-0.50129 -0.2028,-0.94107 -0.60839,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 408.20001,157.39952 c -1e-5,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18945 -2.4769,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49219 -0.0911,-0.0365 -0.13672,0.18685 -0.13672,0.66993 l 0,4.11523 c 0,0.66536 0.54232,1.09374 1.62696,1.28516 0.50129,0.0911 0.81802,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19824,0.38964 0,0.30989 -0.20508,0.45117 -0.61523,0.42383 -1.91407,-0.12761 -3.59571,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16863 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.77929,-0.56055 0.44662,-0.18229 0.66992,-0.61979 0.66993,-1.3125 l 0,-12.05859 c -1e-5,-0.97525 -0.26889,-1.58593 -0.80665,-1.83203 -0.63802,-0.28254 -0.95703,-0.51497 -0.95703,-0.69727 0,-0.20051 0.18685,-0.3509 0.56055,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49023,-0.62891 0.42839,-0.24608 0.68815,-0.36912 0.7793,-0.36914 0.27344,2e-5 0.49674,0.25067 0.66992,0.75196 0.25521,0.72917 0.42383,1.09376 0.50586,1.09375 0.0182,1e-5 0.41015,-0.21419 1.17578,-0.64258 0.83854,-0.46483 1.65885,-0.69726 2.46094,-0.69727 1.30338,1e-5 2.3789,0.36915 3.22656,1.10743 1.01171,0.86589 1.51757,2.11914 1.51758,3.75976 z m -2.32422,1.09375 c -10e-6,-1.48567 -0.36915,-2.64322 -1.10742,-3.47266 -0.60157,-0.69269 -1.30795,-1.03905 -2.11914,-1.03906 -0.62891,1e-5 -1.23047,0.21876 -1.80469,0.65625 -0.75651,0.56511 -1.13477,1.35353 -1.13476,2.36524 l 0,3.86914 c -1e-5,0.24609 0.34635,0.50586 1.03906,0.77929 0.74739,0.30079 1.55859,0.45118 2.43359,0.45118 1.79557,0 2.69335,-1.20313 2.69336,-3.60938 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2895"" />
       <path
-         d=""m 326.72476,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -10e-6,-0.40102 0.16633,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35548,0.0365 -0.57878,0.0228 -0.66993,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13671,-0.4375 -10e-6,-0.20963 0.24153,-0.38281 0.7246,-0.51953 0.52865,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61523,-0.70637 -1.24414,-0.91601 -0.28255,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61524,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 432.90509,162.90929 c -2e-5,0.30078 -0.1413,0.44205 -0.42383,0.42382 -1.85939,-0.13671 -3.59116,-0.13671 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13216 -0.5332,-0.47851 -2e-5,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49024 l 0,-3.63671 c -2e-5,-2.04166 -0.82944,-3.0625 -2.48828,-3.0625 -0.87502,0 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56511 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27343 0.80207,0.13672 1.20311,0.30534 1.20313,0.50586 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.1823 -0.12304,-0.38282 -10e-6,-0.23697 0.25975,-0.38281 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57877 0.84766,-1.54492 l 0,-3.71875 c -10e-6,-1.0026 -0.22787,-1.77733 -0.68359,-2.32422 -0.40105,-0.49218 -0.91147,-0.73827 -1.53125,-0.73828 -0.91147,1e-5 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99023 c -1e-5,0.56511 0.14583,0.95704 0.4375,1.17579 0.26432,0.20052 0.74283,0.32356 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.15039,0.39648 -0.45117,0.39648 -2.27865,0 -3.92839,0.0638 -4.94922,0.19141 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32813 0,-0.22786 0.33724,-0.42382 1.01172,-0.58789 0.41016,-0.10937 0.61523,-0.64257 0.61524,-1.59961 l 0,-4.19726 c -1e-5,-1.0664 -0.28711,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30079 -0.10482,-0.0638 -0.15722,-0.16861 -0.15722,-0.31445 0,-0.16405 0.47395,-0.51041 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84765 1.8457,-0.84766 0.19141,1e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,10e-6 0.37825,-0.14127 0.83399,-0.42383 0.5651,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43749 2.31054,-0.4375 0.63802,1e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88868,0.75195 0.21873,0.27345 0.32811,0.41017 0.32812,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41015 2.25586,-0.41016 2.49738,1e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42968 c -2e-5,0.51954 0.12303,0.88868 0.36914,1.10743 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2897"" />
       <path
-         d=""m 338.55093,184.72804 c -10e-6,0.96615 -0.37142,1.73406 -1.11425,2.30372 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39193 -0.14584,-0.72005 -0.4375,-0.98438 -0.31902,-0.30077 -0.93881,-0.65168 -1.85937,-1.05273 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17773 0.65624,0.1185 0.99804,0.26434 1.02539,0.4375 0.0729,0.51043 0.2233,1.24871 0.45117,2.21485 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17578 -1.63152,-1.76367 -2.73438,-1.76368 -1.2487,1e-5 -1.87305,0.40106 -1.87304,1.20313 -10e-6,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.09179 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 444.45782,160.98155 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.0026,-0.95703 -1.5039,-2.23307 -1.5039,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -10e-6,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33593,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,10e-6 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2899"" />
       <path
-         d=""m 362.44937,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 460.86407,163.03233 c -1e-5,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0273,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79297,-0.49219 0.48306,-0.13672 0.7246,-0.60612 0.72461,-1.4082 l 0,-3.63672 c -1e-5,-2.08723 -0.90691,-3.13085 -2.72071,-3.13086 -0.8112,1e-5 -1.56315,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -1e-5,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0592,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.43099,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32812,0.0456 -0.5332,0.0592 -0.61523,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27344,-0.42383 0,-0.21874 0.25976,-0.40559 0.7793,-0.56054 0.48307,-0.14583 0.7246,-0.75195 0.72461,-1.81836 l 0,-4.14258 c -1e-5,-0.70182 -0.0912,-1.14843 -0.27344,-1.33984 -0.12761,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.1823,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56054,-0.47852 0.51042,-0.1914 1.07097,-0.49674 1.68165,-0.91602 0.51041,-0.34634 0.83853,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.34179,0.84082 -0.0729,1e-5 0.39193,-0.26659 1.39454,-0.7998 1.00259,-0.53319 1.99152,-0.7998 2.96679,-0.79981 2.36067,1e-5 3.55012,1.34441 3.56836,4.03321 l 0.0273,4.40234 c -2e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21873,0.18229 0.64256,0.33724 1.27148,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2901"" />
       <path
-         d=""m 375.39664,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 469.64142,161.99327 c -10e-6,0.4375 -0.40105,0.8112 -1.20313,1.12109 -0.71094,0.27344 -1.43099,0.41016 -2.16015,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.417 -0.14583,-0.0365 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -10e-6,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87956,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2903"" />
       <path
-         d=""m 385.17203,186.38234 c -1e-5,0.4375 -0.40105,0.8112 -1.20313,1.1211 -0.71094,0.27343 -1.43099,0.41015 -2.16015,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43295,-0.28027 -0.99805,-0.417 -0.14583,-0.0364 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98438,-0.48306 1.84115,-1.34895 2.57032,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -1e-5,0.12762 0.0228,0.21877 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17316,1e-5 0.17316,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 475.84845,162.60851 c -1e-5,2.36979 -0.99805,4.15168 -2.99414,5.3457 -0.18229,0.10937 -0.31446,0.16406 -0.39649,0.16406 -0.1276,0 -0.24609,-0.14584 -0.35546,-0.4375 -0.0365,-0.10026 -0.0547,-0.1823 -0.0547,-0.24609 0,-0.15495 0.25976,-0.41016 0.7793,-0.76563 0.89322,-0.61979 1.33984,-1.32161 1.33984,-2.10547 0,-0.40104 -0.25977,-0.76562 -0.7793,-1.09375 -0.72917,-0.45573 -1.09375,-1.01627 -1.09375,-1.68164 0,-0.44661 0.15039,-0.81803 0.45117,-1.11426 0.30078,-0.29622 0.70182,-0.44433 1.20313,-0.44433 0.60156,0 1.06868,0.21875 1.40137,0.65625 0.33267,0.4375 0.49901,1.01172 0.49902,1.72266 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2905"" />
       <path
-         d=""m 404.23062,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 278.95978,182.96866 c -1e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75977 0,-1.61327 0.61523,-2.97134 1.8457,-4.07421 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -1e-5,-1.43099 -0.34637,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91602,2.48145 0,1.56771 0.35547,2.78906 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2907"" />
       <path
-         d=""m 420.63687,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 295.59845,188.23233 c -2e-5,0.28255 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10027 -3.44533,-0.11849 -4.45704,-0.0547 -0.51954,0.0365 -0.80209,-0.0274 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -1e-5,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13672 0.7246,-0.60612 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76107 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68165,1.43554 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41015 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -10e-6,-0.21875 0.25976,-0.40559 0.77929,-0.56054 0.48307,-0.14584 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70182 -0.0912,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38282 0,-0.18228 0.18685,-0.34178 0.56055,-0.47851 0.51041,-0.1914 1.07096,-0.49674 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24608,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.7998 2.9668,-0.79981 2.36066,1e-5 3.55011,1.34441 3.56836,4.03321 l 0.0273,4.40234 c -10e-6,0.56511 0.14582,0.9707 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27149,0.46484 0.41014,0.082 0.61521,0.23242 0.61523,0.45117 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2909"" />
       <path
-         d=""m 433.58414,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 307.02814,186.18155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82813 0,-1.80468 0.56054,-3.25389 1.68164,-4.34765 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20508 0.35547,0.47851 -2e-5,0.37371 -0.44663,0.69272 -1.33985,0.95704 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11849 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,1e-5 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2911"" />
       <path
-         d=""m 448.65054,186.51906 c -10e-6,0.18229 -0.4284,0.46029 -1.28515,0.83398 -0.72918,0.31902 -1.09376,0.47852 -1.09375,0.47852 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -10e-6,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17773 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26432 1.3444,-0.5332 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,1e-5 0.47851,0.2142 0.47851,0.64258 0,10e-6 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.96159 -0.041,1.87533 -0.041,2.74121 l 0,1.64062 c -10e-6,1.11199 0.21874,1.87305 0.65625,2.28321 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46094 l 0,-2.43359 c -10e-6,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20963 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -10e-6,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00716 1.42188,1.08008 0.31899,0.0273 0.4785,0.15039 0.47851,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 328.91681,187.13858 c 0.0364,0.082 0.0547,0.14128 0.0547,0.17774 -2e-5,0.1914 -0.46486,0.50586 -1.39453,0.94336 -1.07554,0.5013 -1.709,0.75195 -1.9004,0.75195 -0.16407,0 -0.3532,-0.27572 -0.56738,-0.82715 -0.2142,-0.55143 -0.36231,-0.82715 -0.44433,-0.82715 0.009,0 -0.50815,0.23926 -1.55176,0.71778 -1.04363,0.47851 -1.83432,0.71777 -2.37207,0.71777 -1.20313,0 -2.24675,-0.43294 -3.13086,-1.29883 -1.06641,-1.02994 -1.59961,-2.4746 -1.59961,-4.33398 0,-1.55859 0.6289,-2.90299 1.88672,-4.03321 1.11197,-0.99348 2.24674,-1.49022 3.40429,-1.49023 0.82031,1e-5 1.80013,0.10483 2.93946,0.31445 0.35546,0.0638 0.53319,-0.041 0.5332,-0.31445 l 0,-4.67578 c -1e-5,-0.52863 -0.12761,-0.90233 -0.38281,-1.1211 -0.16407,-0.14581 -0.55144,-0.31899 -1.16211,-0.51953 -0.29168,-0.10935 -0.43751,-0.28709 -0.4375,-0.5332 -10e-6,-0.22785 0.19595,-0.39647 0.58789,-0.50586 0.53775,-0.16404 1.18033,-0.43748 1.92773,-0.82031 0.61978,-0.32811 1.0026,-0.49217 1.14844,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,12.42773 c -1e-5,0.51954 0.23241,0.7793 0.69727,0.7793 0.17316,0 0.40558,-0.0273 0.69726,-0.082 0.319,-0.0547 0.53319,0.0501 0.64258,0.31445 z m -4.22461,-1.35351 0,-4.89453 c -1e-5,-0.40104 -0.35548,-0.81575 -1.06641,-1.24414 -0.75651,-0.45572 -1.57683,-0.68359 -2.46093,-0.6836 -1.90496,1e-5 -2.85743,1.17579 -2.85743,3.52735 0,1.25781 0.37826,2.33333 1.13477,3.22656 0.7565,0.89323 1.64518,1.33984 2.66602,1.33984 0.46483,0 1.01171,-0.15494 1.64062,-0.46484 0.6289,-0.3099 0.94335,-0.57878 0.94336,-0.80664 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2913"" />
       <path
-         d=""m 462.54117,178.58937 c -0.0912,0.67449 -0.32814,1.01173 -0.71094,1.01172 -0.13673,1e-5 -0.39194,-0.0273 -0.76562,-0.082 -0.16408,-0.0182 -0.27801,-0.0273 -0.3418,-0.0273 -0.12762,0.009 -0.19142,0.0912 -0.19141,0.24609 -1e-5,0.0456 0.009,0.18686 0.0273,0.42383 0.0182,0.23699 0.0273,0.47852 0.0273,0.72461 -1e-5,1.97787 -1.28061,3.32227 -3.8418,4.0332 -1.51302,0.41927 -2.26953,0.75651 -2.26953,1.01172 0,0.26432 0.56054,0.4694 1.68164,0.61523 l 2.13282,0.28711 c 1.194,0.15495 2.06899,0.37826 2.625,0.66993 0.8841,0.46484 1.32615,1.18033 1.32617,2.14648 -2e-5,1.35807 -0.77931,2.51562 -2.33789,3.47266 -1.51303,0.92056 -3.27215,1.38085 -5.27735,1.38086 -1.23958,-1e-5 -2.22624,-0.25066 -2.95996,-0.75196 -0.73372,-0.50131 -1.10059,-1.16667 -1.10058,-1.99609 -1e-5,-1.25782 0.87499,-2.46094 2.625,-3.60938 -0.80209,-0.32812 -1.20313,-0.84309 -1.20313,-1.54492 0,-0.65625 0.74739,-1.25325 2.24219,-1.79101 -2.15105,-0.57422 -3.22657,-1.83203 -3.22656,-3.77344 -1e-5,-1.21223 0.43977,-2.21711 1.31933,-3.01465 0.87956,-0.79752 1.98925,-1.19628 3.3291,-1.19629 0.95703,10e-6 1.89127,0.21876 2.80274,0.65625 0.60155,0.28256 1.35806,0.41017 2.26953,0.38281 l 1.20312,-0.0273 c 0.30989,-0.009 0.50129,0.0319 0.57422,0.12305 0.0729,0.0912 0.0866,0.30079 0.041,0.6289 z m -4.08789,2.55664 c -1e-5,-2.11457 -0.91147,-3.17186 -2.73438,-3.17187 -1.54948,1e-5 -2.32422,0.97983 -2.32422,2.93945 0,1.94141 0.85677,2.91212 2.57032,2.91211 0.71093,10e-6 1.30337,-0.25065 1.77734,-0.75195 0.47395,-0.5013 0.71093,-1.14388 0.71094,-1.92774 z m 2.16015,9.32422 c -10e-6,-0.69271 -0.83855,-1.16211 -2.51562,-1.4082 l -2.7207,-0.38281 c -0.25522,-0.0456 -0.61069,-0.11394 -1.06641,-0.20508 -0.96615,0.77474 -1.44922,1.73632 -1.44922,2.88476 0,1.29427 0.875,1.9414 2.625,1.94141 1.35807,-1e-5 2.5703,-0.32357 3.63672,-0.9707 0.99348,-0.59245 1.49022,-1.21225 1.49023,-1.85938 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 339.23907,178.78507 c -1e-5,1.10287 -0.31902,1.6543 -0.95703,1.65429 -0.10027,1e-5 -0.43295,-0.0638 -0.99804,-0.1914 -0.56511,-0.1276 -0.97983,-0.1914 -1.24414,-0.19141 -1.02084,1e-5 -1.53126,0.68816 -1.53125,2.06445 l 0,4.03321 c -10e-6,0.47396 0.16405,0.8112 0.49218,1.01172 0.1914,0.11849 0.66992,0.27799 1.43555,0.47851 0.41015,0.10026 0.61523,0.25521 0.61523,0.46485 0,0.24609 -0.0342,0.3942 -0.10253,0.44433 -0.0684,0.0501 -0.23927,0.0615 -0.5127,0.0342 -2.00521,-0.20963 -3.59115,-0.21875 -4.75781,-0.0273 -0.36459,0.0638 -0.59701,0.0638 -0.69727,0 -0.082,-0.0547 -0.12305,-0.21419 -0.12304,-0.47852 -1e-5,-0.24609 0.25292,-0.44205 0.75878,-0.58789 0.50586,-0.14583 0.75879,-0.58333 0.75879,-1.3125 l 0,-4.38867 c 0,-0.57421 -0.0752,-0.96158 -0.22558,-1.16211 -0.1504,-0.20051 -0.56283,-0.46939 -1.23731,-0.80664 l -0.082,-0.041 c -0.18229,-0.0911 -0.27344,-0.21874 -0.27344,-0.38281 0,-0.18228 0.18685,-0.33723 0.56055,-0.46484 0.6289,-0.21874 1.20312,-0.52864 1.72266,-0.92969 0.42838,-0.33723 0.70182,-0.50585 0.82031,-0.50586 0.32812,1e-5 0.52408,0.28256 0.58789,0.84766 0.082,0.72006 0.17773,1.08008 0.28711,1.08008 0.009,0 0.51953,-0.34179 1.53125,-1.0254 0.66536,-0.4466 1.39452,-0.66991 2.1875,-0.66992 0.65624,1e-5 0.98436,0.35092 0.98437,1.05274 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2915"" />
       <path
-         d=""m 478.3732,187.35304 c -2e-5,0.30079 -0.20509,0.44206 -0.61523,0.42383 -2.28778,-0.082 -3.77345,-0.10026 -4.45704,-0.0547 -0.33725,0.0273 -0.53777,0.0319 -0.60156,0.0137 -0.17319,-0.0456 -0.25977,-0.19141 -0.25976,-0.4375 -1e-5,-0.17318 0.25975,-0.33724 0.77929,-0.49219 0.34635,-0.10937 0.5651,-0.27799 0.65625,-0.50586 0.0456,-0.1276 0.0683,-0.41927 0.0684,-0.875 l 0,-3.69141 c -1e-5,-2.1328 -0.90235,-3.19921 -2.70703,-3.19921 -0.80209,0 -1.55404,0.19141 -2.25586,0.57421 -0.66537,0.3646 -0.99805,0.72462 -0.99805,1.08008 l 0,5.20899 c 0,0.875 0.56055,1.37174 1.68165,1.49023 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.18229 -0.0319,0.30078 -0.0957,0.35547 -0.0638,0.0547 -0.2461,0.0775 -0.54687,0.0684 -1.44923,-0.0547 -2.92579,-0.0182 -4.42969,0.10937 -0.32813,0.0273 -0.53321,0.0319 -0.61524,0.0137 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -1e-5,-0.20052 0.25976,-0.36914 0.77929,-0.50586 0.48307,-0.13671 0.72461,-0.63346 0.72461,-1.49023 l 0,-12.37305 c 0,-0.72003 -0.0729,-1.24412 -0.21875,-1.57226 -0.20964,-0.43749 -0.62891,-0.76105 -1.25781,-0.97071 -0.2461,-0.082 -0.36914,-0.2324 -0.36914,-0.45117 0,-0.15493 0.18685,-0.31443 0.56055,-0.47851 0.5013,-0.22785 1.13932,-0.56053 1.91406,-0.99805 0.5013,-0.28253 0.84309,-0.42381 1.02539,-0.42383 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,4.67578 c -10e-6,0.50131 0.0729,0.75196 0.21875,0.75196 -0.082,0 0.37597,-0.26204 1.37402,-0.78614 0.99804,-0.52408 1.94368,-0.78612 2.83691,-0.78613 2.42447,1e-5 3.64583,1.34441 3.66407,4.0332 l 0.0273,4.6211 c 0.009,0.92057 0.57876,1.43554 1.70899,1.54492 0.41014,0.0365 0.61521,0.17318 0.61523,0.41015 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         d=""m 352.7879,182.96866 c -10e-6,1.58594 -0.5879,2.92806 -1.76367,4.02637 -1.17579,1.09831 -2.63412,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75977 0,-1.61327 0.61524,-2.97134 1.84571,-4.07421 1.194,-1.0664 2.62043,-1.5996 4.27929,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43554 0.96614,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36524,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91601,2.48145 -1e-5,1.56771 0.35546,2.78906 1.0664,3.66406 0.65625,0.80209 1.51302,1.20313 2.57032,1.20313 1.00259,0 1.79556,-0.33268 2.3789,-0.99805 0.58333,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2917"" />
-    </g>
-    <g
-       style=""font-size:40px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
-       id=""text3850"">
       <path
-         d=""m 229.85182,43.77803 c -0.79695,3.140714 -1.28913,8.414146 -1.47656,15.820313 -7e-5,1.453199 -0.65632,2.179761 -1.96875,2.179687 -1.31257,7.4e-5 -2.22663,-0.632738 -2.74219,-1.898437 -1.40631,-3.421796 -2.74225,-5.812419 -4.00781,-7.171875 -1.50006,-1.593666 -3.49225,-2.554603 -5.97656,-2.882813 -2.67193,-0.421789 -9.32818,-0.632726 -19.96875,-0.632812 -2.43754,8.6e-5 -4.03129,0.257898 -4.78125,0.773437 -0.46879,0.32821 -0.70316,1.031335 -0.70313,2.109375 l 0,31.851563 c -3e-5,1.078175 0.67966,1.5938 2.03906,1.546875 4.17184,-0.04682 10.21871,-0.328075 18.14063,-0.84375 1.54682,-0.187449 2.58979,-0.691355 3.12891,-1.511719 0.539,-0.820259 1.06634,-2.941351 1.58203,-6.363281 0.32806,-1.87494 1.42963,-2.601502 3.30468,-2.179688 1.59369,0.328186 2.27338,1.054747 2.03907,2.179688 -1.31256,6.375052 -1.73444,14.671919 -1.26563,24.890627 0.0468,1.21878 -0.72662,1.87503 -2.32031,1.96875 -1.31256,0.14065 -2.13287,-0.56247 -2.46094,-2.10938 -1.2188,-5.859333 -3.48052,-8.988236 -6.78515,-9.386716 -3.30474,-0.398394 -8.68364,-0.597612 -16.13672,-0.597656 -0.84379,4.4e-5 -1.26566,0.304731 -1.26563,0.914062 l 0,31.64063 c -3e-5,2.34375 0.86716,3.9375 2.60156,4.78125 1.35934,0.70313 4.28903,1.33594 8.78907,1.89843 2.29683,0.23438 3.30464,1.24219 3.02343,3.02344 -0.28129,1.54688 -2.34379,2.15625 -6.1875,1.82813 -11.1094,-0.89063 -20.27345,-0.84375 -27.49218,0.14062 -2.01564,0.28125 -3.02345,-0.53906 -3.02344,-2.46094 -1e-5,-1.21874 1.0078,-1.92187 3.02344,-2.10937 4.59373,-0.51562 6.8906,-4.54687 6.89062,-12.09375 l 0,-60.187502 c -2e-5,-3.093671 -0.5508,-5.472575 -1.65234,-7.136719 -1.10158,-1.663977 -3.15236,-3.175695 -6.15235,-4.535156 -1.87501,-0.843661 -2.57813,-1.992098 -2.10937,-3.445313 0.23436,-0.890532 0.60936,-1.382719 1.125,-1.476562 0.46874,-0.140532 1.71092,-0.04678 3.72656,0.28125 2.95311,0.468842 9.91404,0.703217 20.88281,0.703125 12.93746,9.2e-5 24.11713,-0.281158 33.53907,-0.84375 3.14055,-0.187407 4.71086,0.07041 4.71093,0.773437 -7e-5,0.187592 -0.0235,0.375092 -0.0703,0.5625 z""
-         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2830"" />
+         d=""m 367.07501,182.59952 c -1e-5,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18945 -2.4769,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49219 -0.0911,-0.0365 -0.13672,0.18685 -0.13672,0.66992 l 0,4.11524 c 0,0.66536 0.54232,1.09374 1.62696,1.28516 0.50129,0.0911 0.81802,0.17544 0.95019,0.25292 0.13216,0.0775 0.19824,0.20736 0.19824,0.38965 0,0.30989 -0.20508,0.45117 -0.61523,0.42383 -1.91407,-0.12761 -3.59571,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16863 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.77929,-0.56055 0.44662,-0.18229 0.66992,-0.61979 0.66993,-1.3125 l 0,-12.05859 c -1e-5,-0.97525 -0.26889,-1.58593 -0.80665,-1.83203 -0.63802,-0.28254 -0.95703,-0.51497 -0.95703,-0.69727 0,-0.20051 0.18685,-0.3509 0.56055,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49023,-0.62891 0.42839,-0.24608 0.68815,-0.36913 0.7793,-0.36914 0.27344,1e-5 0.49674,0.25067 0.66992,0.75196 0.25521,0.72917 0.42383,1.09376 0.50586,1.09375 0.0182,1e-5 0.41015,-0.21419 1.17578,-0.64258 0.83854,-0.46483 1.65885,-0.69726 2.46094,-0.69727 1.30338,1e-5 2.3789,0.36915 3.22656,1.10742 1.01171,0.8659 1.51757,2.11915 1.51758,3.75977 z m -2.32422,1.09375 c -10e-6,-1.48567 -0.36915,-2.64322 -1.10742,-3.47266 -0.60157,-0.6927 -1.30795,-1.03905 -2.11914,-1.03906 -0.62891,1e-5 -1.23047,0.21876 -1.80469,0.65625 -0.75651,0.56511 -1.13477,1.35352 -1.13476,2.36524 l 0,3.86914 c -1e-5,0.24609 0.34635,0.50586 1.03906,0.77929 0.74739,0.30079 1.55859,0.45118 2.43359,0.45118 1.79557,0 2.69335,-1.20313 2.69336,-3.60938 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2919"" />
       <path
-         d=""m 275.55495,133.14522 c -4e-5,1.875 -1.05473,2.69531 -3.16407,2.46094 -6.46877,-0.60938 -14.48439,-0.51563 -24.04687,0.28125 -1.92189,0.18749 -3.10548,0.14062 -3.55078,-0.14063 -0.44532,-0.28125 -0.66798,-1.05469 -0.66797,-2.32031 -1e-5,-1.125 1.27733,-2.07422 3.83203,-2.84766 2.55467,-0.77343 3.83202,-3.08202 3.83203,-6.92578 l 0,-63.632812 c -1e-5,-3.796796 -0.55079,-6.585856 -1.65234,-8.367188 -1.10158,-1.781164 -3.03517,-3.163975 -5.80078,-4.148437 -1.45313,-0.515537 -2.1797,-1.242099 -2.17969,-2.179688 -1e-5,-1.406158 1.05468,-2.460845 3.16406,-3.164062 3.18749,-1.031156 6.49217,-2.624904 9.91406,-4.78125 2.81248,-1.687401 4.59373,-2.53115 5.34375,-2.53125 1.73435,1e-4 2.60154,1.195412 2.60157,3.585937 -3e-5,-0.187403 -0.0938,2.156345 -0.28125,7.03125 -0.14065,4.64071 -0.18753,9.211018 -0.14063,13.710938 l 0.28125,62.789062 c -2e-5,2.85939 0.7031,4.9336 2.10938,6.22266 1.40622,1.28906 3.82028,2.14453 7.24218,2.5664 2.10934,0.23438 3.16403,1.03126 3.16407,2.39063 z""
-         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2832"" />
+         d=""m 387.33673,187.16593 c -10e-6,0.1914 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51954 -0.27345,-0.34635 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18685 -1.29883,0.56055 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54688,-0.48308 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61978,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60612,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35091,0.70183 -0.85449,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55598,-0.94791 1.66797,-1.53125 1.16666,-0.61067 2.28775,-0.916 3.36328,-0.91601 1.85025,1e-5 2.76626,0.87956 2.74804,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24152,0.88867 0.75195,0.88867 0.10025,0 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0683 0.49219,-0.0684 0.26431,1e-5 0.39647,0.17774 0.39648,0.53321 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15722,-0.45117 -0.11394,-0.0729 -0.29396,-0.0866 -0.54004,-0.041 -2.19662,0.39193 -3.29493,1.10743 -3.29492,2.14649 -10e-6,1.04817 0.56965,1.57226 1.70898,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2921"" />
       <path
-         d=""m 339.67995,128.43428 c -7e-5,0.98438 -1.79303,2.47266 -5.37891,4.46484 -3.58599,1.99219 -6.45708,2.98828 -8.61328,2.98829 -1.82817,-10e-6 -3.44536,-0.89063 -4.85156,-2.67188 -1.40629,-1.78125 -2.39067,-2.67187 -2.95313,-2.67187 -0.42191,0 -2.64847,0.96094 -6.67969,2.88281 -4.03128,1.92187 -8.08596,2.88281 -12.16406,2.88281 -3.84377,0 -7.0547,-1.125 -9.63281,-3.375 -2.81251,-2.48437 -4.21876,-5.85937 -4.21875,-10.125 -1e-5,-8.10935 9.28123,-13.92185 27.84375,-17.4375 3.18746,-0.60934 4.80465,-1.89841 4.85156,-3.86719 l 0.14063,-4.499997 c 0.28121,-7.687454 -3.11723,-11.5312 -10.19532,-11.53125 -2.01565,5e-5 -3.9258,1.804735 -5.73046,5.414062 -1.80471,3.609416 -4.39456,5.554727 -7.76954,5.835938 -3.84376,0.375038 -5.76563,-1.242148 -5.76562,-4.851563 -1e-5,-2.249954 2.85936,-4.874951 8.57812,-7.875 5.99998,-3.14057 11.7656,-4.710881 17.29688,-4.710937 9.51558,5.6e-5 14.22651,4.523489 14.13281,13.570312 l -0.28125,28.968755 c -0.0469,3.04688 1.24214,4.57032 3.86719,4.57031 0.51557,1e-5 1.49994,-0.11718 2.95312,-0.35156 1.45307,-0.23437 2.29682,-0.35156 2.53125,-0.35157 1.35932,1e-5 2.039,0.91407 2.03907,2.74219 z M 318.0237,112.40303 c 0.0468,-1.17185 -0.2227,-1.94529 -0.8086,-2.32031 -0.58597,-0.37498 -1.51175,-0.44529 -2.77734,-0.21094 -11.2969,2.01565 -16.94533,5.69533 -16.94531,11.03906 -2e-5,5.39064 2.92966,8.08595 8.78906,8.08594 2.34372,1e-5 4.75778,-0.44531 7.24219,-1.33594 2.90621,-1.03124 4.35933,-2.27342 4.35937,-3.72656 z""
-         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2834"" />
+         d=""m 396.52423,187.19327 c -10e-6,0.4375 -0.40105,0.8112 -1.20312,1.12109 -0.71095,0.27344 -1.431,0.41016 -2.16016,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15528 -0.10026,-0.14126 -0.43294,-0.28026 -0.99804,-0.41699 -0.14584,-0.0365 -0.21876,-0.17772 -0.21875,-0.42383 -1e-5,-0.26431 0.0547,-0.42381 0.16406,-0.47851 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10026,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20052,0.0638 0.30533,0.1823 0.31445,0.35547 l 0.0547,1.70898 c 0,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57422,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30534 -0.0957,0.66992 l 0,4.4707 c -1e-5,1.13021 0.10025,1.84571 0.30078,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2923"" />
       <path
-         d=""m 392.13307,120.06709 c -5e-5,4.96876 -1.9102,8.91798 -5.73047,11.84766 -3.82035,2.92969 -9.03519,4.39453 -15.64453,4.39453 -4.40627,0 -8.81252,-0.46875 -13.21875,-1.40625 -3.79688,-0.84375 -6.00001,-1.61719 -6.60937,-2.32031 -0.37501,-0.65625 -0.56251,-3.86718 -0.5625,-9.63281 -1e-5,-2.48436 0.56249,-3.77343 1.6875,-3.86719 1.12499,-0.14061 2.08592,0.46876 2.88281,1.82812 3.51561,6.14064 9.18748,9.21095 17.01562,9.21094 6.60934,1e-5 9.91403,-2.29687 9.91407,-6.89062 -4e-5,-2.01562 -0.75004,-3.70311 -2.25,-5.0625 -1.64066,-1.54686 -4.82816,-3.35155 -9.5625,-5.41407 -6.84377,-3.04685 -11.41408,-5.71872 -13.71094,-8.01562 -2.48439,-2.43747 -3.72657,-5.718716 -3.72656,-9.843752 -1e-5,-5.062455 1.9453,-8.999951 5.83593,-11.8125 3.60936,-2.718695 8.43748,-4.078069 14.48438,-4.078125 3.79684,5.6e-5 7.26559,0.304743 10.40625,0.914062 3.37496,0.60943 5.13277,1.359429 5.27344,2.25 0.37495,2.625051 1.14839,6.421922 2.32031,11.390625 0.14058,0.609416 -0.51567,1.101603 -1.96875,1.476563 -1.54692,0.328165 -2.57817,0.07035 -3.09375,-0.773438 -3.70317,-6.046828 -8.39066,-9.070262 -14.0625,-9.070312 -6.4219,5e-5 -9.63283,2.062548 -9.63281,6.1875 -2e-5,2.296916 0.86716,4.12504 2.60156,5.484375 1.54685,1.171912 5.17966,3.000035 10.89844,5.484372 5.99996,2.57816 10.07808,4.89847 12.23437,6.96094 2.81245,2.6719 4.2187,6.25783 4.21875,10.75781 z""
-         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2836"" />
+         d=""m 416.32111,187.16593 c -2e-5,0.1914 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25555,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94336,-0.51954 -0.27344,-0.34635 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18685 -1.29882,0.56055 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87304,-0.65625 -0.54688,-0.48308 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94335,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39194,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.94791 1.66797,-1.53125 1.16666,-0.61067 2.28776,-0.916 3.36328,-0.91601 1.85025,1e-5 2.76627,0.87956 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88867 0.75196,0.88867 0.10025,0 0.29165,-0.0228 0.57421,-0.0684 0.28254,-0.0456 0.44661,-0.0683 0.49219,-0.0684 0.26431,1e-5 0.39647,0.17774 0.39649,0.53321 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39193 -3.29492,1.10743 -3.29492,2.14649 0,1.04817 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84765,-0.72461 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2925"" />
       <path
-         d=""m 473.69557,132.72334 c -7e-5,1.64063 -1.10163,2.50782 -3.30469,2.60157 -3.28131,0.0469 -7.57037,0.28124 -12.86718,0.70312 -2.62506,0.51562 -4.50006,0.1875 -5.625,-0.98437 -7.4063,-7.96875 -13.68754,-16.31249 -18.84375,-25.03125 -0.42191,-0.74998 -0.96097,-1.12498 -1.61719,-1.125 -0.79691,2e-5 -2.17972,0.70315 -4.14844,2.10937 -2.20315,1.21877 -3.30471,2.95315 -3.30469,5.20313 -2e-5,1.59376 0.0469,3.89064 0.14063,6.89062 0.0937,3.00001 0.84372,4.96876 2.25,5.90625 0.98435,0.65626 3.25778,1.17188 6.82031,1.54688 2.20309,0.28125 3.30465,1.10156 3.30469,2.46093 -4e-5,1.07813 -0.17582,1.7461 -0.52734,2.00391 -0.3516,0.25781 -1.27738,0.31641 -2.77735,0.17578 -4.68753,-0.42187 -12.60939,-0.1875 -23.76562,0.70313 -2.81251,0.23437 -4.33595,-0.11719 -4.57032,-1.05469 -0.0937,-0.32813 -0.14063,-0.79688 -0.14062,-1.40625 -1e-5,-1.45312 1.42968,-2.55469 4.28906,-3.30469 2.57811,-0.65624 3.86718,-3.67968 3.86719,-9.07031 l 0,-61.453127 c -1e-5,-3.843671 -0.37501,-6.515543 -1.125,-8.015625 -1.03126,-1.92179 -3.18751,-3.421788 -6.46875,-4.5 -1.54688,-0.515536 -2.32032,-1.242098 -2.32031,-2.179688 -1e-5,-1.359283 1.10155,-2.413969 3.30468,-3.164062 3.51562,-1.17178 6.86718,-2.788966 10.05469,-4.851563 2.57811,-1.6874 4.17186,-2.531149 4.78125,-2.53125 1.92185,1.01e-4 2.88279,1.21885 2.88281,3.65625 -2e-5,-0.328027 -0.0235,1.992283 -0.0703,6.960938 -0.0469,3.421962 -0.0703,8.015707 -0.0703,13.78125 l 0.14062,44.015627 c -2e-5,1.21878 0.3281,1.82815 0.98438,1.82812 0.7031,3e-5 1.78122,-0.60934 3.23437,-1.82812 3.8906,-3.046842 8.67184,-7.031213 14.34375,-11.953127 1.12496,-1.17183 1.68746,-2.109329 1.6875,-2.8125 -4e-5,-1.265577 -1.89848,-2.156201 -5.69531,-2.671875 -1.64066,-0.18745 -2.4141,-1.101512 -2.32031,-2.742188 0.14059,-1.64057 0.9609,-2.343695 2.46094,-2.109375 3.37495,0.468805 8.29682,0.726617 14.76562,0.773438 4.49994,0.04693 8.9765,0.07037 13.42969,0.07031 1.45306,0.04693 2.17962,0.914116 2.17969,2.601563 -7e-5,1.5938 -1.14851,2.460986 -3.44532,2.601562 -3.60943,0.140674 -7.00787,0.960986 -10.19531,2.460938 -4.45317,2.015669 -9.21098,5.554728 -14.27344,10.617187 -0.37504,0.281286 -0.56254,0.632845 -0.5625,1.054685 -4e-5,0.65629 0.79684,2.2266 2.39063,4.71094 5.85933,8.90627 11.39057,15.63283 16.59375,20.17969 3.32806,2.85938 6.44525,4.28907 9.35156,4.28906 2.15618,1e-5 3.49212,0.15235 4.00781,0.45703 0.51556,0.30469 0.77337,1.11329 0.77344,2.42578 z""
-         style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2838"" />
+         d=""m 432.45392,187.19327 c -10e-6,0.4375 -0.40105,0.8112 -1.20313,1.12109 -0.71094,0.27344 -1.43099,0.41016 -2.16015,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15528 -0.10026,-0.14126 -0.43294,-0.28026 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17772 -0.21875,-0.42383 0,-0.26431 0.0547,-0.42381 0.16407,-0.47851 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.1823 0.31445,0.35547 l 0.0547,1.70898 c -10e-6,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30534 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87956,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2927"" />
+      <path
+         d=""m 439.30353,172.66007 c -1e-5,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65854,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58788 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51952 1.07325,-0.51953 0.92968,1e-5 1.39452,0.43751 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0912,-0.0638 -0.13672,-0.20964 -0.13672,-0.4375 0,-0.20964 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72005 -0.0729,-1.22591 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61523,-0.58789 0.76563,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47396,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54232,0.23699 0.53321,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30078 -10e-6,0.59245 0.0866,1.01628 0.25977,1.27149 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35091 0.80664,0.64258 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2929"" />
+      <path
+         d=""m 464.89728,188.10929 c -3e-5,0.30078 -0.1413,0.44205 -0.42383,0.42382 -1.8594,-0.13671 -3.59117,-0.13671 -5.19531,0 -0.35549,0.0274 -0.53322,-0.13216 -0.53321,-0.47851 -1e-5,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49024 l 0,-3.63671 c -2e-5,-2.04166 -0.82945,-3.0625 -2.48828,-3.0625 -0.87502,0 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56511 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.9388 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27343 0.80207,0.13672 1.20311,0.30534 1.20313,0.50586 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.1823 -0.12304,-0.38282 -10e-6,-0.23698 0.25975,-0.38281 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57877 0.84766,-1.54492 l 0,-3.71875 c -10e-6,-1.0026 -0.22788,-1.77733 -0.6836,-2.32422 -0.40105,-0.49218 -0.91146,-0.73827 -1.53125,-0.73828 -0.91146,1e-5 -1.73177,0.18458 -2.46093,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99023 c -1e-5,0.56511 0.14583,0.95704 0.4375,1.17579 0.26431,0.20052 0.74283,0.32356 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -10e-6,0.26432 -0.1504,0.39648 -0.45117,0.39648 -2.27865,0 -3.92839,0.0638 -4.94922,0.19141 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32813 0,-0.22786 0.33724,-0.42382 1.01172,-0.58789 0.41015,-0.10937 0.61523,-0.64257 0.61523,-1.59961 l 0,-4.19726 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13672 -0.77702,-0.23698 -0.88184,-0.30079 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31445 0,-0.16405 0.47396,-0.51041 1.42188,-1.03906 1.0026,-0.5651 1.61783,-0.84765 1.8457,-0.84766 0.1914,1e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51756,-0.43749 2.31054,-0.4375 0.63801,1e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23696,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52667,-0.41015 2.25586,-0.41016 2.49737,1e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42968 c -2e-5,0.51954 0.12303,0.88868 0.36914,1.10743 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22786 0.72461,0.41016 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2931"" />
+      <path
+         d=""m 476.45001,186.18155 c -1e-5,0.39193 -0.52865,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82813 0,-1.80468 0.56055,-3.25389 1.68164,-4.34765 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20508 0.35547,0.47851 -10e-6,0.37371 -0.44662,0.69272 -1.33984,0.95704 l -6.30274,1.87304 c 0.41016,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11849 0.39648,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.40561,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2933"" />
     </g>
   </g>
 </svg>
","diff --git a/artwork/logo-full.svg b/artwork/logo-full.svg
old mode 100755
new mode 100644
index 43465a4d..8c0748a2
--- a/artwork/logo-full.svg
+++ b/artwork/logo-full.svg
@@ -141,166 +141,6 @@
        style=""fill:#000000""
        d=""M 96.944917,182.03377 C 89.662681,176.30608 81.894549,170.81448 76.586317,163.08166 65.416842,149.44499 56.816875,133.6567 50.937585,117.06515 47.383955,106.27654 46.166898,94.709824 41.585799,84.338096 c -4.792287,-7.533044 0.821224,-15.767897 9.072722,-18.16242 3.673742,-0.705104 10.133327,-4.170258 2.335951,-1.693539 -6.990592,5.128871 -7.667129,-4.655603 -0.498823,-5.27517 4.892026,-0.650249 6.692895,-4.655044 5.019966,-8.260251 -5.251326,-3.424464 12.733737,-7.18801 3.684373,-12.297799 -9.426987,-10.170666 13.186339,-12.128546 7.607283,-0.577786 -1.335447,8.882061 15.801226,-1.627907 11.825117,8.628945 4.041283,4.925694 15.133562,1.1211 14.85838,8.031392 5.887092,0.404678 7.907562,5.358061 13.433992,5.738347 5.72759,2.586557 16.1108,4.624792 18.0598,11.079149 -5.68242,4.498756 -18.84089,-9.292674 -19.47305,3.160397 1.71659,18.396078 1.27926,37.346439 8.00986,54.864989 3.18353,10.60759 10.9012,18.95779 17.87109,27.21946 6.66875,8.09126 15.70186,13.78715 24.90885,18.58338 8.07647,3.80901 16.78383,6.33528 25.58583,7.92044 3.5701,-2.7307 9.87303,-12.8828 15.44238,-8.60188 0.26423,4.81007 -11.0541,10.05512 -0.53248,9.5235 6.17819,-1.86378 10.46336,4.77803 15.55099,-1.21289 4.68719,5.55206 19.48197,-3.54734 16.14693,7.80115 -4.50972,2.90955 -11.08689,1.15142 -15.60404,5.15397 -7.44757,-3.71979 -13.37691,3.32843 -21.6219,2.43707 -9.15641,1.64002 -18.4716,2.30204 -27.75473,2.31642 -15.22952,-1.20328 -30.78158,-1.71049 -45.26969,-7.01291 -8.16166,-2.37161 -16.12649,-7.01887 -23.299683,-11.66829 z m 12.862043,5.5729 c 7.9696,3.44651 15.76243,7.07889 24.49656,8.17457 13.85682,1.92727 28.16653,4.89163 42.07301,2.18757 -6.2939,-2.84199 -12.80077,1.10719 -19.07096,-2.0322 -7.52033,1.61821 -15.59049,-0.41223 -23.23574,-1.41189 -8.69395,-3.87259 -18.0762,-6.53549 -26.21772,-11.56219 -10.173155,-3.71578 5.26142,4.76524 8.00873,5.45214 6.35952,3.60969 -6.99343,-1.85044 -8.87589,-3.35101 -5.32648,-2.9879 -6.00529,-2.36357 -0.52745,0.67085 1.10332,0.64577 2.19359,1.32226 3.34946,1.87216 z M 94.642259,176.88976 c 7.722781,2.86052 -0.03406,-5.43082 -3.572941,-4.94904 -1.567906,-2.72015 -5.9903,-4.43854 -2.870721,-5.89973 -5.611524,1.9481 -5.878319,-7.40814 -8.516004,-6.07139 -5.936516,-1.87454 -2.310496,-8.51501 -9.381929,-12.59292 -0.645488,-4.29697 -7.02577,-8.02393 -9.060801,-14.50525 -0.898786,-3.31843 -7.208336,-12.84783 -3.332369,-3.97927 3.300194,8.53747 9.106618,15.84879 13.93868,23.15175 3.752083,6.95328 8.182497,14.22026 15.015767,18.55788 2.303436,2.20963 4.527452,5.59533 7.780318,6.28797 z M 72.39456,152.46355 c 0.26956,-1.16626 1.412424,2.52422 0,0 z m 31.49641,27.85526 c 1.71013,-0.76577 -2.45912,-0.96476 0,0 z m 4.19228,1.52924 c -0.43419,-2.1116 -1.91376,1.18074 0,0 z m 5.24749,2.18891 c 2.49828,-2.37871 -3.85009,-1.49983 0,0 z m 8.99389,5.01274 c 1.51811,-2.2439 -4.85872,-0.84682 0,0 z m -17.2707,-12.03933 c 3.88031,-2.51023 -5.01186,-0.0347 0,0 z m 3.9366,1.96293 c -0.11004,-1.32709 -1.40297,0.59432 0,0 z m 19.67473,12.28006 c 3.16281,1.99601 18.46961,4.3749 8.88477,0.81847 -1.60377,0.33811 -17.77263,-4.57336 -8.88477,-0.81847 z M 97.430958,166.92721 c -0.307503,-1.33094 -4.909341,-1.4694 0,0 z m 9.159302,5.33813 c 2.38371,-1.66255 -4.94757,-1.28235 0,0 z m 7.70426,4.72382 c 3.42065,-1.28963 -5.54907,-1.29571 0,0 z M 93.703927,162.86805 c 3.711374,2.84621 14.967683,0.36473 5.683776,-1.69906 -4.225516,-2.2524 -13.74889,-3.79415 -7.25757,1.35821 l 1.573785,0.34088 9e-6,-3e-5 z m 25.808723,15.75216 c 1.54595,-2.63388 -6.48298,-1.50411 0,0 z m -7.84249,-6.23284 c 9.0752,2.56719 -7.63142,-5.739 -2.23911,-0.94466 l 1.19513,0.54082 1.04399,0.4039 -1e-5,-6e-5 z m 15.72354,9.0878 c 8.59474,0.082 -7.76304,-1.18486 0,1e-5 l 0,-1e-5 z M 90.396984,157.89545 c -0.335695,-1.60094 -2.120962,0.13419 0,0 z m 51.535396,31.73502 c 0.2292,-2.89141 -2.80486,2.15157 0,0 z m -36.86817,-22.75299 c -0.51986,-1.52251 -2.68548,-0.0622 0,0 z m -13.852128,-9.98649 c 4.934237,-0.29629 -6.755322,-2.17418 0,0 z M 74.802387,146.28394 c -0.614146,-2.36536 -5.369213,-4.2519 0,0 z m 43.079323,27.33941 c -0.90373,-1.0307 -0.4251,0.22546 0,0 z m 26.81408,16.45475 c -0.086,-1.57503 -1.46039,0.59616 0,0 z m -29.18712,-18.90528 c 0.48266,-2.02932 -4.20741,-0.61442 0,0 z M 95.532612,158.51286 c 3.670785,-0.39305 -5.880434,-2.48161 0,0 z M 129.32396,179.51 c 5.72042,-2.26627 -5.57541,-1.10635 0,0 z m -17.57682,-11.93145 c 6.59278,0.85002 -7.84442,-4.48425 -1.44651,-0.4773 l 1.4465,0.47734 1e-5,-4e-5 z m 22.91296,14.0886 c 6.15514,-3.67975 4.12588,8.61677 10.44254,1.0388 6.23086,-4.54942 -5.38086,5.62451 2.29838,0.81116 5.55359,-3.71438 13.75643,1.76075 18.93848,3.5472 3.72659,-0.18307 7.34938,3.22236 11.16973,1.15059 7.3542,-1.98082 -14.38097,-2.93789 -8.68344,-6.4523 -6.72914,1.95848 -11.70093,-2.33483 -15.01213,-6.64508 -7.54812,-1.74298 -16.27548,-5.602 -20.04257,-12.28184 -1.5359,-2.50802 2.21884,0.35333 -1.32586,-3.74638 -4.54834,-4.04546 -6.81948,-8.63766 -9.87278,-13.5552 -3.64755,-1.94587 -4.07249,-7.67345 -4.44123,-0.19201 0.0289,-4.72164 -4.40393,-7.89964 -5.48589,-6.57859 -0.0194,-4.54721 4.74396,-2.26787 1.40945,-5.63228 -0.71771,-4.71302 -3.08085,-9.6241 -3.79115,-14.9453 -1.1036,-2.56502 -0.15541,-8.05863 -3.76662,-2.25204 -1.31566,6.13669 -0.43668,-7.54129 1.6093,-3.03083 2.68543,-4.60251 -0.9641,-4.0612 -1.11361,-3.42211 1.74931,-3.88333 1.10719,-9.39159 -0.45644,-7.29023 0.93213,-4.11586 1.47259,-15.147529 -1.3951,-13.192579 1.73833,-4.303958 3.29668,-19.694077 -4.24961,-13.826325 -3.058358,0.04294 -8.354541,1.110195 -10.858032,2.355243 7.849502,4.326857 -0.789543,1.562577 -3.984808,0.874879 -0.416343,4.003642 -3.58119,2.272086 -7.535123,2.311339 6.315273,0.781339 -3.075253,6.458962 -6.698132,4.253506 -4.705102,2.248756 4.060621,7.862038 0.0944,9.597586 0.487433,2.616581 -7.208227,-0.944906 -6.603832,5.097711 -4.56774,-1.92155 -0.628961,7.16796 1.656273,4.09382 7.768882,2.10261 5.469108,6.89631 5.666947,11.44992 -1.265833,2.6534 -6.249495,-6.23691 -1.109939,-5.82517 -4.054715,-6.58674 -4.485232,-2.38081 -7.854566,0.67911 -0.783857,0.22222 8.5944,4.35376 2.709059,6.3967 5.177884,0.79894 5.325199,5.33008 6.379284,8.19735 3.11219,3.24152 2.475226,-3.57931 6.199071,0.31623 -2.356488,-3.4705 -12.48183,-9.77839 -4.329567,-7.7553 -0.04358,-3.49291 -1.474412,-6.30951 1.02322,-6.24118 2.473367,-4.47926 -2.590385,11.044 2.984725,5.35124 1.543285,-0.67388 1.92554,-4.48494 4.699544,0.35989 4.029096,3.96363 1.45533,6.83577 -4.228162,3.20648 1.016828,3.44946 7.603062,4.68217 6.365348,10.07646 1.3121,4.7444 3.147844,2.99695 4.747999,2.72266 1.25523,4.60973 1.968016,1.2201 2.027559,-0.97355 5.747357,1.23033 4.401142,4.62773 6.199456,7.00134 3.960416,1.78761 -5.668696,-12.11713 1.130659,-4.18106 7.153577,6.4586 2.682797,9.15464 -3.736856,8.11995 4.063129,-0.32824 5.373423,5.49305 10.455693,5.28853 4.63456,2.20477 7.77237,10.67291 -0.21613,7.1478 -2.77074,-2.49821 -12.575734,-5.5801 -4.56731,-0.82823 7.39657,3.42523 13.27117,5.47432 20.40487,9.77384 5.10535,3.64464 7.31104,7.81908 9.24607,8.64541 -4.29084,2.04946 -12.93089,-1.63655 -6.51514,-2.76618 -4.00168,-0.72894 -8.50258,-2.75259 -4.66961,2.2333 3.25926,2.72127 11.54708,2.43298 13.0328,2.74132 -1.25934,2.77488 -3.4207,2.99556 0.0516,3.21078 -3.87375,2.06438 1.24216,2.38403 1.60114,3.56362 z m -7.9215,-22.36993 c -2.35682,-2.46475 -2.9662,-7.08134 -0.41852,-3.06426 1.30648,0.52466 4.18523,7.54428 0.41857,3.06426 l -5e-5,0 z m 25.79733,16.38693 c 1.47004,-0.0952 0.0427,1.11681 0,0 z m -29.51867,-22.43039 c -0.0904,-3.72637 0.8525,2.87419 0,0 z m -2.56392,-3.44965 c -2.96446,-5.72787 3.73721,1.62212 0,0 z M 89.382646,128.35916 c 1.7416,-0.46446 0.856841,2.97864 0,0 z m 24.728294,13.40357 c 1.06957,-4.01654 1.25692,3.37014 0,0 z M 96.64115,129.61525 c -1.231543,-2.21638 2.576009,2.07865 0,0 z m 14.99279,4.80618 c -2.80851,-6.29223 1.98836,-3.43699 0.62135,1.03124 l -0.62135,-1.03124 0,0 z M 85.778757,117.17864 c -1.255624,-2.06432 -3.332663,-8.12135 -2.663982,-9.97042 0.604935,3.0114 6.403914,12.95956 2.844571,4.12096 -3.933386,-7.40908 4.701805,2.40491 5.590052,4.2529 0.413624,1.83837 -2.426789,-0.50225 -0.502192,3.80828 -3.509809,-4.90766 -2.071967,2.71088 -5.268449,-2.21172 z m -7.990701,-5.50612 c 0.328938,-4.79981 1.829262,3.29132 0,0 z m 3.594293,1.23728 c 1.715175,-3.62282 2.908243,5.05052 0,0 z m -8.64616,-6.68847 c -2.974956,-2.95622 -5.127809,-5.68132 0.139193,-1.83474 2.029482,0.0792 -4.509002,-6.19705 0.488751,-1.99305 5.25531,0.95822 2.5951,8.61674 -0.627944,3.82779 z m 4.541717,-0.11873 c 1.727646,-1.71203 0.917172,1.6853 0,0 z m 2.794587,0.8959 c -2.619181,-4.9094 3.178801,2.05822 0,0 z m -5.55546,-5.30909 c -8.64844,-7.696511 10.867309,4.02451 1.4129,1.4269 l -1.412955,-1.42683 5.5e-5,-7e-5 z m 24.77908,14.39717 c -3.742506,-2.24398 -0.991777,-15.79747 0.284503,-6.52785 3.638294,-1.17695 -0.200879,4.78728 2.512784,4.73208 -0.42767,3.76305 -1.64169,5.11594 -2.797287,1.79577 z m 9.165207,5.41684 c 0.36705,-4.08462 0.77249,2.79262 0,0 z m -1.59198,-1.57295 c 0.41206,-1.74497 0.0426,2.05487 0,0 z M 76.213566,99.16032 c -5.556046,-7.665657 16.147323,7.75413 3.558556,1.9443 -1.315432,-0.34404 -2.898208,-0.46688 -3.558556,-1.9443 z m 17.649112,9.35749 c -0.525779,-6.45461 1.174169,1.06991 -1.92e-4,-2e-5 l 1.92e-4,2e-5 z m 13.399762,8.59585 c 1.03698,-3.67668 0.0773,2.43221 0,0 z M 77.064685,96.23472 c 3.302172,-0.706291 13.684695,5.79939 4.150224,1.85832 -1.059396,-1.17279 -3.317802,-0.63994 -4.150224,-1.85832 z m 28.356745,14.13312 c 0.35296,-6.60002 1.97138,-3.94233 0.0122,0.94474 l -0.0121,-0.94473 -5e-5,-1e-5 z M 79.52277,93.938099 c 1.345456,-1.97361 -3.571631,-8.923063 0.708795,-2.492797 1.849543,1.469605 5.355103,2.461959 2.260017,3.080216 4.867744,4.294162 -1.187244,1.163612 -2.968812,-0.587419 z m 24.49612,14.368161 c 0.92952,-7.51843 0.81971,4.40485 0,0 z M 76.712755,86.993902 c 1.027706,-0.439207 0.542746,1.369335 0,0 z m 6.389622,3.803092 c 1.644416,-3.450522 3.03351,3.848297 0,0 z m 18.023553,10.026276 c -0.0174,-1.3252 0.34003,1.92765 0,0 z m -1.04404,-2.31139 c -2.501612,-6.171646 2.32693,3.26759 0,0 z m -1.536003,-4.046372 c -0.419906,-2.550188 1.427129,3.203862 -7.3e-5,-9e-6 l 7.3e-5,9e-6 z m 2.499773,-4.063514 c -1.71663,-3.025123 2.16777,-13.331073 2.60122,-6.939418 -1.81185,4.980256 -0.52268,7.766309 0.74129,1.086388 2.33417,-5.257159 -0.50421,10.374054 -3.34255,5.853057 l 4e-5,-2.7e-5 z m 2.56889,-15.326649 c 0.74833,-0.918921 0.16609,1.107082 0,0 z m -4.290016,84.534235 c -1.017552,-0.88802 0.127775,0.56506 0,0 z m 8.837726,4.47065 c 4.91599,1.26135 4.89086,-0.76487 0.44782,-1.36683 -2.3898,-2.22316 -9.930475,-4.58124 -3.18119,-0.27586 0.44699,1.13227 1.85944,1.10589 2.73337,1.64269 z M 90.708067,152.48725 c 2.708244,2.01956 10.201213,5.72375 3.858186,0.76868 2.138588,-2.48467 -4.093336,-3.80722 -2.026067,-5.46927 -5.258175,-3.21755 -4.147962,-2.93133 -0.464111,-2.8301 -6.319385,-2.82462 0.912163,-2.61333 0.571661,-4.06067 -2.436706,-0.48126 -12.103074,-4.29664 -6.416395,0.31341 -5.780887,-2.94751 -1.377603,1.09799 -3.12488,0.67029 -5.911336,-1.61178 5.264392,4.50224 -0.938845,2.98448 3.391327,2.6875 9.128301,6.88393 1.433786,2.84407 -1.013816,1.45934 5.506273,3.67136 7.106665,4.77911 z m 9.243194,5.31013 c 11.238769,3.62163 -5.510018,-4.4246 0,0 z m 47.316399,28.66432 c 0.14496,-2.22965 -1.53604,1.90201 0,0 z m 4.86324,2.04679 c 2.59297,-2.51255 0.106,4.00222 4.29655,-0.61509 0.0453,-3.30544 -0.12904,-5.25783 -4.81563,-1.24252 -1.29194,0.71648 -1.86871,3.76288 0.51908,1.85761 z M 74.932378,140.02637 c -0.796355,-3.1304 -5.581949,-3.11418 0,0 z m 5.193029,3.40294 c -1.928397,-3.19739 -6.880525,-2.89469 0,0 z m 29.543373,17.81697 c 2.8844,2.56199 13.24761,1.87984 3.50331,0.31527 -1.44321,-2.13386 -9.16415,-1.6203 -3.50331,-0.31527 z m 40.61236,25.08153 c 4.43933,-3.72512 -4.30122,1.66183 0,0 z m 9.2328,6.34473 c 0.0277,-1.19543 -1.91352,0.52338 0,0 z m 0.0142,-1.6736 c 4.91602,-5.20866 -4.76346,0.30807 -4e-5,0 l 4e-5,0 z M 62.15981,129.33339 c -4.189944,-5.97826 -2.604586,-8.66544 -6.645136,-13.54677 -0.764913,-3.73279 -6.931672,-12.20326 -3.189579,-3.22947 3.42754,5.24836 4.446054,13.37434 9.834715,16.77624 z m 95.82635,60.00977 c 9.04429,-5.84575 -3.7125,-2.54641 0,0 z m 6.9041,2.70461 c 4.52911,-3.88867 -2.86491,-0.81334 0,0 z M 73.393094,133.41838 c 1.296204,-1.92838 -3.347642,-0.24666 0,0 z m 90.055596,56.78275 c 4.38526,-2.82746 -1.01036,-2.39335 -0.79483,0.26003 l 0.79484,-0.26003 -1e-5,0 z m -59.51386,-37.51178 c -0.15075,-1.90924 -2.31574,0.16206 0,0 z m 3.67794,2.11629 c -1.16888,-2.36318 -1.79716,0.37121 0,0 z m 62.8725,37.30625 c 5.61806,-4.05283 -3.4056,-0.77594 -1.17927,0.76785 l 1.17927,-0.76785 0,0 z m -2.15131,-1.03979 c 4.57663,-3.83506 -4.83183,1.69954 0,0 z m 10.99163,7.31983 c 3.0728,-2.05816 -3.73316,-0.66575 0,0 z M 76.211249,132.02781 c 4.118965,0.92286 16.460394,10.1439 9.179466,0.63772 -3.728991,-1.10384 -1.492605,-10.21906 -5.29621,-8.60579 2.552972,4.2649 2.100461,6.08018 -3.259642,3.3914 -6.736808,-3.28853 -3.785888,1.6297 -2.469293,2.98518 -1.794185,0.40772 2.373226,1.5572 1.845679,1.59149 z m -18.76588,-14.82026 c 0.737407,-3.04991 -6.789814,-16.77881 -3.554464,-6.87916 1.167861,2.07373 1.049123,6.00387 3.554464,6.87916 z m 34.443451,21.23513 c -2.120989,-1.77378 -0.100792,-0.25103 0,0 z m 5.222997,1.21548 c -0.0027,-3.23079 -5.77326,-1.31196 0,0 z m 45.261473,28.53321 c -0.86326,-2.20739 -3.41229,-0.0512 8e-5,4e-5 l -8e-5,-4e-5 z m 2.17351,1.58769 c -0.32087,-1.23546 -1.25399,0.23848 0,0 z m 17.94015,11.3001 c 1.72546,-1.27472 -2.15318,-0.1628 0,0 z M 66.819057,119.6006 c 4.935243,-1.91072 -5.28775,-1.36248 0,0 z m 71.569733,45.08937 c -0.0549,-3.19499 -3.14622,0.79264 0,0 z M 64.869152,115.05675 c 3.170167,-1.07084 -2.932663,-0.70531 0,0 z m 9.201532,4.45726 c -0.0575,-1.05014 -0.973336,0.39747 0,0 z m 112.231406,68.82181 c 4.0765,-0.8265 13.36606,2.07489 14.86752,-1.08086 -4.95044,-0.12019 -17.12734,-3.49263 -17.70346,0.80479 l 1.08368,0.17072 1.75226,0.10534 0,1e-5 z M 76.995161,120.25099 c 0.07087,-3.23755 -2.524669,-0.12092 0,0 z M 52.801998,103.4687 c -1.098703,-6.16843 -4.178791,-0.93357 0,0 z m 5.769195,1.45013 c 0.07087,-1.9807 -5.280562,-1.78224 0,0 z m 3.296917,1.61923 c -0.953019,-0.77196 -0.745959,0.97521 0,0 z m 20.744719,13.30775 c 0.976615,-0.89718 -2.312116,-0.66455 0,0 z M 59.672204,102.88617 c -0.557624,-4.65897 -6.681999,-0.69805 0,0 z M 47.844441,95.21166 c -0.168219,-2.150189 -1.152625,0.81111 0,0 z m 1.759336,-1.328672 c -0.28703,-2.549584 -1.510515,0.324387 0,0 z m 9.720792,5.802442 c 4.110486,-1.61465 -7.487254,-3.33984 -0.839893,-0.30506 l 0.839893,0.30506 z m 130.097601,80.35913 c 2.63092,-2.4121 -3.34373,-0.74577 0,0 z m 15.71669,8.14691 c 1.05433,-3.1186 -2.65452,0.41058 0,0 z M 60.318012,94.590436 c 0.433018,-3.016773 -3.258762,0.59902 0,0 z M 46.487687,85.324242 c -0.742965,-4.25911 -0.64134,-11.735065 6.465133,-9.208583 -9.485962,1.883339 6.56534,11.790095 4.538357,3.968363 3.988626,0.195294 7.802669,-2.357284 5.709487,1.516403 7.85876,-0.867958 13.307129,-7.682612 20.898169,-6.72768 5.913058,-0.782493 12.378182,-1.375955 18.750257,-3.756157 5.23905,-0.37743 10.28235,-6.018062 7.41068,-9.361383 -7.14456,-0.604513 -14.62339,0.289393 -22.520112,1.858993 -8.750559,1.819117 -16.699014,5.275307 -25.528125,6.758866 -8.605891,1.15604 1.730998,3.185165 -0.734074,3.637227 -4.490681,1.558136 5.355488,2.608852 -0.582182,4.251428 C 57.228283,77.56448 53.411411,76.304535 54.977788,72.440196 46.7341,73.50992 39.490264,76.931325 46.003276,85.320342 l 0.484402,0.0037 9e-6,-2.56e-4 z m 19.864291,-10.1168 c 1.932856,-7.120464 10.355229,5.859274 3.168052,0.945776 -0.858453,-0.642457 -2.2703,-1.166588 -3.168052,-0.945776 z m 0.376038,-3.452197 c 2.789661,-2.078257 1.482964,1.16516 0,0 z m 3.542213,0.05622 c 0.251833,-3.27648 8.108752,1.73455 1.295517,1.179499 l -1.295517,-1.179499 0,0 z m 4.84543,-1.948193 c 1.769481,-2.067535 0.50862,1.83906 0,0 z m 1.239563,-0.83005 c 2.946379,-3.540216 16.68561,-2.259413 6.628966,-0.34519 -2.695543,-2.029363 -4.761797,1.196575 -6.628966,0.34519 z m 17.930017,-2.763886 c -0.448199,-9.670222 8.907771,3.436477 0,0 z m 5.087539,-0.02784 c 1.860022,-4.873906 7.218072,-1.955774 0.860732,-0.979407 0.13805,0.518656 -0.18642,2.516173 -0.860732,0.979407 z M 58.311842,92.088739 c 5.55753,-3.403212 -5.899945,-2.952541 0,0 l 0,0 z m 4.109214,1.141866 c 1.948513,-2.071884 -4.233857,-0.840369 0,0 z M 50.313395,84.63767 c 3.175569,-2.439416 -3.757842,-0.927473 0,0 z M 214.41578,187.30012 c 0.0918,-2.83019 -2.42718,1.27537 0,0 z m -16.67487,-11.37935 c 0.47417,-3.25845 -2.14286,0.28408 0,0 z m 21.26022,12.47672 c 4.43994,0.015 13.45265,-1.37884 3.79217,-1.37442 -1.51594,0.23641 -8.83311,0.18571 -3.79216,1.37439 l -1e-5,3e-5 z M 66.035603,91.23339 c 3.593258,-0.246807 5.621861,-3.963629 -0.694932,-3.749977 -9.789949,-1.013541 8.637508,3.352129 -1.255898,2.10383 -1.329368,0.880346 1.873606,1.889721 1.95083,1.646147 z m 3.164618,1.601748 c -0.375177,-2.307063 -1.111156,1.225591 0,0 z m 3.753896,-10.009901 c 1.559281,-1.934055 -2.157697,-0.517053 0,0 z M 61.003998,62.84999 c 6.412879,-2.181631 15.182392,-4.633087 18.210335,1.074184 -3.081589,-3.70893 -1.24361,-7.360157 1.666959,-1.937407 4.115576,5.486669 6.175915,-2.495489 3.499086,-4.335821 3.050468,3.790246 6.520044,5.581281 2.042429,0.239564 4.865693,-5.852929 -9.742712,0.766433 -13.063105,0.699775 -1.597564,0.717062 -16.493576,3.79889 -12.355704,4.259705 z m 3.75831,-7.197834 c 3.657324,-2.760416 12.648968,1.641989 6.879078,-2.743367 -0.564117,-0.498292 -12.636077,3.325475 -6.879078,2.743367 z m 13.333489,0.550473 c 4.280389,0.109225 -1.84632,-5.750287 3.254304,-3.095159 -0.837696,-2.736627 -5.938558,-3.248956 -8.432316,-4.342312 -1.410474,2.502054 2.870977,7.471102 5.178012,7.437471 z M 67.100291,44.099162 c 1.480803,-2.007406 -2.59521,1.017699 0,0 z m 5.449586,1.304353 c 6.897867,-0.914901 -1.758292,-2.970542 -1.389954,-0.07352 l 1.389954,0.07352 0,-9e-6 z M 62.374386,37.441437 c -4.856866,-6.340205 9.133987,1.065769 4.199411,-5.572646 -4.153254,-3.307245 -8.144297,3.721775 -4.199411,5.572646 z m 62.330124,33.572802 c 2.22762,-3.948988 -9.19697,-5.323011 -1.5009,-1.399578 0.70858,0.236781 0.54821,1.6727 1.5009,1.399578 z""
        id=""path2900"" />
-    <g
-       style=""font-size:28px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;fill:#000000;fill-opacity:1;stroke:none;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-       id=""text3844"">
-      <path
-         d=""m 166.92789,156.32883 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91863,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48113,-0.57422 -1.49024,-0.82031 -0.009,-0.20964 -0.005,-0.94336 0.0137,-2.20118 0.0274,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60058 -0.0182,-2.00976 -0.0273,-3.34276 -0.0273,-3.99903 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51953 -0.23698,-0.082 -0.35547,-0.23241 -0.35547,-0.45118 0,-0.19138 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48761 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42382,0.69727 0,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46484,0.38281 1.09375,-0.62889 2.23307,-0.94335 3.41797,-0.94336 1.36718,10e-6 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90268 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03907,-3.07617 -0.65625,-0.7565 -1.45378,-1.13475 -2.39257,-1.13476 -0.64715,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33724 -0.94336,0.69271 -0.94336,1.0664 l 0,3.66406 c 0,1.75912 0.9707,2.63868 2.91211,2.63868 1.01171,0 1.82747,-0.32585 2.44727,-0.97754 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2841"" />
-      <path
-         d=""m 179.35562,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2843"" />
-      <path
-         d=""m 191.11343,160.70383 c -1e-5,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02148,0.77929 -1.54949,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54493,-2.18749 -1.54493,-3.77343 0,-1.70443 0.59245,-3.12174 1.77735,-4.25196 1.15755,-1.10285 2.57942,-1.65428 4.26562,-1.65429 1.02083,1e-5 1.9095,0.14584 2.66602,0.4375 0.6927,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13672,1e-5 -0.45118,-0.19595 -0.94335,-0.58789 -0.92059,-0.72915 -1.64064,-1.09374 -2.16016,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83398,2.78906 -1e-5,1.431 0.40103,2.57488 1.20312,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98242,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.1914,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2845"" />
-      <path
-         d=""m 204.26578,161.155 c -1e-5,0.19141 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25554,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94335,-0.51953 -0.27345,-0.34636 -0.46486,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37174,-0.21875 -1.87304,-0.65625 -0.54688,-0.48307 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28776,-0.916 3.36328,-0.91601 1.85026,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75196,0.88867 0.10025,1e-5 0.29165,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49218,-0.0684 0.26431,0 0.39648,0.17773 0.39649,0.5332 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29492,1.10743 -3.29492,2.14649 0,1.04818 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2847"" />
-      <path
-         d=""m 218.74429,161.31906 c -1e-5,0.18229 -0.4284,0.46029 -1.28515,0.83399 -0.72918,0.31901 -1.09376,0.47851 -1.09375,0.47851 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -1e-5,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17772 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26431 1.3444,-0.53319 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,10e-6 0.47851,0.2142 0.47851,0.64258 0,1e-5 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.9616 -0.041,1.87533 -0.041,2.74121 l 0,1.64063 c -1e-5,1.11198 0.21874,1.87304 0.65625,2.2832 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46093 l 0,-2.4336 c -1e-5,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20962 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -1e-5,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00717 1.42188,1.08008 0.31899,0.0274 0.4785,0.15039 0.47851,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2849"" />
-      <path
-         d=""m 229.34,159.52805 c -1e-5,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74285,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85678,0 -1.71355,-0.0911 -2.57032,-0.27344 -0.73828,-0.16406 -1.16666,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10938,-0.73372 0.32813,-0.75195 0.21875,-0.0273 0.40559,0.0911 0.56054,0.35547 0.6836,1.19401 1.78646,1.79101 3.3086,1.79101 1.28515,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31901,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48307,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37826,-1.74999 1.13477,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50586,1.06641 0.30077,0.22787 1.00715,0.58334 2.11914,1.0664 1.16666,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.82031,1.2168 0.82032,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2851"" />
-      <path
-         d=""m 242.08218,160.17062 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -10e-6,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2853"" />
-      <path
-         d=""m 259.58218,159.52805 c -10e-6,0.96614 -0.37142,1.73405 -1.11425,2.30371 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85937,-1.05274 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17774 0.65624,0.1185 0.99804,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17577 -1.63152,-1.76366 -2.73438,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87304,1.20312 -1e-5,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2855"" />
-      <path
-         d=""m 273.84195,156.95773 c -10e-6,1.58594 -0.5879,2.92807 -1.76367,4.02637 -1.17579,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.44921,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.59309 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65625,0.80209 1.51302,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2857"" />
-      <path
-         d=""m 298.39664,162.09836 c -3e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.8594,-0.13672 -3.59117,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.53321,-0.47852 -10e-6,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82945,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28257,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12305,-0.38281 0,-0.23698 0.25976,-0.38282 0.7793,-0.4375 0.56509,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.6836,-2.32421 -0.40105,-0.49218 -0.91146,-0.73828 -1.53125,-0.73829 -0.91146,10e-6 -1.73177,0.18458 -2.46093,0.55371 -0.72918,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14582,0.95703 0.4375,1.17578 0.26431,0.20052 0.74283,0.32357 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -1e-5,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41015,-0.10938 0.61523,-0.64258 0.61523,-1.59961 l 0,-4.19727 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31446 0,-0.16405 0.47396,-0.5104 1.42188,-1.03906 1.0026,-0.56509 1.61783,-0.84764 1.8457,-0.84766 0.1914,2e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83398,-0.42383 0.5651,-0.35546 1.07552,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43748 2.31055,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32811,0.41017 0.32813,0.41016 -2e-5,1e-5 0.23696,-0.13671 0.71093,-0.41016 0.55598,-0.319 1.0983,-0.56965 1.62696,-0.75195 0.77472,-0.27343 1.52667,-0.41014 2.25586,-0.41016 2.49737,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64711,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22787 0.72461,0.41016 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2859"" />
-      <path
-         d=""m 309.94937,160.17062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41015,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2861"" />
-      <path
-         d=""m 319.49234,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35548,0 -0.57423,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13022 0.10026,1.84571 0.30079,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2863"" />
-      <path
-         d=""m 326.34195,146.64914 c -10e-6,0.41929 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36005 -0.65853,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49903,-1.12109 0.33267,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39452,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41472 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57877,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28255,-0.10025 -0.42383,-0.25064 -0.42383,-0.45117 0,-0.26432 0.20508,-0.46028 0.61524,-0.58789 0.76562,-0.23697 1.44465,-0.55143 2.03711,-0.94336 0.47395,-0.32812 0.76562,-0.49218 0.875,-0.49219 0.36457,10e-6 0.54231,0.23699 0.5332,0.71094 -0.0365,2.38802 -0.0547,4.82162 -0.0547,7.30078 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48308 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2865"" />
-      <path
-         d=""m 351.9357,162.09836 c -2e-5,0.30078 -0.1413,0.44206 -0.42383,0.42383 -1.85939,-0.13672 -3.59116,-0.13672 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13217 -0.5332,-0.47852 -2e-5,-0.27344 0.24151,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49023 l 0,-3.63672 c -2e-5,-2.04166 -0.82944,-3.06249 -2.48828,-3.0625 -0.87502,1e-5 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56512 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27344 0.80207,0.13671 1.20311,0.30533 1.20313,0.50585 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.18229 -0.12304,-0.38281 -10e-6,-0.23698 0.25975,-0.38282 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57878 0.84766,-1.54493 l 0,-3.71875 c -1e-5,-1.00259 -0.22788,-1.77733 -0.68359,-2.32421 -0.40106,-0.49218 -0.91147,-0.73828 -1.53125,-0.73829 -0.91147,10e-6 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99024 c -10e-6,0.5651 0.14583,0.95703 0.4375,1.17578 0.26432,0.20052 0.74283,0.32357 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.1504,0.39649 -0.45117,0.39649 -2.27865,0 -3.92839,0.0638 -4.94922,0.1914 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32812 0,-0.22787 0.33724,-0.42383 1.01172,-0.58789 0.41016,-0.10938 0.61523,-0.64258 0.61524,-1.59961 l 0,-4.19727 c -10e-6,-1.0664 -0.28712,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30078 -0.10482,-0.0638 -0.15723,-0.16861 -0.15722,-0.31446 -1e-5,-0.16405 0.47395,-0.5104 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84764 1.8457,-0.84766 0.19141,2e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51757,-0.43748 2.31054,-0.4375 0.63801,2e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41014 2.25586,-0.41016 2.49738,2e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42969 c -2e-5,0.51953 0.12303,0.88867 0.36914,1.10742 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2867"" />
-      <path
-         d=""m 363.48843,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2869"" />
-      <path
-         d=""m 374.04312,159.52805 c -10e-6,0.96614 -0.37143,1.73405 -1.11426,2.30371 -0.74284,0.56966 -1.75684,0.85449 -3.04199,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28516,-0.45117 -0.0729,-0.1276 -0.10937,-0.75195 -0.10937,-1.87305 0,-0.48307 0.10937,-0.73372 0.32812,-0.75195 0.21875,-0.0273 0.4056,0.0911 0.56055,0.35547 0.68359,1.19401 1.78645,1.79101 3.30859,1.79101 1.28515,0 1.92773,-0.44661 1.92774,-1.33984 -1e-5,-0.39192 -0.14584,-0.72005 -0.4375,-0.98437 -0.31902,-0.30078 -0.93881,-0.65169 -1.85938,-1.05274 -1.33073,-0.59244 -2.2194,-1.11197 -2.66601,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13476,-2.29687 0.70182,-0.52864 1.64062,-0.79296 2.81641,-0.79297 0.73827,1e-5 1.41275,0.0593 2.02344,0.17774 0.65624,0.1185 0.99803,0.26433 1.02539,0.4375 0.0729,0.51042 0.2233,1.2487 0.45117,2.21484 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60157,-0.15039 -0.72006,-1.17577 -1.63151,-1.76366 -2.73437,-1.76367 -1.2487,1e-5 -1.87305,0.40105 -1.87305,1.20312 0,0.44662 0.16862,0.80209 0.50586,1.06641 0.30078,0.22787 1.00716,0.58334 2.11914,1.0664 1.16666,0.50131 1.95963,0.95248 2.37891,1.35352 0.54686,0.51953 0.8203,1.2168 0.82031,2.0918 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2871"" />
-      <path
-         d=""m 394.4689,161.155 c -1e-5,0.19141 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51953 -0.27345,-0.34636 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18684 -1.29883,0.56054 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54687,-0.48307 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61979,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0274,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98243,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11425,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51075,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55599,-0.9479 1.66797,-1.53125 1.16666,-0.61066 2.28775,-0.916 3.36328,-0.91601 1.85025,10e-6 2.76627,0.87957 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88868 0.75195,0.88867 0.10025,1e-5 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0684 0.49219,-0.0684 0.26431,0 0.39647,0.17773 0.39648,0.5332 z m -4.21093,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39194 -3.29493,1.10743 -3.29492,2.14649 -1e-5,1.04818 0.56965,1.57226 1.70898,1.57226 0.45573,0 0.92513,-0.0866 1.40821,-0.25976 0.56509,-0.20052 0.84764,-0.44206 0.84765,-0.72461 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2873"" />
-      <path
-         d=""m 415.11343,156.58859 c -10e-6,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18946 -2.47689,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49218 -0.0912,-0.0365 -0.13672,0.18684 -0.13671,0.66992 l 0,4.11523 c -1e-5,0.66536 0.54231,1.09375 1.62695,1.28516 0.50129,0.0911 0.81803,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19825,0.38965 -10e-6,0.30988 -0.20509,0.45116 -0.61524,0.42382 -1.91407,-0.12761 -3.5957,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16862 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.7793,-0.56054 0.44661,-0.1823 0.66991,-0.6198 0.66992,-1.3125 l 0,-12.0586 c -10e-6,-0.97525 -0.26889,-1.58593 -0.80664,-1.83203 -0.63803,-0.28254 -0.95704,-0.51496 -0.95703,-0.69727 -10e-6,-0.20051 0.18684,-0.3509 0.56054,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49024,-0.6289 0.42838,-0.24609 0.68814,-0.36913 0.77929,-0.36914 0.27344,1e-5 0.49674,0.25066 0.66993,0.75195 0.2552,0.72918 0.42382,1.09376 0.50585,1.09375 0.0182,1e-5 0.41016,-0.21418 1.17579,-0.64258 0.83853,-0.46483 1.65884,-0.69725 2.46093,-0.69726 1.30338,1e-5 2.3789,0.36915 3.22657,1.10742 1.0117,0.86589 1.51756,2.11915 1.51757,3.75976 z m -2.32421,1.09375 c -2e-5,-1.48567 -0.36916,-2.64322 -1.10743,-3.47265 -0.60157,-0.6927 -1.30795,-1.03906 -2.11914,-1.03907 -0.62891,10e-6 -1.23047,0.21876 -1.80468,0.65625 -0.75652,0.56512 -1.13478,1.35353 -1.13477,2.36524 l 0,3.86914 c -10e-6,0.24609 0.34635,0.50586 1.03906,0.7793 0.74739,0.30078 1.55859,0.45117 2.4336,0.45117 1.79556,0 2.69334,-1.20313 2.69336,-3.60938 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2875"" />
-      <path
-         d=""m 429.20914,156.95773 c -2e-5,1.58594 -0.58791,2.92807 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43555 0.96613,0.92969 1.4492,2.1875 1.44922,3.77343 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2877"" />
-      <path
-         d=""m 441.19937,160.70383 c -10e-6,0.33724 -0.46941,0.74739 -1.4082,1.23047 -1.02084,0.51953 -2.028,0.77929 -3.02149,0.77929 -1.54948,0 -2.81641,-0.4375 -3.80078,-1.3125 -1.02995,-0.92968 -1.54492,-2.18749 -1.54492,-3.77343 0,-1.70443 0.59245,-3.12174 1.77734,-4.25196 1.15755,-1.10285 2.57943,-1.65428 4.26563,-1.65429 1.02082,1e-5 1.9095,0.14584 2.66602,0.4375 0.69269,0.27344 1.03905,0.56511 1.03906,0.875 -1e-5,0.20964 -0.17091,0.52865 -0.5127,0.95703 -0.3418,0.42839 -0.62208,0.64258 -0.84082,0.64257 -0.13673,1e-5 -0.45118,-0.19595 -0.94336,-0.58789 -0.92058,-0.72915 -1.64063,-1.09374 -2.16015,-1.09375 -0.82032,10e-6 -1.4948,0.30991 -2.02344,0.92969 -0.55599,0.67449 -0.83399,1.60417 -0.83399,2.78906 0,1.431 0.40104,2.57488 1.20313,3.43164 0.72916,0.77475 1.60872,1.16211 2.63867,1.16211 1.02083,0 1.98241,-0.28255 2.88477,-0.84765 0.082,-0.0547 0.19139,-0.082 0.32812,-0.082 0.1914,0 0.2871,0.12305 0.28711,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2879"" />
-      <path
-         d=""m 456.73062,161.98898 c -10e-6,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47201,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.1914 -1.44011,-1.54948 -2.66147,-3.17188 -3.66406,-4.86719 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64257,1.01172 -1e-5,0.3099 0.009,0.75652 0.0273,1.33985 0.0182,0.58333 0.16406,0.96614 0.4375,1.14843 0.1914,0.12761 0.63346,0.22787 1.32617,0.30079 0.42838,0.0547 0.64257,0.21419 0.64258,0.47851 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91146,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88867,-0.20508 -0.0182,-0.0638 -0.0274,-0.15495 -0.0274,-0.27344 0,-0.28255 0.278,-0.49674 0.83399,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75195,-1.76367 l 0,-11.94922 c 0,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20052,-0.37368 -0.61979,-0.66535 -1.25781,-0.875 -0.30079,-0.10024 -0.45118,-0.24152 -0.45117,-0.42383 -10e-6,-0.2643 0.21419,-0.46938 0.64257,-0.61523 0.68359,-0.22785 1.33529,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.8112,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56055,0.71094 -1e-5,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0274,8.55859 c -1e-5,0.23699 0.0638,0.35548 0.1914,0.35547 0.13672,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32421 0.21874,-0.22786 0.32812,-0.41015 0.32813,-0.54688 -1e-5,-0.24608 -0.36915,-0.41926 -1.10743,-0.51953 -0.31901,-0.0365 -0.4694,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22332,0.47853 -0.66992,0.50586 -0.70184,0.0273 -1.36265,0.18686 -1.98243,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13932,1.73178 2.21484,3.03972 3.22656,3.92383 0.64713,0.55599 1.25325,0.83399 1.81836,0.83399 0.41926,0 0.67903,0.0296 0.7793,0.0889 0.10025,0.0592 0.15038,0.21648 0.15039,0.47168 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2881"" />
-      <path
-         d=""m 468.26968,160.17062 c -10e-6,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.0026,-0.95703 -1.50391,-2.23307 -1.5039,-3.82812 -1e-5,-1.80468 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33332,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35548 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87305 c 0.41016,2.16927 1.52213,3.2539 3.33594,3.2539 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.4056,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32813 3.71875,-1.1211 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2883"" />
-      <path
-         d=""m 477.81265,161.18234 c -1e-5,0.4375 -0.40105,0.8112 -1.20312,1.1211 -0.71095,0.27343 -1.431,0.41015 -2.16016,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99804,-0.41699 -0.14584,-0.0365 -0.21875,-0.17773 -0.21875,-0.42383 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59765 0.10026,-0.17317 0.29622,-0.22786 0.58789,-0.16407 0.20052,0.0638 0.30534,0.18231 0.31446,0.35547 l 0.0547,1.70899 c 0,0.12761 0.0228,0.21876 0.0684,0.27343 0.0638,0.0821 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.7793 l -2.06445,0 c -0.35547,0 -0.57422,0.0593 -0.65625,0.17773 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c -10e-6,1.13022 0.10025,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15722 0.72461,-0.15723 0.10937,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2885"" />
-      <path
-         d=""m 267.56656,187.18898 c -2e-5,0.31901 -0.21421,0.48763 -0.64258,0.50586 -0.63803,0.009 -1.47202,0.0547 -2.50195,0.13672 -0.51043,0.10026 -0.87501,0.0365 -1.09375,-0.19141 -1.44012,-1.54947 -2.66147,-3.17187 -3.66406,-4.86718 -0.082,-0.14583 -0.18686,-0.21875 -0.31446,-0.21875 -0.15495,0 -0.42383,0.13672 -0.80664,0.41015 -0.42839,0.23699 -0.64258,0.57423 -0.64258,1.01172 0,0.3099 0.009,0.75652 0.0274,1.33985 0.0182,0.58333 0.16405,0.96614 0.4375,1.14843 0.1914,0.12761 0.63345,0.22787 1.32617,0.30078 0.42838,0.0547 0.64257,0.2142 0.64258,0.47852 -10e-6,0.20964 -0.0342,0.33952 -0.10254,0.38965 -0.0684,0.0501 -0.24838,0.0615 -0.54004,0.0342 -0.91147,-0.082 -2.45183,-0.0365 -4.62109,0.13672 -0.54688,0.0456 -0.8431,-0.0228 -0.88868,-0.20508 -0.0182,-0.0638 -0.0273,-0.15495 -0.0273,-0.27344 0,-0.28255 0.27799,-0.49674 0.83398,-0.64258 0.5013,-0.1276 0.75195,-0.71549 0.75196,-1.76367 l 0,-11.94922 c -1e-5,-0.74738 -0.0729,-1.26691 -0.21875,-1.55859 -0.20053,-0.37368 -0.6198,-0.66535 -1.25782,-0.875 -0.30078,-0.10024 -0.45117,-0.24152 -0.45117,-0.42383 0,-0.2643 0.21419,-0.46938 0.64258,-0.61523 0.68359,-0.22785 1.33528,-0.5423 1.95508,-0.94336 0.5013,-0.32811 0.81119,-0.49217 0.92969,-0.49219 0.37369,2e-5 0.56054,0.237 0.56054,0.71094 0,-0.0638 -0.005,0.38739 -0.0137,1.35351 -0.009,0.66538 -0.0137,1.55861 -0.0137,2.67969 l 0.0273,8.55859 c 0,0.23699 0.0638,0.35548 0.19141,0.35547 0.13671,1e-5 0.34635,-0.11848 0.62891,-0.35547 0.7565,-0.59244 1.68619,-1.36718 2.78906,-2.32422 0.21874,-0.22785 0.32811,-0.41014 0.32812,-0.54687 -10e-6,-0.24608 -0.36915,-0.41926 -1.10742,-0.51953 -0.31902,-0.0365 -0.46941,-0.21418 -0.45117,-0.5332 0.0273,-0.319 0.18684,-0.45572 0.47852,-0.41016 0.65624,0.0912 1.61327,0.14129 2.87109,0.15039 0.87499,0.009 1.74543,0.0137 2.61133,0.0137 0.28254,0.009 0.42381,0.17775 0.42383,0.50586 -2e-5,0.30991 -0.22333,0.47853 -0.66993,0.50586 -0.70183,0.0274 -1.36264,0.18686 -1.98242,0.47852 -0.86589,0.39193 -1.79102,1.08008 -2.77539,2.06445 -0.0729,0.0547 -0.10938,0.12305 -0.10937,0.20508 -1e-5,0.12761 0.15494,0.43295 0.46484,0.91601 1.13931,1.73178 2.21483,3.03972 3.22656,3.92383 0.64713,0.55599 1.25324,0.83399 1.81836,0.83399 0.41926,0 0.67902,0.0296 0.7793,0.0889 0.10024,0.0592 0.15037,0.21647 0.15039,0.47168 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2887"" />
-      <path
-         d=""m 283.31656,187.4214 c -2e-5,0.28256 -0.20509,0.41016 -0.61524,0.38282 -1.95964,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -10e-6,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76108 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68164,1.43554 0.42838,0.0365 0.64258,0.17318 0.64258,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46485,0.0137 -1.43099,-0.0547 -2.90755,0.0182 -4.42968,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42382 -10e-6,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51041,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41016,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55011,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27148,0.46484 0.41015,0.082 0.61522,0.23242 0.61524,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2889"" />
-      <path
-         d=""m 289.48257,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31445,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -1e-5,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51951 1.07324,-0.51953 0.92969,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15495,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13672,-0.4375 0,-0.20963 0.24153,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79296,-0.66081 0.79297,-1.51758 l 0,-3.58203 c -1e-5,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20053,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20507,-0.46027 0.61523,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 -10e-6,0.59245 0.0866,1.01627 0.25976,1.27148 0.1914,0.28255 0.55599,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2891"" />
-      <path
-         d=""m 303.00406,169.01906 c -10e-6,0.38283 -0.17319,0.82945 -0.51953,1.33984 -0.34637,0.51044 -0.6198,0.76565 -0.82031,0.76563 -0.24611,2e-5 -0.50587,-0.12303 -0.7793,-0.36914 -0.57423,-0.41014 -1.08009,-0.61522 -1.51758,-0.61524 -1.73178,2e-5 -2.59766,1.21226 -2.59766,3.63672 l 0,2.93946 c 0,0.45574 0.39193,0.6517 1.17579,0.58789 l 1.73632,-0.13672 c 0.68359,-0.0547 1.05729,0.0547 1.1211,0.32812 0.0182,0.0912 0.0273,0.22332 0.0273,0.39649 -10e-6,0.3737 -0.0911,0.60613 -0.27344,0.69726 -0.10938,0.0638 -0.39193,0.0957 -0.84765,0.0957 l -1.73633,0 c -0.77475,1e-5 -1.17579,0.16407 -1.20313,0.49218 -0.0182,0.19142 -0.0182,2.17384 0,5.94727 0,0.51042 0.23698,0.875 0.71094,1.09375 0.35546,0.17318 0.94791,0.29167 1.77735,0.35547 0.32811,0.0273 0.52635,0.0661 0.59472,0.11621 0.0684,0.0501 0.10253,0.19824 0.10254,0.44433 -10e-6,0.28256 -0.0387,0.45118 -0.11621,0.50586 -0.0775,0.0547 -0.27117,0.0729 -0.58105,0.0547 -2.01433,-0.10937 -3.82358,-0.082 -5.42774,0.082 -0.41927,0.0456 -0.67448,0.0456 -0.76562,0 -0.0912,-0.0456 -0.13672,-0.20507 -0.13672,-0.47851 0,-0.22787 0.26432,-0.41472 0.79297,-0.56055 0.6289,-0.17318 0.94335,-0.6289 0.94336,-1.36719 l 0,-5.31836 c -10e-6,-0.55598 -0.0866,-0.94335 -0.25977,-1.16211 -0.11849,-0.14582 -0.34636,-0.27342 -0.68359,-0.38281 -0.52865,-0.16405 -0.79297,-0.42382 -0.79297,-0.7793 0,-0.24608 0.10937,-0.40103 0.32812,-0.46484 0.0729,-0.0182 0.30078,-0.0319 0.6836,-0.041 0.32812,-0.009 0.5332,-0.082 0.61523,-0.21875 0.0547,-0.10025 0.082,-0.34635 0.082,-0.73829 l 0,-2.17382 c 0,-1.73176 0.71094,-3.14908 2.13281,-4.25196 1.35807,-1.04816 3.02604,-1.57224 5.00391,-1.57226 0.8203,2e-5 1.23046,0.25067 1.23047,0.75195 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2893"" />
-      <path
-         d=""m 312.84781,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.3763,0 -2.53385,-0.45117 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c 0,-0.50129 -0.2028,-0.94107 -0.60839,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90234,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2895"" />
-      <path
-         d=""m 326.72476,171.84914 c 0,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65853,0.54006 -1.03222,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05274,-0.38281 -0.27344,-0.25519 -0.41016,-0.58787 -0.41015,-0.99805 -10e-6,-0.40102 0.16633,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69042,-0.51951 1.07324,-0.51953 0.92968,2e-5 1.39453,0.43752 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32812,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69337,-0.0729 -4.00586,0.0547 -0.35548,0.0365 -0.57878,0.0228 -0.66993,-0.041 -0.0911,-0.0638 -0.13672,-0.20963 -0.13671,-0.4375 -10e-6,-0.20963 0.24153,-0.38281 0.7246,-0.51953 0.52865,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72004 -0.0729,-1.2259 -0.21875,-1.51758 -0.20052,-0.40103 -0.61523,-0.70637 -1.24414,-0.91601 -0.28255,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61524,-0.58789 0.76562,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47395,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54231,0.23699 0.5332,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30079 0,0.59245 0.0866,1.01627 0.25977,1.27148 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35092 0.80664,0.64258 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2897"" />
-      <path
-         d=""m 338.55093,184.72804 c -10e-6,0.96615 -0.37142,1.73406 -1.11425,2.30372 -0.74285,0.56966 -1.75685,0.85449 -3.042,0.85449 -0.85677,0 -1.71354,-0.0911 -2.57031,-0.27344 -0.73828,-0.16406 -1.16667,-0.31445 -1.28515,-0.45117 -0.0729,-0.1276 -0.10938,-0.75195 -0.10938,-1.87305 0,-0.48307 0.10937,-0.73372 0.32813,-0.75195 0.21874,-0.0273 0.40559,0.0911 0.56054,0.35547 0.68359,1.19401 1.78646,1.79101 3.3086,1.79101 1.28514,0 1.92772,-0.44661 1.92773,-1.33984 -1e-5,-0.39193 -0.14584,-0.72005 -0.4375,-0.98438 -0.31902,-0.30077 -0.93881,-0.65168 -1.85937,-1.05273 -1.33074,-0.59244 -2.21941,-1.11197 -2.66602,-1.55859 -0.48308,-0.47396 -0.72461,-1.11198 -0.72461,-1.91407 0,-0.98436 0.37825,-1.74999 1.13477,-2.29687 0.70181,-0.52864 1.64062,-0.79296 2.8164,-0.79297 0.73828,1e-5 1.41276,0.0593 2.02344,0.17773 0.65624,0.1185 0.99804,0.26434 1.02539,0.4375 0.0729,0.51043 0.2233,1.24871 0.45117,2.21485 0.0273,0.1185 -0.10027,0.2142 -0.38281,0.28711 -0.30079,0.0638 -0.50131,0.0137 -0.60156,-0.15039 -0.72006,-1.17578 -1.63152,-1.76367 -2.73438,-1.76368 -1.2487,1e-5 -1.87305,0.40106 -1.87304,1.20313 -10e-6,0.44662 0.16861,0.80209 0.50585,1.06641 0.30078,0.22787 1.00716,0.58334 2.11915,1.0664 1.16665,0.50131 1.95962,0.95248 2.3789,1.35352 0.54687,0.51953 0.8203,1.2168 0.82031,2.09179 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2899"" />
-      <path
-         d=""m 362.44937,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2901"" />
-      <path
-         d=""m 375.39664,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2903"" />
-      <path
-         d=""m 385.17203,186.38234 c -1e-5,0.4375 -0.40105,0.8112 -1.20313,1.1211 -0.71094,0.27343 -1.43099,0.41015 -2.16015,0.41015 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43295,-0.28027 -0.99805,-0.417 -0.14583,-0.0364 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16406,-0.47852 0.98438,-0.48306 1.84115,-1.34895 2.57032,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -1e-5,0.12762 0.0228,0.21877 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17316,1e-5 0.17316,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87955,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15722 0.72461,-0.15723 0.10936,1e-5 0.16405,0.0684 0.16406,0.20508 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2905"" />
-      <path
-         d=""m 404.23062,185.37062 c -10e-6,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45117 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80468 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -1e-5,0.3737 -0.44663,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31933 -0.40561,-0.37825 -0.90463,-0.56738 -1.49707,-0.56739 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2907"" />
-      <path
-         d=""m 420.63687,187.4214 c -10e-6,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44533,-0.11849 -4.45703,-0.0547 -0.51955,0.0365 -0.8021,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79296,-0.49219 0.48307,-0.13671 0.7246,-0.60611 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.8112,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -10e-6,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0593,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61523,0.041 -0.1823,-0.0365 -0.27344,-0.17773 -0.27344,-0.42382 0,-0.21875 0.25976,-0.4056 0.77929,-0.56055 0.48307,-0.14583 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70181 -0.0911,-1.14843 -0.27343,-1.33984 -0.12761,-0.13671 -0.55144,-0.32812 -1.27149,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56055,-0.47852 0.51042,-0.1914 1.07096,-0.49673 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.79979 2.9668,-0.79981 2.36066,2e-5 3.55012,1.34442 3.56836,4.03321 l 0.0273,4.40234 c -1e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21874,0.18229 0.64257,0.33724 1.27149,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2909"" />
-      <path
-         d=""m 433.58414,182.15773 c -2e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.7409,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61523,-2.97135 1.8457,-4.07422 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.4492,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34637,-2.59309 -1.03907,-3.48633 -0.67448,-0.86588 -1.53125,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01856 -0.61068,0.67904 -0.91602,1.50619 -0.91602,2.48144 0,1.56771 0.35547,2.78907 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79556,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2911"" />
-      <path
-         d=""m 448.65054,186.51906 c -10e-6,0.18229 -0.4284,0.46029 -1.28515,0.83398 -0.72918,0.31902 -1.09376,0.47852 -1.09375,0.47852 -0.1185,0 -0.37143,-0.20508 -0.75879,-0.61523 -0.38738,-0.41016 -0.65854,-0.61524 -0.81348,-0.61524 -0.082,0 -0.55144,0.19141 -1.4082,0.57422 -0.85678,0.38281 -1.60873,0.57422 -2.25586,0.57422 -1.36719,0 -2.31967,-0.25977 -2.85742,-0.7793 -0.58334,-0.55599 -0.87501,-1.56315 -0.875,-3.02148 l 0,-2.74805 c -10e-6,-0.76562 -0.0775,-1.30338 -0.23242,-1.61328 -0.20964,-0.3828 -0.63347,-0.67447 -1.27149,-0.875 -0.20964,-0.0638 -0.31445,-0.17773 -0.31445,-0.3418 0,-0.18228 0.17773,-0.34178 0.5332,-0.47851 0.67448,-0.26432 1.3444,-0.5332 2.00977,-0.80664 0.46484,-0.1914 0.80208,-0.2871 1.01172,-0.28711 0.319,1e-5 0.47851,0.2142 0.47851,0.64258 0,10e-6 -0.0137,0.4808 -0.041,1.44238 -0.0274,0.96159 -0.041,1.87533 -0.041,2.74121 l 0,1.64062 c -10e-6,1.11199 0.21874,1.87305 0.65625,2.28321 0.39192,0.36458 1.10741,0.54687 2.14648,0.54687 1.60416,0 2.40624,-0.82031 2.40625,-2.46094 l 0,-2.43359 c -10e-6,-0.88411 -0.0798,-1.45149 -0.23925,-1.70215 -0.15952,-0.25064 -0.58563,-0.46711 -1.27832,-0.64941 -0.20053,-0.082 -0.30079,-0.2233 -0.30079,-0.42383 0,-0.20963 0.12304,-0.36002 0.36915,-0.45117 1.8867,-0.68358 2.92121,-1.02538 3.10351,-1.02539 0.35546,1e-5 0.53319,0.20509 0.5332,0.61523 -10e-6,-0.009 -0.0137,0.44891 -0.041,1.37403 -0.0274,0.92513 -0.041,1.82064 -0.041,2.68652 l 0,3.44531 c -1e-5,0.64714 0.47395,1.00716 1.42188,1.08008 0.31899,0.0273 0.4785,0.15039 0.47851,0.36914 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2913"" />
-      <path
-         d=""m 462.54117,178.58937 c -0.0912,0.67449 -0.32814,1.01173 -0.71094,1.01172 -0.13673,1e-5 -0.39194,-0.0273 -0.76562,-0.082 -0.16408,-0.0182 -0.27801,-0.0273 -0.3418,-0.0273 -0.12762,0.009 -0.19142,0.0912 -0.19141,0.24609 -1e-5,0.0456 0.009,0.18686 0.0273,0.42383 0.0182,0.23699 0.0273,0.47852 0.0273,0.72461 -1e-5,1.97787 -1.28061,3.32227 -3.8418,4.0332 -1.51302,0.41927 -2.26953,0.75651 -2.26953,1.01172 0,0.26432 0.56054,0.4694 1.68164,0.61523 l 2.13282,0.28711 c 1.194,0.15495 2.06899,0.37826 2.625,0.66993 0.8841,0.46484 1.32615,1.18033 1.32617,2.14648 -2e-5,1.35807 -0.77931,2.51562 -2.33789,3.47266 -1.51303,0.92056 -3.27215,1.38085 -5.27735,1.38086 -1.23958,-1e-5 -2.22624,-0.25066 -2.95996,-0.75196 -0.73372,-0.50131 -1.10059,-1.16667 -1.10058,-1.99609 -1e-5,-1.25782 0.87499,-2.46094 2.625,-3.60938 -0.80209,-0.32812 -1.20313,-0.84309 -1.20313,-1.54492 0,-0.65625 0.74739,-1.25325 2.24219,-1.79101 -2.15105,-0.57422 -3.22657,-1.83203 -3.22656,-3.77344 -1e-5,-1.21223 0.43977,-2.21711 1.31933,-3.01465 0.87956,-0.79752 1.98925,-1.19628 3.3291,-1.19629 0.95703,10e-6 1.89127,0.21876 2.80274,0.65625 0.60155,0.28256 1.35806,0.41017 2.26953,0.38281 l 1.20312,-0.0273 c 0.30989,-0.009 0.50129,0.0319 0.57422,0.12305 0.0729,0.0912 0.0866,0.30079 0.041,0.6289 z m -4.08789,2.55664 c -1e-5,-2.11457 -0.91147,-3.17186 -2.73438,-3.17187 -1.54948,1e-5 -2.32422,0.97983 -2.32422,2.93945 0,1.94141 0.85677,2.91212 2.57032,2.91211 0.71093,10e-6 1.30337,-0.25065 1.77734,-0.75195 0.47395,-0.5013 0.71093,-1.14388 0.71094,-1.92774 z m 2.16015,9.32422 c -10e-6,-0.69271 -0.83855,-1.16211 -2.51562,-1.4082 l -2.7207,-0.38281 c -0.25522,-0.0456 -0.61069,-0.11394 -1.06641,-0.20508 -0.96615,0.77474 -1.44922,1.73632 -1.44922,2.88476 0,1.29427 0.875,1.9414 2.625,1.94141 1.35807,-1e-5 2.5703,-0.32357 3.63672,-0.9707 0.99348,-0.59245 1.49022,-1.21225 1.49023,-1.85938 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2915"" />
-      <path
-         d=""m 478.3732,187.35304 c -2e-5,0.30079 -0.20509,0.44206 -0.61523,0.42383 -2.28778,-0.082 -3.77345,-0.10026 -4.45704,-0.0547 -0.33725,0.0273 -0.53777,0.0319 -0.60156,0.0137 -0.17319,-0.0456 -0.25977,-0.19141 -0.25976,-0.4375 -1e-5,-0.17318 0.25975,-0.33724 0.77929,-0.49219 0.34635,-0.10937 0.5651,-0.27799 0.65625,-0.50586 0.0456,-0.1276 0.0683,-0.41927 0.0684,-0.875 l 0,-3.69141 c -1e-5,-2.1328 -0.90235,-3.19921 -2.70703,-3.19921 -0.80209,0 -1.55404,0.19141 -2.25586,0.57421 -0.66537,0.3646 -0.99805,0.72462 -0.99805,1.08008 l 0,5.20899 c 0,0.875 0.56055,1.37174 1.68165,1.49023 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.18229 -0.0319,0.30078 -0.0957,0.35547 -0.0638,0.0547 -0.2461,0.0775 -0.54687,0.0684 -1.44923,-0.0547 -2.92579,-0.0182 -4.42969,0.10937 -0.32813,0.0273 -0.53321,0.0319 -0.61524,0.0137 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -1e-5,-0.20052 0.25976,-0.36914 0.77929,-0.50586 0.48307,-0.13671 0.72461,-0.63346 0.72461,-1.49023 l 0,-12.37305 c 0,-0.72003 -0.0729,-1.24412 -0.21875,-1.57226 -0.20964,-0.43749 -0.62891,-0.76105 -1.25781,-0.97071 -0.2461,-0.082 -0.36914,-0.2324 -0.36914,-0.45117 0,-0.15493 0.18685,-0.31443 0.56055,-0.47851 0.5013,-0.22785 1.13932,-0.56053 1.91406,-0.99805 0.5013,-0.28253 0.84309,-0.42381 1.02539,-0.42383 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,4.67578 c -10e-6,0.50131 0.0729,0.75196 0.21875,0.75196 -0.082,0 0.37597,-0.26204 1.37402,-0.78614 0.99804,-0.52408 1.94368,-0.78612 2.83691,-0.78613 2.42447,1e-5 3.64583,1.34441 3.66407,4.0332 l 0.0273,4.6211 c 0.009,0.92057 0.57876,1.43554 1.70899,1.54492 0.41014,0.0365 0.61521,0.17318 0.61523,0.41015 z""
-         style=""line-height:89.99999762%;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
-         id=""path2917"" />
-    </g>
     <g
        style=""font-size:40px;font-style:normal;font-weight:normal;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
        id=""text3850"">
@@ -325,5 +165,126 @@
          style=""font-size:144px;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
          id=""path2838"" />
     </g>
+    <g
+       style=""font-size:40px;font-style:normal;font-weight:normal;line-height:89.99999762%;fill:#000000;fill-opacity:1;stroke:none;font-family:Bitstream Vera Sans""
+       id=""text2870""
+       transform=""translate(0,4)"">
+      <path
+         d=""m 285.18048,153.2296 c -2e-5,0.16407 -0.31447,0.33269 -0.94336,0.50586 -0.41017,0.10938 -0.75653,0.48308 -1.03906,1.12109 -1.64064,3.64584 -3.10809,6.58529 -4.40234,8.81836 -0.0274,0.0547 -0.0957,0.0775 -0.20508,0.0684 -0.10028,-0.009 -0.16864,-0.041 -0.20508,-0.0957 -0.21876,-0.32813 -0.77931,-1.47201 -1.68164,-3.43164 -0.82944,-1.80469 -1.27605,-2.70703 -1.33985,-2.70703 -0.10027,0 -0.5879,0.87044 -1.46289,2.61132 -0.99349,1.94141 -1.58138,3.04883 -1.76367,3.32227 -0.0274,0.0638 -0.0912,0.0911 -0.1914,0.082 -0.10027,0 -0.17775,-0.0365 -0.23243,-0.10937 -0.66537,-1.03907 -2.19662,-3.88281 -4.59375,-8.53125 -0.27344,-0.54687 -0.57877,-0.89322 -0.91601,-1.03907 -0.58334,-0.2552 -0.875,-0.44204 -0.875,-0.56054 0,-0.35546 0.19596,-0.51497 0.58789,-0.47852 1.75911,0.1823 3.29947,0.14584 4.62109,-0.10937 0.30078,-0.0547 0.45117,0.0456 0.45117,0.30078 0,0.35548 -0.20508,0.58334 -0.61523,0.68359 -0.53777,0.12761 -0.80665,0.32814 -0.80664,0.60156 -1e-5,0.17319 0.0638,0.4284 0.19141,0.76563 0.32812,0.84766 0.8203,1.92318 1.47656,3.22656 0.65624,1.30339 1.03905,1.95508 1.14844,1.95508 0.0729,0 0.46027,-0.67903 1.16211,-2.03711 0.70181,-1.35807 1.05272,-2.11002 1.05273,-2.25586 -1e-5,-0.35546 -0.1185,-0.73827 -0.35547,-1.14844 -0.28256,-0.60155 -0.61069,-0.96158 -0.98437,-1.08008 -0.60157,-0.20962 -0.90236,-0.4147 -0.90235,-0.61523 -1e-5,-0.36457 0.20507,-0.51496 0.61524,-0.45117 1.40363,0.19142 2.88931,0.15496 4.45703,-0.10938 0.30077,-0.0547 0.45116,0.0365 0.45117,0.27344 -1e-5,0.34637 -0.22332,0.56056 -0.66992,0.64258 -0.52866,0.10027 -0.79298,0.36915 -0.79297,0.80664 -10e-6,0.20964 0.0592,0.45574 0.17773,0.73828 1.40364,3.4362 2.21483,5.1543 2.4336,5.1543 0.082,0 0.4466,-0.66992 1.09375,-2.00977 0.69269,-1.43098 1.17576,-2.58397 1.44922,-3.45898 0.0182,-0.0456 0.0273,-0.0957 0.0273,-0.15039 -2e-5,-0.39192 -0.30536,-0.69726 -0.91602,-0.91602 -0.47397,-0.15494 -0.71095,-0.32811 -0.71093,-0.51953 -2e-5,-0.319 0.15037,-0.44205 0.45117,-0.36914 0.41014,0.0912 1.14842,0.15952 2.21484,0.20508 1.00259,0.0365 1.66339,0.0319 1.98242,-0.0137 0.37368,-0.0456 0.56053,0.0592 0.56055,0.31445 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2877"" />
+      <path
+         d=""m 297.29376,160.98155 c -1e-5,0.39193 -0.52865,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56055,-3.2539 1.68164,-4.34766 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -10e-6,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30274,1.87304 c 0.41016,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.40561,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,10e-6 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2879"" />
+      <path
+         d=""m 311.11603,157.13976 c -2e-5,1.80469 -0.62892,3.31771 -1.88672,4.53906 -1.20314,1.17578 -2.63412,1.76367 -4.29297,1.76367 -0.93881,0 -1.91862,-0.15495 -2.93945,-0.46484 -0.98438,-0.30078 -1.48112,-0.57422 -1.49024,-0.82032 -0.009,-0.20963 -0.005,-0.94335 0.0137,-2.20117 0.0273,-1.54036 0.041,-2.66145 0.041,-3.36328 0,-1.05728 -0.009,-2.59081 -0.0273,-4.60059 -0.0182,-2.00975 -0.0274,-3.34275 -0.0274,-3.99902 0,-0.65623 -0.10026,-1.1074 -0.30078,-1.35351 -0.18229,-0.21874 -0.57878,-0.39191 -1.18945,-0.51954 -0.23698,-0.082 -0.35547,-0.2324 -0.35547,-0.45117 0,-0.19139 0.17773,-0.35089 0.5332,-0.47851 0.51042,-0.18228 1.14388,-0.48762 1.90039,-0.91602 0.60156,-0.33722 0.97526,-0.50584 1.1211,-0.50586 0.28254,2e-5 0.42382,0.23244 0.42383,0.69727 -1e-5,0.0365 -0.0137,0.51043 -0.041,1.42187 -0.0182,0.85679 -0.0228,1.72723 -0.0137,2.61133 l 0.0273,4.73047 c 0,0.44662 0.15494,0.57423 0.46485,0.38281 1.09374,-0.62889 2.23306,-0.94335 3.41796,-0.94336 1.36718,1e-5 2.47916,0.41245 3.33594,1.23731 0.85676,0.82488 1.28514,1.90267 1.28516,3.2334 z m -2.1875,1.21679 c -1e-5,-1.24869 -0.34637,-2.27408 -1.03906,-3.07617 -0.65626,-0.7565 -1.45379,-1.13476 -2.39258,-1.13477 -0.64714,1e-5 -1.28517,0.16863 -1.91407,0.50586 -0.62891,0.33725 -0.94336,0.69272 -0.94335,1.06641 l 0,3.66406 c -1e-5,1.75912 0.97069,2.63868 2.9121,2.63867 1.01172,1e-5 1.82747,-0.32584 2.44727,-0.97753 0.61978,-0.65169 0.92968,-1.5472 0.92969,-2.68653 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2881"" />
+      <path
+         d=""m 333.23712,161.93858 c 0.0365,0.082 0.0547,0.14128 0.0547,0.17774 -2e-5,0.1914 -0.46486,0.50586 -1.39453,0.94336 -1.07553,0.5013 -1.709,0.75195 -1.90039,0.75195 -0.16408,0 -0.3532,-0.27572 -0.56739,-0.82715 -0.2142,-0.55143 -0.36231,-0.82715 -0.44433,-0.82715 0.009,0 -0.50815,0.23926 -1.55176,0.71778 -1.04363,0.47851 -1.83432,0.71777 -2.37207,0.71777 -1.20313,0 -2.24675,-0.43294 -3.13086,-1.29883 -1.06641,-1.02994 -1.59961,-2.4746 -1.59961,-4.33398 0,-1.55859 0.62891,-2.90299 1.88672,-4.03321 1.11198,-0.99347 2.24674,-1.49022 3.4043,-1.49023 0.8203,1e-5 1.80012,0.10483 2.93945,0.31445 0.35546,0.0638 0.53319,-0.041 0.5332,-0.31445 l 0,-4.67578 c -1e-5,-0.52863 -0.12761,-0.90233 -0.38281,-1.12109 -0.16407,-0.14582 -0.55144,-0.319 -1.16211,-0.51954 -0.29167,-0.10935 -0.43751,-0.28709 -0.4375,-0.5332 -10e-6,-0.22785 0.19596,-0.39647 0.58789,-0.50586 0.53775,-0.16404 1.18033,-0.43748 1.92774,-0.82031 0.61978,-0.32811 1.00259,-0.49217 1.14843,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,12.42773 c -10e-6,0.51954 0.23241,0.7793 0.69727,0.7793 0.17316,0 0.40558,-0.0273 0.69726,-0.082 0.319,-0.0547 0.53319,0.0501 0.64258,0.31445 z m -4.22461,-1.35351 0,-4.89453 c -1e-5,-0.40104 -0.35548,-0.81575 -1.0664,-1.24414 -0.75652,-0.45572 -1.57683,-0.68359 -2.46094,-0.6836 -1.90495,1e-5 -2.85743,1.17579 -2.85742,3.52735 -10e-6,1.25781 0.37825,2.33333 1.13476,3.22656 0.75651,0.89323 1.64518,1.33984 2.66602,1.33984 0.46483,0 1.01171,-0.15494 1.64062,-0.46484 0.6289,-0.3099 0.94335,-0.57878 0.94336,-0.80664 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2883"" />
+      <path
+         d=""m 345.09064,160.98155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20509 0.35547,0.47852 -2e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,10e-6 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2885"" />
+      <path
+         d=""m 360.08868,153.20226 c -1e-5,0.17318 -0.28712,0.35092 -0.86132,0.5332 -0.37371,0.10938 -0.69272,0.48308 -0.95704,1.12109 -0.44662,1.07553 -1.22592,2.65235 -2.33789,4.73047 -0.93881,1.75912 -1.66342,3.04427 -2.17382,3.85547 -0.0274,0.0638 -0.0866,0.0911 -0.17774,0.082 -0.0912,-0.009 -0.15951,-0.0456 -0.20508,-0.10937 -1.93229,-2.77995 -3.58659,-5.6237 -4.96289,-8.53125 -0.29167,-0.61979 -0.57878,-0.96614 -0.86133,-1.03907 -0.52864,-0.20962 -0.79296,-0.39647 -0.79296,-0.56054 0,-0.36458 0.17773,-0.52408 0.5332,-0.47852 0.55599,0.0729 1.38086,0.0912 2.47461,0.0547 1.05729,-0.0273 1.80012,-0.082 2.22851,-0.16406 0.26432,-0.0547 0.39648,0.0456 0.39649,0.30078 -10e-6,0.31902 -0.18686,0.5241 -0.56055,0.61523 -0.71094,0.19142 -1.06641,0.43751 -1.0664,0.73828 -1e-5,0.13673 0.0456,0.33269 0.13671,0.58789 0.30989,0.76564 0.86588,1.87078 1.66797,3.31543 0.80208,1.44467 1.25781,2.167 1.36719,2.167 0.082,0 0.46939,-0.69271 1.16211,-2.07813 0.72916,-1.46744 1.25324,-2.65234 1.57227,-3.55469 0.0456,-0.10025 0.0683,-0.20051 0.0684,-0.30078 -1e-5,-0.35546 -0.21876,-0.64712 -0.65625,-0.875 -0.42839,-0.17317 -0.64258,-0.33723 -0.64257,-0.49219 -10e-6,-0.319 0.14126,-0.45116 0.42382,-0.39648 0.36458,0.0638 1.00716,0.1185 1.92774,0.16406 0.92056,0.0456 1.51756,0.0547 1.79101,0.0274 0.33723,-0.0638 0.50585,0.0319 0.50586,0.28711 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2887"" />
+      <path
+         d=""m 372.21564,160.98155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20509 0.35547,0.47852 -2e-5,0.3737 -0.44663,0.69271 -1.33985,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,10e-6 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2889"" />
+      <path
+         d=""m 380.66486,162.88194 c -10e-6,0.36459 -0.20509,0.52409 -0.61524,0.47852 -1.25782,-0.11849 -2.81641,-0.10026 -4.67578,0.0547 -0.3737,0.0365 -0.60384,0.0273 -0.69043,-0.0274 -0.0866,-0.0547 -0.12988,-0.20508 -0.12988,-0.45117 0,-0.21875 0.24837,-0.40332 0.74512,-0.55371 0.49674,-0.15039 0.74511,-0.59928 0.74511,-1.34668 l 0,-12.37305 c 0,-0.73826 -0.1071,-1.28058 -0.32129,-1.62695 -0.21419,-0.34634 -0.59017,-0.61522 -1.12793,-0.80664 -0.28255,-0.10024 -0.42383,-0.24152 -0.42382,-0.42383 -1e-5,-0.27342 0.20507,-0.4785 0.61523,-0.61523 0.61979,-0.20051 1.26237,-0.5104 1.92773,-0.92969 0.54687,-0.32811 0.89323,-0.49217 1.03907,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -10e-6,-0.0364 -0.0182,0.41929 -0.0547,1.36718 -0.0273,0.90236 -0.0365,1.79104 -0.0273,2.66602 l 0.0547,12.20898 c 0,0.556 0.13672,0.95932 0.41016,1.20997 0.27343,0.25065 0.74283,0.41699 1.4082,0.49902 0.41015,0.0456 0.61523,0.20052 0.61524,0.46484 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2891"" />
+      <path
+         d=""m 393.9129,157.76866 c -10e-6,1.58594 -0.5879,2.92806 -1.76367,4.02637 -1.17579,1.09831 -2.63412,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75976 0,-1.61328 0.61524,-2.97135 1.84571,-4.07422 1.194,-1.0664 2.62043,-1.5996 4.27929,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43554 0.96614,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36524,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91601,2.48145 -1e-5,1.56771 0.35546,2.78907 1.0664,3.66406 0.65625,0.80209 1.51302,1.20313 2.57032,1.20313 1.00259,0 1.79556,-0.33268 2.3789,-0.99805 0.58333,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2893"" />
+      <path
+         d=""m 408.20001,157.39952 c -1e-5,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18945 -2.4769,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49219 -0.0911,-0.0365 -0.13672,0.18685 -0.13672,0.66993 l 0,4.11523 c 0,0.66536 0.54232,1.09374 1.62696,1.28516 0.50129,0.0911 0.81802,0.17545 0.95019,0.25293 0.13216,0.0775 0.19824,0.20735 0.19824,0.38964 0,0.30989 -0.20508,0.45117 -0.61523,0.42383 -1.91407,-0.12761 -3.59571,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16863 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.77929,-0.56055 0.44662,-0.18229 0.66992,-0.61979 0.66993,-1.3125 l 0,-12.05859 c -1e-5,-0.97525 -0.26889,-1.58593 -0.80665,-1.83203 -0.63802,-0.28254 -0.95703,-0.51497 -0.95703,-0.69727 0,-0.20051 0.18685,-0.3509 0.56055,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49023,-0.62891 0.42839,-0.24608 0.68815,-0.36912 0.7793,-0.36914 0.27344,2e-5 0.49674,0.25067 0.66992,0.75196 0.25521,0.72917 0.42383,1.09376 0.50586,1.09375 0.0182,1e-5 0.41015,-0.21419 1.17578,-0.64258 0.83854,-0.46483 1.65885,-0.69726 2.46094,-0.69727 1.30338,1e-5 2.3789,0.36915 3.22656,1.10743 1.01171,0.86589 1.51757,2.11914 1.51758,3.75976 z m -2.32422,1.09375 c -10e-6,-1.48567 -0.36915,-2.64322 -1.10742,-3.47266 -0.60157,-0.69269 -1.30795,-1.03905 -2.11914,-1.03906 -0.62891,1e-5 -1.23047,0.21876 -1.80469,0.65625 -0.75651,0.56511 -1.13477,1.35353 -1.13476,2.36524 l 0,3.86914 c -1e-5,0.24609 0.34635,0.50586 1.03906,0.77929 0.74739,0.30079 1.55859,0.45118 2.43359,0.45118 1.79557,0 2.69335,-1.20313 2.69336,-3.60938 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2895"" />
+      <path
+         d=""m 432.90509,162.90929 c -2e-5,0.30078 -0.1413,0.44205 -0.42383,0.42382 -1.85939,-0.13671 -3.59116,-0.13671 -5.19531,0 -0.35549,0.0273 -0.53322,-0.13216 -0.5332,-0.47851 -2e-5,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61065,-0.0365 0.91599,-0.5332 0.91601,-1.49024 l 0,-3.63671 c -2e-5,-2.04166 -0.82944,-3.0625 -2.48828,-3.0625 -0.87502,0 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56511 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.93881 0.20508,1.1211 0.10025,0.1276 0.32356,0.21875 0.66992,0.27343 0.80207,0.13672 1.20311,0.30534 1.20313,0.50586 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03907,-0.0365 -2.55209,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46485,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.1823 -0.12304,-0.38282 -10e-6,-0.23697 0.25975,-0.38281 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57877 0.84766,-1.54492 l 0,-3.71875 c -10e-6,-1.0026 -0.22787,-1.77733 -0.68359,-2.32422 -0.40105,-0.49218 -0.91147,-0.73827 -1.53125,-0.73828 -0.91147,1e-5 -1.73178,0.18458 -2.46094,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99023 c -1e-5,0.56511 0.14583,0.95704 0.4375,1.17579 0.26432,0.20052 0.74283,0.32356 1.43555,0.36914 0.37369,0.0182 0.56054,0.14583 0.56054,0.38281 0,0.26432 -0.15039,0.39648 -0.45117,0.39648 -2.27865,0 -3.92839,0.0638 -4.94922,0.19141 -0.34635,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32813 0,-0.22786 0.33724,-0.42382 1.01172,-0.58789 0.41016,-0.10937 0.61523,-0.64257 0.61524,-1.59961 l 0,-4.19726 c -1e-5,-1.0664 -0.28711,-1.68163 -0.86133,-1.8457 -0.48308,-0.13671 -0.77702,-0.23697 -0.88184,-0.30079 -0.10482,-0.0638 -0.15722,-0.16861 -0.15722,-0.31445 0,-0.16405 0.47395,-0.51041 1.42187,-1.03906 1.0026,-0.56509 1.61784,-0.84765 1.8457,-0.84766 0.19141,1e-5 0.35319,0.27573 0.48536,0.82715 0.13215,0.55144 0.23469,0.82716 0.30761,0.82715 0.10026,10e-6 0.37825,-0.14127 0.83399,-0.42383 0.5651,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74739,-0.29165 1.51757,-0.43749 2.31054,-0.4375 0.63802,1e-5 1.194,0.13673 1.66797,0.41016 0.32812,0.1823 0.62434,0.43295 0.88868,0.75195 0.21873,0.27345 0.32811,0.41017 0.32812,0.41016 -10e-6,1e-5 0.23697,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52668,-0.41015 2.25586,-0.41016 2.49738,1e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42968 c -2e-5,0.51954 0.12303,0.88868 0.36914,1.10743 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72459,0.22787 0.72461,0.41016 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2897"" />
+      <path
+         d=""m 444.45782,160.98155 c -1e-5,0.39193 -0.52865,0.87956 -1.58593,1.46289 -1.20314,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.0026,-0.95703 -1.5039,-2.23307 -1.5039,-3.82812 0,-1.80469 0.56054,-3.2539 1.68164,-4.34766 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.52929,0.86133 0.70182,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20509 0.35547,0.47852 -10e-6,0.3737 -0.44662,0.69271 -1.33984,0.95703 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33593,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11848 0.39648,-0.17773 0.58789,-0.17773 0.14583,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -10e-6,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,10e-6 -2.51563,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2899"" />
+      <path
+         d=""m 460.86407,163.03233 c -1e-5,0.28256 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10026 -3.44532,-0.11849 -4.45703,-0.0547 -0.51954,0.0365 -0.80209,-0.0273 -0.84766,-0.19141 -0.0182,-0.0547 -0.0273,-0.13216 -0.0273,-0.23242 -1e-5,-0.18229 0.26431,-0.34635 0.79297,-0.49219 0.48306,-0.13672 0.7246,-0.60612 0.72461,-1.4082 l 0,-3.63672 c -1e-5,-2.08723 -0.90691,-3.13085 -2.72071,-3.13086 -0.8112,1e-5 -1.56315,0.19142 -2.25586,0.57422 -0.65625,0.37371 -0.98438,0.76108 -0.98437,1.16211 l 0,5.00391 c -1e-5,0.85677 0.56054,1.33528 1.68164,1.43554 0.42838,0.0365 0.64257,0.17318 0.64258,0.41016 -10e-6,0.22786 -0.0592,0.36458 -0.17774,0.41016 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.43099,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32812,0.0456 -0.5332,0.0592 -0.61523,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27344,-0.42383 0,-0.21874 0.25976,-0.40559 0.7793,-0.56054 0.48307,-0.14583 0.7246,-0.75195 0.72461,-1.81836 l 0,-4.14258 c -1e-5,-0.70182 -0.0912,-1.14843 -0.27344,-1.33984 -0.12761,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.1823,-0.0638 -0.27344,-0.1914 -0.27344,-0.38281 0,-0.18229 0.18685,-0.34179 0.56054,-0.47852 0.51042,-0.1914 1.07097,-0.49674 1.68165,-0.91602 0.51041,-0.34634 0.83853,-0.51952 0.98437,-0.51953 0.24609,1e-5 0.41015,0.28029 0.49219,0.84082 0.082,0.56056 0.19596,0.84083 0.34179,0.84082 -0.0729,1e-5 0.39193,-0.26659 1.39454,-0.7998 1.00259,-0.53319 1.99152,-0.7998 2.96679,-0.79981 2.36067,1e-5 3.55012,1.34441 3.56836,4.03321 l 0.0273,4.40234 c -2e-5,0.56511 0.14582,0.97071 0.4375,1.2168 0.21873,0.18229 0.64256,0.33724 1.27148,0.46484 0.41014,0.082 0.61522,0.23242 0.61523,0.45117 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2901"" />
+      <path
+         d=""m 469.64142,161.99327 c -10e-6,0.4375 -0.40105,0.8112 -1.20313,1.12109 -0.71094,0.27344 -1.43099,0.41016 -2.16015,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15527 -0.10026,-0.14127 -0.43294,-0.28027 -0.99805,-0.417 -0.14583,-0.0365 -0.21875,-0.17772 -0.21875,-0.42382 0,-0.26432 0.0547,-0.42382 0.16407,-0.47852 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.18231 0.31445,0.35547 l 0.0547,1.70898 c -10e-6,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30535 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87956,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2903"" />
+      <path
+         d=""m 475.84845,162.60851 c -1e-5,2.36979 -0.99805,4.15168 -2.99414,5.3457 -0.18229,0.10937 -0.31446,0.16406 -0.39649,0.16406 -0.1276,0 -0.24609,-0.14584 -0.35546,-0.4375 -0.0365,-0.10026 -0.0547,-0.1823 -0.0547,-0.24609 0,-0.15495 0.25976,-0.41016 0.7793,-0.76563 0.89322,-0.61979 1.33984,-1.32161 1.33984,-2.10547 0,-0.40104 -0.25977,-0.76562 -0.7793,-1.09375 -0.72917,-0.45573 -1.09375,-1.01627 -1.09375,-1.68164 0,-0.44661 0.15039,-0.81803 0.45117,-1.11426 0.30078,-0.29622 0.70182,-0.44433 1.20313,-0.44433 0.60156,0 1.06868,0.21875 1.40137,0.65625 0.33267,0.4375 0.49901,1.01172 0.49902,1.72266 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2905"" />
+      <path
+         d=""m 278.95978,182.96866 c -1e-5,1.58594 -0.58791,2.92806 -1.76367,4.02637 -1.1758,1.09831 -2.63413,1.64746 -4.375,1.64746 -1.74089,0 -3.1172,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75977 0,-1.61327 0.61523,-2.97134 1.8457,-4.07421 1.19401,-1.0664 2.62044,-1.5996 4.2793,-1.59961 1.77733,1e-5 3.16275,0.47852 4.15625,1.43554 0.96613,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -1e-5,-1.43099 -0.34637,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57032,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36523,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91602,2.48145 0,1.56771 0.35547,2.78906 1.06641,3.66406 0.65624,0.80209 1.51301,1.20313 2.57031,1.20313 1.0026,0 1.79557,-0.33268 2.37891,-0.99805 0.58332,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2907"" />
+      <path
+         d=""m 295.59845,188.23233 c -2e-5,0.28255 -0.20509,0.41016 -0.61523,0.38282 -1.95965,-0.10027 -3.44533,-0.11849 -4.45704,-0.0547 -0.51954,0.0365 -0.80209,-0.0274 -0.84765,-0.19141 -0.0182,-0.0547 -0.0274,-0.13216 -0.0274,-0.23242 -1e-5,-0.18229 0.26432,-0.34635 0.79297,-0.49219 0.48306,-0.13672 0.7246,-0.60612 0.72461,-1.4082 l 0,-3.63672 c -10e-6,-2.08723 -0.90691,-3.13085 -2.7207,-3.13086 -0.81121,1e-5 -1.56316,0.19142 -2.25586,0.57422 -0.65626,0.37371 -0.98438,0.76107 -0.98438,1.16211 l 0,5.00391 c 0,0.85677 0.56055,1.33528 1.68165,1.43554 0.42837,0.0365 0.64257,0.17318 0.64257,0.41016 0,0.22786 -0.0593,0.36458 -0.17773,0.41015 -0.0547,0.0182 -0.20964,0.0228 -0.46484,0.0137 -1.431,-0.0547 -2.90756,0.0182 -4.42969,0.21875 -0.32813,0.0456 -0.53321,0.0592 -0.61524,0.041 -0.18229,-0.0365 -0.27344,-0.17773 -0.27343,-0.42383 -10e-6,-0.21875 0.25976,-0.40559 0.77929,-0.56054 0.48307,-0.14584 0.72461,-0.75195 0.72461,-1.81836 l 0,-4.14258 c 0,-0.70182 -0.0912,-1.14843 -0.27344,-1.33984 -0.1276,-0.13671 -0.55143,-0.32812 -1.27148,-0.57422 -0.18229,-0.0638 -0.27344,-0.1914 -0.27344,-0.38282 0,-0.18228 0.18685,-0.34178 0.56055,-0.47851 0.51041,-0.1914 1.07096,-0.49674 1.68164,-0.91602 0.51041,-0.34634 0.83854,-0.51952 0.98438,-0.51953 0.24608,1e-5 0.41015,0.28029 0.49218,0.84082 0.082,0.56056 0.19596,0.84083 0.3418,0.84082 -0.0729,1e-5 0.39192,-0.26659 1.39453,-0.7998 1.0026,-0.53319 1.99153,-0.7998 2.9668,-0.79981 2.36066,1e-5 3.55011,1.34441 3.56836,4.03321 l 0.0273,4.40234 c -10e-6,0.56511 0.14582,0.9707 0.4375,1.2168 0.21874,0.18229 0.64256,0.33724 1.27149,0.46484 0.41014,0.082 0.61521,0.23242 0.61523,0.45117 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2909"" />
+      <path
+         d=""m 307.02814,186.18155 c -1e-5,0.39193 -0.52866,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43816,0.97071 -3.70508,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47265,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82813 0,-1.80468 0.56054,-3.25389 1.68164,-4.34765 1.04817,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90233,1e-5 1.74543,0.28712 2.5293,0.86133 0.70181,0.51042 1.16665,1.09376 1.39453,1.75 0.082,0.22787 0.20506,0.35547 0.36914,0.38281 0.23697,0.0456 0.35545,0.20508 0.35547,0.47851 -2e-5,0.37371 -0.44663,0.69272 -1.33985,0.95704 l -6.30273,1.87304 c 0.41015,2.16928 1.52213,3.25391 3.33594,3.25391 1.04816,0 2.24217,-0.38281 3.58203,-1.14844 0.20051,-0.11849 0.39647,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24024,-5.48242 c -10e-6,-0.50129 -0.2028,-0.94107 -0.6084,-1.31934 -0.4056,-0.37824 -0.90462,-0.56737 -1.49707,-0.56738 -1.67708,1e-5 -2.51562,1.20769 -2.51562,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60155,-0.17317 0.90233,-0.48762 0.90234,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2911"" />
+      <path
+         d=""m 328.91681,187.13858 c 0.0364,0.082 0.0547,0.14128 0.0547,0.17774 -2e-5,0.1914 -0.46486,0.50586 -1.39453,0.94336 -1.07554,0.5013 -1.709,0.75195 -1.9004,0.75195 -0.16407,0 -0.3532,-0.27572 -0.56738,-0.82715 -0.2142,-0.55143 -0.36231,-0.82715 -0.44433,-0.82715 0.009,0 -0.50815,0.23926 -1.55176,0.71778 -1.04363,0.47851 -1.83432,0.71777 -2.37207,0.71777 -1.20313,0 -2.24675,-0.43294 -3.13086,-1.29883 -1.06641,-1.02994 -1.59961,-2.4746 -1.59961,-4.33398 0,-1.55859 0.6289,-2.90299 1.88672,-4.03321 1.11197,-0.99348 2.24674,-1.49022 3.40429,-1.49023 0.82031,1e-5 1.80013,0.10483 2.93946,0.31445 0.35546,0.0638 0.53319,-0.041 0.5332,-0.31445 l 0,-4.67578 c -1e-5,-0.52863 -0.12761,-0.90233 -0.38281,-1.1211 -0.16407,-0.14581 -0.55144,-0.31899 -1.16211,-0.51953 -0.29168,-0.10935 -0.43751,-0.28709 -0.4375,-0.5332 -10e-6,-0.22785 0.19595,-0.39647 0.58789,-0.50586 0.53775,-0.16404 1.18033,-0.43748 1.92773,-0.82031 0.61978,-0.32811 1.0026,-0.49217 1.14844,-0.49219 0.33723,2e-5 0.50585,0.23244 0.50586,0.69727 -1e-5,-0.009 -0.0137,0.44435 -0.041,1.36035 -0.0274,0.91603 -0.041,1.80698 -0.041,2.67285 l 0,12.42773 c -1e-5,0.51954 0.23241,0.7793 0.69727,0.7793 0.17316,0 0.40558,-0.0273 0.69726,-0.082 0.319,-0.0547 0.53319,0.0501 0.64258,0.31445 z m -4.22461,-1.35351 0,-4.89453 c -1e-5,-0.40104 -0.35548,-0.81575 -1.06641,-1.24414 -0.75651,-0.45572 -1.57683,-0.68359 -2.46093,-0.6836 -1.90496,1e-5 -2.85743,1.17579 -2.85743,3.52735 0,1.25781 0.37826,2.33333 1.13477,3.22656 0.7565,0.89323 1.64518,1.33984 2.66602,1.33984 0.46483,0 1.01171,-0.15494 1.64062,-0.46484 0.6289,-0.3099 0.94335,-0.57878 0.94336,-0.80664 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2913"" />
+      <path
+         d=""m 339.23907,178.78507 c -1e-5,1.10287 -0.31902,1.6543 -0.95703,1.65429 -0.10027,1e-5 -0.43295,-0.0638 -0.99804,-0.1914 -0.56511,-0.1276 -0.97983,-0.1914 -1.24414,-0.19141 -1.02084,1e-5 -1.53126,0.68816 -1.53125,2.06445 l 0,4.03321 c -10e-6,0.47396 0.16405,0.8112 0.49218,1.01172 0.1914,0.11849 0.66992,0.27799 1.43555,0.47851 0.41015,0.10026 0.61523,0.25521 0.61523,0.46485 0,0.24609 -0.0342,0.3942 -0.10253,0.44433 -0.0684,0.0501 -0.23927,0.0615 -0.5127,0.0342 -2.00521,-0.20963 -3.59115,-0.21875 -4.75781,-0.0273 -0.36459,0.0638 -0.59701,0.0638 -0.69727,0 -0.082,-0.0547 -0.12305,-0.21419 -0.12304,-0.47852 -1e-5,-0.24609 0.25292,-0.44205 0.75878,-0.58789 0.50586,-0.14583 0.75879,-0.58333 0.75879,-1.3125 l 0,-4.38867 c 0,-0.57421 -0.0752,-0.96158 -0.22558,-1.16211 -0.1504,-0.20051 -0.56283,-0.46939 -1.23731,-0.80664 l -0.082,-0.041 c -0.18229,-0.0911 -0.27344,-0.21874 -0.27344,-0.38281 0,-0.18228 0.18685,-0.33723 0.56055,-0.46484 0.6289,-0.21874 1.20312,-0.52864 1.72266,-0.92969 0.42838,-0.33723 0.70182,-0.50585 0.82031,-0.50586 0.32812,1e-5 0.52408,0.28256 0.58789,0.84766 0.082,0.72006 0.17773,1.08008 0.28711,1.08008 0.009,0 0.51953,-0.34179 1.53125,-1.0254 0.66536,-0.4466 1.39452,-0.66991 2.1875,-0.66992 0.65624,1e-5 0.98436,0.35092 0.98437,1.05274 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2915"" />
+      <path
+         d=""m 352.7879,182.96866 c -10e-6,1.58594 -0.5879,2.92806 -1.76367,4.02637 -1.17579,1.09831 -2.63412,1.64746 -4.375,1.64746 -1.74089,0 -3.11719,-0.48307 -4.12891,-1.44922 -0.97526,-0.94791 -1.46289,-2.20117 -1.46289,-3.75977 0,-1.61327 0.61524,-2.97134 1.84571,-4.07421 1.194,-1.0664 2.62043,-1.5996 4.27929,-1.59961 1.77734,1e-5 3.16275,0.47852 4.15625,1.43554 0.96614,0.9297 1.44921,2.18751 1.44922,3.77344 z m -2.40625,0.83399 c -10e-6,-1.43099 -0.34636,-2.5931 -1.03906,-3.48633 -0.67449,-0.86588 -1.53126,-1.29882 -2.57031,-1.29883 -0.96615,1e-5 -1.75456,0.33953 -2.36524,1.01855 -0.61068,0.67905 -0.91602,1.5062 -0.91601,2.48145 -1e-5,1.56771 0.35546,2.78906 1.0664,3.66406 0.65625,0.80209 1.51302,1.20313 2.57032,1.20313 1.00259,0 1.79556,-0.33268 2.3789,-0.99805 0.58333,-0.66536 0.87499,-1.52669 0.875,-2.58398 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2917"" />
+      <path
+         d=""m 367.07501,182.59952 c -1e-5,1.70443 -0.57195,3.15137 -1.71582,4.34082 -1.14389,1.18945 -2.4769,1.78418 -3.99902,1.78418 -0.92058,0 -1.80925,-0.16406 -2.66602,-0.49219 -0.0911,-0.0365 -0.13672,0.18685 -0.13672,0.66992 l 0,4.11524 c 0,0.66536 0.54232,1.09374 1.62696,1.28516 0.50129,0.0911 0.81802,0.17544 0.95019,0.25292 0.13216,0.0775 0.19824,0.20736 0.19824,0.38965 0,0.30989 -0.20508,0.45117 -0.61523,0.42383 -1.91407,-0.12761 -3.59571,-0.082 -5.04492,0.13672 -0.30078,0.0456 -0.48763,0.0456 -0.56055,0 -0.0729,-0.0456 -0.10937,-0.16863 -0.10937,-0.36914 0,-0.15495 0.25976,-0.3418 0.77929,-0.56055 0.44662,-0.18229 0.66992,-0.61979 0.66993,-1.3125 l 0,-12.05859 c -1e-5,-0.97525 -0.26889,-1.58593 -0.80665,-1.83203 -0.63802,-0.28254 -0.95703,-0.51497 -0.95703,-0.69727 0,-0.20051 0.18685,-0.3509 0.56055,-0.45117 0.48307,-0.11848 0.97982,-0.32811 1.49023,-0.62891 0.42839,-0.24608 0.68815,-0.36913 0.7793,-0.36914 0.27344,1e-5 0.49674,0.25067 0.66992,0.75196 0.25521,0.72917 0.42383,1.09376 0.50586,1.09375 0.0182,1e-5 0.41015,-0.21419 1.17578,-0.64258 0.83854,-0.46483 1.65885,-0.69726 2.46094,-0.69727 1.30338,1e-5 2.3789,0.36915 3.22656,1.10742 1.01171,0.8659 1.51757,2.11915 1.51758,3.75977 z m -2.32422,1.09375 c -10e-6,-1.48567 -0.36915,-2.64322 -1.10742,-3.47266 -0.60157,-0.6927 -1.30795,-1.03905 -2.11914,-1.03906 -0.62891,1e-5 -1.23047,0.21876 -1.80469,0.65625 -0.75651,0.56511 -1.13477,1.35352 -1.13476,2.36524 l 0,3.86914 c -1e-5,0.24609 0.34635,0.50586 1.03906,0.77929 0.74739,0.30079 1.55859,0.45118 2.43359,0.45118 1.79557,0 2.69335,-1.20313 2.69336,-3.60938 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2919"" />
+      <path
+         d=""m 387.33673,187.16593 c -10e-6,0.1914 -0.34864,0.48079 -1.0459,0.86816 -0.69727,0.38737 -1.25554,0.58106 -1.6748,0.58106 -0.35548,0 -0.66993,-0.17318 -0.94336,-0.51954 -0.27345,-0.34635 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18685 -1.29883,0.56055 -0.78386,0.3737 -1.57227,0.56055 -2.36523,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87305,-0.65625 -0.54688,-0.48308 -0.82031,-1.13932 -0.82031,-1.96875 0,-1.57682 1.80468,-2.70703 5.41406,-3.39063 0.61978,-0.11848 0.93424,-0.36913 0.94336,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60612,-2.24218 -1.98242,-2.24219 -0.39193,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35091,0.70183 -0.85449,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.12109,-0.24153 -1.12109,-0.94336 0,-0.43749 0.55598,-0.94791 1.66797,-1.53125 1.16666,-0.61067 2.28775,-0.916 3.36328,-0.91601 1.85025,1e-5 2.76626,0.87956 2.74804,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24152,0.88867 0.75195,0.88867 0.10025,0 0.29166,-0.0228 0.57422,-0.0684 0.28254,-0.0456 0.4466,-0.0683 0.49219,-0.0684 0.26431,1e-5 0.39647,0.17774 0.39648,0.53321 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15722,-0.45117 -0.11394,-0.0729 -0.29396,-0.0866 -0.54004,-0.041 -2.19662,0.39193 -3.29493,1.10743 -3.29492,2.14649 -10e-6,1.04817 0.56965,1.57226 1.70898,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84766,-0.72461 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2921"" />
+      <path
+         d=""m 396.52423,187.19327 c -10e-6,0.4375 -0.40105,0.8112 -1.20312,1.12109 -0.71095,0.27344 -1.431,0.41016 -2.16016,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15528 -0.10026,-0.14126 -0.43294,-0.28026 -0.99804,-0.41699 -0.14584,-0.0365 -0.21876,-0.17772 -0.21875,-0.42383 -1e-5,-0.26431 0.0547,-0.42381 0.16406,-0.47851 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10026,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20052,0.0638 0.30533,0.1823 0.31445,0.35547 l 0.0547,1.70898 c 0,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20964,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57422,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30534 -0.0957,0.66992 l 0,4.4707 c -1e-5,1.13021 0.10025,1.84571 0.30078,2.14649 0.26431,0.38281 0.87955,0.57422 1.8457,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69726,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2923"" />
+      <path
+         d=""m 416.32111,187.16593 c -2e-5,0.1914 -0.34865,0.48079 -1.0459,0.86816 -0.69728,0.38737 -1.25555,0.58106 -1.67481,0.58106 -0.35547,0 -0.66993,-0.17318 -0.94336,-0.51954 -0.27344,-0.34635 -0.46485,-0.51953 -0.57422,-0.51953 -0.082,0 -0.51498,0.18685 -1.29882,0.56055 -0.78386,0.3737 -1.57227,0.56055 -2.36524,0.56055 -0.7474,0 -1.37175,-0.21875 -1.87304,-0.65625 -0.54688,-0.48308 -0.82032,-1.13932 -0.82032,-1.96875 0,-1.57682 1.80469,-2.70703 5.41407,-3.39063 0.61978,-0.11848 0.93423,-0.36913 0.94335,-0.75195 l 0.0273,-0.875 c 0.0547,-1.49478 -0.60613,-2.24218 -1.98242,-2.24219 -0.39194,1e-5 -0.76335,0.35092 -1.11426,1.05274 -0.35092,0.70183 -0.8545,1.08008 -1.51074,1.13476 -0.7474,0.0729 -1.1211,-0.24153 -1.1211,-0.94336 0,-0.43749 0.55599,-0.94791 1.66797,-1.53125 1.16666,-0.61067 2.28776,-0.916 3.36328,-0.91601 1.85025,1e-5 2.76627,0.87956 2.74805,2.63867 l -0.0547,5.63281 c -0.009,0.59245 0.24153,0.88867 0.75196,0.88867 0.10025,0 0.29165,-0.0228 0.57421,-0.0684 0.28254,-0.0456 0.44661,-0.0683 0.49219,-0.0684 0.26431,1e-5 0.39647,0.17774 0.39649,0.53321 z m -4.21094,-3.11719 c 0.009,-0.22786 -0.0433,-0.37825 -0.15723,-0.45117 -0.11394,-0.0729 -0.29395,-0.0866 -0.54004,-0.041 -2.19662,0.39193 -3.29492,1.10743 -3.29492,2.14649 0,1.04817 0.56966,1.57226 1.70899,1.57226 0.45572,0 0.92512,-0.0866 1.4082,-0.25976 0.5651,-0.20052 0.84765,-0.44206 0.84765,-0.72461 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2925"" />
+      <path
+         d=""m 432.45392,187.19327 c -10e-6,0.4375 -0.40105,0.8112 -1.20313,1.12109 -0.71094,0.27344 -1.43099,0.41016 -2.16015,0.41016 -1.97787,0 -2.9668,-1.05273 -2.9668,-3.1582 l 0,-4.94922 c 0,-0.6289 -0.0501,-1.01399 -0.15039,-1.15528 -0.10026,-0.14126 -0.43294,-0.28026 -0.99805,-0.41699 -0.14583,-0.0365 -0.21875,-0.17772 -0.21875,-0.42383 0,-0.26431 0.0547,-0.42381 0.16407,-0.47851 0.98437,-0.48306 1.84114,-1.34895 2.57031,-2.59766 0.10025,-0.17316 0.29622,-0.22785 0.58789,-0.16406 0.20051,0.0638 0.30533,0.1823 0.31445,0.35547 l 0.0547,1.70898 c -10e-6,0.12762 0.0228,0.21876 0.0684,0.27344 0.0638,0.082 0.20963,0.12306 0.4375,0.12305 l 3.04883,0 c 0.17317,1e-5 0.17317,0.2142 0,0.64258 -0.20965,0.51954 -0.51954,0.7793 -0.92969,0.77929 l -2.06445,0 c -0.35548,1e-5 -0.57423,0.0593 -0.65625,0.17774 -0.0638,0.082 -0.0957,0.30534 -0.0957,0.66992 l 0,4.4707 c 0,1.13021 0.10026,1.84571 0.30078,2.14649 0.26432,0.38281 0.87956,0.57422 1.84571,0.57422 0.319,0 0.70637,-0.0524 1.16211,-0.15723 0.45572,-0.10482 0.69725,-0.15723 0.72461,-0.15723 0.10936,0 0.16405,0.0684 0.16406,0.20508 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2927"" />
+      <path
+         d=""m 439.30353,172.66007 c -1e-5,0.41928 -0.15723,0.80893 -0.47168,1.16894 -0.31446,0.36004 -0.65854,0.54006 -1.03223,0.54004 -0.42839,2e-5 -0.7793,-0.12759 -1.05273,-0.38281 -0.27344,-0.25519 -0.41016,-0.58788 -0.41016,-0.99805 0,-0.40102 0.16634,-0.77472 0.49902,-1.12109 0.33268,-0.34634 0.69043,-0.51952 1.07325,-0.51953 0.92968,1e-5 1.39452,0.43751 1.39453,1.3125 z m 1.51758,15.47656 c -0.0456,0.26432 -0.15496,0.41471 -0.32813,0.45117 -0.0456,0.009 -0.26433,0 -0.65625,-0.0273 -1.35808,-0.0911 -2.69336,-0.0729 -4.00586,0.0547 -0.35547,0.0365 -0.57878,0.0228 -0.66992,-0.041 -0.0912,-0.0638 -0.13672,-0.20964 -0.13672,-0.4375 0,-0.20964 0.24154,-0.38281 0.72461,-0.51953 0.52864,-0.15495 0.79297,-0.66081 0.79297,-1.51758 l 0,-3.58203 c 0,-0.72005 -0.0729,-1.22591 -0.21875,-1.51758 -0.20052,-0.40103 -0.61524,-0.70637 -1.24414,-0.91601 -0.28256,-0.10026 -0.42383,-0.25065 -0.42383,-0.45118 0,-0.26431 0.20508,-0.46027 0.61523,-0.58789 0.76563,-0.23697 1.44466,-0.55142 2.03711,-0.94336 0.47396,-0.32811 0.76562,-0.49217 0.875,-0.49218 0.36458,1e-5 0.54232,0.23699 0.53321,0.71093 -0.0365,2.38803 -0.0547,4.82162 -0.0547,7.30078 -10e-6,0.59245 0.0866,1.01628 0.25977,1.27149 0.1914,0.28255 0.55598,0.48307 1.09375,0.60156 0.59244,0.13672 0.86132,0.35091 0.80664,0.64258 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2929"" />
+      <path
+         d=""m 464.89728,188.10929 c -3e-5,0.30078 -0.1413,0.44205 -0.42383,0.42382 -1.8594,-0.13671 -3.59117,-0.13671 -5.19531,0 -0.35549,0.0274 -0.53322,-0.13216 -0.53321,-0.47851 -1e-5,-0.27344 0.24152,-0.41927 0.72461,-0.4375 0.61066,-0.0365 0.916,-0.5332 0.91602,-1.49024 l 0,-3.63671 c -2e-5,-2.04166 -0.82945,-3.0625 -2.48828,-3.0625 -0.87502,0 -1.6771,0.15951 -2.40625,0.47851 -0.66538,0.28256 -1.00262,0.56511 -1.01172,0.84766 l -0.0547,5.42773 c -10e-6,0.56511 0.0684,0.9388 0.20508,1.1211 0.10025,0.1276 0.32355,0.21875 0.66992,0.27343 0.80207,0.13672 1.20311,0.30534 1.20313,0.50586 -2e-5,0.17318 -0.0228,0.29167 -0.0684,0.35547 -0.0547,0.0911 -0.21877,0.13216 -0.49219,0.12305 -1.03908,-0.0365 -2.5521,-0.0182 -4.53906,0.0547 -0.28256,0.009 -0.46486,-0.0137 -0.54688,-0.0684 -0.082,-0.0547 -0.12305,-0.1823 -0.12304,-0.38282 -10e-6,-0.23698 0.25975,-0.38281 0.77929,-0.4375 0.5651,-0.0638 0.84765,-0.57877 0.84766,-1.54492 l 0,-3.71875 c -10e-6,-1.0026 -0.22788,-1.77733 -0.6836,-2.32422 -0.40105,-0.49218 -0.91146,-0.73827 -1.53125,-0.73828 -0.91146,1e-5 -1.73177,0.18458 -2.46093,0.55371 -0.72917,0.36915 -1.09376,0.76336 -1.09375,1.18262 l 0,4.99023 c -1e-5,0.56511 0.14583,0.95704 0.4375,1.17579 0.26431,0.20052 0.74283,0.32356 1.43554,0.36914 0.37369,0.0182 0.56054,0.14583 0.56055,0.38281 -10e-6,0.26432 -0.1504,0.39648 -0.45117,0.39648 -2.27865,0 -3.92839,0.0638 -4.94922,0.19141 -0.34636,0.0456 -0.56966,0.0456 -0.66992,0 -0.082,-0.0456 -0.12305,-0.15495 -0.12305,-0.32813 0,-0.22786 0.33724,-0.42382 1.01172,-0.58789 0.41015,-0.10937 0.61523,-0.64257 0.61523,-1.59961 l 0,-4.19726 c 0,-1.0664 -0.28711,-1.68163 -0.86132,-1.8457 -0.48308,-0.13672 -0.77702,-0.23698 -0.88184,-0.30079 -0.10482,-0.0638 -0.15723,-0.16861 -0.15723,-0.31445 0,-0.16405 0.47396,-0.51041 1.42188,-1.03906 1.0026,-0.5651 1.61783,-0.84765 1.8457,-0.84766 0.1914,1e-5 0.35319,0.27573 0.48535,0.82715 0.13216,0.55144 0.2347,0.82716 0.30762,0.82715 0.10026,1e-5 0.37825,-0.14127 0.83399,-0.42383 0.56509,-0.35546 1.07551,-0.61978 1.53125,-0.79297 0.74738,-0.29165 1.51756,-0.43749 2.31054,-0.4375 0.63801,1e-5 1.194,0.13673 1.66797,0.41016 0.32811,0.1823 0.62434,0.43295 0.88867,0.75195 0.21874,0.27345 0.32812,0.41017 0.32813,0.41016 -10e-6,1e-5 0.23696,-0.13671 0.71094,-0.41016 0.55597,-0.319 1.09829,-0.56965 1.62695,-0.75195 0.77472,-0.27343 1.52667,-0.41015 2.25586,-0.41016 2.49737,1e-5 3.74607,1.37176 3.74609,4.11524 l 0,4.42968 c -2e-5,0.51954 0.12303,0.88868 0.36914,1.10743 0.21873,0.18229 0.64712,0.33724 1.28516,0.46484 0.48305,0.0911 0.72458,0.22786 0.72461,0.41016 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2931"" />
+      <path
+         d=""m 476.45001,186.18155 c -1e-5,0.39193 -0.52865,0.87956 -1.58594,1.46289 -1.20313,0.64714 -2.43815,0.97071 -3.70507,0.97071 -1.37631,0 -2.53386,-0.45118 -3.47266,-1.35352 -1.00261,-0.95703 -1.50391,-2.23307 -1.50391,-3.82813 0,-1.80468 0.56055,-3.25389 1.68164,-4.34765 1.04818,-1.02082 2.33333,-1.53124 3.85547,-1.53125 0.90234,1e-5 1.74544,0.28712 2.5293,0.86133 0.70181,0.51042 1.16666,1.09376 1.39453,1.75 0.082,0.22787 0.20507,0.35547 0.36914,0.38281 0.23697,0.0456 0.35546,0.20508 0.35547,0.47851 -10e-6,0.37371 -0.44662,0.69272 -1.33984,0.95704 l -6.30274,1.87304 c 0.41016,2.16928 1.52213,3.25391 3.33594,3.25391 1.04817,0 2.24218,-0.38281 3.58203,-1.14844 0.20051,-0.11849 0.39648,-0.17773 0.58789,-0.17773 0.14582,0 0.21874,0.13216 0.21875,0.39648 z m -3.24023,-5.48242 c -1e-5,-0.50129 -0.20281,-0.94107 -0.6084,-1.31934 -0.40561,-0.37824 -0.90463,-0.56737 -1.49707,-0.56738 -1.67709,1e-5 -2.51563,1.20769 -2.51563,3.62305 l 0,0.32812 3.71875,-1.12109 c 0.60156,-0.17317 0.90234,-0.48762 0.90235,-0.94336 z""
+         style=""font-size:28px;font-variant:normal;font-stretch:normal;text-align:end;line-height:89.99999762%;writing-mode:lr-tb;text-anchor:end;font-family:High Tower Text;-inkscape-font-specification:High Tower Text""
+         id=""path2933"" />
+    </g>
   </g>
 </svg>
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,docs/_static/logo-full.png,docs/_static/logo-full.png,docs/_static/logo-full.png,Added logo with new slogan,"diff --git a/docs/_static/logo-full.png b/docs/_static/logo-full.png
index f255eece..5deaf1b8 100644
Binary files a/docs/_static/logo-full.png and b/docs/_static/logo-full.png differ
","diff --git a/docs/_static/logo-full.png b/docs/_static/logo-full.png
index f255eece..5deaf1b8 100644
Binary files a/docs/_static/logo-full.png and b/docs/_static/logo-full.png differ
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,setup.cfg,,setup.cfg,Added logo with new slogan,"diff --git a/setup.cfg b/setup.cfg
new file mode 100644
index 00000000..2d74c58f
--- /dev/null
+++ b/setup.cfg
@@ -0,0 +1,6 @@
+[egg_info]
+tag_build = dev
+tag_date = true
+
+[aliases]
+release = egg_info -RDb ''
","diff --git a/setup.cfg b/setup.cfg
new file mode 100644
index 00000000..2d74c58f
--- /dev/null
+++ b/setup.cfg
@@ -0,0 +1,6 @@
+[egg_info]
+tag_build = dev
+tag_date = true
+
+[aliases]
+release = egg_info -RDb ''
"
9fa4f94ad885ea98bad8708da6e3e9d15130bb4d,b0ab127015186e1a2918221ffad8d79ca346faf5,setup.py,setup.py,setup.py,Added logo with new slogan,"diff --git a/setup.py b/setup.py
index ae68c49e..462cb6c7 100644
--- a/setup.py
+++ b/setup.py
@@ -59,7 +59,7 @@ setup(
         'Jinja2>=2.4'
     ],
     classifiers=[
-        'Development Status :: 3 - Alpha',
+        'Development Status :: 4 - Beta',
         'Environment :: Web Environment',
         'Intended Audience :: Developers',
         'License :: OSI Approved :: BSD License',
","diff --git a/setup.py b/setup.py
index ae68c49e..462cb6c7 100644
--- a/setup.py
+++ b/setup.py
@@ -59,7 +59,7 @@ setup(
         'Jinja2>=2.4'
     ],
     classifiers=[
-        'Development Status :: 3 - Alpha',
+        'Development Status :: 4 - Beta',
         'Environment :: Web Environment',
         'Intended Audience :: Developers',
         'License :: OSI Approved :: BSD License',
"
b0ab127015186e1a2918221ffad8d79ca346faf5,e0fa5aec3a13d9c3e8e27b53526fcee56ac0298d,README,README,README,Updated README as well.,"diff --git a/README b/README
index e9eb1c7b..56d57f88 100644
--- a/README
+++ b/README
@@ -1,7 +1,7 @@
 
                           // Flask //
 
-         because sometimes a pocket knife is not enough
+              web development, one drop at a time
 
 
     ~ What is Flask?
","diff --git a/README b/README
index e9eb1c7b..56d57f88 100644
--- a/README
+++ b/README
@@ -1,7 +1,7 @@
 
                           // Flask //
 
-         because sometimes a pocket knife is not enough
+              web development, one drop at a time
 
 
     ~ What is Flask?
"
e0fa5aec3a13d9c3e8e27b53526fcee56ac0298d,07581b2404924fe1833f596cfa09caf69868ad5b,CHANGES,CHANGES,CHANGES,HEAD is 0.5-dev,"diff --git a/CHANGES b/CHANGES
index 5c645435..ee8dd002 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,6 +3,11 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
+Version 0.5
+-----------
+
+Release date to be announced
+
 Version 0.2
 -----------
 
","diff --git a/CHANGES b/CHANGES
index 5c645435..ee8dd002 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,6 +3,11 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
+Version 0.5
+-----------
+
+Release date to be announced
+
 Version 0.2
 -----------
 
"
e0fa5aec3a13d9c3e8e27b53526fcee56ac0298d,07581b2404924fe1833f596cfa09caf69868ad5b,setup.py,setup.py,setup.py,HEAD is 0.5-dev,"diff --git a/setup.py b/setup.py
index 462cb6c7..ed922027 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.2',
+    version='0.5',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
","diff --git a/setup.py b/setup.py
index 462cb6c7..ed922027 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.2',
+    version='0.5',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
"
07581b2404924fe1833f596cfa09caf69868ad5b,f4269b1fe7fe4c17a99bc7ca0dddafd17bed14e9,docs/logo.pdf,docs/logo.pdf,docs/logo.pdf,Updated logo in the PDF docs,"diff --git a/docs/logo.pdf b/docs/logo.pdf
index 49c5060e..bd820c24 100644
Binary files a/docs/logo.pdf and b/docs/logo.pdf differ
","diff --git a/docs/logo.pdf b/docs/logo.pdf
index 49c5060e..bd820c24 100644
Binary files a/docs/logo.pdf and b/docs/logo.pdf differ
"
f4269b1fe7fe4c17a99bc7ca0dddafd17bed14e9,e409bc792d4419ed588afbc60c53b61923c415a7,flask.py,flask.py,flask.py,Fixed typo,"diff --git a/flask.py b/flask.py
index 5af32ea8..dcf26b32 100644
--- a/flask.py
+++ b/flask.py
@@ -1113,7 +1113,7 @@ class Flask(_PackageBoundObject):
             with app.request_context(environ):
                 do_something_with(request)
 
-        :params environ: a WSGI environment
+        :param environ: a WSGI environment
         """"""
         return _RequestContext(self, environ)
 
","diff --git a/flask.py b/flask.py
index 5af32ea8..dcf26b32 100644
--- a/flask.py
+++ b/flask.py
@@ -1113,7 +1113,7 @@ class Flask(_PackageBoundObject):
             with app.request_context(environ):
                 do_something_with(request)
 
-        :params environ: a WSGI environment
+        :param environ: a WSGI environment
         """"""
         return _RequestContext(self, environ)
 
"
e409bc792d4419ed588afbc60c53b61923c415a7,93a8ca02822d07cd9f13495f53d27ab22e9adf3a,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,Fixed some minor typos throughout docs.,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 02344720..fcffe7c2 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -25,7 +25,7 @@ In that case, it makes a lot of sense to use dotted names for the URL
 endpoints.
 
 Here are some suggestions for how Flask can be modified to better 
-accomodate large-scale applications:
+accommodate large-scale applications:
 
 -   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
@@ -33,7 +33,7 @@ accomodate large-scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explicitly or by name and importing
+    specifying the target functions explicitly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This requires more typing
     (because you now have something to pass around) but it makes it a
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index 02344720..fcffe7c2 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -25,7 +25,7 @@ In that case, it makes a lot of sense to use dotted names for the URL
 endpoints.
 
 Here are some suggestions for how Flask can be modified to better 
-accomodate large-scale applications:
+accommodate large-scale applications:
 
 -   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
@@ -33,7 +33,7 @@ accomodate large-scale applications:
     also requires that the whole application is imported when the system
     initializes or certain URLs will not be available right away.   A
     better solution would be to have one module with all URLs in there and
-    specifing the target functions explicitly or by name and importing
+    specifying the target functions explicitly or by name and importing
     them when needed.
 -   switch to explicit request object passing.  This requires more typing
     (because you now have something to pass around) but it makes it a
"
e409bc792d4419ed588afbc60c53b61923c415a7,93a8ca02822d07cd9f13495f53d27ab22e9adf3a,docs/design.rst,docs/design.rst,docs/design.rst,Fixed some minor typos throughout docs.,"diff --git a/docs/design.rst b/docs/design.rst
index c4fd32dd..b2a56cf5 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -51,7 +51,7 @@ possible without hacks if the object were created ahead of time for you
 based on a class that is not exposed to you.
 
 But there is another very important reason why Flask depends on an
-explicit instanciation of that class: the package name.  Whenever you
+explicit instantiation of that class: the package name.  Whenever you
 create a Flask instance you usually pass it `__name__` as package name.
 Flask depends on that information to properly load resources relative
 to your module.  With Python's outstanding support for reflection it can
@@ -125,7 +125,7 @@ advantage.
 Flask is a framework that takes advantage of the work already done by
 Werkzeug to properly interface WSGI (which can be a complex task at
 times).  Thanks to recent developments in the Python package
-infrastructure, packages with depencencies are no longer an issue and
+infrastructure, packages with dependencies are no longer an issue and
 there are very few reasons against having libraries that depend on others.
 
 
@@ -140,7 +140,7 @@ isn't that a bad idea?
 Yes it is usually not such a bright idea to use thread locals.  They cause
 troubles for servers that are not based on the concept of threads and make
 large applications harder to maintain.  However Flask is just not designed
-for large applications or asyncronous servers.  Flask wants to make it
+for large applications or asynchronous servers.  Flask wants to make it
 quick and easy to write a traditional web application.
 
 Also see the :ref:`becomingbig` section of the documentation for some
","diff --git a/docs/design.rst b/docs/design.rst
index c4fd32dd..b2a56cf5 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -51,7 +51,7 @@ possible without hacks if the object were created ahead of time for you
 based on a class that is not exposed to you.
 
 But there is another very important reason why Flask depends on an
-explicit instanciation of that class: the package name.  Whenever you
+explicit instantiation of that class: the package name.  Whenever you
 create a Flask instance you usually pass it `__name__` as package name.
 Flask depends on that information to properly load resources relative
 to your module.  With Python's outstanding support for reflection it can
@@ -125,7 +125,7 @@ advantage.
 Flask is a framework that takes advantage of the work already done by
 Werkzeug to properly interface WSGI (which can be a complex task at
 times).  Thanks to recent developments in the Python package
-infrastructure, packages with depencencies are no longer an issue and
+infrastructure, packages with dependencies are no longer an issue and
 there are very few reasons against having libraries that depend on others.
 
 
@@ -140,7 +140,7 @@ isn't that a bad idea?
 Yes it is usually not such a bright idea to use thread locals.  They cause
 troubles for servers that are not based on the concept of threads and make
 large applications harder to maintain.  However Flask is just not designed
-for large applications or asyncronous servers.  Flask wants to make it
+for large applications or asynchronous servers.  Flask wants to make it
 quick and easy to write a traditional web application.
 
 Also see the :ref:`becomingbig` section of the documentation for some
"
e409bc792d4419ed588afbc60c53b61923c415a7,93a8ca02822d07cd9f13495f53d27ab22e9adf3a,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Fixed some minor typos throughout docs.,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index deeff8ca..8abd4549 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -69,14 +69,14 @@ that possibly be exploited"" and then an intelligent guy comes along and
 figures a way out to exploit that application.  And don't think, your
 application is not important enough for hackers to take notice.  Depending
 on the kind of attack, chances are there are automated botnets out there
-trying to figure out how to fill your database with viagra adverisments.
+trying to figure out how to fill your database with viagra advertisements.
 
 So always keep that in mind when doing web development.
 
 Target Audience
 ---------------
 
-Is Flask for you?  Is your application small-ish (less than 4000 lines of
+Is Flask for you?  If your application small-ish (less than 4000 lines of
 Python code) and does not depend on too complex database structures, Flask
 is the Framework for you.  It was designed from the ground up to be easy
 to use, based on established principles, good intentions and on top of two
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index deeff8ca..8abd4549 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -69,14 +69,14 @@ that possibly be exploited"" and then an intelligent guy comes along and
 figures a way out to exploit that application.  And don't think, your
 application is not important enough for hackers to take notice.  Depending
 on the kind of attack, chances are there are automated botnets out there
-trying to figure out how to fill your database with viagra adverisments.
+trying to figure out how to fill your database with viagra advertisements.
 
 So always keep that in mind when doing web development.
 
 Target Audience
 ---------------
 
-Is Flask for you?  Is your application small-ish (less than 4000 lines of
+Is Flask for you?  If your application small-ish (less than 4000 lines of
 Python code) and does not depend on too complex database structures, Flask
 is the Framework for you.  It was designed from the ground up to be easy
 to use, based on established principles, good intentions and on top of two
"
e409bc792d4419ed588afbc60c53b61923c415a7,93a8ca02822d07cd9f13495f53d27ab22e9adf3a,docs/installation.rst,docs/installation.rst,docs/installation.rst,Fixed some minor typos throughout docs.,"diff --git a/docs/installation.rst b/docs/installation.rst
index f2f4905f..deedb12b 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -122,7 +122,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     ...
     Finished processing dependencies for Flask
 
-This will pull in the depdenencies and activate the git head as current
+This will pull in the dependencies and activate the git head as current
 version.  Then you just have to ``git pull origin`` to get the latest
 version.
 
","diff --git a/docs/installation.rst b/docs/installation.rst
index f2f4905f..deedb12b 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -122,7 +122,7 @@ Get the git checkout in a new virtualenv and run in develop mode::
     ...
     Finished processing dependencies for Flask
 
-This will pull in the depdenencies and activate the git head as current
+This will pull in the dependencies and activate the git head as current
 version.  Then you just have to ``git pull origin`` to get the latest
 version.
 
"
e409bc792d4419ed588afbc60c53b61923c415a7,93a8ca02822d07cd9f13495f53d27ab22e9adf3a,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Fixed some minor typos throughout docs.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 59e36bcc..4fc0b68e 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -83,7 +83,7 @@ you enable the debug support the server will reload itself on code changes
 and also provide you with a helpful debugger if things go wrong.
 
 There are two ways to enable debugging.  Either set that flag on the
-applciation object::
+application object::
 
     app.debug = True
     app.run()
@@ -139,7 +139,7 @@ likely he will like the page and come back next time.
 
 To add variable parts to a URL you can mark these special sections as
 ``<variable_name>``.  Such a part is then passed as keyword argument to
-your function.  Optionally a converter can be specifed by specifying a
+your function.  Optionally a converter can be specified by specifying a
 rule with ``<converter:variable_name>``.  Here some nice examples::
 
     @app.route('/user/<username>')
@@ -186,8 +186,8 @@ parameter.  Here some examples:
 >>> with app.test_request_context():
 ...  print url_for('index')
 ...  print url_for('login')
-...  print url_for('profile', username='John Doe')
 ...  print url_for('login', next='/')
+...  print url_for('profile', username='John Doe')
 ... 
 /
 /login
@@ -319,7 +319,7 @@ Here's a simple example of how to render a template::
 
 Flask will look for templates in the `templates` folder.  So if your
 application is a module, that folder is next to that module, if it's a
-pacakge it's actually inside your package:
+package it's actually inside your package:
 
 **Case 1**: a module::
     
@@ -484,7 +484,7 @@ We recommend accessing URL parameters with `get` or by catching the
 `KeyError` because users might change the URL and presenting them a 400
 bad request page in that case is a bit user unfriendly.
 
-For a full list of methods and attribtues on that object, head over to the
+For a full list of methods and attributes on that object, head over to the
 :class:`~flask.request` documentation.
 
 
@@ -493,7 +493,7 @@ File Uploads
 
 Obviously you can handle uploaded files with Flask just as easy.  Just
 make sure not to forget to set the ``enctype=""multipart/form-data""``
-attribtue on your HTML form, otherwise the browser will not transmit your
+attribute on your HTML form, otherwise the browser will not transmit your
 files at all.
 
 Uploaded files are stored in memory or at a temporary location on the
@@ -576,7 +576,7 @@ you want to customize the error page, you can use the
 
 Note the ``404`` after the :func:`~flask.render_template` call.  This
 tells Flask that the status code of that page should be 404 which means
-not found.  By default 200 is assumed which translats to: all went well.
+not found.  By default 200 is assumed which translates to: all went well.
 
 .. _sessions:
 
@@ -586,7 +586,7 @@ Sessions
 Besides the request object there is also a second object called
 :class:`~flask.session` that allows you to store information specific to a
 user from one request to the next.  This is implemented on top of cookies
-for you and signes the cookies cryptographically.  What this means is that
+for you and signs the cookies cryptographically.  What this means is that
 the user could look at the contents of your cookie but not modify it,
 unless he knows the secret key used for signing.
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 59e36bcc..4fc0b68e 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -83,7 +83,7 @@ you enable the debug support the server will reload itself on code changes
 and also provide you with a helpful debugger if things go wrong.
 
 There are two ways to enable debugging.  Either set that flag on the
-applciation object::
+application object::
 
     app.debug = True
     app.run()
@@ -139,7 +139,7 @@ likely he will like the page and come back next time.
 
 To add variable parts to a URL you can mark these special sections as
 ``<variable_name>``.  Such a part is then passed as keyword argument to
-your function.  Optionally a converter can be specifed by specifying a
+your function.  Optionally a converter can be specified by specifying a
 rule with ``<converter:variable_name>``.  Here some nice examples::
 
     @app.route('/user/<username>')
@@ -186,8 +186,8 @@ parameter.  Here some examples:
 >>> with app.test_request_context():
 ...  print url_for('index')
 ...  print url_for('login')
-...  print url_for('profile', username='John Doe')
 ...  print url_for('login', next='/')
+...  print url_for('profile', username='John Doe')
 ... 
 /
 /login
@@ -319,7 +319,7 @@ Here's a simple example of how to render a template::
 
 Flask will look for templates in the `templates` folder.  So if your
 application is a module, that folder is next to that module, if it's a
-pacakge it's actually inside your package:
+package it's actually inside your package:
 
 **Case 1**: a module::
     
@@ -484,7 +484,7 @@ We recommend accessing URL parameters with `get` or by catching the
 `KeyError` because users might change the URL and presenting them a 400
 bad request page in that case is a bit user unfriendly.
 
-For a full list of methods and attribtues on that object, head over to the
+For a full list of methods and attributes on that object, head over to the
 :class:`~flask.request` documentation.
 
 
@@ -493,7 +493,7 @@ File Uploads
 
 Obviously you can handle uploaded files with Flask just as easy.  Just
 make sure not to forget to set the ``enctype=""multipart/form-data""``
-attribtue on your HTML form, otherwise the browser will not transmit your
+attribute on your HTML form, otherwise the browser will not transmit your
 files at all.
 
 Uploaded files are stored in memory or at a temporary location on the
@@ -576,7 +576,7 @@ you want to customize the error page, you can use the
 
 Note the ``404`` after the :func:`~flask.render_template` call.  This
 tells Flask that the status code of that page should be 404 which means
-not found.  By default 200 is assumed which translats to: all went well.
+not found.  By default 200 is assumed which translates to: all went well.
 
 .. _sessions:
 
@@ -586,7 +586,7 @@ Sessions
 Besides the request object there is also a second object called
 :class:`~flask.session` that allows you to store information specific to a
 user from one request to the next.  This is implemented on top of cookies
-for you and signes the cookies cryptographically.  What this means is that
+for you and signs the cookies cryptographically.  What this means is that
 the user could look at the contents of your cookie but not modify it,
 unless he knows the secret key used for signing.
 
"
93a8ca02822d07cd9f13495f53d27ab22e9adf3a,a5a41d40aaa9f6ed70b487133ddaf48ceb3d054f,flask.py,flask.py,flask.py,Fix typo.,"diff --git a/flask.py b/flask.py
index dcf26b32..6f8a21fc 100644
--- a/flask.py
+++ b/flask.py
@@ -85,7 +85,7 @@ class Response(ResponseBase):
     :meth:`~flask.Flask.make_response` will take care of that for you.
 
     If you want to replace the response object used you can subclass this and
-    set :attr:`~flask.Flask.request_class` to your subclass.
+    set :attr:`~flask.Flask.response_class` to your subclass.
     """"""
     default_mimetype = 'text/html'
 
","diff --git a/flask.py b/flask.py
index dcf26b32..6f8a21fc 100644
--- a/flask.py
+++ b/flask.py
@@ -85,7 +85,7 @@ class Response(ResponseBase):
     :meth:`~flask.Flask.make_response` will take care of that for you.
 
     If you want to replace the response object used you can subclass this and
-    set :attr:`~flask.Flask.request_class` to your subclass.
+    set :attr:`~flask.Flask.response_class` to your subclass.
     """"""
     default_mimetype = 'text/html'
 
"
a5a41d40aaa9f6ed70b487133ddaf48ceb3d054f,693e4449f87950c764a928690f4437fd6b1b4d7d,flask.py,flask.py,flask.py,Fix typo.,"diff --git a/flask.py b/flask.py
index 6f8a21fc..084b6593 100644
--- a/flask.py
+++ b/flask.py
@@ -562,7 +562,7 @@ class Module(_PackageBoundObject):
         return f
 
     def context_processor(self, f):
-        """"""Like :meth:`Flask.context_processor` but for a modul.  This
+        """"""Like :meth:`Flask.context_processor` but for a module.  This
         function is only executed for requests handled by a module.
         """"""
         self._record(lambda s: s.app.template_context_processors
@@ -601,7 +601,7 @@ class Flask(_PackageBoundObject):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects.  See :class:`~flask.request`
+    #: the class that is used for request objects.  See :class:`~flask.Request`
     #: for more information.
     request_class = Request
 
","diff --git a/flask.py b/flask.py
index 6f8a21fc..084b6593 100644
--- a/flask.py
+++ b/flask.py
@@ -562,7 +562,7 @@ class Module(_PackageBoundObject):
         return f
 
     def context_processor(self, f):
-        """"""Like :meth:`Flask.context_processor` but for a modul.  This
+        """"""Like :meth:`Flask.context_processor` but for a module.  This
         function is only executed for requests handled by a module.
         """"""
         self._record(lambda s: s.app.template_context_processors
@@ -601,7 +601,7 @@ class Flask(_PackageBoundObject):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects.  See :class:`~flask.request`
+    #: the class that is used for request objects.  See :class:`~flask.Request`
     #: for more information.
     request_class = Request
 
"
693e4449f87950c764a928690f4437fd6b1b4d7d,35ed617fe41b184288892f733ce07d94391b76b1,CHANGES,CHANGES,CHANGES,Added support for flashing categories.  This fixes #35.,"diff --git a/CHANGES b/CHANGES
index ee8dd002..3a7d696d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,8 @@ Version 0.5
 
 Release date to be announced
 
+- added support for categories for flashed messages.
+
 Version 0.2
 -----------
 
","diff --git a/CHANGES b/CHANGES
index ee8dd002..3a7d696d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,8 @@ Version 0.5
 
 Release date to be announced
 
+- added support for categories for flashed messages.
+
 Version 0.2
 -----------
 
"
693e4449f87950c764a928690f4437fd6b1b4d7d,35ed617fe41b184288892f733ce07d94391b76b1,flask.py,flask.py,flask.py,Added support for flashing categories.  This fixes #35.,"diff --git a/flask.py b/flask.py
index 084b6593..d745027d 100644
--- a/flask.py
+++ b/flask.py
@@ -217,24 +217,49 @@ def get_template_attribute(template_name, attribute):
                    attribute)
 
 
-def flash(message):
+def flash(message, category='message'):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
 
+    .. versionchanged: 0.5
+       `category` parameter added.
+
     :param message: the message to be flashed.
+    :param category: the category for the message.  The following values
+                     are recommended: ``'message'`` for any kind of message,
+                     ``'error'`` for errors, ``'info'`` for information
+                     messages and ``'warning'`` for warnings.  However any
+                     kind of string and be used as category.
     """"""
-    session.setdefault('_flashes', []).append(message)
+    session.setdefault('_flashes', []).append((category, message))
 
 
-def get_flashed_messages():
+def get_flashed_messages(with_categories=False):
     """"""Pulls all flashed messages from the session and returns them.
     Further calls in the same request to the function will return
-    the same messages.
+    the same messages.  By default just the messages are returned,
+    but when `with_categories` is set to `True`, the return value will
+    be a list of tuples in the form ``(category, message)`` instead.
+
+    Example usage:
+
+    .. sourcecode:: html+jinja
+
+        {% for category, msg in get_flashed_messages(with_categories=true) %}
+          <p class=flash-{{ category }}>{{ msg }}
+        {% endfor %}
+
+    .. versionchanged:: 0.5
+       `with_categories` parameter added.
+
+    :param with_categories: set to `True` to also receive categories.
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
         _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
+    if not with_categories:
+        return [x[1] for x in flashes]
     return flashes
 
 
","diff --git a/flask.py b/flask.py
index 084b6593..d745027d 100644
--- a/flask.py
+++ b/flask.py
@@ -217,24 +217,49 @@ def get_template_attribute(template_name, attribute):
                    attribute)
 
 
-def flash(message):
+def flash(message, category='message'):
     """"""Flashes a message to the next request.  In order to remove the
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
 
+    .. versionchanged: 0.5
+       `category` parameter added.
+
     :param message: the message to be flashed.
+    :param category: the category for the message.  The following values
+                     are recommended: ``'message'`` for any kind of message,
+                     ``'error'`` for errors, ``'info'`` for information
+                     messages and ``'warning'`` for warnings.  However any
+                     kind of string and be used as category.
     """"""
-    session.setdefault('_flashes', []).append(message)
+    session.setdefault('_flashes', []).append((category, message))
 
 
-def get_flashed_messages():
+def get_flashed_messages(with_categories=False):
     """"""Pulls all flashed messages from the session and returns them.
     Further calls in the same request to the function will return
-    the same messages.
+    the same messages.  By default just the messages are returned,
+    but when `with_categories` is set to `True`, the return value will
+    be a list of tuples in the form ``(category, message)`` instead.
+
+    Example usage:
+
+    .. sourcecode:: html+jinja
+
+        {% for category, msg in get_flashed_messages(with_categories=true) %}
+          <p class=flash-{{ category }}>{{ msg }}
+        {% endfor %}
+
+    .. versionchanged:: 0.5
+       `with_categories` parameter added.
+
+    :param with_categories: set to `True` to also receive categories.
     """"""
     flashes = _request_ctx_stack.top.flashes
     if flashes is None:
         _request_ctx_stack.top.flashes = flashes = session.pop('_flashes', [])
+    if not with_categories:
+        return [x[1] for x in flashes]
     return flashes
 
 
"
693e4449f87950c764a928690f4437fd6b1b4d7d,35ed617fe41b184288892f733ce07d94391b76b1,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added support for flashing categories.  This fixes #35.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index c7cebb9c..f5dd12bb 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -157,6 +157,35 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             assert flask.session.modified
             assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
 
+    def test_extended_flashing(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        @app.route('/')
+        def index():
+            flask.flash(u'Hello World')
+            flask.flash(u'Hello World', 'error')
+            flask.flash(flask.Markup(u'<em>Testing</em>'), 'warning')
+            return ''
+
+        @app.route('/test')
+        def test():
+            messages = flask.get_flashed_messages(with_categories=True)
+            assert len(messages) == 3
+            assert messages[0] == ('message', u'Hello World')
+            assert messages[1] == ('error', u'Hello World')
+            assert messages[2] == ('warning', flask.Markup(u'<em>Testing</em>'))
+            return ''
+            messages = flask.get_flashed_messages()
+            assert len(messages) == 3
+            assert messages[0] == u'Hello World'
+            assert messages[1] == u'Hello World'
+            assert messages[2] == flask.Markup(u'<em>Testing</em>')
+
+        c = app.test_client()
+        c.get('/')
+        c.get('/test')
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index c7cebb9c..f5dd12bb 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -157,6 +157,35 @@ class BasicFunctionalityTestCase(unittest.TestCase):
             assert flask.session.modified
             assert list(flask.get_flashed_messages()) == ['Zap', 'Zip']
 
+    def test_extended_flashing(self):
+        app = flask.Flask(__name__)
+        app.secret_key = 'testkey'
+
+        @app.route('/')
+        def index():
+            flask.flash(u'Hello World')
+            flask.flash(u'Hello World', 'error')
+            flask.flash(flask.Markup(u'<em>Testing</em>'), 'warning')
+            return ''
+
+        @app.route('/test')
+        def test():
+            messages = flask.get_flashed_messages(with_categories=True)
+            assert len(messages) == 3
+            assert messages[0] == ('message', u'Hello World')
+            assert messages[1] == ('error', u'Hello World')
+            assert messages[2] == ('warning', flask.Markup(u'<em>Testing</em>'))
+            return ''
+            messages = flask.get_flashed_messages()
+            assert len(messages) == 3
+            assert messages[0] == u'Hello World'
+            assert messages[1] == u'Hello World'
+            assert messages[2] == flask.Markup(u'<em>Testing</em>')
+
+        c = app.test_client()
+        c.get('/')
+        c.get('/test')
+
     def test_request_processing(self):
         app = flask.Flask(__name__)
         evts = []
"
35ed617fe41b184288892f733ce07d94391b76b1,931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,docs/installation.rst,docs/installation.rst,docs/installation.rst,Fixed a doc bug and added distribtue docs.,"diff --git a/docs/installation.rst b/docs/installation.rst
index deedb12b..6b4f955a 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -19,6 +19,8 @@ lighttpd, on Google's App Engine or whatever you have in mind).
 So how do you get all that on your computer in no time?  The most kick-ass
 method is virtualenv, so let's look at that first.
 
+.. _virtualenv:
+
 virtualenv
 ----------
 
","diff --git a/docs/installation.rst b/docs/installation.rst
index deedb12b..6b4f955a 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -19,6 +19,8 @@ lighttpd, on Google's App Engine or whatever you have in mind).
 So how do you get all that on your computer in no time?  The most kick-ass
 method is virtualenv, so let's look at that first.
 
+.. _virtualenv:
+
 virtualenv
 ----------
 
"
35ed617fe41b184288892f733ce07d94391b76b1,931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,docs/patterns/distribute.rst,,docs/patterns/distribute.rst,Fixed a doc bug and added distribtue docs.,"diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
new file mode 100644
index 00000000..c4f6625d
--- /dev/null
+++ b/docs/patterns/distribute.rst
@@ -0,0 +1,160 @@
+Deploying with Distribute
+=========================
+
+`distribute`_, formerly setuptools, is an extension library that is
+commonly used to (like the name says) distribute Python libraries and
+extensions.  It extends distutils, a basic module installation system
+shipped with Python to also support various more complex constructs that
+make larger applications easier to distribute:
+
+- **support for dependencies**: a library or application can declare a
+  list of other libraries it depends on which will be installed
+  automatically for you.
+- **package registry**: setuptools registers your package with your
+  Python installation.  This makes it possible to query information
+  provided by one package from another package.  The best known feature of
+  this system is the entry point support which allows one package to
+  declare an ""entry point"" another package can hook into to extend the
+  other package.
+- **installation manager**: `easy_install`, which comes with distribute
+  can install other libraries for you.  You can also use `pip`_ which
+  sooner or later will replace `easy_install` which does more than just
+  installing packages for you.
+
+Flask itself, and all the libraries you can find on the cheeseshop will
+are distributed with either distribute, the older setuptools or distutils.
+
+In this case we assume your application is called
+`yourapplication.py` and you are not using a module, but a `package
+<larger-applications>`_.  Distributing resources with standard modules is
+not supported by `distribute`_ so we will not bother with it.  If you have
+not yet converted your application into a package, head over to the
+:ref:`larger-applications` pattern to see how this can be done.
+
+Basic Setup Script
+------------------
+
+Because you have Flask running, you either have setuptools or distribute
+available on your system anyways.  If you do not, fear not, there is a
+script to install it for you: `distribute_setup.py`_.  Just download and
+run with your Python interpreter.
+
+Standard disclaimer applies: :ref:`you better use a virtualenv
+<virtualenv>`.
+
+Your setup code always goes into a file named `setup.py` next to your
+application.  The name of the file is only convention, but because
+everybody will look for a file with that name, you better not change it.
+
+Yes, even if you are using `distribute`, you are importing from a package
+called `setuptools`.  `distribute` is fully backwards compatible with
+`setuptools`, so it also uses the same import name.
+
+A basic `setup.py` file for a Flask application looks like this::
+
+    from setuptools import setup
+
+    setup(
+        name='Your Application',
+        version='1.0',
+        long_description=__doc__,
+        packages=['yourapplication'],
+        include_package_data=True,
+        zip_safe=False,
+        install_requires=['Flask']
+    )
+
+Please keep in mind that you have to list subpackages explicitly.  If you
+want distribute to lookup the packages for you automatically, you can use
+the `find_packages` function::
+
+    from setuptools import setup, find_packages
+
+    setup(
+        ...
+        packages=find_packages()
+    )
+
+Most parameters to the `setup` function should be self explanatory,
+`include_package_data` and `zip_safe` might not be.
+`include_package_data` tells distribute to look for a `MANIFEST.in` file
+and install all the entries that match as package data.  We will use this
+to distribute the static files and templates along with the Python module
+(see :ref:`distributing-resources`).  The `zip_safe` flag can be used to
+force or prevent zip Archive creation.  In general you probably don't want
+your packages to be installed as zip files because some tools do not
+support them and they make debugging a lot harder.
+
+
+.. _distributing-resources:
+
+Distributing Resources
+----------------------
+
+If you try to install the package you just created, you will notice that
+folders like `static` or `templates` are not installed for you.  The
+reason for this is that distribute does not know which files to add for
+you.  What you should do, is to create a `MANIFEST.in` file next to your
+`setup.py` file.  This file lists all the files that should be added to
+your tarball::
+
+    recursive-include yourapplication/templates
+    recursive-include yourapplication/static
+
+Don't forget that even if you enlist them in your `MANIFEST.in` file, they
+won't be installed for you unless you set the `include_package_data`
+parameter of the `setup` function to `True`!
+
+
+Declaring Dependencies
+----------------------
+
+Dependencies are declared in the `install_requires` parameter as list.
+Each item in that list is the name of a package that should be pulled from
+PyPI on installation.  By default it will always use the most recent
+version, but you can also provide minimum and maximum version
+requirements.  Here some examples::
+
+    install_requires=[
+        'Flask>=0.2',
+        'SQLAlchemy>=0.6',
+        'BrokenPackage>=0.7,<=1.0'
+    ]
+
+I mentioned earlier that dependencies are pulled from PyPI.  What if you
+want to depend on a package that cannot be found on PyPI and won't be
+because it is an internal package you don't want to share with anyone?
+Just still do as if there was a PyPI entry for it and provide a list of
+alternative locations where distribute should look for tarballs::
+
+    dependency_links=['http://example.com/yourfiles']
+
+Make sure that page has a directory listing and the links on the page are
+pointing to the actual tarballs with their correct filenames as this is
+how distribute will find the files.  If you have an internal company
+server that contains the packages, provide the URL to that server there.
+
+
+Installing / Developing
+-----------------------
+
+To install your application (ideally into a virtualenv) just run the
+`setup.py` script with the `install` parameter.  It will install your
+application into the virtualenv's site-packages folder and also download
+and install all dependencies::
+
+    $ python setup.py install
+
+If you are developing on the package and also want the requirements to be
+installed, you can use the `develop` command instead::
+
+    $ python setup.py develop
+
+This has the advantage of just installing a link to the site-packages
+folder instead of copying the data over.  You can then continue to work on
+the code without having to run `install` again after each change.
+
+
+.. _distribute: http://pypi.python.org/pypi/distribute
+.. _pip: http://pypi.python.org/pypi/pip
+.. _distribute_setup.py: http://python-distribute.org/distribute_setup.py
","diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
new file mode 100644
index 00000000..c4f6625d
--- /dev/null
+++ b/docs/patterns/distribute.rst
@@ -0,0 +1,160 @@
+Deploying with Distribute
+=========================
+
+`distribute`_, formerly setuptools, is an extension library that is
+commonly used to (like the name says) distribute Python libraries and
+extensions.  It extends distutils, a basic module installation system
+shipped with Python to also support various more complex constructs that
+make larger applications easier to distribute:
+
+- **support for dependencies**: a library or application can declare a
+  list of other libraries it depends on which will be installed
+  automatically for you.
+- **package registry**: setuptools registers your package with your
+  Python installation.  This makes it possible to query information
+  provided by one package from another package.  The best known feature of
+  this system is the entry point support which allows one package to
+  declare an ""entry point"" another package can hook into to extend the
+  other package.
+- **installation manager**: `easy_install`, which comes with distribute
+  can install other libraries for you.  You can also use `pip`_ which
+  sooner or later will replace `easy_install` which does more than just
+  installing packages for you.
+
+Flask itself, and all the libraries you can find on the cheeseshop will
+are distributed with either distribute, the older setuptools or distutils.
+
+In this case we assume your application is called
+`yourapplication.py` and you are not using a module, but a `package
+<larger-applications>`_.  Distributing resources with standard modules is
+not supported by `distribute`_ so we will not bother with it.  If you have
+not yet converted your application into a package, head over to the
+:ref:`larger-applications` pattern to see how this can be done.
+
+Basic Setup Script
+------------------
+
+Because you have Flask running, you either have setuptools or distribute
+available on your system anyways.  If you do not, fear not, there is a
+script to install it for you: `distribute_setup.py`_.  Just download and
+run with your Python interpreter.
+
+Standard disclaimer applies: :ref:`you better use a virtualenv
+<virtualenv>`.
+
+Your setup code always goes into a file named `setup.py` next to your
+application.  The name of the file is only convention, but because
+everybody will look for a file with that name, you better not change it.
+
+Yes, even if you are using `distribute`, you are importing from a package
+called `setuptools`.  `distribute` is fully backwards compatible with
+`setuptools`, so it also uses the same import name.
+
+A basic `setup.py` file for a Flask application looks like this::
+
+    from setuptools import setup
+
+    setup(
+        name='Your Application',
+        version='1.0',
+        long_description=__doc__,
+        packages=['yourapplication'],
+        include_package_data=True,
+        zip_safe=False,
+        install_requires=['Flask']
+    )
+
+Please keep in mind that you have to list subpackages explicitly.  If you
+want distribute to lookup the packages for you automatically, you can use
+the `find_packages` function::
+
+    from setuptools import setup, find_packages
+
+    setup(
+        ...
+        packages=find_packages()
+    )
+
+Most parameters to the `setup` function should be self explanatory,
+`include_package_data` and `zip_safe` might not be.
+`include_package_data` tells distribute to look for a `MANIFEST.in` file
+and install all the entries that match as package data.  We will use this
+to distribute the static files and templates along with the Python module
+(see :ref:`distributing-resources`).  The `zip_safe` flag can be used to
+force or prevent zip Archive creation.  In general you probably don't want
+your packages to be installed as zip files because some tools do not
+support them and they make debugging a lot harder.
+
+
+.. _distributing-resources:
+
+Distributing Resources
+----------------------
+
+If you try to install the package you just created, you will notice that
+folders like `static` or `templates` are not installed for you.  The
+reason for this is that distribute does not know which files to add for
+you.  What you should do, is to create a `MANIFEST.in` file next to your
+`setup.py` file.  This file lists all the files that should be added to
+your tarball::
+
+    recursive-include yourapplication/templates
+    recursive-include yourapplication/static
+
+Don't forget that even if you enlist them in your `MANIFEST.in` file, they
+won't be installed for you unless you set the `include_package_data`
+parameter of the `setup` function to `True`!
+
+
+Declaring Dependencies
+----------------------
+
+Dependencies are declared in the `install_requires` parameter as list.
+Each item in that list is the name of a package that should be pulled from
+PyPI on installation.  By default it will always use the most recent
+version, but you can also provide minimum and maximum version
+requirements.  Here some examples::
+
+    install_requires=[
+        'Flask>=0.2',
+        'SQLAlchemy>=0.6',
+        'BrokenPackage>=0.7,<=1.0'
+    ]
+
+I mentioned earlier that dependencies are pulled from PyPI.  What if you
+want to depend on a package that cannot be found on PyPI and won't be
+because it is an internal package you don't want to share with anyone?
+Just still do as if there was a PyPI entry for it and provide a list of
+alternative locations where distribute should look for tarballs::
+
+    dependency_links=['http://example.com/yourfiles']
+
+Make sure that page has a directory listing and the links on the page are
+pointing to the actual tarballs with their correct filenames as this is
+how distribute will find the files.  If you have an internal company
+server that contains the packages, provide the URL to that server there.
+
+
+Installing / Developing
+-----------------------
+
+To install your application (ideally into a virtualenv) just run the
+`setup.py` script with the `install` parameter.  It will install your
+application into the virtualenv's site-packages folder and also download
+and install all dependencies::
+
+    $ python setup.py install
+
+If you are developing on the package and also want the requirements to be
+installed, you can use the `develop` command instead::
+
+    $ python setup.py develop
+
+This has the advantage of just installing a link to the site-packages
+folder instead of copying the data over.  You can then continue to work on
+the code without having to run `install` again after each change.
+
+
+.. _distribute: http://pypi.python.org/pypi/distribute
+.. _pip: http://pypi.python.org/pypi/pip
+.. _distribute_setup.py: http://python-distribute.org/distribute_setup.py
"
35ed617fe41b184288892f733ce07d94391b76b1,931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,docs/patterns/flashing.rst,docs/patterns/flashing.rst,docs/patterns/flashing.rst,Fixed a doc bug and added distribtue docs.,"diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index fca9a9e1..16d8d371 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -11,6 +11,9 @@ possible to record a message at the end of a request and access it next
 request and only next request.  This is usually combined with a layout
 template that does this.
 
+Simple Flashing
+---------------
+
 So here a full example::
 
     from flask import flash, redirect, url_for, render_template
@@ -79,3 +82,38 @@ And of course the login template:
        <p><input type=submit value=Login>
      </form>
    {% endblock %}
+
+Flashing With Categories
+------------------------
+
+.. versionadded:: 0.5
+
+It is also possible to provide categories when flashing a message.  The
+default category if nothing is provided is ``'message'``.  Alternative
+categories can be used to give the user better feedback.  For example
+error messages could be displayed with a red background.
+
+To flash a message with a different category, just use the second argument
+to the :func:`~flask.flash` function::
+
+    flash(u'Invalid password provided', 'error')
+
+Inside the template you then have to tell the
+:func:`~flask.get_flashed_messages` function to also return the
+categories.  The loop looks slighty different in that situation then:
+
+.. sourcecode:: html+jinja
+
+   {% with messages = get_flashed_messages(with_categories=true) %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for category, message in messages %}
+         <li class=""{{ category }}"">{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+
+This is just one example of how to render these flashed messages.  One
+might also use the category to add a prefix such as
+``<strong>Error:</strong>`` to the message.
","diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index fca9a9e1..16d8d371 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -11,6 +11,9 @@ possible to record a message at the end of a request and access it next
 request and only next request.  This is usually combined with a layout
 template that does this.
 
+Simple Flashing
+---------------
+
 So here a full example::
 
     from flask import flash, redirect, url_for, render_template
@@ -79,3 +82,38 @@ And of course the login template:
        <p><input type=submit value=Login>
      </form>
    {% endblock %}
+
+Flashing With Categories
+------------------------
+
+.. versionadded:: 0.5
+
+It is also possible to provide categories when flashing a message.  The
+default category if nothing is provided is ``'message'``.  Alternative
+categories can be used to give the user better feedback.  For example
+error messages could be displayed with a red background.
+
+To flash a message with a different category, just use the second argument
+to the :func:`~flask.flash` function::
+
+    flash(u'Invalid password provided', 'error')
+
+Inside the template you then have to tell the
+:func:`~flask.get_flashed_messages` function to also return the
+categories.  The loop looks slighty different in that situation then:
+
+.. sourcecode:: html+jinja
+
+   {% with messages = get_flashed_messages(with_categories=true) %}
+     {% if messages %}
+       <ul class=flashes>
+       {% for category, message in messages %}
+         <li class=""{{ category }}"">{{ message }}</li>
+       {% endfor %}
+       </ul>
+     {% endif %}
+   {% endwith %}
+
+This is just one example of how to render these flashed messages.  One
+might also use the category to add a prefix such as
+``<strong>Error:</strong>`` to the message.
"
35ed617fe41b184288892f733ce07d94391b76b1,931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Fixed a doc bug and added distribtue docs.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 9678e3be..ec3011f6 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,7 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    :maxdepth: 2
 
    packages
+   distribute
    sqlite3
    sqlalchemy
    fileuploads
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 9678e3be..ec3011f6 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,7 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    :maxdepth: 2
 
    packages
+   distribute
    sqlite3
    sqlalchemy
    fileuploads
"
35ed617fe41b184288892f733ce07d94391b76b1,931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,flask.py,flask.py,flask.py,Fixed a doc bug and added distribtue docs.,"diff --git a/flask.py b/flask.py
index d745027d..6fa3f7e3 100644
--- a/flask.py
+++ b/flask.py
@@ -230,7 +230,7 @@ def flash(message, category='message'):
                      are recommended: ``'message'`` for any kind of message,
                      ``'error'`` for errors, ``'info'`` for information
                      messages and ``'warning'`` for warnings.  However any
-                     kind of string and be used as category.
+                     kind of string can be used as category.
     """"""
     session.setdefault('_flashes', []).append((category, message))
 
","diff --git a/flask.py b/flask.py
index d745027d..6fa3f7e3 100644
--- a/flask.py
+++ b/flask.py
@@ -230,7 +230,7 @@ def flash(message, category='message'):
                      are recommended: ``'message'`` for any kind of message,
                      ``'error'`` for errors, ``'info'`` for information
                      messages and ``'warning'`` for warnings.  However any
-                     kind of string and be used as category.
+                     kind of string can be used as category.
     """"""
     session.setdefault('_flashes', []).append((category, message))
 
"
931dcc4c80331d372d70d7a0a5c8e6d49223e2bf,b18560fcaa1739c81ff273951ebc6fa3c96fda2b,docs/patterns/distribute.rst,docs/patterns/distribute.rst,docs/patterns/distribute.rst,s/will//,"diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index c4f6625d..76d4462a 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -21,7 +21,7 @@ make larger applications easier to distribute:
   sooner or later will replace `easy_install` which does more than just
   installing packages for you.
 
-Flask itself, and all the libraries you can find on the cheeseshop will
+Flask itself, and all the libraries you can find on the cheeseshop
 are distributed with either distribute, the older setuptools or distutils.
 
 In this case we assume your application is called
","diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index c4f6625d..76d4462a 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -21,7 +21,7 @@ make larger applications easier to distribute:
   sooner or later will replace `easy_install` which does more than just
   installing packages for you.
 
-Flask itself, and all the libraries you can find on the cheeseshop will
+Flask itself, and all the libraries you can find on the cheeseshop
 are distributed with either distribute, the older setuptools or distutils.
 
 In this case we assume your application is called
"
b18560fcaa1739c81ff273951ebc6fa3c96fda2b,c6e6792cd52022add8455fc792b2ca73c62d3d65,MANIFEST.in,,MANIFEST.in,Added MANIFEST.in.  This fixes #39,"diff --git a/MANIFEST.in b/MANIFEST.in
new file mode 100644
index 00000000..aee76e91
--- /dev/null
+++ b/MANIFEST.in
@@ -0,0 +1,4 @@
+include Makefile CHANGES LICENSE AUTHORS
+recursive-include tests *
+recursive-include docs *
+prune docs/_build/doctrees
","diff --git a/MANIFEST.in b/MANIFEST.in
new file mode 100644
index 00000000..aee76e91
--- /dev/null
+++ b/MANIFEST.in
@@ -0,0 +1,4 @@
+include Makefile CHANGES LICENSE AUTHORS
+recursive-include tests *
+recursive-include docs *
+prune docs/_build/doctrees
"
c6e6792cd52022add8455fc792b2ca73c62d3d65,8c26bec55c13804a01c11931263c9e9e4dab4afb,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,Added links to downloadable docs in the docs,"diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index b8381d7d..c281d3a9 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,6 +5,11 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
+<h3>Download Documentation</h3>
+<ul>
+  <li><a href=""http://flask.pocoo.org/docs/flask-docs.pdf"">as PDF</a>
+  <li><a href=""http://flask.pocoo.org/docs/flask-docs.zip"">as zipped HTML</a>
+</ul>
 <h3>Useful Links</h3>
 <ul>
   <li><a href=""http://flask.pocoo.org/"">The Flask Website</a></li>
","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index b8381d7d..c281d3a9 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,6 +5,11 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
+<h3>Download Documentation</h3>
+<ul>
+  <li><a href=""http://flask.pocoo.org/docs/flask-docs.pdf"">as PDF</a>
+  <li><a href=""http://flask.pocoo.org/docs/flask-docs.zip"">as zipped HTML</a>
+</ul>
 <h3>Useful Links</h3>
 <ul>
   <li><a href=""http://flask.pocoo.org/"">The Flask Website</a></li>
"
8c26bec55c13804a01c11931263c9e9e4dab4afb,e7f67e13339073007a84271cce91200bfdb81006,CHANGES,CHANGES,CHANGES,Added logging support.,"diff --git a/CHANGES b/CHANGES
index 3a7d696d..84aa4633 100644
--- a/CHANGES
+++ b/CHANGES
@@ -9,6 +9,10 @@ Version 0.5
 Release date to be announced
 
 - added support for categories for flashed messages.
+- the application now configures a :class:`logging.Handler` and will
+  log request handling exceptions to that logger when not in debug
+  mode.  This makes it possible to receive mails on server errors
+  for example.
 
 Version 0.2
 -----------
","diff --git a/CHANGES b/CHANGES
index 3a7d696d..84aa4633 100644
--- a/CHANGES
+++ b/CHANGES
@@ -9,6 +9,10 @@ Version 0.5
 Release date to be announced
 
 - added support for categories for flashed messages.
+- the application now configures a :class:`logging.Handler` and will
+  log request handling exceptions to that logger when not in debug
+  mode.  This makes it possible to receive mails on server errors
+  for example.
 
 Version 0.2
 -----------
"
8c26bec55c13804a01c11931263c9e9e4dab4afb,e7f67e13339073007a84271cce91200bfdb81006,flask.py,flask.py,flask.py,Added logging support.,"diff --git a/flask.py b/flask.py
index 6fa3f7e3..72c24029 100644
--- a/flask.py
+++ b/flask.py
@@ -21,7 +21,7 @@ from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
      ImmutableDict, cached_property, wrap_file, Headers
 from werkzeug.routing import Map, Rule
-from werkzeug.exceptions import HTTPException
+from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
 
 # try to load the best simplejson implementation available.  If JSON
@@ -659,6 +659,18 @@ class Flask(_PackageBoundObject):
     #: .. versionadded:: 0.2
     use_x_sendfile = False
 
+    #: the logging format used for the debug logger.  This is only used when
+    #: the application is in debug mode, otherwise the attached logging
+    #: handler does the formatting.
+    #:
+    #: .. versionadded:: 0.5
+    debug_log_format = (
+        '-' * 80 + '\n' +
+        '%(levelname)s in %(module)s, %(filename)s:%(lineno)d]:\n' +
+        '%(message)s\n' +
+        '-' * 80
+    )
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
@@ -753,6 +765,24 @@ class Flask(_PackageBoundObject):
         )
         self.jinja_env.filters['tojson'] = _tojson_filter
 
+    @cached_property
+    def logger(self):
+        """"""A :class:`logging.Logger` object for this application.  The
+        default configuration is to log to stderr if the application is
+        in debug mode.
+        """"""
+        from logging import getLogger, StreamHandler, Formatter, DEBUG
+        class DebugHandler(StreamHandler):
+            def emit(x, record):
+                if self.debug:
+                    StreamHandler.emit(x, record)
+        handler = DebugHandler()
+        handler.setLevel(DEBUG)
+        handler.setFormatter(Formatter(self.debug_log_format))
+        logger = getLogger(self.import_name)
+        logger.addHandler(handler)
+        return logger
+
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
         the configured package is returned that looks up templates in the
@@ -1010,6 +1040,38 @@ class Flask(_PackageBoundObject):
         self.template_context_processors[None].append(f)
         return f
 
+    def handle_http_exception(self, e):
+        """"""Handles an HTTP exception.  By default this will invoke the
+        registered error handlers and fall back to returning the
+        exception as response.
+
+        .. versionadded: 0.5
+        """"""
+        handler = self.error_handlers.get(e.code)
+        if handler is None:
+            return e
+        return handler(e)
+
+    def handle_exception(self, e):
+        """"""Default exception handling that kicks in when an exception
+        occours that is not catched.  In debug mode the exception will
+        be re-raised immediately, otherwise it is logged an the handler
+        for an 500 internal server error is used.  If no such handler
+        exists, a default 500 internal server error message is displayed.
+
+        .. versionadded: 0.5
+        """"""
+        handler = self.error_handlers.get(500)
+        if self.debug:
+            raise
+        self.logger.exception('Exception on %s [%s]' % (
+            request.path,
+            request.method
+        ))
+        if handler is None:
+            return InternalServerError()
+        return handler(e)
+
     def dispatch_request(self):
         """"""Does the request dispatching.  Matches the URL and returns the
         return value of the view or error handler.  This does not have to
@@ -1022,15 +1084,9 @@ class Flask(_PackageBoundObject):
                 raise req.routing_exception
             return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
-            handler = self.error_handlers.get(e.code)
-            if handler is None:
-                return e
-            return handler(e)
+            return self.handle_http_exception(e)
         except Exception, e:
-            handler = self.error_handlers.get(500)
-            if self.debug or handler is None:
-                raise
-            return handler(e)
+            return self.handle_exception(e)
 
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
","diff --git a/flask.py b/flask.py
index 6fa3f7e3..72c24029 100644
--- a/flask.py
+++ b/flask.py
@@ -21,7 +21,7 @@ from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
      ImmutableDict, cached_property, wrap_file, Headers
 from werkzeug.routing import Map, Rule
-from werkzeug.exceptions import HTTPException
+from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
 
 # try to load the best simplejson implementation available.  If JSON
@@ -659,6 +659,18 @@ class Flask(_PackageBoundObject):
     #: .. versionadded:: 0.2
     use_x_sendfile = False
 
+    #: the logging format used for the debug logger.  This is only used when
+    #: the application is in debug mode, otherwise the attached logging
+    #: handler does the formatting.
+    #:
+    #: .. versionadded:: 0.5
+    debug_log_format = (
+        '-' * 80 + '\n' +
+        '%(levelname)s in %(module)s, %(filename)s:%(lineno)d]:\n' +
+        '%(message)s\n' +
+        '-' * 80
+    )
+
     #: options that are passed directly to the Jinja2 environment
     jinja_options = ImmutableDict(
         autoescape=True,
@@ -753,6 +765,24 @@ class Flask(_PackageBoundObject):
         )
         self.jinja_env.filters['tojson'] = _tojson_filter
 
+    @cached_property
+    def logger(self):
+        """"""A :class:`logging.Logger` object for this application.  The
+        default configuration is to log to stderr if the application is
+        in debug mode.
+        """"""
+        from logging import getLogger, StreamHandler, Formatter, DEBUG
+        class DebugHandler(StreamHandler):
+            def emit(x, record):
+                if self.debug:
+                    StreamHandler.emit(x, record)
+        handler = DebugHandler()
+        handler.setLevel(DEBUG)
+        handler.setFormatter(Formatter(self.debug_log_format))
+        logger = getLogger(self.import_name)
+        logger.addHandler(handler)
+        return logger
+
     def create_jinja_loader(self):
         """"""Creates the Jinja loader.  By default just a package loader for
         the configured package is returned that looks up templates in the
@@ -1010,6 +1040,38 @@ class Flask(_PackageBoundObject):
         self.template_context_processors[None].append(f)
         return f
 
+    def handle_http_exception(self, e):
+        """"""Handles an HTTP exception.  By default this will invoke the
+        registered error handlers and fall back to returning the
+        exception as response.
+
+        .. versionadded: 0.5
+        """"""
+        handler = self.error_handlers.get(e.code)
+        if handler is None:
+            return e
+        return handler(e)
+
+    def handle_exception(self, e):
+        """"""Default exception handling that kicks in when an exception
+        occours that is not catched.  In debug mode the exception will
+        be re-raised immediately, otherwise it is logged an the handler
+        for an 500 internal server error is used.  If no such handler
+        exists, a default 500 internal server error message is displayed.
+
+        .. versionadded: 0.5
+        """"""
+        handler = self.error_handlers.get(500)
+        if self.debug:
+            raise
+        self.logger.exception('Exception on %s [%s]' % (
+            request.path,
+            request.method
+        ))
+        if handler is None:
+            return InternalServerError()
+        return handler(e)
+
     def dispatch_request(self):
         """"""Does the request dispatching.  Matches the URL and returns the
         return value of the view or error handler.  This does not have to
@@ -1022,15 +1084,9 @@ class Flask(_PackageBoundObject):
                 raise req.routing_exception
             return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
-            handler = self.error_handlers.get(e.code)
-            if handler is None:
-                return e
-            return handler(e)
+            return self.handle_http_exception(e)
         except Exception, e:
-            handler = self.error_handlers.get(500)
-            if self.debug or handler is None:
-                raise
-            return handler(e)
+            return self.handle_exception(e)
 
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
"
8c26bec55c13804a01c11931263c9e9e4dab4afb,e7f67e13339073007a84271cce91200bfdb81006,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added logging support.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f5dd12bb..6cde2a3c 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,6 +16,7 @@ import sys
 import flask
 import unittest
 import tempfile
+from contextlib import contextmanager
 from datetime import datetime
 from werkzeug import parse_date, parse_options_header
 from cStringIO import StringIO
@@ -26,6 +27,16 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+@contextmanager
+def catch_stderr():
+    old_stderr = sys.stderr
+    sys.stderr = rv = StringIO()
+    try:
+        yield rv
+    finally:
+        sys.stderr = old_stderr
+
+
 class ContextTestCase(unittest.TestCase):
 
     def test_context_binding(self):
@@ -585,6 +596,56 @@ class SendfileTestCase(unittest.TestCase):
             assert options['filename'] == 'index.txt'
 
 
+class LoggingTestCase(unittest.TestCase):
+
+    def test_debug_log(self):
+        app = flask.Flask(__name__)
+        app.debug = True
+        @app.route('/')
+        def index():
+            app.logger.warning('the standard library is dead')
+            return ''
+
+        @app.route('/exc')
+        def exc():
+            1/0
+        c = app.test_client()
+
+        with catch_stderr() as err:
+            rv = c.get('/')
+            out = err.getvalue()
+            assert 'WARNING in flask_tests, flask_tests.py' in out
+            assert 'the standard library is dead' in out
+
+        with catch_stderr() as err:
+            try:
+                c.get('/exc')
+            except ZeroDivisionError:
+                pass
+            else:
+                assert False, 'debug log ate the exception'
+
+    def test_exception_logging(self):
+        from logging import StreamHandler
+        out = StringIO()
+        app = flask.Flask(__name__)
+        app.logger.addHandler(StreamHandler(out))
+
+        @app.route('/')
+        def index():
+            1/0
+
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+
+        err = out.getvalue()
+        assert 'Exception on / [GET]' in err
+        assert 'Traceback (most recent call last):' in err
+        assert '1/0' in err
+        assert 'ZeroDivisionError:' in err
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -592,8 +653,9 @@ def suite():
     suite.addTest(unittest.makeSuite(ContextTestCase))
     suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
     suite.addTest(unittest.makeSuite(TemplatingTestCase))
-    suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(ModuleTestCase))
+    suite.addTest(unittest.makeSuite(SendfileTestCase))
+    suite.addTest(unittest.makeSuite(LoggingTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index f5dd12bb..6cde2a3c 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,6 +16,7 @@ import sys
 import flask
 import unittest
 import tempfile
+from contextlib import contextmanager
 from datetime import datetime
 from werkzeug import parse_date, parse_options_header
 from cStringIO import StringIO
@@ -26,6 +27,16 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+@contextmanager
+def catch_stderr():
+    old_stderr = sys.stderr
+    sys.stderr = rv = StringIO()
+    try:
+        yield rv
+    finally:
+        sys.stderr = old_stderr
+
+
 class ContextTestCase(unittest.TestCase):
 
     def test_context_binding(self):
@@ -585,6 +596,56 @@ class SendfileTestCase(unittest.TestCase):
             assert options['filename'] == 'index.txt'
 
 
+class LoggingTestCase(unittest.TestCase):
+
+    def test_debug_log(self):
+        app = flask.Flask(__name__)
+        app.debug = True
+        @app.route('/')
+        def index():
+            app.logger.warning('the standard library is dead')
+            return ''
+
+        @app.route('/exc')
+        def exc():
+            1/0
+        c = app.test_client()
+
+        with catch_stderr() as err:
+            rv = c.get('/')
+            out = err.getvalue()
+            assert 'WARNING in flask_tests, flask_tests.py' in out
+            assert 'the standard library is dead' in out
+
+        with catch_stderr() as err:
+            try:
+                c.get('/exc')
+            except ZeroDivisionError:
+                pass
+            else:
+                assert False, 'debug log ate the exception'
+
+    def test_exception_logging(self):
+        from logging import StreamHandler
+        out = StringIO()
+        app = flask.Flask(__name__)
+        app.logger.addHandler(StreamHandler(out))
+
+        @app.route('/')
+        def index():
+            1/0
+
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+
+        err = out.getvalue()
+        assert 'Exception on / [GET]' in err
+        assert 'Traceback (most recent call last):' in err
+        assert '1/0' in err
+        assert 'ZeroDivisionError:' in err
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -592,8 +653,9 @@ def suite():
     suite.addTest(unittest.makeSuite(ContextTestCase))
     suite.addTest(unittest.makeSuite(BasicFunctionalityTestCase))
     suite.addTest(unittest.makeSuite(TemplatingTestCase))
-    suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(ModuleTestCase))
+    suite.addTest(unittest.makeSuite(SendfileTestCase))
+    suite.addTest(unittest.makeSuite(LoggingTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,docs/_templates/sidebarintro.html,Added a documentation chapter about logging,"diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index c281d3a9..f2aecc74 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,7 +5,10 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
-<h3>Download Documentation</h3>
+<h3>Other Formats</h3>
+<p>
+  You can download the documentation in other formats as well:
+</p>
 <ul>
   <li><a href=""http://flask.pocoo.org/docs/flask-docs.pdf"">as PDF</a>
   <li><a href=""http://flask.pocoo.org/docs/flask-docs.zip"">as zipped HTML</a>
","diff --git a/docs/_templates/sidebarintro.html b/docs/_templates/sidebarintro.html
index c281d3a9..f2aecc74 100644
--- a/docs/_templates/sidebarintro.html
+++ b/docs/_templates/sidebarintro.html
@@ -5,7 +5,10 @@
   not stable yet, but if you have some feedback,
   <a href=""mailto:armin.ronacher@active-4.com"">let me know</a>.
 </p>
-<h3>Download Documentation</h3>
+<h3>Other Formats</h3>
+<p>
+  You can download the documentation in other formats as well:
+</p>
 <ul>
   <li><a href=""http://flask.pocoo.org/docs/flask-docs.pdf"">as PDF</a>
   <li><a href=""http://flask.pocoo.org/docs/flask-docs.zip"">as zipped HTML</a>
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/_themes,docs/_themes,docs/_themes,Added a documentation chapter about logging,"diff --git a/docs/_themes b/docs/_themes
index 11cb6b51..991997d6 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 11cb6b51c9ea3bc8f94afa3d7411b617f9db2570
+Subproject commit 991997d6d63a0cdcf7f4557a2dae5afa9b38b904
","diff --git a/docs/_themes b/docs/_themes
index 11cb6b51..991997d6 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 11cb6b51c9ea3bc8f94afa3d7411b617f9db2570
+Subproject commit 991997d6d63a0cdcf7f4557a2dae5afa9b38b904
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/conf.py,docs/conf.py,docs/conf.py,Added a documentation chapter about logging,"diff --git a/docs/conf.py b/docs/conf.py
index 2048ab6e..b4731fff 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -50,6 +50,8 @@ import pkg_resources
 # built documents.
 release = __import__('pkg_resources').get_distribution('Flask').version
 version = '.'.join(release.split('.')[:2])
+if 'dev' in version:
+    version = version.split('dev')[0]
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
","diff --git a/docs/conf.py b/docs/conf.py
index 2048ab6e..b4731fff 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -50,6 +50,8 @@ import pkg_resources
 # built documents.
 release = __import__('pkg_resources').get_distribution('Flask').version
 version = '.'.join(release.split('.')[:2])
+if 'dev' in version:
+    version = version.split('dev')[0]
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,Added a documentation chapter about logging,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 1e9e7df9..2e341107 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -13,6 +13,7 @@ web development.
    quickstart
    tutorial/index
    testing
+   errorhandling
    patterns/index
    deploying/index
    becomingbig
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 1e9e7df9..2e341107 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -13,6 +13,7 @@ web development.
    quickstart
    tutorial/index
    testing
+   errorhandling
    patterns/index
    deploying/index
    becomingbig
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/errorhandling.rst,,docs/errorhandling.rst,Added a documentation chapter about logging,"diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
new file mode 100644
index 00000000..c83acbc7
--- /dev/null
+++ b/docs/errorhandling.rst
@@ -0,0 +1,232 @@
+Handling Application Errors
+===========================
+
+.. versionadded:: 0.5
+
+Applications fail, server fail.  Sooner or later you will see an exception
+in production.  Even if your code is 100% correct, you will still see
+exceptions from time to time.  Why?  Because everything else involved will
+fail.  Here some situations where perfectly fine code can lead to server
+errors:
+
+-   the client terminated the request early and the application was still
+    reading from the incoming data.
+-   the database server was overloaded and could not handle the query.
+-   a filesystem is full
+-   a harddrive crashed
+-   a backend server overloaded
+-   a programming error in a library you are using
+-   network connection of the server to another system failed.
+
+And that's just a small sample of issues you could be facing.  So how to
+deal with that sort of problem?  By default if your application runs in
+production mode, Flask will display a very simple page for you and log the
+exception to the :attr:`~flask.Flask.logger`.
+
+But there is more you can do, and we will cover some better setups to deal
+with errors.
+
+Error Mails
+-----------
+
+If the application runs in production mode (which it will do on your
+server) you won't see any log messages by default.  Why that?  Flask tries
+to be a zero-configuration framework and where should it drop the logs for
+you if there is no configuration.  Guessing is not a good idea because
+changes are, the place it guessed is not the place where the user has the
+permission to create a logfile.  Also, for most small applications nobody
+will look at the logs anyways.
+
+In fact, I promise you right now that if you configure a logfile for the
+application errors you will never look at it except for debugging an issue
+when a user reported it for you.  What you want instead is a mail the
+second the exception happened.  Then you get an alert and you can do
+something about it.
+
+Flask is using the Python builtin logging system and that one can actually
+send you mails for errors which is probably what you want.  Here is how
+you can configure the Flask logger to send you mails for exceptions::
+
+    ADMINS = ['yourname@example.com']
+    if not app.debug:
+        import logging
+        from logging.handlers import SMTPHandler
+        mail_handler = SMTPHandler('127.0.0.1',
+                                   'server-error@example.com',
+                                   ADMINS, 'YourApplication Failed')
+        mail_handler.setLevel(logging.ERROR)
+        app.logger.addHandler(mail_handler)
+
+So what just happened?  We created a new
+:class:`~logging.handlers.SMTPHandler` that will send mails with the mail
+server listening on ``127.0.0.1`` to all the `ADMINS` from the address
+*server-error@example.com* with the subject ""YourApplication Failed"".  If
+your mail server requires credentials these can also provided, for that
+check out the documentation for the :class:`~logging.handlers.SMTPHandler`.
+
+We also tell the handler to only send errors and more critical messages.
+Because we certainly don't want to get a mail for warnings or other
+useless logs that might happen during request handling.
+
+Before you run that in production, please also look at :ref:`log-format`
+to put more information into that error mail.  That will save you from a
+lot of frustration.
+
+
+Logging to a File
+-----------------
+
+Even if you get mails, you probably also want to log warnings.  It's a
+good idea to keep as much information around that might be required to
+debug a problem.  Please note that Flask itself will not issue any
+warnings in the core system, so it's your responsibility to warn in the
+code if something seems odd.
+
+There are a couple of handlers provided by the logging system out of the
+box but not all of them are useful for basic error logging.  The most
+interesting are probably the following:
+
+-   :class:`~logging.handlers.FileHandler` - logs messages to a file on the
+    filesystem.
+-   :class:`~logging.handlers.RotatingFileHandler` - logs messages to a file
+    on the filesystem and will rotate after a certain number of messages.
+-   :class:`~logging.handlers.NTEventLogHandler` - will log to the system
+    event log of a Windows system.  If you are deploying on a Windows box,
+    this is what you want to use.
+-   :class:`~logging.handlers.SysLogHandler` - sends logs to a UNIX
+    syslog.
+
+Once you picked your log handler, do like you did with the SMTP handler
+above, just make sure to use a lower setting (I would recommend
+`WARNING`)::
+
+    if not app.debug:
+        import logging
+        from logging.handlers import TheHandlerYouWant
+        file_handler = TheHandlerYouWant(...)
+        file_handler.setLevel(logging.WARNING)
+        app.logger.addHandler(file_handler)
+
+.. _log-format:
+
+Controlling the Log Format
+--------------------------
+
+By default a handler will only write the message string into a file or
+send you that message as mail.  But a log record stores more information
+and it makes a lot of sense to configure your logger to also contain that
+information so that you have a better idea of why that error happened, and
+more importantly, where it did.
+
+A formatter can be instanciated with a format string.  Note that
+tracebacks are appended to the log entry automatically.  You don't have to
+do that in the log formatter format string.
+
+Here some example setups:
+
+Email
+`````
+
+::
+
+    from logging import Formatter
+    mail_handler.setFormatter(Formatter('''
+    Message type:       %(levelname)s
+    Location:           %(pathname)s:%(lineno)d
+    Module:             %(module)s
+    Function:           %(funcName)s
+    Time:               %(asctime)s
+
+    Message:
+
+    %(message)s
+    '''))
+
+File logging
+````````````
+
+::
+
+    from logging import Formatter
+    file_handler.setFormatter(Formatter(
+        '%(astime)s %(levelname)s: %(message)s '
+        '[in %(pathname)s:%(lineno)d]'
+    ))
+
+
+Complex Log Formatting
+``````````````````````
+
+Here is a list of useful formatting variables for the format string.  Note
+that this list is not complete, consult the official documentation of the
+:mod:`logging` package for a full list.
+
++------------------+----------------------------------------------------+
+| Format           | Description                                        |
++==================+====================================================+
+| ``%(levelname)s``| Text logging level for the message                 |
+|                  | (``'DEBUG'``, ``'INFO'``, ``'WARNING'``,           |
+|                  | ``'ERROR'``, ``'CRITICAL'``).                      |
++------------------+----------------------------------------------------+
+| ``%(pathname)s`` | Full pathname of the source file where the         |
+|                  | logging call was issued (if available).            |
++------------------+----------------------------------------------------+
+| ``%(filename)s`` | Filename portion of pathname.                      |
++------------------+----------------------------------------------------+
+| ``%(module)s``   | Module (name portion of filename).                 |
++------------------+----------------------------------------------------+
+| ``%(funcName)s`` | Name of function containing the logging call.      |
++------------------+----------------------------------------------------+
+| ``%(lineno)d``   | Source line number where the logging call was      |
+|                  | issued (if available).                             |
++------------------+----------------------------------------------------+
+| ``%(asctime)s``  | Human-readable time when the LogRecord` was        |
+|                  | created.  By default this is of the form           |
+|                  | ``""2003-07-08 16:49:45,896""`` (the numbers after   |
+|                  | the comma are millisecond portion of the time).    |
+|                  | This can be changed by subclassing the formatter   |
+|                  | and overriding the                                 |
+|                  | :meth:`~logging.Formatter.formatTime` method.      |
++------------------+----------------------------------------------------+
+| ``%(message)s``  | The logged message, computed as ``msg % args``     |
++------------------+----------------------------------------------------+
+
+If you want to further customize the formatting, you can subclass the
+formatter.  The formatter has three interesting methods:
+
+:meth:`~logging.Formatter.format`:
+    handles the actual formatting.  It is passed a
+    :class:`~logging.LogRecord` object and has to return the formatted
+    string.
+:meth:`~logging.Formatter.formatTime`:
+    called for `asctime` formatting.  If you want a different time format
+    you can override this method.
+:meth:`~logging.Formatter.formatException`
+    called for exception formatting.  It is passed a :attr:`~sys.exc_info`
+    tuple and has to return a string.  The default is usually fine, you
+    don't have to override it.
+
+For more information, head over to the official documentation.
+
+
+Other Libraries
+---------------
+
+So far we only configured the logger your application created itself.
+Other libraries might log themselves as well.  For example, SQLAlchemy use
+logging heavily in the core.  While there is a method to configure all
+loggers at once in the :mod:`logging` package, I would not recommend using
+it.  There might be a situation in which you want to have multiple
+separate applications running side by side in the same Python interpreter
+and then it becomes impossible to have different logging setups for those.
+
+Instead, I would recommend figuring out which loggers you are interested
+in, getting the loggers with the :func:`~logging.getLogger` function and
+iterating over them to attach handlers::
+
+    from logging import getLogger
+    loggers = [app.logger, getLogger('sqlalchemy'),
+               getLogger('otherlibrary')]
+    for logger in loggers:
+        logger.addHandler(mail_handler)
+        logger.addHandler(file_handler)
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
new file mode 100644
index 00000000..c83acbc7
--- /dev/null
+++ b/docs/errorhandling.rst
@@ -0,0 +1,232 @@
+Handling Application Errors
+===========================
+
+.. versionadded:: 0.5
+
+Applications fail, server fail.  Sooner or later you will see an exception
+in production.  Even if your code is 100% correct, you will still see
+exceptions from time to time.  Why?  Because everything else involved will
+fail.  Here some situations where perfectly fine code can lead to server
+errors:
+
+-   the client terminated the request early and the application was still
+    reading from the incoming data.
+-   the database server was overloaded and could not handle the query.
+-   a filesystem is full
+-   a harddrive crashed
+-   a backend server overloaded
+-   a programming error in a library you are using
+-   network connection of the server to another system failed.
+
+And that's just a small sample of issues you could be facing.  So how to
+deal with that sort of problem?  By default if your application runs in
+production mode, Flask will display a very simple page for you and log the
+exception to the :attr:`~flask.Flask.logger`.
+
+But there is more you can do, and we will cover some better setups to deal
+with errors.
+
+Error Mails
+-----------
+
+If the application runs in production mode (which it will do on your
+server) you won't see any log messages by default.  Why that?  Flask tries
+to be a zero-configuration framework and where should it drop the logs for
+you if there is no configuration.  Guessing is not a good idea because
+changes are, the place it guessed is not the place where the user has the
+permission to create a logfile.  Also, for most small applications nobody
+will look at the logs anyways.
+
+In fact, I promise you right now that if you configure a logfile for the
+application errors you will never look at it except for debugging an issue
+when a user reported it for you.  What you want instead is a mail the
+second the exception happened.  Then you get an alert and you can do
+something about it.
+
+Flask is using the Python builtin logging system and that one can actually
+send you mails for errors which is probably what you want.  Here is how
+you can configure the Flask logger to send you mails for exceptions::
+
+    ADMINS = ['yourname@example.com']
+    if not app.debug:
+        import logging
+        from logging.handlers import SMTPHandler
+        mail_handler = SMTPHandler('127.0.0.1',
+                                   'server-error@example.com',
+                                   ADMINS, 'YourApplication Failed')
+        mail_handler.setLevel(logging.ERROR)
+        app.logger.addHandler(mail_handler)
+
+So what just happened?  We created a new
+:class:`~logging.handlers.SMTPHandler` that will send mails with the mail
+server listening on ``127.0.0.1`` to all the `ADMINS` from the address
+*server-error@example.com* with the subject ""YourApplication Failed"".  If
+your mail server requires credentials these can also provided, for that
+check out the documentation for the :class:`~logging.handlers.SMTPHandler`.
+
+We also tell the handler to only send errors and more critical messages.
+Because we certainly don't want to get a mail for warnings or other
+useless logs that might happen during request handling.
+
+Before you run that in production, please also look at :ref:`log-format`
+to put more information into that error mail.  That will save you from a
+lot of frustration.
+
+
+Logging to a File
+-----------------
+
+Even if you get mails, you probably also want to log warnings.  It's a
+good idea to keep as much information around that might be required to
+debug a problem.  Please note that Flask itself will not issue any
+warnings in the core system, so it's your responsibility to warn in the
+code if something seems odd.
+
+There are a couple of handlers provided by the logging system out of the
+box but not all of them are useful for basic error logging.  The most
+interesting are probably the following:
+
+-   :class:`~logging.handlers.FileHandler` - logs messages to a file on the
+    filesystem.
+-   :class:`~logging.handlers.RotatingFileHandler` - logs messages to a file
+    on the filesystem and will rotate after a certain number of messages.
+-   :class:`~logging.handlers.NTEventLogHandler` - will log to the system
+    event log of a Windows system.  If you are deploying on a Windows box,
+    this is what you want to use.
+-   :class:`~logging.handlers.SysLogHandler` - sends logs to a UNIX
+    syslog.
+
+Once you picked your log handler, do like you did with the SMTP handler
+above, just make sure to use a lower setting (I would recommend
+`WARNING`)::
+
+    if not app.debug:
+        import logging
+        from logging.handlers import TheHandlerYouWant
+        file_handler = TheHandlerYouWant(...)
+        file_handler.setLevel(logging.WARNING)
+        app.logger.addHandler(file_handler)
+
+.. _log-format:
+
+Controlling the Log Format
+--------------------------
+
+By default a handler will only write the message string into a file or
+send you that message as mail.  But a log record stores more information
+and it makes a lot of sense to configure your logger to also contain that
+information so that you have a better idea of why that error happened, and
+more importantly, where it did.
+
+A formatter can be instanciated with a format string.  Note that
+tracebacks are appended to the log entry automatically.  You don't have to
+do that in the log formatter format string.
+
+Here some example setups:
+
+Email
+`````
+
+::
+
+    from logging import Formatter
+    mail_handler.setFormatter(Formatter('''
+    Message type:       %(levelname)s
+    Location:           %(pathname)s:%(lineno)d
+    Module:             %(module)s
+    Function:           %(funcName)s
+    Time:               %(asctime)s
+
+    Message:
+
+    %(message)s
+    '''))
+
+File logging
+````````````
+
+::
+
+    from logging import Formatter
+    file_handler.setFormatter(Formatter(
+        '%(astime)s %(levelname)s: %(message)s '
+        '[in %(pathname)s:%(lineno)d]'
+    ))
+
+
+Complex Log Formatting
+``````````````````````
+
+Here is a list of useful formatting variables for the format string.  Note
+that this list is not complete, consult the official documentation of the
+:mod:`logging` package for a full list.
+
++------------------+----------------------------------------------------+
+| Format           | Description                                        |
++==================+====================================================+
+| ``%(levelname)s``| Text logging level for the message                 |
+|                  | (``'DEBUG'``, ``'INFO'``, ``'WARNING'``,           |
+|                  | ``'ERROR'``, ``'CRITICAL'``).                      |
++------------------+----------------------------------------------------+
+| ``%(pathname)s`` | Full pathname of the source file where the         |
+|                  | logging call was issued (if available).            |
++------------------+----------------------------------------------------+
+| ``%(filename)s`` | Filename portion of pathname.                      |
++------------------+----------------------------------------------------+
+| ``%(module)s``   | Module (name portion of filename).                 |
++------------------+----------------------------------------------------+
+| ``%(funcName)s`` | Name of function containing the logging call.      |
++------------------+----------------------------------------------------+
+| ``%(lineno)d``   | Source line number where the logging call was      |
+|                  | issued (if available).                             |
++------------------+----------------------------------------------------+
+| ``%(asctime)s``  | Human-readable time when the LogRecord` was        |
+|                  | created.  By default this is of the form           |
+|                  | ``""2003-07-08 16:49:45,896""`` (the numbers after   |
+|                  | the comma are millisecond portion of the time).    |
+|                  | This can be changed by subclassing the formatter   |
+|                  | and overriding the                                 |
+|                  | :meth:`~logging.Formatter.formatTime` method.      |
++------------------+----------------------------------------------------+
+| ``%(message)s``  | The logged message, computed as ``msg % args``     |
++------------------+----------------------------------------------------+
+
+If you want to further customize the formatting, you can subclass the
+formatter.  The formatter has three interesting methods:
+
+:meth:`~logging.Formatter.format`:
+    handles the actual formatting.  It is passed a
+    :class:`~logging.LogRecord` object and has to return the formatted
+    string.
+:meth:`~logging.Formatter.formatTime`:
+    called for `asctime` formatting.  If you want a different time format
+    you can override this method.
+:meth:`~logging.Formatter.formatException`
+    called for exception formatting.  It is passed a :attr:`~sys.exc_info`
+    tuple and has to return a string.  The default is usually fine, you
+    don't have to override it.
+
+For more information, head over to the official documentation.
+
+
+Other Libraries
+---------------
+
+So far we only configured the logger your application created itself.
+Other libraries might log themselves as well.  For example, SQLAlchemy use
+logging heavily in the core.  While there is a method to configure all
+loggers at once in the :mod:`logging` package, I would not recommend using
+it.  There might be a situation in which you want to have multiple
+separate applications running side by side in the same Python interpreter
+and then it becomes impossible to have different logging setups for those.
+
+Instead, I would recommend figuring out which loggers you are interested
+in, getting the loggers with the :func:`~logging.getLogger` function and
+iterating over them to attach handlers::
+
+    from logging import getLogger
+    loggers = [app.logger, getLogger('sqlalchemy'),
+               getLogger('otherlibrary')]
+    for logger in loggers:
+        logger.addHandler(mail_handler)
+        logger.addHandler(file_handler)
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,Added a documentation chapter about logging,"diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
index fd94605d..6d0bd0a1 100644
--- a/docs/patterns/fileuploads.rst
+++ b/docs/patterns/fileuploads.rst
@@ -1,3 +1,5 @@
+.. _uploading-files:
+
 Uploading Files
 ===============
 
","diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
index fd94605d..6d0bd0a1 100644
--- a/docs/patterns/fileuploads.rst
+++ b/docs/patterns/fileuploads.rst
@@ -1,3 +1,5 @@
+.. _uploading-files:
+
 Uploading Files
 ===============
 
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Added a documentation chapter about logging,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 4fc0b68e..745dedb9 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -532,6 +532,8 @@ Werkzeug provides for you::
             f.save('/var/www/uploads/' + secure_filename(f.filename))
         ...
 
+For some better examples, checkout the :ref:`uploading-files` pattern.
+
 Cookies
 ```````
 
@@ -639,3 +641,29 @@ To flash a message use the :func:`~flask.flash` method, to get hold of the
 messages you can use :func:`~flask.get_flashed_messages` which is also
 available in the templates.  Check out the :ref:`message-flashing-pattern`
 for a full example.
+
+Logging
+-------
+
+.. versionadded:: 0.5
+
+Sometimes you might be in the situation where you deal with data that
+should be correct, but actually is not.  For example you have some client
+side code that sends an HTTP request to the server, and it's obviously
+malformed.  This might be caused by a user tempering with the data, or the
+client code failed.  Most the time, it's okay to reply with ``400 Bad
+Request`` in that situation, but other times it is not and the code has to
+continue working.
+
+Yet you want to log that something fishy happened.  This is where loggers
+come in handy.  As of Flask 0.5 a logger is preconfigured for you to use.
+
+Here are some example log calls::
+
+    app.logger.debug('A value for debugging')
+    app.logger.warning('A warning ocurred (%d apples)', 42)
+    app.logger.error('An error occoured')
+
+The attached :attr:`~flask.Flask.logger` is a standard logging
+:class:`~logging.Logger`, so head over to the official stdlib
+documentation for more information.
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 4fc0b68e..745dedb9 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -532,6 +532,8 @@ Werkzeug provides for you::
             f.save('/var/www/uploads/' + secure_filename(f.filename))
         ...
 
+For some better examples, checkout the :ref:`uploading-files` pattern.
+
 Cookies
 ```````
 
@@ -639,3 +641,29 @@ To flash a message use the :func:`~flask.flash` method, to get hold of the
 messages you can use :func:`~flask.get_flashed_messages` which is also
 available in the templates.  Check out the :ref:`message-flashing-pattern`
 for a full example.
+
+Logging
+-------
+
+.. versionadded:: 0.5
+
+Sometimes you might be in the situation where you deal with data that
+should be correct, but actually is not.  For example you have some client
+side code that sends an HTTP request to the server, and it's obviously
+malformed.  This might be caused by a user tempering with the data, or the
+client code failed.  Most the time, it's okay to reply with ``400 Bad
+Request`` in that situation, but other times it is not and the code has to
+continue working.
+
+Yet you want to log that something fishy happened.  This is where loggers
+come in handy.  As of Flask 0.5 a logger is preconfigured for you to use.
+
+Here are some example log calls::
+
+    app.logger.debug('A value for debugging')
+    app.logger.warning('A warning ocurred (%d apples)', 42)
+    app.logger.error('An error occoured')
+
+The attached :attr:`~flask.Flask.logger` is a standard logging
+:class:`~logging.Logger`, so head over to the official stdlib
+documentation for more information.
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,flask.py,flask.py,flask.py,Added a documentation chapter about logging,"diff --git a/flask.py b/flask.py
index 72c24029..9a919f7f 100644
--- a/flask.py
+++ b/flask.py
@@ -666,7 +666,7 @@ class Flask(_PackageBoundObject):
     #: .. versionadded:: 0.5
     debug_log_format = (
         '-' * 80 + '\n' +
-        '%(levelname)s in %(module)s, %(filename)s:%(lineno)d]:\n' +
+        '%(levelname)s in %(module)s, %(pathname)s:%(lineno)d]:\n' +
         '%(message)s\n' +
         '-' * 80
     )
@@ -769,7 +769,12 @@ class Flask(_PackageBoundObject):
     def logger(self):
         """"""A :class:`logging.Logger` object for this application.  The
         default configuration is to log to stderr if the application is
-        in debug mode.
+        in debug mode.  This logger can be used to (surprise) log messages.
+        Here some examples::
+
+            app.logger.debug('A value for debugging')
+            app.logger.warning('A warning ocurred (%d apples)', 42)
+            app.logger.error('An error occoured')
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
@@ -1085,8 +1090,6 @@ class Flask(_PackageBoundObject):
             return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
             return self.handle_http_exception(e)
-        except Exception, e:
-            return self.handle_exception(e)
 
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
@@ -1176,11 +1179,14 @@ class Flask(_PackageBoundObject):
                                exception context to start the response
         """"""
         with self.request_context(environ):
+            try:
                 rv = self.preprocess_request()
                 if rv is None:
                     rv = self.dispatch_request()
                 response = self.make_response(rv)
                 response = self.process_response(response)
+            except Exception, e:
+                response = self.make_response(self.handle_exception(e))
             return response(environ, start_response)
 
     def request_context(self, environ):
","diff --git a/flask.py b/flask.py
index 72c24029..9a919f7f 100644
--- a/flask.py
+++ b/flask.py
@@ -666,7 +666,7 @@ class Flask(_PackageBoundObject):
     #: .. versionadded:: 0.5
     debug_log_format = (
         '-' * 80 + '\n' +
-        '%(levelname)s in %(module)s, %(filename)s:%(lineno)d]:\n' +
+        '%(levelname)s in %(module)s, %(pathname)s:%(lineno)d]:\n' +
         '%(message)s\n' +
         '-' * 80
     )
@@ -769,7 +769,12 @@ class Flask(_PackageBoundObject):
     def logger(self):
         """"""A :class:`logging.Logger` object for this application.  The
         default configuration is to log to stderr if the application is
-        in debug mode.
+        in debug mode.  This logger can be used to (surprise) log messages.
+        Here some examples::
+
+            app.logger.debug('A value for debugging')
+            app.logger.warning('A warning ocurred (%d apples)', 42)
+            app.logger.error('An error occoured')
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
@@ -1085,8 +1090,6 @@ class Flask(_PackageBoundObject):
             return self.view_functions[req.endpoint](**req.view_args)
         except HTTPException, e:
             return self.handle_http_exception(e)
-        except Exception, e:
-            return self.handle_exception(e)
 
     def make_response(self, rv):
         """"""Converts the return value from a view function to a real
@@ -1176,11 +1179,14 @@ class Flask(_PackageBoundObject):
                                exception context to start the response
         """"""
         with self.request_context(environ):
+            try:
                 rv = self.preprocess_request()
                 if rv is None:
                     rv = self.dispatch_request()
                 response = self.make_response(rv)
                 response = self.process_response(response)
+            except Exception, e:
+                response = self.make_response(self.handle_exception(e))
             return response(environ, start_response)
 
     def request_context(self, environ):
"
e7f67e13339073007a84271cce91200bfdb81006,ea5e654e9e19aab5089f9a71e679bcca11581e86,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added a documentation chapter about logging,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6cde2a3c..762b3913 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -645,6 +645,28 @@ class LoggingTestCase(unittest.TestCase):
         assert '1/0' in err
         assert 'ZeroDivisionError:' in err
 
+    def test_processor_exceptions(self):
+        app = flask.Flask(__name__)
+        @app.before_request
+        def before_request():
+            if trigger == 'before':
+                1/0
+        @app.after_request
+        def after_request(response):
+            if trigger == 'after':
+                1/0
+            return response
+        @app.route('/')
+        def index():
+            return 'Foo'
+        @app.errorhandler(500)
+        def internal_server_error(e):
+            return 'Hello Server Error', 500
+        for trigger in 'before', 'after':
+            rv = app.test_client().get('/')
+            assert rv.status_code == 500
+            assert rv.data == 'Hello Server Error'
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6cde2a3c..762b3913 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -645,6 +645,28 @@ class LoggingTestCase(unittest.TestCase):
         assert '1/0' in err
         assert 'ZeroDivisionError:' in err
 
+    def test_processor_exceptions(self):
+        app = flask.Flask(__name__)
+        @app.before_request
+        def before_request():
+            if trigger == 'before':
+                1/0
+        @app.after_request
+        def after_request(response):
+            if trigger == 'after':
+                1/0
+            return response
+        @app.route('/')
+        def index():
+            return 'Foo'
+        @app.errorhandler(500)
+        def internal_server_error(e):
+            return 'Hello Server Error', 500
+        for trigger in 'before', 'after':
+            rv = app.test_client().get('/')
+            assert rv.status_code == 500
+            assert rv.data == 'Hello Server Error'
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
"
ea5e654e9e19aab5089f9a71e679bcca11581e86,267f5f5c82a1ec9966bfb4e1e0c3f7cc4c80ed12,docs/errorhandling.rst,docs/errorhandling.rst,docs/errorhandling.rst,Added a pattern for custom error pages.,"diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index c83acbc7..82ed3b6c 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -1,3 +1,5 @@
+.. _application-errors:
+
 Handling Application Errors
 ===========================
 
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index c83acbc7..82ed3b6c 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -1,3 +1,5 @@
+.. _application-errors:
+
 Handling Application Errors
 ===========================
 
"
ea5e654e9e19aab5089f9a71e679bcca11581e86,267f5f5c82a1ec9966bfb4e1e0c3f7cc4c80ed12,docs/patterns/errorpages.rst,,docs/patterns/errorpages.rst,Added a pattern for custom error pages.,"diff --git a/docs/patterns/errorpages.rst b/docs/patterns/errorpages.rst
new file mode 100644
index 00000000..5b4f6e80
--- /dev/null
+++ b/docs/patterns/errorpages.rst
@@ -0,0 +1,77 @@
+Custom Error Pages
+==================
+
+Flask comes with a handy :func:`~flask.abort` function that aborts a
+request with an HTTP error code early.  It will also provide a plain black
+and white error page for you with a basic description, but nothing fancy.
+
+Depening on the error code it is less or more likely for the user to
+actually see such an error.
+
+Common Error Codes
+------------------
+
+The following error codes are some that are often displayed to the user,
+even if the application behaves correctly:
+
+*404 Not Found*
+    The good old ""chap, you made a mistake typing that URL"" message.  So
+    common that even novices to the internet know that 404 means: damn,
+    the thing I was looking for is not there.  It's a very good idea to
+    make sure there is actually something useful on a 404 page, at least a
+    link back to the index.
+
+*403 Forbidden*
+    If you have some kind of access control on your website, you will have
+    to send a 403 code for disallowed resources.  So make sure the user
+    is not lost when he tries to access a resource he cannot access.
+
+*410 Gone*
+    Did you know that there the ""404 Not Found"" has a brother named ""410
+    Gone""?  Few people actually implement that, but the idea is that
+    resources that previously existed and got deleted answer with 410
+    instead of 404.  If you are not deleting documents permanently from
+    the database but just mark them as deleted, do the user a favour and
+    use the 410 code instead and display a message that what he was
+    looking for was deleted for all ethernity.
+
+*500 Internal Server Error*
+    Usually happens on programming errors or if the server is overloaded.
+    A terrible good idea to have a nice page there, because your
+    application *will* fail sooner or later (see also:
+    :ref:`application-errors`).
+
+
+Error Handlers
+--------------
+
+An error handler is a function, just like a view function, but it is
+called when an error happens and is passed that error.  The error is most
+likely a :exc:`~werkzeug.exceptions.HTTPException`, but in one case it
+can be a different error: a handler for internal server errors will be
+passed other exception instances as well if they are uncought.
+
+An error handler is registered with the :meth:`~flask.Flask.errorhandler`
+decorator and the error code of the exception.  Keep in mind that Flask
+will *not* set the error code for you, so make sure to also provide the
+HTTP status code when returning a response.
+
+Here an example implementation for a ""404 Page Not Found"" exception::
+
+    from flask import render_template
+
+    @app.errorhandler(404)
+    def page_not_found(e):
+        return render_template('404.html'), 404
+
+An example template might be this:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block title %}Page Not Found{% endblock %}
+   {% block body %}
+     <h1>Page Not Found</h1>
+     <p>What you were looking for is just not there.
+     <p><a href=""{{ url_for('index') }}"">go somewhere nice</a>
+   {% endblock %}
","diff --git a/docs/patterns/errorpages.rst b/docs/patterns/errorpages.rst
new file mode 100644
index 00000000..5b4f6e80
--- /dev/null
+++ b/docs/patterns/errorpages.rst
@@ -0,0 +1,77 @@
+Custom Error Pages
+==================
+
+Flask comes with a handy :func:`~flask.abort` function that aborts a
+request with an HTTP error code early.  It will also provide a plain black
+and white error page for you with a basic description, but nothing fancy.
+
+Depening on the error code it is less or more likely for the user to
+actually see such an error.
+
+Common Error Codes
+------------------
+
+The following error codes are some that are often displayed to the user,
+even if the application behaves correctly:
+
+*404 Not Found*
+    The good old ""chap, you made a mistake typing that URL"" message.  So
+    common that even novices to the internet know that 404 means: damn,
+    the thing I was looking for is not there.  It's a very good idea to
+    make sure there is actually something useful on a 404 page, at least a
+    link back to the index.
+
+*403 Forbidden*
+    If you have some kind of access control on your website, you will have
+    to send a 403 code for disallowed resources.  So make sure the user
+    is not lost when he tries to access a resource he cannot access.
+
+*410 Gone*
+    Did you know that there the ""404 Not Found"" has a brother named ""410
+    Gone""?  Few people actually implement that, but the idea is that
+    resources that previously existed and got deleted answer with 410
+    instead of 404.  If you are not deleting documents permanently from
+    the database but just mark them as deleted, do the user a favour and
+    use the 410 code instead and display a message that what he was
+    looking for was deleted for all ethernity.
+
+*500 Internal Server Error*
+    Usually happens on programming errors or if the server is overloaded.
+    A terrible good idea to have a nice page there, because your
+    application *will* fail sooner or later (see also:
+    :ref:`application-errors`).
+
+
+Error Handlers
+--------------
+
+An error handler is a function, just like a view function, but it is
+called when an error happens and is passed that error.  The error is most
+likely a :exc:`~werkzeug.exceptions.HTTPException`, but in one case it
+can be a different error: a handler for internal server errors will be
+passed other exception instances as well if they are uncought.
+
+An error handler is registered with the :meth:`~flask.Flask.errorhandler`
+decorator and the error code of the exception.  Keep in mind that Flask
+will *not* set the error code for you, so make sure to also provide the
+HTTP status code when returning a response.
+
+Here an example implementation for a ""404 Page Not Found"" exception::
+
+    from flask import render_template
+
+    @app.errorhandler(404)
+    def page_not_found(e):
+        return render_template('404.html'), 404
+
+An example template might be this:
+
+.. sourcecode:: html+jinja
+
+   {% extends ""layout.html"" %}
+   {% block title %}Page Not Found{% endblock %}
+   {% block body %}
+     <h1>Page Not Found</h1>
+     <p>What you were looking for is just not there.
+     <p><a href=""{{ url_for('index') }}"">go somewhere nice</a>
+   {% endblock %}
"
ea5e654e9e19aab5089f9a71e679bcca11581e86,267f5f5c82a1ec9966bfb4e1e0c3f7cc4c80ed12,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added a pattern for custom error pages.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index ec3011f6..61162372 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -27,3 +27,4 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    templateinheritance
    flashing
    jquery
+   errorpages
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index ec3011f6..61162372 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -27,3 +27,4 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    templateinheritance
    flashing
    jquery
+   errorpages
"
267f5f5c82a1ec9966bfb4e1e0c3f7cc4c80ed12,54c3df60cd533ea80d347f6715ee84f6a560b5d5,docs/conf.py,docs/conf.py,docs/conf.py,Fixed a doc config error,"diff --git a/docs/conf.py b/docs/conf.py
index b4731fff..5127a66c 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -49,9 +49,9 @@ import pkg_resources
 # |version| and |release|, also used in various other places throughout the
 # built documents.
 release = __import__('pkg_resources').get_distribution('Flask').version
+if 'dev' in release:
+    release = release.split('dev')[0] + 'dev'
 version = '.'.join(release.split('.')[:2])
-if 'dev' in version:
-    version = version.split('dev')[0]
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
","diff --git a/docs/conf.py b/docs/conf.py
index b4731fff..5127a66c 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -49,9 +49,9 @@ import pkg_resources
 # |version| and |release|, also used in various other places throughout the
 # built documents.
 release = __import__('pkg_resources').get_distribution('Flask').version
+if 'dev' in release:
+    release = release.split('dev')[0] + 'dev'
 version = '.'.join(release.split('.')[:2])
-if 'dev' in version:
-    version = version.split('dev')[0]
 
 # The language for content autogenerated by Sphinx. Refer to documentation
 # for a list of supported languages.
"
54c3df60cd533ea80d347f6715ee84f6a560b5d5,7bb0e33a687b3498c401a8dbcf7864d543a1817a,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Changed target audience section,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index 8abd4549..34992a18 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -76,11 +76,13 @@ So always keep that in mind when doing web development.
 Target Audience
 ---------------
 
-Is Flask for you?  If your application small-ish (less than 4000 lines of
-Python code) and does not depend on too complex database structures, Flask
-is the Framework for you.  It was designed from the ground up to be easy
-to use, based on established principles, good intentions and on top of two
-established libraries in widespread usage.
+Is Flask for you?  If your application small-ish and does not depend on
+too complex database structures, Flask is the Framework for you.  It was
+designed from the ground up to be easy to use, based on established
+principles, good intentions and on top of two established libraries in
+widespread usage.  Recent versions of Flask scale nicely within reasonable
+bounds and if you grow larger, you won't have any troubles adjusting Flask
+for your new application size.
 
 Flask serves two purposes: it's an example of how to create a minimal and
 opinionated framework on top of Werkzeug to show how this can be done, and
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index 8abd4549..34992a18 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -76,11 +76,13 @@ So always keep that in mind when doing web development.
 Target Audience
 ---------------
 
-Is Flask for you?  If your application small-ish (less than 4000 lines of
-Python code) and does not depend on too complex database structures, Flask
-is the Framework for you.  It was designed from the ground up to be easy
-to use, based on established principles, good intentions and on top of two
-established libraries in widespread usage.
+Is Flask for you?  If your application small-ish and does not depend on
+too complex database structures, Flask is the Framework for you.  It was
+designed from the ground up to be easy to use, based on established
+principles, good intentions and on top of two established libraries in
+widespread usage.  Recent versions of Flask scale nicely within reasonable
+bounds and if you grow larger, you won't have any troubles adjusting Flask
+for your new application size.
 
 Flask serves two purposes: it's an example of how to create a minimal and
 opinionated framework on top of Werkzeug to show how this can be done, and
"
7bb0e33a687b3498c401a8dbcf7864d543a1817a,b26aeba972686b9cb9a9b111e1bc8997e1f259c8,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed a testcase,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 762b3913..14e3e384 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -614,7 +614,8 @@ class LoggingTestCase(unittest.TestCase):
         with catch_stderr() as err:
             rv = c.get('/')
             out = err.getvalue()
-            assert 'WARNING in flask_tests, flask_tests.py' in out
+            assert 'WARNING in flask_tests,' in out
+            assert 'flask_tests.py' in out
             assert 'the standard library is dead' in out
 
         with catch_stderr() as err:
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 762b3913..14e3e384 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -614,7 +614,8 @@ class LoggingTestCase(unittest.TestCase):
         with catch_stderr() as err:
             rv = c.get('/')
             out = err.getvalue()
-            assert 'WARNING in flask_tests, flask_tests.py' in out
+            assert 'WARNING in flask_tests,' in out
+            assert 'flask_tests.py' in out
             assert 'the standard library is dead' in out
 
         with catch_stderr() as err:
"
b26aeba972686b9cb9a9b111e1bc8997e1f259c8,e84140aba2786655bbddcedb363d16de1e285441,flask.py,flask.py,flask.py,Started working on config support,"diff --git a/flask.py b/flask.py
index 9a919f7f..170b9abb 100644
--- a/flask.py
+++ b/flask.py
@@ -606,6 +606,21 @@ class Module(_PackageBoundObject):
         self._register_events.append(func)
 
 
+class ConfigAttribute(object):
+    """"""Makes an attribute forward to the config""""""
+
+    def __init__(self, name):
+        self.__name__ = name
+
+    def __get__(self, obj, type=None):
+        if obj is None:
+            return self
+        return obj.config[self.__name__]
+
+    def __set__(self, obj, value):
+        obj.config[self.__name__] = value
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -639,25 +654,31 @@ class Flask(_PackageBoundObject):
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
+    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: application.  In debug mode the debugger will kick in when an unhandled
+    #: exception ocurrs and the integrated server will automatically reload
+    #: the application if changes in the code are detected.
+    debug = ConfigAttribute('debug')
+
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = None
+    secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = 'session'
+    session_cookie_name = ConfigAttribute('session.cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = timedelta(days=31)
+    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = False
+    use_x_sendfile = ConfigAttribute('use_x_sendfile')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -677,15 +698,22 @@ class Flask(_PackageBoundObject):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, import_name):
+    #: default configuration parameters
+    default_config = ImmutableDict({
+        'debug':                                False,
+        'secret_key':                           None,
+        'session.cookie_name':                  'session',
+        'session.permanent_lifetime':           timedelta(days=31),
+        'use_x_sendfile':                       False
+    })
+
+    def __init__(self, import_name, config=None):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the debug flag.  Set this to `True` to enable debugging of
-        #: the application.  In debug mode the debugger will kick in
-        #: when an unhandled exception ocurrs and the integrated server
-        #: will automatically reload the application if changes in the
-        #: code are detected.
-        self.debug = False
+        #: the configuration dictionary
+        self.config = self.default_config.copy()
+        if config:
+            self.config.update(config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
","diff --git a/flask.py b/flask.py
index 9a919f7f..170b9abb 100644
--- a/flask.py
+++ b/flask.py
@@ -606,6 +606,21 @@ class Module(_PackageBoundObject):
         self._register_events.append(func)
 
 
+class ConfigAttribute(object):
+    """"""Makes an attribute forward to the config""""""
+
+    def __init__(self, name):
+        self.__name__ = name
+
+    def __get__(self, obj, type=None):
+        if obj is None:
+            return self
+        return obj.config[self.__name__]
+
+    def __set__(self, obj, value):
+        obj.config[self.__name__] = value
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -639,25 +654,31 @@ class Flask(_PackageBoundObject):
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
+    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: application.  In debug mode the debugger will kick in when an unhandled
+    #: exception ocurrs and the integrated server will automatically reload
+    #: the application if changes in the code are detected.
+    debug = ConfigAttribute('debug')
+
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = None
+    secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = 'session'
+    session_cookie_name = ConfigAttribute('session.cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = timedelta(days=31)
+    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = False
+    use_x_sendfile = ConfigAttribute('use_x_sendfile')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -677,15 +698,22 @@ class Flask(_PackageBoundObject):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, import_name):
+    #: default configuration parameters
+    default_config = ImmutableDict({
+        'debug':                                False,
+        'secret_key':                           None,
+        'session.cookie_name':                  'session',
+        'session.permanent_lifetime':           timedelta(days=31),
+        'use_x_sendfile':                       False
+    })
+
+    def __init__(self, import_name, config=None):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the debug flag.  Set this to `True` to enable debugging of
-        #: the application.  In debug mode the debugger will kick in
-        #: when an unhandled exception ocurrs and the integrated server
-        #: will automatically reload the application if changes in the
-        #: code are detected.
-        self.debug = False
+        #: the configuration dictionary
+        self.config = self.default_config.copy()
+        if config:
+            self.config.update(config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
"
e84140aba2786655bbddcedb363d16de1e285441,c4cac0abc1a04710a25dcfc8d7f1b2de173546a8,docs/api.rst,docs/api.rst,docs/api.rst,Improved configuration support.,"diff --git a/docs/api.rst b/docs/api.rst
index e13e9524..838b0bd5 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -278,3 +278,8 @@ Template Rendering
 .. autofunction:: render_template_string
 
 .. autofunction:: get_template_attribute
+
+Configuration
+-------------
+
+.. autoclass:: Config
","diff --git a/docs/api.rst b/docs/api.rst
index e13e9524..838b0bd5 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -278,3 +278,8 @@ Template Rendering
 .. autofunction:: render_template_string
 
 .. autofunction:: get_template_attribute
+
+Configuration
+-------------
+
+.. autoclass:: Config
"
e84140aba2786655bbddcedb363d16de1e285441,c4cac0abc1a04710a25dcfc8d7f1b2de173546a8,flask.py,flask.py,flask.py,Improved configuration support.,"diff --git a/flask.py b/flask.py
index 170b9abb..612e0b1f 100644
--- a/flask.py
+++ b/flask.py
@@ -19,7 +19,8 @@ from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property, wrap_file, Headers
+     ImmutableDict, cached_property, wrap_file, Headers, \
+     import_string
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -621,6 +622,90 @@ class ConfigAttribute(object):
         obj.config[self.__name__] = value
 
 
+class Config(dict):
+    """"""Works exactly like a dict but provides ways to fill it from files
+    or special dictionaries.  There are two common patterns to populate the
+    config.
+
+    Either you can fill the config from a config file::
+
+        app.config.from_pyfile('yourconfig.cfg')
+
+    Or alternatively you can define the configuration options in the
+    module that calls :meth:`from_module` or provide an import path to
+    a module that should be loaded.  It is also possible to tell it to
+    use the same module and with that provide the configuration values
+    just before the call::
+
+        DEBUG = True
+        SECRET_KEY = 'development key'
+        app.config.from_module(__name__)
+
+    In both cases (loading from any Python file or loading from modules),
+    only uppercase keys are added to the config.  The actual keys in the
+    config are however lowercased so they are converted for you.  This makes
+    it possible to use lowercase values in the config file for temporary
+    values that are not added to the config or to define the config keys in
+    the same file that implements the application.
+
+    :param root_path: path to which files are read relative from.  When the
+                      config object is created by the application, this is
+                      the application's :attr:`~flask.Flask.root_path`.
+    :param defaults: an optional dictionary of default values
+    """"""
+
+    def __init__(self, root_path, defaults=None):
+        dict.__init__(self, defaults or {})
+        self.root_path = root_path
+
+    def from_pyfile(self, filename):
+        """"""Updates the values in the config from a Python file.  This function
+        behaves as if the file was imported as module with the
+        :meth:`from_module` function.
+
+        :param filename: the filename of the config.  This can either be an
+                         absolute filename or a filename relative to the
+                         root path.
+        """"""
+        filename = os.path.join(self.root_path, filename)
+        d = type(sys)('config')
+        d.__file__ = filename
+        execfile(filename, d.__dict__)
+        self.from_module(d)
+
+    def from_module(self, module):
+        """"""Updates the values from the given module.  A module can be of one
+        of the following two types:
+
+        -   a string: in this case the module with that name will be imported
+        -   an actual module reference: that module is used directly
+
+        Just the uppercase variables in that module are stored in the config
+        after lowercasing.  Example usage::
+
+            app.config.from_module('yourapplication.default_config')
+            from yourapplication import default_config
+            app.config.from_module(default_config)
+
+        You should not use this function to load the actual configuration but
+        rather configuration defaults.  The actual config should be loaded
+        with :meth;`from_pyfile` and ideally from a location not within the
+        package because the package might be installed system wide.
+
+        :param module: an import name or module
+        """"""
+        if isinstance(module, basestring):
+            d = import_string(module).__dict__
+        else:
+            d = module.__dict__
+        for key, value in d.iteritems():
+            if key.isupper():
+                self[key.lower()] = value
+
+    def __repr__(self):
+        return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -666,12 +751,12 @@ class Flask(_PackageBoundObject):
     secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session.cookie_name')
+    session_cookie_name = ConfigAttribute('session_cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
+    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
@@ -702,18 +787,18 @@ class Flask(_PackageBoundObject):
     default_config = ImmutableDict({
         'debug':                                False,
         'secret_key':                           None,
-        'session.cookie_name':                  'session',
-        'session.permanent_lifetime':           timedelta(days=31),
+        'session_cookie_name':                  'session',
+        'permanent_session_lifetime':           timedelta(days=31),
         'use_x_sendfile':                       False
     })
 
-    def __init__(self, import_name, config=None):
+    def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary
-        self.config = self.default_config.copy()
-        if config:
-            self.config.update(config)
+        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: exactly like a regular dictionary but supports additional methods
+        #: to load a config from files.
+        self.config = Config(self.root_path, self.default_config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
","diff --git a/flask.py b/flask.py
index 170b9abb..612e0b1f 100644
--- a/flask.py
+++ b/flask.py
@@ -19,7 +19,8 @@ from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property, wrap_file, Headers
+     ImmutableDict, cached_property, wrap_file, Headers, \
+     import_string
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -621,6 +622,90 @@ class ConfigAttribute(object):
         obj.config[self.__name__] = value
 
 
+class Config(dict):
+    """"""Works exactly like a dict but provides ways to fill it from files
+    or special dictionaries.  There are two common patterns to populate the
+    config.
+
+    Either you can fill the config from a config file::
+
+        app.config.from_pyfile('yourconfig.cfg')
+
+    Or alternatively you can define the configuration options in the
+    module that calls :meth:`from_module` or provide an import path to
+    a module that should be loaded.  It is also possible to tell it to
+    use the same module and with that provide the configuration values
+    just before the call::
+
+        DEBUG = True
+        SECRET_KEY = 'development key'
+        app.config.from_module(__name__)
+
+    In both cases (loading from any Python file or loading from modules),
+    only uppercase keys are added to the config.  The actual keys in the
+    config are however lowercased so they are converted for you.  This makes
+    it possible to use lowercase values in the config file for temporary
+    values that are not added to the config or to define the config keys in
+    the same file that implements the application.
+
+    :param root_path: path to which files are read relative from.  When the
+                      config object is created by the application, this is
+                      the application's :attr:`~flask.Flask.root_path`.
+    :param defaults: an optional dictionary of default values
+    """"""
+
+    def __init__(self, root_path, defaults=None):
+        dict.__init__(self, defaults or {})
+        self.root_path = root_path
+
+    def from_pyfile(self, filename):
+        """"""Updates the values in the config from a Python file.  This function
+        behaves as if the file was imported as module with the
+        :meth:`from_module` function.
+
+        :param filename: the filename of the config.  This can either be an
+                         absolute filename or a filename relative to the
+                         root path.
+        """"""
+        filename = os.path.join(self.root_path, filename)
+        d = type(sys)('config')
+        d.__file__ = filename
+        execfile(filename, d.__dict__)
+        self.from_module(d)
+
+    def from_module(self, module):
+        """"""Updates the values from the given module.  A module can be of one
+        of the following two types:
+
+        -   a string: in this case the module with that name will be imported
+        -   an actual module reference: that module is used directly
+
+        Just the uppercase variables in that module are stored in the config
+        after lowercasing.  Example usage::
+
+            app.config.from_module('yourapplication.default_config')
+            from yourapplication import default_config
+            app.config.from_module(default_config)
+
+        You should not use this function to load the actual configuration but
+        rather configuration defaults.  The actual config should be loaded
+        with :meth;`from_pyfile` and ideally from a location not within the
+        package because the package might be installed system wide.
+
+        :param module: an import name or module
+        """"""
+        if isinstance(module, basestring):
+            d = import_string(module).__dict__
+        else:
+            d = module.__dict__
+        for key, value in d.iteritems():
+            if key.isupper():
+                self[key.lower()] = value
+
+    def __repr__(self):
+        return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -666,12 +751,12 @@ class Flask(_PackageBoundObject):
     secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session.cookie_name')
+    session_cookie_name = ConfigAttribute('session_cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
+    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
@@ -702,18 +787,18 @@ class Flask(_PackageBoundObject):
     default_config = ImmutableDict({
         'debug':                                False,
         'secret_key':                           None,
-        'session.cookie_name':                  'session',
-        'session.permanent_lifetime':           timedelta(days=31),
+        'session_cookie_name':                  'session',
+        'permanent_session_lifetime':           timedelta(days=31),
         'use_x_sendfile':                       False
     })
 
-    def __init__(self, import_name, config=None):
+    def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary
-        self.config = self.default_config.copy()
-        if config:
-            self.config.update(config)
+        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: exactly like a regular dictionary but supports additional methods
+        #: to load a config from files.
+        self.config = Config(self.root_path, self.default_config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
"
e84140aba2786655bbddcedb363d16de1e285441,c4cac0abc1a04710a25dcfc8d7f1b2de173546a8,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Improved configuration support.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 14e3e384..33353c5b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -27,6 +27,11 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+# config keys used for the ConfigTestCase
+TEST_KEY = 'foo'
+SECRET_KEY = 'devkey'
+
+
 @contextmanager
 def catch_stderr():
     old_stderr = sys.stderr
@@ -669,6 +674,24 @@ class LoggingTestCase(unittest.TestCase):
             assert rv.data == 'Hello Server Error'
 
 
+class ConfigTestCase(unittest.TestCase):
+
+    def common_module_test(self, app):
+        assert app.secret_key == 'devkey'
+        assert app.config['test_key'] == 'foo'
+        assert 'ConfigTestCase' not in app.config
+
+    def test_config_from_file(self):
+        app = flask.Flask(__name__)
+        app.config.from_pyfile('flask_tests.py')
+        self.common_module_test(app)
+
+    def test_config_from_module(self):
+        app = flask.Flask(__name__)
+        app.config.from_module(__name__)
+        self.common_module_test(app)
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -679,6 +702,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ModuleTestCase))
     suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(LoggingTestCase))
+    suite.addTest(unittest.makeSuite(ConfigTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 14e3e384..33353c5b 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -27,6 +27,11 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+# config keys used for the ConfigTestCase
+TEST_KEY = 'foo'
+SECRET_KEY = 'devkey'
+
+
 @contextmanager
 def catch_stderr():
     old_stderr = sys.stderr
@@ -669,6 +674,24 @@ class LoggingTestCase(unittest.TestCase):
             assert rv.data == 'Hello Server Error'
 
 
+class ConfigTestCase(unittest.TestCase):
+
+    def common_module_test(self, app):
+        assert app.secret_key == 'devkey'
+        assert app.config['test_key'] == 'foo'
+        assert 'ConfigTestCase' not in app.config
+
+    def test_config_from_file(self):
+        app = flask.Flask(__name__)
+        app.config.from_pyfile('flask_tests.py')
+        self.common_module_test(app)
+
+    def test_config_from_module(self):
+        app = flask.Flask(__name__)
+        app.config.from_module(__name__)
+        self.common_module_test(app)
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -679,6 +702,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ModuleTestCase))
     suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(LoggingTestCase))
+    suite.addTest(unittest.makeSuite(ConfigTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
"
54c3df60cd533ea80d347f6715ee84f6a560b5d5,395ff8120ccf055614d03db7d2360ab1182c7c10,docs/patterns/distribute.rst,docs/patterns/distribute.rst,docs/patterns/distribute.rst,Fix typo.,"diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 76d4462a..89a7e864 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -98,8 +98,8 @@ you.  What you should do, is to create a `MANIFEST.in` file next to your
 `setup.py` file.  This file lists all the files that should be added to
 your tarball::
 
-    recursive-include yourapplication/templates
-    recursive-include yourapplication/static
+    recursive-include yourapplication/templates *
+    recursive-include yourapplication/static *
 
 Don't forget that even if you enlist them in your `MANIFEST.in` file, they
 won't be installed for you unless you set the `include_package_data`
","diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 76d4462a..89a7e864 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -98,8 +98,8 @@ you.  What you should do, is to create a `MANIFEST.in` file next to your
 `setup.py` file.  This file lists all the files that should be added to
 your tarball::
 
-    recursive-include yourapplication/templates
-    recursive-include yourapplication/static
+    recursive-include yourapplication/templates *
+    recursive-include yourapplication/static *
 
 Don't forget that even if you enlist them in your `MANIFEST.in` file, they
 won't be installed for you unless you set the `include_package_data`
"
e52f073e3e76a88e24a8a63eb5491dfc6e537a40,854e0e26d16408760072308c44b9160a9fb39abd,docs/api.rst,docs/api.rst,docs/api.rst,Fixed some documentation issues. This fixes #41.,"diff --git a/docs/api.rst b/docs/api.rst
index e13e9524..2225ee07 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -210,6 +210,12 @@ thing, like it does for :class:`request` and :class:`session`.
 Useful Functions and Classes
 ----------------------------
 
+.. data:: current_app
+
+   Points to the application handling the request.  This is useful for
+   extensions that want to support multiple applications running side
+   by side.
+
 .. autofunction:: url_for
 
 .. function:: abort(code)
","diff --git a/docs/api.rst b/docs/api.rst
index e13e9524..2225ee07 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -210,6 +210,12 @@ thing, like it does for :class:`request` and :class:`session`.
 Useful Functions and Classes
 ----------------------------
 
+.. data:: current_app
+
+   Points to the application handling the request.  This is useful for
+   extensions that want to support multiple applications running side
+   by side.
+
 .. autofunction:: url_for
 
 .. function:: abort(code)
"
e52f073e3e76a88e24a8a63eb5491dfc6e537a40,854e0e26d16408760072308c44b9160a9fb39abd,docs/patterns/distribute.rst,docs/patterns/distribute.rst,docs/patterns/distribute.rst,Fixed some documentation issues. This fixes #41.,"diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 89a7e864..2826550c 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -25,8 +25,8 @@ Flask itself, and all the libraries you can find on the cheeseshop
 are distributed with either distribute, the older setuptools or distutils.
 
 In this case we assume your application is called
-`yourapplication.py` and you are not using a module, but a `package
-<larger-applications>`_.  Distributing resources with standard modules is
+`yourapplication.py` and you are not using a module, but a :ref:`package
+<larger-applications>`.  Distributing resources with standard modules is
 not supported by `distribute`_ so we will not bother with it.  If you have
 not yet converted your application into a package, head over to the
 :ref:`larger-applications` pattern to see how this can be done.
","diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 89a7e864..2826550c 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -25,8 +25,8 @@ Flask itself, and all the libraries you can find on the cheeseshop
 are distributed with either distribute, the older setuptools or distutils.
 
 In this case we assume your application is called
-`yourapplication.py` and you are not using a module, but a `package
-<larger-applications>`_.  Distributing resources with standard modules is
+`yourapplication.py` and you are not using a module, but a :ref:`package
+<larger-applications>`.  Distributing resources with standard modules is
 not supported by `distribute`_ so we will not bother with it.  If you have
 not yet converted your application into a package, head over to the
 :ref:`larger-applications` pattern to see how this can be done.
"
e52f073e3e76a88e24a8a63eb5491dfc6e537a40,854e0e26d16408760072308c44b9160a9fb39abd,docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,docs/patterns/fileuploads.rst,Fixed some documentation issues. This fixes #41.,"diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
index 6d0bd0a1..1174ebfc 100644
--- a/docs/patterns/fileuploads.rst
+++ b/docs/patterns/fileuploads.rst
@@ -54,7 +54,7 @@ the file and redirects the user to the URL for the uploaded file::
         return '.' in filename and \
                filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
 
-    @app.route('/')
+    @app.route('/', methods=['GET', 'POST'])
     def upload_file():
         if request.method == 'POST':
             file = request.files['file']
","diff --git a/docs/patterns/fileuploads.rst b/docs/patterns/fileuploads.rst
index 6d0bd0a1..1174ebfc 100644
--- a/docs/patterns/fileuploads.rst
+++ b/docs/patterns/fileuploads.rst
@@ -54,7 +54,7 @@ the file and redirects the user to the URL for the uploaded file::
         return '.' in filename and \
                filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
 
-    @app.route('/')
+    @app.route('/', methods=['GET', 'POST'])
     def upload_file():
         if request.method == 'POST':
             file = request.files['file']
"
854e0e26d16408760072308c44b9160a9fb39abd,a5421c29acb6bfbd095dbeb4c8180a61bd1d4dab,docs/deploying/others.rst,docs/deploying/others.rst,docs/deploying/others.rst,Added documentation for Gunicorn,"diff --git a/docs/deploying/others.rst b/docs/deploying/others.rst
index 4e2f966c..1ec94be4 100644
--- a/docs/deploying/others.rst
+++ b/docs/deploying/others.rst
@@ -46,3 +46,18 @@ event loop::
 .. _Gevent: http://www.gevent.org/
 .. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
 .. _libevent: http://monkey.org/~provos/libevent/
+
+
+Gunicorn
+--------
+
+`Gunicorn`_ 'Green Unicorn' is a WSGI HTTP Server for UNIX. It's a pre-fork
+worker model ported from Ruby's Unicorn project. It supports both `eventlet`_
+and `greenlet`_. Running a Flask application on this server is quite simple::
+
+    gunicorn myproject:app
+
+.. _Gunicorn: http://gunicorn.org/
+.. _eventlet: http://eventlet.net/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+
","diff --git a/docs/deploying/others.rst b/docs/deploying/others.rst
index 4e2f966c..1ec94be4 100644
--- a/docs/deploying/others.rst
+++ b/docs/deploying/others.rst
@@ -46,3 +46,18 @@ event loop::
 .. _Gevent: http://www.gevent.org/
 .. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
 .. _libevent: http://monkey.org/~provos/libevent/
+
+
+Gunicorn
+--------
+
+`Gunicorn`_ 'Green Unicorn' is a WSGI HTTP Server for UNIX. It's a pre-fork
+worker model ported from Ruby's Unicorn project. It supports both `eventlet`_
+and `greenlet`_. Running a Flask application on this server is quite simple::
+
+    gunicorn myproject:app
+
+.. _Gunicorn: http://gunicorn.org/
+.. _eventlet: http://eventlet.net/
+.. _greenlet: http://codespeak.net/py/0.9.2/greenlet.html
+
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/conf.py,docs/conf.py,docs/conf.py,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/conf.py b/docs/conf.py
index 5127a66c..f9f7867e 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -190,6 +190,7 @@ latex_elements = {
     'pointsize':    '12pt',
     'preamble':     r'\usepackage{flaskstyle}'
 }
+latex_use_parts = True
 
 latex_additional_files = ['flaskstyle.sty', 'logo.pdf']
 
","diff --git a/docs/conf.py b/docs/conf.py
index 5127a66c..f9f7867e 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -190,6 +190,7 @@ latex_elements = {
     'pointsize':    '12pt',
     'preamble':     r'\usepackage{flaskstyle}'
 }
+latex_use_parts = True
 
 latex_additional_files = ['flaskstyle.sty', 'logo.pdf']
 
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/contents.rst.inc,docs/contents.rst.inc,,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
deleted file mode 100644
index 2e341107..00000000
--- a/docs/contents.rst.inc
+++ /dev/null
@@ -1,42 +0,0 @@
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
deleted file mode 100644
index 2e341107..00000000
--- a/docs/contents.rst.inc
+++ /dev/null
@@ -1,42 +0,0 @@
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/errorhandling.rst,docs/errorhandling.rst,docs/errorhandling.rst,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index 82ed3b6c..dcc2a2e9 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -163,6 +163,8 @@ Here is a list of useful formatting variables for the format string.  Note
 that this list is not complete, consult the official documentation of the
 :mod:`logging` package for a full list.
 
+.. tabularcolumns:: |p{3cm}|p{12cm}|
+
 +------------------+----------------------------------------------------+
 | Format           | Description                                        |
 +==================+====================================================+
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index 82ed3b6c..dcc2a2e9 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -163,6 +163,8 @@ Here is a list of useful formatting variables for the format string.  Note
 that this list is not complete, consult the official documentation of the
 :mod:`logging` package for a full list.
 
+.. tabularcolumns:: |p{3cm}|p{12cm}|
+
 +------------------+----------------------------------------------------+
 | Format           | Description                                        |
 +==================+====================================================+
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/flaskstyle.sty,docs/flaskstyle.sty,docs/flaskstyle.sty,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 71d9ccc7..1d870050 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -70,4 +70,13 @@
 \ChNumVar{\raggedleft \bfseries\Large}
 \ChTitleVar{\raggedleft \rm\Huge}
 
+% use inconsolata font
 \usepackage{inconsolata}
+
+% fix single quotes, for inconsolata. (does not work)
+%%\usepackage{textcomp}
+%%\begingroup
+%%  \catcode`'=\active
+%%  \g@addto@macro\@noligs{\let'\textsinglequote}
+%%  \endgroup
+%%\endinput
","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 71d9ccc7..1d870050 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -70,4 +70,13 @@
 \ChNumVar{\raggedleft \bfseries\Large}
 \ChTitleVar{\raggedleft \rm\Huge}
 
+% use inconsolata font
 \usepackage{inconsolata}
+
+% fix single quotes, for inconsolata. (does not work)
+%%\usepackage{textcomp}
+%%\begingroup
+%%  \catcode`'=\active
+%%  \g@addto@macro\@noligs{\let'\textsinglequote}
+%%  \endgroup
+%%\endinput
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/index.rst,docs/index.rst,docs/index.rst,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/index.rst b/docs/index.rst
index 2c3159c7..f2270422 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,3 +1,5 @@
+:orphan:
+
 Welcome to Flask
 ================
 
@@ -25,4 +27,45 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-.. include:: contents.rst.inc
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
","diff --git a/docs/index.rst b/docs/index.rst
index 2c3159c7..f2270422 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -1,3 +1,5 @@
+:orphan:
+
 Welcome to Flask
 ================
 
@@ -25,4 +27,45 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-.. include:: contents.rst.inc
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you:
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested:
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,docs/latexindex.rst,docs/latexindex.rst,docs/latexindex.rst,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index 0b611b45..a4aa0b4a 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -1,4 +1,38 @@
+:orphan:
+
 Flask Documentation
 ===================
 
-.. include:: contents.rst.inc
+User's Guide
+------------
+
+.. toctree::
+   :maxdepth: 3
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+.. toctree::
+   :maxdepth: 3
+
+   api
+
+Additional Notes
+----------------
+
+.. toctree::
+   :maxdepth: 3
+
+   design
+   license
+   changelog
","diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index 0b611b45..a4aa0b4a 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -1,4 +1,38 @@
+:orphan:
+
 Flask Documentation
 ===================
 
-.. include:: contents.rst.inc
+User's Guide
+------------
+
+.. toctree::
+   :maxdepth: 3
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+.. toctree::
+   :maxdepth: 3
+
+   api
+
+Additional Notes
+----------------
+
+.. toctree::
+   :maxdepth: 3
+
+   design
+   license
+   changelog
"
854e0e26d16408760072308c44b9160a9fb39abd,cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,flask.py,flask.py,flask.py,Beefed up latex output.  Unfortunately parts look ugly.,"diff --git a/flask.py b/flask.py
index 9a919f7f..ea3fcaa0 100644
--- a/flask.py
+++ b/flask.py
@@ -1097,6 +1097,8 @@ class Flask(_PackageBoundObject):
 
         The following types are allowed for `rv`:
 
+        .. tabularcolumns:: |p{3.5cm}|p{9.5cm}|
+
         ======================= ===========================================
         :attr:`response_class`  the object is returned unchanged
         :class:`str`            a response object is created with the
@@ -1222,3 +1224,8 @@ current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
 request = LocalProxy(lambda: _request_ctx_stack.top.request)
 session = LocalProxy(lambda: _request_ctx_stack.top.session)
 g = LocalProxy(lambda: _request_ctx_stack.top.g)
+
+
+# script interface to run a development server
+if __name__ == '__main__':
+    sys.exit(main(sys.argv))
","diff --git a/flask.py b/flask.py
index 9a919f7f..ea3fcaa0 100644
--- a/flask.py
+++ b/flask.py
@@ -1097,6 +1097,8 @@ class Flask(_PackageBoundObject):
 
         The following types are allowed for `rv`:
 
+        .. tabularcolumns:: |p{3.5cm}|p{9.5cm}|
+
         ======================= ===========================================
         :attr:`response_class`  the object is returned unchanged
         :class:`str`            a response object is created with the
@@ -1222,3 +1224,8 @@ current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
 request = LocalProxy(lambda: _request_ctx_stack.top.request)
 session = LocalProxy(lambda: _request_ctx_stack.top.session)
 g = LocalProxy(lambda: _request_ctx_stack.top.g)
+
+
+# script interface to run a development server
+if __name__ == '__main__':
+    sys.exit(main(sys.argv))
"
cbcd15c3b55cfb05f1b27aa2343f909876f8d3d4,aa654128cf72e5a16a480eb59fc1ad551d39f5d9,docs/flaskstyle.sty,docs/flaskstyle.sty,docs/flaskstyle.sty,Added part style,"diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 1d870050..6da88db2 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -70,6 +70,42 @@
 \ChNumVar{\raggedleft \bfseries\Large}
 \ChTitleVar{\raggedleft \rm\Huge}
 
+\renewcommand\thepart{\@Roman\c@part}
+\renewcommand\part{%
+   \if@noskipsec \leavevmode \fi
+   \cleardoublepage
+   \vspace*{8cm}%
+   \@afterindentfalse
+   \secdef\@part\@spart}
+
+\def\@part[#1]#2{%
+    \ifnum \c@secnumdepth >\m@ne
+      \refstepcounter{part}%
+      \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
+    \else
+      \addcontentsline{toc}{part}{#1}%
+    \fi
+    {\parindent \z@ \center
+     \interlinepenalty \@M
+     \normalfont
+     \ifnum \c@secnumdepth >\m@ne
+       \rm\Large \partname~\thepart
+       \par\nobreak
+     \fi
+     \MakeUppercase{\rm\Huge #2}%
+     \markboth{}{}\par}%
+    \nobreak
+    \vskip 3ex
+    \@afterheading}
+\def\@spart#1{%
+    {\parindent \z@ \center
+     \interlinepenalty \@M
+     \normalfont
+     \huge \bfseries #1\par}%
+     \nobreak
+     \vskip 3ex
+     \@afterheading}
+
 % use inconsolata font
 \usepackage{inconsolata}
 
","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 1d870050..6da88db2 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -70,6 +70,42 @@
 \ChNumVar{\raggedleft \bfseries\Large}
 \ChTitleVar{\raggedleft \rm\Huge}
 
+\renewcommand\thepart{\@Roman\c@part}
+\renewcommand\part{%
+   \if@noskipsec \leavevmode \fi
+   \cleardoublepage
+   \vspace*{8cm}%
+   \@afterindentfalse
+   \secdef\@part\@spart}
+
+\def\@part[#1]#2{%
+    \ifnum \c@secnumdepth >\m@ne
+      \refstepcounter{part}%
+      \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
+    \else
+      \addcontentsline{toc}{part}{#1}%
+    \fi
+    {\parindent \z@ \center
+     \interlinepenalty \@M
+     \normalfont
+     \ifnum \c@secnumdepth >\m@ne
+       \rm\Large \partname~\thepart
+       \par\nobreak
+     \fi
+     \MakeUppercase{\rm\Huge #2}%
+     \markboth{}{}\par}%
+    \nobreak
+    \vskip 3ex
+    \@afterheading}
+\def\@spart#1{%
+    {\parindent \z@ \center
+     \interlinepenalty \@M
+     \normalfont
+     \huge \bfseries #1\par}%
+     \nobreak
+     \vskip 3ex
+     \@afterheading}
+
 % use inconsolata font
 \usepackage{inconsolata}
 
"
664c64e0aafeb828911e97d31077c913ae2dd79a,cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,docs/_themes,docs/_themes,docs/_themes,Added troubleshooting infos. This fixes #44,"diff --git a/docs/_themes b/docs/_themes
index 991997d6..09eeca52 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 991997d6d63a0cdcf7f4557a2dae5afa9b38b904
+Subproject commit 09eeca526b2b5675cc29f45917f5d0f795395035
","diff --git a/docs/_themes b/docs/_themes
index 991997d6..09eeca52 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 991997d6d63a0cdcf7f4557a2dae5afa9b38b904
+Subproject commit 09eeca526b2b5675cc29f45917f5d0f795395035
"
664c64e0aafeb828911e97d31077c913ae2dd79a,cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,docs/deploying/cgi.rst,docs/deploying/cgi.rst,docs/deploying/cgi.rst,Added troubleshooting infos. This fixes #44,"diff --git a/docs/deploying/cgi.rst b/docs/deploying/cgi.rst
index 15b5ff1d..1168249c 100644
--- a/docs/deploying/cgi.rst
+++ b/docs/deploying/cgi.rst
@@ -9,6 +9,14 @@ This is also the way you can use a Flask application on Google's
 `AppEngine`_, there however the execution does happen in a CGI-like
 environment.  The application's performance is unaffected because of that.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to CGI / appengine.
+
 .. _AppEngine: http://code.google.com/appengine/
 
 Creating a `.cgi` file
","diff --git a/docs/deploying/cgi.rst b/docs/deploying/cgi.rst
index 15b5ff1d..1168249c 100644
--- a/docs/deploying/cgi.rst
+++ b/docs/deploying/cgi.rst
@@ -9,6 +9,14 @@ This is also the way you can use a Flask application on Google's
 `AppEngine`_, there however the execution does happen in a CGI-like
 environment.  The application's performance is unaffected because of that.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to CGI / appengine.
+
 .. _AppEngine: http://code.google.com/appengine/
 
 Creating a `.cgi` file
"
664c64e0aafeb828911e97d31077c913ae2dd79a,cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,Added troubleshooting infos. This fixes #44,"diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
index b549ddfd..7949cca4 100644
--- a/docs/deploying/fastcgi.rst
+++ b/docs/deploying/fastcgi.rst
@@ -8,6 +8,14 @@ a FastCGI server first.
 The most popular one is `flup`_ which we will use for this guide.  Make
 sure to have it installed.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to FastCGI.
+
 Creating a `.fcgi` file
 -----------------------
 
@@ -35,7 +43,9 @@ It makes sense to have that in `/var/www/yourapplication` or something
 similar.
 
 Make sure to set the executable bit on that file so that the servers
-can execute it::
+can execute it:
+
+.. sourcecode:: text
 
     # chmod +x /var/www/yourapplication/yourapplication.fcgi
 
","diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
index b549ddfd..7949cca4 100644
--- a/docs/deploying/fastcgi.rst
+++ b/docs/deploying/fastcgi.rst
@@ -8,6 +8,14 @@ a FastCGI server first.
 The most popular one is `flup`_ which we will use for this guide.  Make
 sure to have it installed.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to FastCGI.
+
 Creating a `.fcgi` file
 -----------------------
 
@@ -35,7 +43,9 @@ It makes sense to have that in `/var/www/yourapplication` or something
 similar.
 
 Make sure to set the executable bit on that file so that the servers
-can execute it::
+can execute it:
+
+.. sourcecode:: text
 
     # chmod +x /var/www/yourapplication/yourapplication.fcgi
 
"
664c64e0aafeb828911e97d31077c913ae2dd79a,cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,Added troubleshooting infos. This fixes #44,"diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index a7bbc114..03a82e8d 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -3,6 +3,14 @@ mod_wsgi (Apache)
 
 If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to mod_wsgi.
+
 .. _Apache: http://httpd.apache.org/
 
 Installing `mod_wsgi`
@@ -14,12 +22,16 @@ a package manager or compile it yourself.
 The mod_wsgi `installation instructions`_ cover source installations on UNIX 
 systems.
 
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
+If you are using ubuntu / debian you can apt-get it and activate it as follows:
+
+.. sourcecode:: text
 
     # apt-get install libapache2-mod-wsgi
 
 On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
+pkg_add:
+
+.. sourcecode:: text
 
     # pkg_add -r mod_wsgi
 
@@ -78,3 +90,48 @@ For more information consult the `mod_wsgi wiki`_.
 .. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
 .. _virtual python: http://pypi.python.org/pypi/virtualenv
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+.. _*
+
+Toubleshooting
+--------------
+
+If your application does not run, follow this guide to troubleshoot:
+
+**Problem:** Application does not run, errorlog shows SystemExit ignored
+    You have a ``app.run()`` call in your application file that is not
+    guarded by an ``if __name__ == '__main__':`` condition.  Either remove
+    that :meth:`~flask.Flask.run` call from the file and move it into a
+    separate `run.py` file or put it into such an if block.
+
+**Problem:** application gives permission errors
+    Probably caused by your application running as the wrong user.  Make
+    sure the folders the application needs access to have the proper
+    privileges set and the application runs as the correct user (``user``
+    and ``group`` parameter to the `WSGIDaemonProcess` directive)
+
+**Problem:** application dies with an error on print
+    Keep in mind that mod_wsgi disallows doing anything with
+    :data:`sys.stdout` and :data:`sys.stderr`.  You can disable this
+    protection from the config by setting the `WSGIRestrictStdout` to
+    ``off``:
+
+    .. sourcecode:: apache
+
+        WSGIRestrictStdout Off
+
+    Alternatively you can also replace the standard out in the .wsgi file
+    with a different stream::
+
+        import sys
+        sys.stdout = sys.stderr
+
+**Problem:** accessing resources gives IO errors
+    Your application probably is a single .py file you symlinked into the
+    site-packages folder.  Please be aware that this does not work,
+    instead you either have to put the folder into the pythonpath the file
+    is stored in, or convert your application into a package.
+
+    The reason for this is that for non-installed Packages, the module
+    filename is used to locate the resources and for symlinks the wrong
+    filename is picked up.
","diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index a7bbc114..03a82e8d 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -3,6 +3,14 @@ mod_wsgi (Apache)
 
 If you are using the `Apache`_ webserver you should consider using `mod_wsgi`_.
 
+.. admonition:: Watch Out
+
+   Please make sure in advance that your ``app.run()`` call you might
+   have in your application file, is inside an ``if __name__ ==
+   '__main__':`` or moved to a separate file.  Just make sure it's not
+   called because this will always start a local WSGI server which we do
+   not want if we deploy that application to mod_wsgi.
+
 .. _Apache: http://httpd.apache.org/
 
 Installing `mod_wsgi`
@@ -14,12 +22,16 @@ a package manager or compile it yourself.
 The mod_wsgi `installation instructions`_ cover source installations on UNIX 
 systems.
 
-If you are using ubuntu / debian you can apt-get it and activate it as follows::
+If you are using ubuntu / debian you can apt-get it and activate it as follows:
+
+.. sourcecode:: text
 
     # apt-get install libapache2-mod-wsgi
 
 On FreeBSD install `mod_wsgi` by compiling the `www/mod_wsgi` port or by using
-pkg_add::
+pkg_add:
+
+.. sourcecode:: text
 
     # pkg_add -r mod_wsgi
 
@@ -78,3 +90,48 @@ For more information consult the `mod_wsgi wiki`_.
 .. _installation instructions: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide
 .. _virtual python: http://pypi.python.org/pypi/virtualenv
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
+
+.. _*
+
+Toubleshooting
+--------------
+
+If your application does not run, follow this guide to troubleshoot:
+
+**Problem:** Application does not run, errorlog shows SystemExit ignored
+    You have a ``app.run()`` call in your application file that is not
+    guarded by an ``if __name__ == '__main__':`` condition.  Either remove
+    that :meth:`~flask.Flask.run` call from the file and move it into a
+    separate `run.py` file or put it into such an if block.
+
+**Problem:** application gives permission errors
+    Probably caused by your application running as the wrong user.  Make
+    sure the folders the application needs access to have the proper
+    privileges set and the application runs as the correct user (``user``
+    and ``group`` parameter to the `WSGIDaemonProcess` directive)
+
+**Problem:** application dies with an error on print
+    Keep in mind that mod_wsgi disallows doing anything with
+    :data:`sys.stdout` and :data:`sys.stderr`.  You can disable this
+    protection from the config by setting the `WSGIRestrictStdout` to
+    ``off``:
+
+    .. sourcecode:: apache
+
+        WSGIRestrictStdout Off
+
+    Alternatively you can also replace the standard out in the .wsgi file
+    with a different stream::
+
+        import sys
+        sys.stdout = sys.stderr
+
+**Problem:** accessing resources gives IO errors
+    Your application probably is a single .py file you symlinked into the
+    site-packages folder.  Please be aware that this does not work,
+    instead you either have to put the folder into the pythonpath the file
+    is stored in, or convert your application into a package.
+
+    The reason for this is that for non-installed Packages, the module
+    filename is used to locate the resources and for symlinks the wrong
+    filename is picked up.
"
664c64e0aafeb828911e97d31077c913ae2dd79a,cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,docs/flaskstyle.sty,docs/flaskstyle.sty,docs/flaskstyle.sty,Added troubleshooting infos. This fixes #44,"diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 6da88db2..a86c6682 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -95,7 +95,7 @@
      \MakeUppercase{\rm\Huge #2}%
      \markboth{}{}\par}%
     \nobreak
-    \vskip 3ex
+    \vskip 8ex
     \@afterheading}
 \def\@spart#1{%
     {\parindent \z@ \center
","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index 6da88db2..a86c6682 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -95,7 +95,7 @@
      \MakeUppercase{\rm\Huge #2}%
      \markboth{}{}\par}%
     \nobreak
-    \vskip 3ex
+    \vskip 8ex
     \@afterheading}
 \def\@spart#1{%
     {\parindent \z@ \center
"
cc8332e9d99c08b77614e5acd7bd0e6d08dc29b6,9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Documented redirect behaviour. Fixes #42,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 745dedb9..f0fbeb64 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -160,6 +160,39 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+.. admonition:: Unique URLs / Redirection Behaviour
+
+   Flask's URL rules are based on Werkzeug's routing module.  The idea
+   behind that module is to ensure nice looking and also unique URLs based
+   on behaviour Apache and earlier servers coined.
+
+   Take these two rules::
+
+        @app.route('/projects/')
+        def projects():
+            pass
+
+        @app.route('/about')
+        def about():
+            pass
+
+   They look rather similar, the difference is the trailing slash in the
+   URL *definition*.  In the first case, the canonical URL for the
+   `projects` endpoint has a trailing slash.  It's similar to a folder in
+   that sense.  Accessing it without a trailing slash will cause Flask to
+   redirect to the canonical URL with the trailing slash.
+
+   However in the second case the URL is defined without a slash so it
+   behaves similar to a file and accessing the URL with a trailing slash
+   will be a 404 error.
+
+   Why is this?  This allows relative URLs to continue working if users
+   access the page when they forget a trailing slash.  This behaviour is
+   also consistent with how Apache and other servers work.  Also, the URLs
+   will stay unique which helps search engines not indexing the same page
+   twice.
+
+
 .. _url-building:
 
 URL Building
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index 745dedb9..f0fbeb64 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -160,6 +160,39 @@ The following converters exist:
 `path`      like the default but also accepts slashes
 =========== ===========================================
 
+.. admonition:: Unique URLs / Redirection Behaviour
+
+   Flask's URL rules are based on Werkzeug's routing module.  The idea
+   behind that module is to ensure nice looking and also unique URLs based
+   on behaviour Apache and earlier servers coined.
+
+   Take these two rules::
+
+        @app.route('/projects/')
+        def projects():
+            pass
+
+        @app.route('/about')
+        def about():
+            pass
+
+   They look rather similar, the difference is the trailing slash in the
+   URL *definition*.  In the first case, the canonical URL for the
+   `projects` endpoint has a trailing slash.  It's similar to a folder in
+   that sense.  Accessing it without a trailing slash will cause Flask to
+   redirect to the canonical URL with the trailing slash.
+
+   However in the second case the URL is defined without a slash so it
+   behaves similar to a file and accessing the URL with a trailing slash
+   will be a 404 error.
+
+   Why is this?  This allows relative URLs to continue working if users
+   access the page when they forget a trailing slash.  This behaviour is
+   also consistent with how Apache and other servers work.  Also, the URLs
+   will stay unique which helps search engines not indexing the same page
+   twice.
+
+
 .. _url-building:
 
 URL Building
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,CHANGES,CHANGES,CHANGES,"Added interactive Python docs, fixed part style.","diff --git a/CHANGES b/CHANGES
index 84aa4633..47dd08b6 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,10 @@ Release date to be announced
   log request handling exceptions to that logger when not in debug
   mode.  This makes it possible to receive mails on server errors
   for example.
+- added support for context binding that does not require the use of
+  the with statement for playing in the console.
+- the request context is now available within the with statement making
+  it possible to further push the request context or pop it.
 
 Version 0.2
 -----------
","diff --git a/CHANGES b/CHANGES
index 84aa4633..47dd08b6 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,10 @@ Release date to be announced
   log request handling exceptions to that logger when not in debug
   mode.  This makes it possible to receive mails on server errors
   for example.
+- added support for context binding that does not require the use of
+  the with statement for playing in the console.
+- the request context is now available within the with statement making
+  it possible to further push the request context or pop it.
 
 Version 0.2
 -----------
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,docs/contents.rst.inc,,docs/contents.rst.inc,"Added interactive Python docs, fixed part style.","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
new file mode 100644
index 00000000..66dc0ead
--- /dev/null
+++ b/docs/contents.rst.inc
@@ -0,0 +1,43 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   shell
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you.
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested.
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
new file mode 100644
index 00000000..66dc0ead
--- /dev/null
+++ b/docs/contents.rst.inc
@@ -0,0 +1,43 @@
+User's Guide
+------------
+
+This part of the documentation is written text and should give you an idea
+how to work with Flask.  It's a series of step-by-step instructions for
+web development.
+
+.. toctree::
+   :maxdepth: 2
+
+   foreword
+   installation
+   quickstart
+   tutorial/index
+   testing
+   errorhandling
+   shell
+   patterns/index
+   deploying/index
+   becomingbig
+
+API Reference
+-------------
+
+If you are looking for information on a specific function, class or
+method, this part of the documentation is for you.
+
+.. toctree::
+   :maxdepth: 2
+
+   api
+
+Additional Notes
+----------------
+
+Design notes, legal information and changelog are here for the interested.
+
+.. toctree::
+   :maxdepth: 2
+
+   design
+   license
+   changelog
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,docs/flaskstyle.sty,docs/flaskstyle.sty,docs/flaskstyle.sty,"Added interactive Python docs, fixed part style.","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index a86c6682..b2d073d0 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -1,4 +1,3 @@
-\pagenumbering{arabic}
 \definecolor{TitleColor}{rgb}{0,0,0}
 \definecolor{InnerLinkColor}{rgb}{0,0,0}
 
@@ -72,9 +71,10 @@
 
 \renewcommand\thepart{\@Roman\c@part}
 \renewcommand\part{%
+   \pagestyle{empty}
    \if@noskipsec \leavevmode \fi
    \cleardoublepage
-   \vspace*{8cm}%
+   \vspace*{6cm}%
    \@afterindentfalse
    \secdef\@part\@spart}
 
@@ -85,7 +85,7 @@
     \else
       \addcontentsline{toc}{part}{#1}%
     \fi
-    {\parindent \z@ \center
+    {\parindent \z@ %\center
      \interlinepenalty \@M
      \normalfont
      \ifnum \c@secnumdepth >\m@ne
@@ -98,7 +98,7 @@
     \vskip 8ex
     \@afterheading}
 \def\@spart#1{%
-    {\parindent \z@ \center
+    {\parindent \z@ %\center
      \interlinepenalty \@M
      \normalfont
      \huge \bfseries #1\par}%
","diff --git a/docs/flaskstyle.sty b/docs/flaskstyle.sty
index a86c6682..b2d073d0 100644
--- a/docs/flaskstyle.sty
+++ b/docs/flaskstyle.sty
@@ -1,4 +1,3 @@
-\pagenumbering{arabic}
 \definecolor{TitleColor}{rgb}{0,0,0}
 \definecolor{InnerLinkColor}{rgb}{0,0,0}
 
@@ -72,9 +71,10 @@
 
 \renewcommand\thepart{\@Roman\c@part}
 \renewcommand\part{%
+   \pagestyle{empty}
    \if@noskipsec \leavevmode \fi
    \cleardoublepage
-   \vspace*{8cm}%
+   \vspace*{6cm}%
    \@afterindentfalse
    \secdef\@part\@spart}
 
@@ -85,7 +85,7 @@
     \else
       \addcontentsline{toc}{part}{#1}%
     \fi
-    {\parindent \z@ \center
+    {\parindent \z@ %\center
      \interlinepenalty \@M
      \normalfont
      \ifnum \c@secnumdepth >\m@ne
@@ -98,7 +98,7 @@
     \vskip 8ex
     \@afterheading}
 \def\@spart#1{%
-    {\parindent \z@ \center
+    {\parindent \z@ %\center
      \interlinepenalty \@M
      \normalfont
      \huge \bfseries #1\par}%
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,docs/index.rst,docs/index.rst,docs/index.rst,"Added interactive Python docs, fixed part style.","diff --git a/docs/index.rst b/docs/index.rst
index f2270422..e8ea5c33 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -27,45 +27,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
+.. include:: contents.rst.inc
","diff --git a/docs/index.rst b/docs/index.rst
index f2270422..e8ea5c33 100644
--- a/docs/index.rst
+++ b/docs/index.rst
@@ -27,45 +27,4 @@ following links:
 .. _Jinja2: http://jinja.pocoo.org/2/
 .. _Werkzeug: http://werkzeug.pocoo.org/
 
-User's Guide
-------------
-
-This part of the documentation is written text and should give you an idea
-how to work with Flask.  It's a series of step-by-step instructions for
-web development.
-
-.. toctree::
-   :maxdepth: 2
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-If you are looking for information on a specific function, class or
-method, this part of the documentation is for you:
-
-.. toctree::
-   :maxdepth: 2
-
-   api
-
-Additional Notes
-----------------
-
-Design notes, legal information and changelog are here for the interested:
-
-.. toctree::
-   :maxdepth: 2
-
-   design
-   license
-   changelog
+.. include:: contents.rst.inc
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,docs/latexindex.rst,docs/latexindex.rst,docs/latexindex.rst,"Added interactive Python docs, fixed part style.","diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index a4aa0b4a..288197c3 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -3,36 +3,4 @@
 Flask Documentation
 ===================
 
-User's Guide
-------------
-
-.. toctree::
-   :maxdepth: 3
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-.. toctree::
-   :maxdepth: 3
-
-   api
-
-Additional Notes
-----------------
-
-.. toctree::
-   :maxdepth: 3
-
-   design
-   license
-   changelog
+.. include:: contents.rst.inc
","diff --git a/docs/latexindex.rst b/docs/latexindex.rst
index a4aa0b4a..288197c3 100644
--- a/docs/latexindex.rst
+++ b/docs/latexindex.rst
@@ -3,36 +3,4 @@
 Flask Documentation
 ===================
 
-User's Guide
-------------
-
-.. toctree::
-   :maxdepth: 3
-
-   foreword
-   installation
-   quickstart
-   tutorial/index
-   testing
-   errorhandling
-   patterns/index
-   deploying/index
-   becomingbig
-
-API Reference
--------------
-
-.. toctree::
-   :maxdepth: 3
-
-   api
-
-Additional Notes
-----------------
-
-.. toctree::
-   :maxdepth: 3
-
-   design
-   license
-   changelog
+.. include:: contents.rst.inc
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,docs/shell.rst,,docs/shell.rst,"Added interactive Python docs, fixed part style.","diff --git a/docs/shell.rst b/docs/shell.rst
new file mode 100644
index 00000000..65e44ce7
--- /dev/null
+++ b/docs/shell.rst
@@ -0,0 +1,110 @@
+Working with the Shell
+======================
+
+.. versionadded:: 0.5
+
+One of the reasons everybody loves Python is the interactive shell.  It
+basically allows you to execute Python commands in real time and
+immediately get results back.  Flask itself does not come with an
+interactive shell, because it does not require any specific setup upfront,
+just import your application and start playing around.
+
+There are however some handy helpers to make playing around in the shell a
+more pleasant experience.  The main issue with interactive console
+sessions is that you're not triggering a request like a browser does which
+means that :data:`~flask.g`, :data:`~flask.request` and others are not
+available.  But the code you want to test might depend on them, so what
+can you do?
+
+This is where some helper functions come in handy.  Keep in mind however
+that these functions are not only there for interactive shell usage, but
+also for unittesting and other situations that require a faked request
+context.
+
+Diving into Context Locals
+--------------------------
+
+Say you have a utility function that returns the URL the user should be
+redirected to.  Imagine it would always redirect to the URL's ``next``
+parameter or the HTTP referrer or the index page::
+
+    from flask import request, url_for
+
+    def redirect_url():
+        return request.args.get('next') or \
+               request.referrer or \
+               url_for('index')
+
+As you can see, it accesses the request object.  If you try to run this
+from a plain Python shell, this is the exception you will see:
+
+>>> redirect_url()
+Traceback (most recent call last):
+  File ""<stdin>"", line 1, in <module>
+AttributeError: 'NoneType' object has no attribute 'request'
+
+That makes a lot of sense because we currently do not have a request we
+could access.  So we have to make a request and bind it to the current
+context.  The :attr:`~flask.Flask.test_request_context` method can create
+us a request context:
+
+>>> ctx = app.test_request_context('/?next=http://example.com/')
+
+This context can be used in two ways.  Either with the `with` statement
+(which unfortunately is not very handy for shell sessions).  The
+alternative way is to call the `push` and `pop` methods:
+
+>>> ctx.push()
+
+From that point onwards you can work with the request object:
+
+>>> redirect_url()
+u'http://example.com/'
+
+Until you call `pop`:
+
+>>> ctx.pop()
+>>> redirect_url()
+Traceback (most recent call last):
+  File ""<stdin>"", line 1, in <module>
+AttributeError: 'NoneType' object has no attribute 'request'
+
+
+Firing Before/After Request
+---------------------------
+
+By just creating a request context, you still don't have run the code that
+is normally run before a request.  This probably results in your database
+being unavailable, the current user not being stored on the
+:data:`~flask.g` object etc.
+
+This however can easily be done yourself.  Just call
+:meth:`~flask.Flask.preprocess_request`:
+
+>>> ctx = app.test_request_context()
+>>> ctx.push()
+>>> app.preprocess_request()
+
+Keep in mind that the :meth:`~flask.Flask.preprocess_request` function
+might return a response object, in that case just ignore it.
+
+To shutdown a request, you need to trick a bit before the after request
+functions (triggered by :meth:`~flask.Flask.process_response`) operate on
+a response object:
+
+>>> app.process_response(app.response_class())
+<Response 0 bytes [200 OK]>
+>>> ctx.pop()
+
+
+Further Improving the Shell Experience
+--------------------------------------
+
+If you like the idea of experimenting in a shell, create yourself a module
+with stuff you want to star import into your interactive session.  There
+you could also define some more helper methods for common things such as
+initializing the database, dropping tables etc.
+
+Just put them into a module (like `shelltools` and import from there):
+
+>>> from shelltools import *
","diff --git a/docs/shell.rst b/docs/shell.rst
new file mode 100644
index 00000000..65e44ce7
--- /dev/null
+++ b/docs/shell.rst
@@ -0,0 +1,110 @@
+Working with the Shell
+======================
+
+.. versionadded:: 0.5
+
+One of the reasons everybody loves Python is the interactive shell.  It
+basically allows you to execute Python commands in real time and
+immediately get results back.  Flask itself does not come with an
+interactive shell, because it does not require any specific setup upfront,
+just import your application and start playing around.
+
+There are however some handy helpers to make playing around in the shell a
+more pleasant experience.  The main issue with interactive console
+sessions is that you're not triggering a request like a browser does which
+means that :data:`~flask.g`, :data:`~flask.request` and others are not
+available.  But the code you want to test might depend on them, so what
+can you do?
+
+This is where some helper functions come in handy.  Keep in mind however
+that these functions are not only there for interactive shell usage, but
+also for unittesting and other situations that require a faked request
+context.
+
+Diving into Context Locals
+--------------------------
+
+Say you have a utility function that returns the URL the user should be
+redirected to.  Imagine it would always redirect to the URL's ``next``
+parameter or the HTTP referrer or the index page::
+
+    from flask import request, url_for
+
+    def redirect_url():
+        return request.args.get('next') or \
+               request.referrer or \
+               url_for('index')
+
+As you can see, it accesses the request object.  If you try to run this
+from a plain Python shell, this is the exception you will see:
+
+>>> redirect_url()
+Traceback (most recent call last):
+  File ""<stdin>"", line 1, in <module>
+AttributeError: 'NoneType' object has no attribute 'request'
+
+That makes a lot of sense because we currently do not have a request we
+could access.  So we have to make a request and bind it to the current
+context.  The :attr:`~flask.Flask.test_request_context` method can create
+us a request context:
+
+>>> ctx = app.test_request_context('/?next=http://example.com/')
+
+This context can be used in two ways.  Either with the `with` statement
+(which unfortunately is not very handy for shell sessions).  The
+alternative way is to call the `push` and `pop` methods:
+
+>>> ctx.push()
+
+From that point onwards you can work with the request object:
+
+>>> redirect_url()
+u'http://example.com/'
+
+Until you call `pop`:
+
+>>> ctx.pop()
+>>> redirect_url()
+Traceback (most recent call last):
+  File ""<stdin>"", line 1, in <module>
+AttributeError: 'NoneType' object has no attribute 'request'
+
+
+Firing Before/After Request
+---------------------------
+
+By just creating a request context, you still don't have run the code that
+is normally run before a request.  This probably results in your database
+being unavailable, the current user not being stored on the
+:data:`~flask.g` object etc.
+
+This however can easily be done yourself.  Just call
+:meth:`~flask.Flask.preprocess_request`:
+
+>>> ctx = app.test_request_context()
+>>> ctx.push()
+>>> app.preprocess_request()
+
+Keep in mind that the :meth:`~flask.Flask.preprocess_request` function
+might return a response object, in that case just ignore it.
+
+To shutdown a request, you need to trick a bit before the after request
+functions (triggered by :meth:`~flask.Flask.process_response`) operate on
+a response object:
+
+>>> app.process_response(app.response_class())
+<Response 0 bytes [200 OK]>
+>>> ctx.pop()
+
+
+Further Improving the Shell Experience
+--------------------------------------
+
+If you like the idea of experimenting in a shell, create yourself a module
+with stuff you want to star import into your interactive session.  There
+you could also define some more helper methods for common things such as
+initializing the database, dropping tables etc.
+
+Just put them into a module (like `shelltools` and import from there):
+
+>>> from shelltools import *
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,flask.py,flask.py,flask.py,"Added interactive Python docs, fixed part style.","diff --git a/flask.py b/flask.py
index ea3fcaa0..d3391a43 100644
--- a/flask.py
+++ b/flask.py
@@ -147,15 +147,24 @@ class _RequestContext(object):
         except HTTPException, e:
             self.request.routing_exception = e
 
-    def __enter__(self):
+    def push(self):
+        """"""Binds the request context.""""""
         _request_ctx_stack.push(self)
 
+    def pop(self):
+        """"""Pops the request context.""""""
+        _request_ctx_stack.pop()
+
+    def __enter__(self):
+        self.push()
+        return self
+
     def __exit__(self, exc_type, exc_value, tb):
         # do not pop the request stack if we are in debug mode and an
         # exception happened.  This will allow the debugger to still
         # access the request object in the interactive shell.
         if tb is None or not self.app.debug:
-            _request_ctx_stack.pop()
+            self.pop()
 
 
 def url_for(endpoint, **values):
@@ -1202,6 +1211,30 @@ class Flask(_PackageBoundObject):
             with app.request_context(environ):
                 do_something_with(request)
 
+        The object returned can also be used without the `with` statement
+        which is useful for working in the shell.  The example above is
+        doing exactly the same as this code::
+
+            ctx = app.request_context(environ)
+            ctx.push()
+            try:
+                do_something_with(request)
+            finally:
+                ctx.pop()
+
+        The big advantage of this approach is that you can use it without
+        the try/finally statement in a shell for interactive testing:
+
+        >>> ctx = app.test_request_context()
+        >>> ctx.bind()
+        >>> request.path
+        u'/'
+        >>> ctx.unbind()
+
+        .. versionchanged:: 0.5
+           Added support for non-with statement usage and `with` statement
+           is now passed the ctx object.
+
         :param environ: a WSGI environment
         """"""
         return _RequestContext(self, environ)
","diff --git a/flask.py b/flask.py
index ea3fcaa0..d3391a43 100644
--- a/flask.py
+++ b/flask.py
@@ -147,15 +147,24 @@ class _RequestContext(object):
         except HTTPException, e:
             self.request.routing_exception = e
 
-    def __enter__(self):
+    def push(self):
+        """"""Binds the request context.""""""
         _request_ctx_stack.push(self)
 
+    def pop(self):
+        """"""Pops the request context.""""""
+        _request_ctx_stack.pop()
+
+    def __enter__(self):
+        self.push()
+        return self
+
     def __exit__(self, exc_type, exc_value, tb):
         # do not pop the request stack if we are in debug mode and an
         # exception happened.  This will allow the debugger to still
         # access the request object in the interactive shell.
         if tb is None or not self.app.debug:
-            _request_ctx_stack.pop()
+            self.pop()
 
 
 def url_for(endpoint, **values):
@@ -1202,6 +1211,30 @@ class Flask(_PackageBoundObject):
             with app.request_context(environ):
                 do_something_with(request)
 
+        The object returned can also be used without the `with` statement
+        which is useful for working in the shell.  The example above is
+        doing exactly the same as this code::
+
+            ctx = app.request_context(environ)
+            ctx.push()
+            try:
+                do_something_with(request)
+            finally:
+                ctx.pop()
+
+        The big advantage of this approach is that you can use it without
+        the try/finally statement in a shell for interactive testing:
+
+        >>> ctx = app.test_request_context()
+        >>> ctx.bind()
+        >>> request.path
+        u'/'
+        >>> ctx.unbind()
+
+        .. versionchanged:: 0.5
+           Added support for non-with statement usage and `with` statement
+           is now passed the ctx object.
+
         :param environ: a WSGI environment
         """"""
         return _RequestContext(self, environ)
"
9d98ad5e079b88fd9da87e47d55a11e465ab6bb0,ef0dc1800f7558abbefe070f361b97b9161b2452,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Added interactive Python docs, fixed part style.","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 14e3e384..17f73ad7 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -53,6 +53,23 @@ class ContextTestCase(unittest.TestCase):
         with app.test_request_context('/meh'):
             assert meh() == 'http://localhost/meh'
 
+    def test_manual_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+
+        ctx = app.test_request_context('/?name=World')
+        ctx.push()
+        assert index() == 'Hello World!'
+        ctx.pop()
+        try:
+            index()
+        except AttributeError:
+            pass
+        else:
+            assert 0, 'expected runtime error'
+
 
 class BasicFunctionalityTestCase(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 14e3e384..17f73ad7 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -53,6 +53,23 @@ class ContextTestCase(unittest.TestCase):
         with app.test_request_context('/meh'):
             assert meh() == 'http://localhost/meh'
 
+    def test_manual_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            return 'Hello %s!' % flask.request.args['name']
+
+        ctx = app.test_request_context('/?name=World')
+        ctx.push()
+        assert index() == 'Hello World!'
+        ctx.pop()
+        try:
+            index()
+        except AttributeError:
+            pass
+        else:
+            assert 0, 'expected runtime error'
+
 
 class BasicFunctionalityTestCase(unittest.TestCase):
 
"
ef0dc1800f7558abbefe070f361b97b9161b2452,6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,flask.py,flask.py,flask.py,Fixed docstring.  This fixes #45,"diff --git a/flask.py b/flask.py
index d3391a43..cbb10b59 100644
--- a/flask.py
+++ b/flask.py
@@ -1004,14 +1004,14 @@ class Flask(_PackageBoundObject):
         error code.  Example::
 
             @app.errorhandler(404)
-            def page_not_found():
+            def page_not_found(error):
                 return 'This page does not exist', 404
 
         You can also register a function as error handler without using
         the :meth:`errorhandler` decorator.  The following example is
         equivalent to the one above::
 
-            def page_not_found():
+            def page_not_found(error):
                 return 'This page does not exist', 404
             app.error_handlers[404] = page_not_found
 
","diff --git a/flask.py b/flask.py
index d3391a43..cbb10b59 100644
--- a/flask.py
+++ b/flask.py
@@ -1004,14 +1004,14 @@ class Flask(_PackageBoundObject):
         error code.  Example::
 
             @app.errorhandler(404)
-            def page_not_found():
+            def page_not_found(error):
                 return 'This page does not exist', 404
 
         You can also register a function as error handler without using
         the :meth:`errorhandler` decorator.  The following example is
         equivalent to the one above::
 
-            def page_not_found():
+            def page_not_found(error):
                 return 'This page does not exist', 404
             app.error_handlers[404] = page_not_found
 
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,133920c83bf78db17631b637b8b2ffabcb26f3d4,docs/installation.rst,docs/installation.rst,docs/installation.rst,Fix typo in docs.,"diff --git a/docs/installation.rst b/docs/installation.rst
index 6b4f955a..31c40023 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -41,7 +41,7 @@ an installation but a clever way to keep things separated.
 So let's see how that works!
 
 If you are on OS X or Linux chances are that one of the following two
-commands will for for you::
+commands will work for you::
 
     $ sudo easy_install virtualenv
 
","diff --git a/docs/installation.rst b/docs/installation.rst
index 6b4f955a..31c40023 100644
--- a/docs/installation.rst
+++ b/docs/installation.rst
@@ -41,7 +41,7 @@ an installation but a clever way to keep things separated.
 So let's see how that works!
 
 If you are on OS X or Linux chances are that one of the following two
-commands will for for you::
+commands will work for you::
 
     $ sudo easy_install virtualenv
 
"
133920c83bf78db17631b637b8b2ffabcb26f3d4,7829e6ec98f9c84159dcb2aa9fb210b88d97dd33,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,quickstart docs: Use a real value for secret_key to better illustrate how a secret key should look.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f0fbeb64..cb887251 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -654,7 +654,7 @@ sessions work::
         session.pop('username', None)
 
     # set the secret key.  keep this really secret:
-    app.secret_key = 'the secret key'
+    app.secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT'
 
 The here mentioned :func:`~flask.escape` does escaping for you if you are
 not using the template engine (like in this example).
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index f0fbeb64..cb887251 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -654,7 +654,7 @@ sessions work::
         session.pop('username', None)
 
     # set the secret key.  keep this really secret:
-    app.secret_key = 'the secret key'
+    app.secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT'
 
 The here mentioned :func:`~flask.escape` does escaping for you if you are
 not using the template engine (like in this example).
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/_themes,docs/_themes,docs/_themes,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/_themes b/docs/_themes
index 09eeca52..91eee537 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 09eeca526b2b5675cc29f45917f5d0f795395035
+Subproject commit 91eee537e91594f752224a5847719f6d4fb38c2d
","diff --git a/docs/_themes b/docs/_themes
index 09eeca52..91eee537 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 09eeca526b2b5675cc29f45917f5d0f795395035
+Subproject commit 91eee537e91594f752224a5847719f6d4fb38c2d
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/conf.py,docs/conf.py,docs/conf.py,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/conf.py b/docs/conf.py
index f9f7867e..18e8f309 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -140,7 +140,7 @@ html_sidebars = {
 #html_additional_pages = {}
 
 # If false, no module index is generated.
-#html_use_modindex = True
+html_use_modindex = False
 
 # If false, no index is generated.
 #html_use_index = True
@@ -152,7 +152,7 @@ html_sidebars = {
 #html_show_sourcelink = True
 
 # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.
-#html_show_sphinx = True
+html_show_sphinx = False
 
 # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.
 #html_show_copyright = True
","diff --git a/docs/conf.py b/docs/conf.py
index f9f7867e..18e8f309 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -140,7 +140,7 @@ html_sidebars = {
 #html_additional_pages = {}
 
 # If false, no module index is generated.
-#html_use_modindex = True
+html_use_modindex = False
 
 # If false, no index is generated.
 #html_use_index = True
@@ -152,7 +152,7 @@ html_sidebars = {
 #html_show_sourcelink = True
 
 # If true, ""Created using Sphinx"" is shown in the HTML footer. Default is True.
-#html_show_sphinx = True
+html_show_sphinx = False
 
 # If true, ""(C) Copyright ..."" is shown in the HTML footer. Default is True.
 #html_show_copyright = True
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 61162372..fcd482d7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -28,3 +28,4 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    flashing
    jquery
    errorpages
+   lazyloading
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index 61162372..fcd482d7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -28,3 +28,4 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    flashing
    jquery
    errorpages
+   lazyloading
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/patterns/lazyloading.rst,,docs/patterns/lazyloading.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/patterns/lazyloading.rst b/docs/patterns/lazyloading.rst
new file mode 100644
index 00000000..2c331ca9
--- /dev/null
+++ b/docs/patterns/lazyloading.rst
@@ -0,0 +1,104 @@
+Lazily Loading Views
+====================
+
+Flask is usually used with the decorators.  Decorators are simple and you
+have the URL right next to the function that is called for that specific
+URL.  However there is a downside to this approach: it means all your code
+that uses decorators has to be imported upfront or Flask will never
+actually find your function.
+
+This can be a problem if your application has to import quick.  It might
+have to do that on systems like Google's AppEngine or other systems.  So
+if you suddenly notice that your application outgrows this approach you
+can fall back to a centralized URL mapping.
+
+The system that enables having a central URL map is the
+:meth:`~flask.Flask.add_url_rule` function.  Instead of using decorators,
+you have a file that sets up the application with all URLs.
+
+Converting to Centralized URL Map
+---------------------------------
+
+Imagine the current application looks somewhat like this::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def index():
+        pass
+
+    @app.route('/user/<username>')
+    def user(username):
+        pass
+
+Then the centralized approach you would have one file with the views
+(`views.py`) but without any decorator::
+
+    def index():
+        pass
+
+    def user(username):
+        pass
+
+And then a file that sets up an application which maps the functions to
+URLs::
+
+    from flask import Flask
+    from yourapplication import views
+    app = Flask(__name__)
+    app.add_url_rule('/', view_func=views.index)
+    app.add_url_rule('/user/<username>', view_func=views.user)
+
+Loading Late
+------------
+
+So far we only split up the views and the routing, but the module is still
+loaded upfront.  The trick to actually load the view function as needed.
+This can be accomplished with a helper class that behaves just like a
+function but internally imports the real function on first use::
+
+    from werkzeug import import_string, cached_property
+
+    class LazyView(object):
+
+        def __init__(self, import_name):
+            self.__module__, self.__name__ = import_name.rsplit('.', 1)
+            self.import_name = import_name
+
+        @cached_property
+        def view(self):
+            return import_string(self.import_name)
+
+        def __call__(self, *args, **kwargs):
+            return self.view(*args, **kwargs)
+
+What's important here is is that `__module__` and `__name__` are properly
+set.  This is used by Flask internally to figure out how to do name the
+URL rules in case you don't provide a name for the rule yourself.
+
+Then you can define your central place to combine the views like this::
+
+    from flask import Flask
+    from yourapplication.helpers import LazyView
+    app = Flask(__name__)
+    app.add_url_rule('/',
+                     view_func=LazyView('yourapplication.views.index'))
+    app.add_url_rule('/user/<username>',
+                     view_func=LazyView('yourapplication.views.user'))
+
+You can further optimize this in terms of amount of keystrokes needed to
+write this by having a function that calls into
+:meth:`~flask.Flask.add_url_rule` by prefixing a string with the project
+name and a dot, and by wrapping `view_func` in a `LazyView` as needed::
+
+    def url(url_rule, import_name, **options):
+        view = LazyView('yourapplication.' + import_name)
+        app.add_url_rule(url_rule, view_func=view, **options)
+
+    url('/', 'views.index')
+    url('/user/<username>', 'views.user')
+
+One thing to keep in mind is that before and after request handlers have
+to be in a file that is imported upfront to work propery on the first
+request.  The same goes for any kind of remaining decorator.
","diff --git a/docs/patterns/lazyloading.rst b/docs/patterns/lazyloading.rst
new file mode 100644
index 00000000..2c331ca9
--- /dev/null
+++ b/docs/patterns/lazyloading.rst
@@ -0,0 +1,104 @@
+Lazily Loading Views
+====================
+
+Flask is usually used with the decorators.  Decorators are simple and you
+have the URL right next to the function that is called for that specific
+URL.  However there is a downside to this approach: it means all your code
+that uses decorators has to be imported upfront or Flask will never
+actually find your function.
+
+This can be a problem if your application has to import quick.  It might
+have to do that on systems like Google's AppEngine or other systems.  So
+if you suddenly notice that your application outgrows this approach you
+can fall back to a centralized URL mapping.
+
+The system that enables having a central URL map is the
+:meth:`~flask.Flask.add_url_rule` function.  Instead of using decorators,
+you have a file that sets up the application with all URLs.
+
+Converting to Centralized URL Map
+---------------------------------
+
+Imagine the current application looks somewhat like this::
+
+    from flask import Flask
+    app = Flask(__name__)
+
+    @app.route('/')
+    def index():
+        pass
+
+    @app.route('/user/<username>')
+    def user(username):
+        pass
+
+Then the centralized approach you would have one file with the views
+(`views.py`) but without any decorator::
+
+    def index():
+        pass
+
+    def user(username):
+        pass
+
+And then a file that sets up an application which maps the functions to
+URLs::
+
+    from flask import Flask
+    from yourapplication import views
+    app = Flask(__name__)
+    app.add_url_rule('/', view_func=views.index)
+    app.add_url_rule('/user/<username>', view_func=views.user)
+
+Loading Late
+------------
+
+So far we only split up the views and the routing, but the module is still
+loaded upfront.  The trick to actually load the view function as needed.
+This can be accomplished with a helper class that behaves just like a
+function but internally imports the real function on first use::
+
+    from werkzeug import import_string, cached_property
+
+    class LazyView(object):
+
+        def __init__(self, import_name):
+            self.__module__, self.__name__ = import_name.rsplit('.', 1)
+            self.import_name = import_name
+
+        @cached_property
+        def view(self):
+            return import_string(self.import_name)
+
+        def __call__(self, *args, **kwargs):
+            return self.view(*args, **kwargs)
+
+What's important here is is that `__module__` and `__name__` are properly
+set.  This is used by Flask internally to figure out how to do name the
+URL rules in case you don't provide a name for the rule yourself.
+
+Then you can define your central place to combine the views like this::
+
+    from flask import Flask
+    from yourapplication.helpers import LazyView
+    app = Flask(__name__)
+    app.add_url_rule('/',
+                     view_func=LazyView('yourapplication.views.index'))
+    app.add_url_rule('/user/<username>',
+                     view_func=LazyView('yourapplication.views.user'))
+
+You can further optimize this in terms of amount of keystrokes needed to
+write this by having a function that calls into
+:meth:`~flask.Flask.add_url_rule` by prefixing a string with the project
+name and a dot, and by wrapping `view_func` in a `LazyView` as needed::
+
+    def url(url_rule, import_name, **options):
+        view = LazyView('yourapplication.' + import_name)
+        app.add_url_rule(url_rule, view_func=view, **options)
+
+    url('/', 'views.index')
+    url('/user/<username>', 'views.user')
+
+One thing to keep in mind is that before and after request handlers have
+to be in a file that is imported upfront to work propery on the first
+request.  The same goes for any kind of remaining decorator.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/css.rst,docs/tutorial/css.rst,docs/tutorial/css.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/css.rst b/docs/tutorial/css.rst
index c2a6ba5b..76265a65 100644
--- a/docs/tutorial/css.rst
+++ b/docs/tutorial/css.rst
@@ -1,3 +1,5 @@
+.. _tutorial-css:
+
 Step 7: Adding Style
 ====================
 
@@ -25,3 +27,5 @@ folder we created before:
     .flash          { background: #CEE5F5; padding: 0.5em;
                       border: 1px solid #AACBE2; }
     .error          { background: #F0D6D6; padding: 0.5em; }
+
+Continue with :ref:`tutorial-testing`.
","diff --git a/docs/tutorial/css.rst b/docs/tutorial/css.rst
index c2a6ba5b..76265a65 100644
--- a/docs/tutorial/css.rst
+++ b/docs/tutorial/css.rst
@@ -1,3 +1,5 @@
+.. _tutorial-css:
+
 Step 7: Adding Style
 ====================
 
@@ -25,3 +27,5 @@ folder we created before:
     .flash          { background: #CEE5F5; padding: 0.5em;
                       border: 1px solid #AACBE2; }
     .error          { background: #F0D6D6; padding: 0.5em; }
+
+Continue with :ref:`tutorial-testing`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/dbcon.rst,docs/tutorial/dbcon.rst,docs/tutorial/dbcon.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/dbcon.rst b/docs/tutorial/dbcon.rst
index 9741dabb..50aba04d 100644
--- a/docs/tutorial/dbcon.rst
+++ b/docs/tutorial/dbcon.rst
@@ -1,3 +1,5 @@
+.. _tutorial-dbcon:
+
 Step 4: Request Database Connections
 ------------------------------------
 
@@ -31,3 +33,5 @@ request only and is available from within each function.  Never store such
 things on other objects because this would not work with threaded
 environments.  That special :data:`~flask.g` object does some magic behind
 the scenes to ensure it does the right thing.
+
+Continue to :ref:`tutorial-views`.
","diff --git a/docs/tutorial/dbcon.rst b/docs/tutorial/dbcon.rst
index 9741dabb..50aba04d 100644
--- a/docs/tutorial/dbcon.rst
+++ b/docs/tutorial/dbcon.rst
@@ -1,3 +1,5 @@
+.. _tutorial-dbcon:
+
 Step 4: Request Database Connections
 ------------------------------------
 
@@ -31,3 +33,5 @@ request only and is available from within each function.  Never store such
 things on other objects because this would not work with threaded
 environments.  That special :data:`~flask.g` object does some magic behind
 the scenes to ensure it does the right thing.
+
+Continue to :ref:`tutorial-views`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
index 0dc87d58..602b999d 100644
--- a/docs/tutorial/dbinit.rst
+++ b/docs/tutorial/dbinit.rst
@@ -1,3 +1,5 @@
+.. _tutorial-dbinit:
+
 Step 3: Creating The Database
 =============================
 
@@ -61,3 +63,5 @@ importing and calling that function::
    If you get an exception later that a table cannot be found check that
    you did call the `init_db` function and that your table names are
    correct (singular vs. plural for example).
+
+Continue with :ref:`tutorial-dbcon`
","diff --git a/docs/tutorial/dbinit.rst b/docs/tutorial/dbinit.rst
index 0dc87d58..602b999d 100644
--- a/docs/tutorial/dbinit.rst
+++ b/docs/tutorial/dbinit.rst
@@ -1,3 +1,5 @@
+.. _tutorial-dbinit:
+
 Step 3: Creating The Database
 =============================
 
@@ -61,3 +63,5 @@ importing and calling that function::
    If you get an exception later that a table cannot be found check that
    you did call the `init_db` function and that your table names are
    correct (singular vs. plural for example).
+
+Continue with :ref:`tutorial-dbcon`
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/folders.rst,docs/tutorial/folders.rst,docs/tutorial/folders.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/folders.rst b/docs/tutorial/folders.rst
index 80697a94..5e685c7e 100644
--- a/docs/tutorial/folders.rst
+++ b/docs/tutorial/folders.rst
@@ -1,3 +1,5 @@
+.. _tutorial-folders:
+
 Step 0: Creating The Folders
 ============================
 
@@ -16,4 +18,6 @@ This is the place where css and javascript files go.  Inside the
 `templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
 templates there.
 
+Continue with :ref:`tutorial-schema`.
+
 .. _Jinja2: http://jinja.pocoo.org/2/
","diff --git a/docs/tutorial/folders.rst b/docs/tutorial/folders.rst
index 80697a94..5e685c7e 100644
--- a/docs/tutorial/folders.rst
+++ b/docs/tutorial/folders.rst
@@ -1,3 +1,5 @@
+.. _tutorial-folders:
+
 Step 0: Creating The Folders
 ============================
 
@@ -16,4 +18,6 @@ This is the place where css and javascript files go.  Inside the
 `templates` folder Flask will look for `Jinja2`_ templates.  Drop all the
 templates there.
 
+Continue with :ref:`tutorial-schema`.
+
 .. _Jinja2: http://jinja.pocoo.org/2/
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/introduction.rst,docs/tutorial/introduction.rst,docs/tutorial/introduction.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/introduction.rst b/docs/tutorial/introduction.rst
index 04396a9d..ff7cdcab 100644
--- a/docs/tutorial/introduction.rst
+++ b/docs/tutorial/introduction.rst
@@ -1,3 +1,5 @@
+.. _tutorial-introduction:
+
 Introducing Flaskr
 ==================
 
@@ -26,4 +28,6 @@ Here a screenshot from the final application:
    :class: screenshot
    :alt: screenshot of the final application
 
+Continue with :ref:`tutorial-folders`.
+
 .. _SQLAlchemy: http://www.sqlalchemy.org/
","diff --git a/docs/tutorial/introduction.rst b/docs/tutorial/introduction.rst
index 04396a9d..ff7cdcab 100644
--- a/docs/tutorial/introduction.rst
+++ b/docs/tutorial/introduction.rst
@@ -1,3 +1,5 @@
+.. _tutorial-introduction:
+
 Introducing Flaskr
 ==================
 
@@ -26,4 +28,6 @@ Here a screenshot from the final application:
    :class: screenshot
    :alt: screenshot of the final application
 
+Continue with :ref:`tutorial-folders`.
+
 .. _SQLAlchemy: http://www.sqlalchemy.org/
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/schema.rst,docs/tutorial/schema.rst,docs/tutorial/schema.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/schema.rst b/docs/tutorial/schema.rst
index ed329539..c078667e 100644
--- a/docs/tutorial/schema.rst
+++ b/docs/tutorial/schema.rst
@@ -1,3 +1,5 @@
+.. _tutorial-schema:
+
 Step 1: Database Schema
 =======================
 
@@ -19,3 +21,5 @@ This schema consists of a single table called `entries` and each row in
 this table has an `id`, a `title` and a `text`.  The `id` is an
 automatically incrementing integer and a primary key, the other two are
 strings that must not be null.
+
+Continue with :ref:`tutorial-setup`.
","diff --git a/docs/tutorial/schema.rst b/docs/tutorial/schema.rst
index ed329539..c078667e 100644
--- a/docs/tutorial/schema.rst
+++ b/docs/tutorial/schema.rst
@@ -1,3 +1,5 @@
+.. _tutorial-schema:
+
 Step 1: Database Schema
 =======================
 
@@ -19,3 +21,5 @@ This schema consists of a single table called `entries` and each row in
 this table has an `id`, a `title` and a `text`.  The `id` is an
 automatically incrementing integer and a primary key, the other two are
 strings that must not be null.
+
+Continue with :ref:`tutorial-setup`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/setup.rst,docs/tutorial/setup.rst,docs/tutorial/setup.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index 1214c22f..f9a0b302 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -1,3 +1,5 @@
+.. _tutorial-setup:
+
 Step 2: Application Setup Code
 ==============================
 
@@ -62,3 +64,5 @@ focus on that a little later.  First we should get the database working.
    Want your server to be publically available?  Check out the
    :ref:`externally visible server <public-server>` section for more
    information.
+
+Continue with :ref:`tutorial-dbinit`.
","diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index 1214c22f..f9a0b302 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -1,3 +1,5 @@
+.. _tutorial-setup:
+
 Step 2: Application Setup Code
 ==============================
 
@@ -62,3 +64,5 @@ focus on that a little later.  First we should get the database working.
    Want your server to be publically available?  Check out the
    :ref:`externally visible server <public-server>` section for more
    information.
+
+Continue with :ref:`tutorial-dbinit`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/templates.rst,docs/tutorial/templates.rst,docs/tutorial/templates.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/templates.rst b/docs/tutorial/templates.rst
index 66b1dec6..5ec5584d 100644
--- a/docs/tutorial/templates.rst
+++ b/docs/tutorial/templates.rst
@@ -1,3 +1,5 @@
+.. _tutorial-templates:
+
 Step 6: The Templates
 =====================
 
@@ -105,3 +107,5 @@ the user to login:
         </dl>
       </form>
     {% endblock %}
+
+Continue with :ref:`tutorial-css`.
","diff --git a/docs/tutorial/templates.rst b/docs/tutorial/templates.rst
index 66b1dec6..5ec5584d 100644
--- a/docs/tutorial/templates.rst
+++ b/docs/tutorial/templates.rst
@@ -1,3 +1,5 @@
+.. _tutorial-templates:
+
 Step 6: The Templates
 =====================
 
@@ -105,3 +107,5 @@ the user to login:
         </dl>
       </form>
     {% endblock %}
+
+Continue with :ref:`tutorial-css`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/testing.rst,docs/tutorial/testing.rst,docs/tutorial/testing.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index c3075e3a..051e915a 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -1,3 +1,5 @@
+.. _tutorial-testing:
+
 Bonus: Testing the Application
 ===============================
 
","diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index c3075e3a..051e915a 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -1,3 +1,5 @@
+.. _tutorial-testing:
+
 Bonus: Testing the Application
 ===============================
 
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,docs/tutorial/views.rst,docs/tutorial/views.rst,docs/tutorial/views.rst,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
index 29be65fa..03c7709b 100644
--- a/docs/tutorial/views.rst
+++ b/docs/tutorial/views.rst
@@ -1,3 +1,5 @@
+.. _tutorial-views:
+
 Step 5: The View Functions
 ==========================
 
@@ -85,3 +87,5 @@ that case if the user was logged in.
         session.pop('logged_in', None)
         flash('You were logged out')
         return redirect(url_for('show_entries'))
+
+Continue with :ref:`tutorial-templates`.
","diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
index 29be65fa..03c7709b 100644
--- a/docs/tutorial/views.rst
+++ b/docs/tutorial/views.rst
@@ -1,3 +1,5 @@
+.. _tutorial-views:
+
 Step 5: The View Functions
 ==========================
 
@@ -85,3 +87,5 @@ that case if the user was logged in.
         session.pop('logged_in', None)
         flash('You were logged out')
         return redirect(url_for('show_entries'))
+
+Continue with :ref:`tutorial-templates`.
"
6c095deda51efb34cd18bd23411ebd6f2a0cdfe0,9d19b77acf413de77b39ed1c6d972fb1e5fef1c3,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Added lazyloading pattern and explicit chapter links in tutorial.  This fixes #49.,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 07ffe4c7..4e01cecb 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -127,6 +127,7 @@ def user_timeline(username):
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']],
             one=True) is not None
+    broken_just_for_djangocon
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 07ffe4c7..4e01cecb 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -127,6 +127,7 @@ def user_timeline(username):
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']],
             one=True) is not None
+    broken_just_for_djangocon
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
"
58285b61fffa1113701686c6bcdbf54ef529e440,1264c458ae808d306aa03c51f70103e52dca107b,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Document ways to generate secret keys.  This fixes #47.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index cb887251..a2cbb8b5 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -659,6 +659,19 @@ sessions work::
 The here mentioned :func:`~flask.escape` does escaping for you if you are
 not using the template engine (like in this example).
 
+.. admonition:: How to generate good Secret Keys
+
+   The problem with random is that it's hard to judge what random is.  And
+   a secret key should be as random as possible.  Your operating system
+   has ways to generate pretty random stuff based on a cryptographical
+   random generator which can be used to get such a key:
+
+   >>> import os
+   >>> os.urandom(24)
+   '\xfd{H\xe5<\x95\xf9\xe3\x96.5\xd1\x01O<!\xd5\xa2\xa0\x9fR""\xa1\xa8'
+
+   Just take that thing and copy/paste it into your code and you're done.
+
 Message Flashing
 ----------------
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index cb887251..a2cbb8b5 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -659,6 +659,19 @@ sessions work::
 The here mentioned :func:`~flask.escape` does escaping for you if you are
 not using the template engine (like in this example).
 
+.. admonition:: How to generate good Secret Keys
+
+   The problem with random is that it's hard to judge what random is.  And
+   a secret key should be as random as possible.  Your operating system
+   has ways to generate pretty random stuff based on a cryptographical
+   random generator which can be used to get such a key:
+
+   >>> import os
+   >>> os.urandom(24)
+   '\xfd{H\xe5<\x95\xf9\xe3\x96.5\xd1\x01O<!\xd5\xa2\xa0\x9fR""\xa1\xa8'
+
+   Just take that thing and copy/paste it into your code and you're done.
+
 Message Flashing
 ----------------
 
"
1264c458ae808d306aa03c51f70103e52dca107b,74d458b40c0bdb140e7feab9af407642eb3dcea1,flask.py,flask.py,flask.py,Added versionadded for logger,"diff --git a/flask.py b/flask.py
index cbb10b59..fb595067 100644
--- a/flask.py
+++ b/flask.py
@@ -784,6 +784,8 @@ class Flask(_PackageBoundObject):
             app.logger.debug('A value for debugging')
             app.logger.warning('A warning ocurred (%d apples)', 42)
             app.logger.error('An error occoured')
+
+        .. versionadded:: 0.5
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
","diff --git a/flask.py b/flask.py
index cbb10b59..fb595067 100644
--- a/flask.py
+++ b/flask.py
@@ -784,6 +784,8 @@ class Flask(_PackageBoundObject):
             app.logger.debug('A value for debugging')
             app.logger.warning('A warning ocurred (%d apples)', 42)
             app.logger.error('An error occoured')
+
+        .. versionadded:: 0.5
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
"
74d458b40c0bdb140e7feab9af407642eb3dcea1,8d356d7cda963e2fa6437c5a5fef035e13cc80c5,docs/_static/touch-icon.png,docs/_static/touch-icon.png,docs/_static/touch-icon.png,Fixed a build error and added a touch icon,"diff --git a/docs/_static/touch-icon.png b/docs/_static/touch-icon.png
new file mode 100644
index 00000000..cd1e91e1
Binary files /dev/null and b/docs/_static/touch-icon.png differ
","diff --git a/docs/_static/touch-icon.png b/docs/_static/touch-icon.png
new file mode 100644
index 00000000..cd1e91e1
Binary files /dev/null and b/docs/_static/touch-icon.png differ
"
74d458b40c0bdb140e7feab9af407642eb3dcea1,8d356d7cda963e2fa6437c5a5fef035e13cc80c5,docs/_themes,docs/_themes,docs/_themes,Fixed a build error and added a touch icon,"diff --git a/docs/_themes b/docs/_themes
index 91eee537..f87d00ee 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 91eee537e91594f752224a5847719f6d4fb38c2d
+Subproject commit f87d00eee80e4a555e94ed124a94ffea483dc329
","diff --git a/docs/_themes b/docs/_themes
index 91eee537..f87d00ee 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 91eee537e91594f752224a5847719f6d4fb38c2d
+Subproject commit f87d00eee80e4a555e94ed124a94ffea483dc329
"
74d458b40c0bdb140e7feab9af407642eb3dcea1,8d356d7cda963e2fa6437c5a5fef035e13cc80c5,docs/conf.py,docs/conf.py,docs/conf.py,Fixed a build error and added a touch icon,"diff --git a/docs/conf.py b/docs/conf.py
index 18e8f309..cffb1b7f 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -94,7 +94,9 @@ html_theme = 'flask'
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
 # documentation.
-#html_theme_options = {}
+html_theme_options = {
+    'touch_icon':   'touch-icon.png'
+}
 
 # Add any paths that contain custom themes here, relative to this directory.
 html_theme_path = ['_themes']
","diff --git a/docs/conf.py b/docs/conf.py
index 18e8f309..cffb1b7f 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -94,7 +94,9 @@ html_theme = 'flask'
 # Theme options are theme-specific and customize the look and feel of a theme
 # further.  For a list of options available for each theme, see the
 # documentation.
-#html_theme_options = {}
+html_theme_options = {
+    'touch_icon':   'touch-icon.png'
+}
 
 # Add any paths that contain custom themes here, relative to this directory.
 html_theme_path = ['_themes']
"
74d458b40c0bdb140e7feab9af407642eb3dcea1,8d356d7cda963e2fa6437c5a5fef035e13cc80c5,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,Fixed a build error and added a touch icon,"diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 03a82e8d..1561a37c 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -91,8 +91,6 @@ For more information consult the `mod_wsgi wiki`_.
 .. _virtual python: http://pypi.python.org/pypi/virtualenv
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
 
-.. _*
-
 Toubleshooting
 --------------
 
","diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 03a82e8d..1561a37c 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -91,8 +91,6 @@ For more information consult the `mod_wsgi wiki`_.
 .. _virtual python: http://pypi.python.org/pypi/virtualenv
 .. _mod_wsgi wiki: http://code.google.com/p/modwsgi/wiki/
 
-.. _*
-
 Toubleshooting
 --------------
 
"
8d356d7cda963e2fa6437c5a5fef035e13cc80c5,e432d833b5f7b4c27e2dca5d5125bbf78a46327d,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Fixed stuff I broke,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 4e01cecb..07ffe4c7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -127,7 +127,6 @@ def user_timeline(username):
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']],
             one=True) is not None
-    broken_just_for_djangocon
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 4e01cecb..07ffe4c7 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -127,7 +127,6 @@ def user_timeline(username):
             follower.who_id = ? and follower.whom_id = ?''',
             [session['user_id'], profile_user['user_id']],
             one=True) is not None
-    broken_just_for_djangocon
     return render_template('timeline.html', messages=query_db('''
             select message.*, user.* from message, user where
             user.user_id = message.author_id and user.user_id = ?
"
e432d833b5f7b4c27e2dca5d5125bbf78a46327d,68278fd78e15e3ef6a591f3f2b6cc700d1e4d6dd,flask.py,flask.py,flask.py,Started working on config support,"diff --git a/flask.py b/flask.py
index fb595067..a7d6c25c 100644
--- a/flask.py
+++ b/flask.py
@@ -615,6 +615,21 @@ class Module(_PackageBoundObject):
         self._register_events.append(func)
 
 
+class ConfigAttribute(object):
+    """"""Makes an attribute forward to the config""""""
+
+    def __init__(self, name):
+        self.__name__ = name
+
+    def __get__(self, obj, type=None):
+        if obj is None:
+            return self
+        return obj.config[self.__name__]
+
+    def __set__(self, obj, value):
+        obj.config[self.__name__] = value
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -648,25 +663,31 @@ class Flask(_PackageBoundObject):
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
+    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: application.  In debug mode the debugger will kick in when an unhandled
+    #: exception ocurrs and the integrated server will automatically reload
+    #: the application if changes in the code are detected.
+    debug = ConfigAttribute('debug')
+
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = None
+    secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = 'session'
+    session_cookie_name = ConfigAttribute('session.cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = timedelta(days=31)
+    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = False
+    use_x_sendfile = ConfigAttribute('use_x_sendfile')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -686,15 +707,22 @@ class Flask(_PackageBoundObject):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, import_name):
+    #: default configuration parameters
+    default_config = ImmutableDict({
+        'debug':                                False,
+        'secret_key':                           None,
+        'session.cookie_name':                  'session',
+        'session.permanent_lifetime':           timedelta(days=31),
+        'use_x_sendfile':                       False
+    })
+
+    def __init__(self, import_name, config=None):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the debug flag.  Set this to `True` to enable debugging of
-        #: the application.  In debug mode the debugger will kick in
-        #: when an unhandled exception ocurrs and the integrated server
-        #: will automatically reload the application if changes in the
-        #: code are detected.
-        self.debug = False
+        #: the configuration dictionary
+        self.config = self.default_config.copy()
+        if config:
+            self.config.update(config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
","diff --git a/flask.py b/flask.py
index fb595067..a7d6c25c 100644
--- a/flask.py
+++ b/flask.py
@@ -615,6 +615,21 @@ class Module(_PackageBoundObject):
         self._register_events.append(func)
 
 
+class ConfigAttribute(object):
+    """"""Makes an attribute forward to the config""""""
+
+    def __init__(self, name):
+        self.__name__ = name
+
+    def __get__(self, obj, type=None):
+        if obj is None:
+            return self
+        return obj.config[self.__name__]
+
+    def __set__(self, obj, value):
+        obj.config[self.__name__] = value
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -648,25 +663,31 @@ class Flask(_PackageBoundObject):
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
+    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: application.  In debug mode the debugger will kick in when an unhandled
+    #: exception ocurrs and the integrated server will automatically reload
+    #: the application if changes in the code are detected.
+    debug = ConfigAttribute('debug')
+
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = None
+    secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = 'session'
+    session_cookie_name = ConfigAttribute('session.cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = timedelta(days=31)
+    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = False
+    use_x_sendfile = ConfigAttribute('use_x_sendfile')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -686,15 +707,22 @@ class Flask(_PackageBoundObject):
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    def __init__(self, import_name):
+    #: default configuration parameters
+    default_config = ImmutableDict({
+        'debug':                                False,
+        'secret_key':                           None,
+        'session.cookie_name':                  'session',
+        'session.permanent_lifetime':           timedelta(days=31),
+        'use_x_sendfile':                       False
+    })
+
+    def __init__(self, import_name, config=None):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the debug flag.  Set this to `True` to enable debugging of
-        #: the application.  In debug mode the debugger will kick in
-        #: when an unhandled exception ocurrs and the integrated server
-        #: will automatically reload the application if changes in the
-        #: code are detected.
-        self.debug = False
+        #: the configuration dictionary
+        self.config = self.default_config.copy()
+        if config:
+            self.config.update(config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
"
68278fd78e15e3ef6a591f3f2b6cc700d1e4d6dd,4d16486132c349cdc7d473ef3c238dfa3f9d5385,docs/api.rst,docs/api.rst,docs/api.rst,Improved configuration support.,"diff --git a/docs/api.rst b/docs/api.rst
index 2225ee07..38c2321d 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -284,3 +284,8 @@ Template Rendering
 .. autofunction:: render_template_string
 
 .. autofunction:: get_template_attribute
+
+Configuration
+-------------
+
+.. autoclass:: Config
","diff --git a/docs/api.rst b/docs/api.rst
index 2225ee07..38c2321d 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -284,3 +284,8 @@ Template Rendering
 .. autofunction:: render_template_string
 
 .. autofunction:: get_template_attribute
+
+Configuration
+-------------
+
+.. autoclass:: Config
"
68278fd78e15e3ef6a591f3f2b6cc700d1e4d6dd,4d16486132c349cdc7d473ef3c238dfa3f9d5385,flask.py,flask.py,flask.py,Improved configuration support.,"diff --git a/flask.py b/flask.py
index a7d6c25c..c90a42e5 100644
--- a/flask.py
+++ b/flask.py
@@ -19,7 +19,8 @@ from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property, wrap_file, Headers
+     ImmutableDict, cached_property, wrap_file, Headers, \
+     import_string
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -630,6 +631,90 @@ class ConfigAttribute(object):
         obj.config[self.__name__] = value
 
 
+class Config(dict):
+    """"""Works exactly like a dict but provides ways to fill it from files
+    or special dictionaries.  There are two common patterns to populate the
+    config.
+
+    Either you can fill the config from a config file::
+
+        app.config.from_pyfile('yourconfig.cfg')
+
+    Or alternatively you can define the configuration options in the
+    module that calls :meth:`from_module` or provide an import path to
+    a module that should be loaded.  It is also possible to tell it to
+    use the same module and with that provide the configuration values
+    just before the call::
+
+        DEBUG = True
+        SECRET_KEY = 'development key'
+        app.config.from_module(__name__)
+
+    In both cases (loading from any Python file or loading from modules),
+    only uppercase keys are added to the config.  The actual keys in the
+    config are however lowercased so they are converted for you.  This makes
+    it possible to use lowercase values in the config file for temporary
+    values that are not added to the config or to define the config keys in
+    the same file that implements the application.
+
+    :param root_path: path to which files are read relative from.  When the
+                      config object is created by the application, this is
+                      the application's :attr:`~flask.Flask.root_path`.
+    :param defaults: an optional dictionary of default values
+    """"""
+
+    def __init__(self, root_path, defaults=None):
+        dict.__init__(self, defaults or {})
+        self.root_path = root_path
+
+    def from_pyfile(self, filename):
+        """"""Updates the values in the config from a Python file.  This function
+        behaves as if the file was imported as module with the
+        :meth:`from_module` function.
+
+        :param filename: the filename of the config.  This can either be an
+                         absolute filename or a filename relative to the
+                         root path.
+        """"""
+        filename = os.path.join(self.root_path, filename)
+        d = type(sys)('config')
+        d.__file__ = filename
+        execfile(filename, d.__dict__)
+        self.from_module(d)
+
+    def from_module(self, module):
+        """"""Updates the values from the given module.  A module can be of one
+        of the following two types:
+
+        -   a string: in this case the module with that name will be imported
+        -   an actual module reference: that module is used directly
+
+        Just the uppercase variables in that module are stored in the config
+        after lowercasing.  Example usage::
+
+            app.config.from_module('yourapplication.default_config')
+            from yourapplication import default_config
+            app.config.from_module(default_config)
+
+        You should not use this function to load the actual configuration but
+        rather configuration defaults.  The actual config should be loaded
+        with :meth;`from_pyfile` and ideally from a location not within the
+        package because the package might be installed system wide.
+
+        :param module: an import name or module
+        """"""
+        if isinstance(module, basestring):
+            d = import_string(module).__dict__
+        else:
+            d = module.__dict__
+        for key, value in d.iteritems():
+            if key.isupper():
+                self[key.lower()] = value
+
+    def __repr__(self):
+        return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -675,12 +760,12 @@ class Flask(_PackageBoundObject):
     secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session.cookie_name')
+    session_cookie_name = ConfigAttribute('session_cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
+    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
@@ -711,18 +796,18 @@ class Flask(_PackageBoundObject):
     default_config = ImmutableDict({
         'debug':                                False,
         'secret_key':                           None,
-        'session.cookie_name':                  'session',
-        'session.permanent_lifetime':           timedelta(days=31),
+        'session_cookie_name':                  'session',
+        'permanent_session_lifetime':           timedelta(days=31),
         'use_x_sendfile':                       False
     })
 
-    def __init__(self, import_name, config=None):
+    def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary
-        self.config = self.default_config.copy()
-        if config:
-            self.config.update(config)
+        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: exactly like a regular dictionary but supports additional methods
+        #: to load a config from files.
+        self.config = Config(self.root_path, self.default_config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
","diff --git a/flask.py b/flask.py
index a7d6c25c..c90a42e5 100644
--- a/flask.py
+++ b/flask.py
@@ -19,7 +19,8 @@ from itertools import chain
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
-     ImmutableDict, cached_property, wrap_file, Headers
+     ImmutableDict, cached_property, wrap_file, Headers, \
+     import_string
 from werkzeug.routing import Map, Rule
 from werkzeug.exceptions import HTTPException, InternalServerError
 from werkzeug.contrib.securecookie import SecureCookie
@@ -630,6 +631,90 @@ class ConfigAttribute(object):
         obj.config[self.__name__] = value
 
 
+class Config(dict):
+    """"""Works exactly like a dict but provides ways to fill it from files
+    or special dictionaries.  There are two common patterns to populate the
+    config.
+
+    Either you can fill the config from a config file::
+
+        app.config.from_pyfile('yourconfig.cfg')
+
+    Or alternatively you can define the configuration options in the
+    module that calls :meth:`from_module` or provide an import path to
+    a module that should be loaded.  It is also possible to tell it to
+    use the same module and with that provide the configuration values
+    just before the call::
+
+        DEBUG = True
+        SECRET_KEY = 'development key'
+        app.config.from_module(__name__)
+
+    In both cases (loading from any Python file or loading from modules),
+    only uppercase keys are added to the config.  The actual keys in the
+    config are however lowercased so they are converted for you.  This makes
+    it possible to use lowercase values in the config file for temporary
+    values that are not added to the config or to define the config keys in
+    the same file that implements the application.
+
+    :param root_path: path to which files are read relative from.  When the
+                      config object is created by the application, this is
+                      the application's :attr:`~flask.Flask.root_path`.
+    :param defaults: an optional dictionary of default values
+    """"""
+
+    def __init__(self, root_path, defaults=None):
+        dict.__init__(self, defaults or {})
+        self.root_path = root_path
+
+    def from_pyfile(self, filename):
+        """"""Updates the values in the config from a Python file.  This function
+        behaves as if the file was imported as module with the
+        :meth:`from_module` function.
+
+        :param filename: the filename of the config.  This can either be an
+                         absolute filename or a filename relative to the
+                         root path.
+        """"""
+        filename = os.path.join(self.root_path, filename)
+        d = type(sys)('config')
+        d.__file__ = filename
+        execfile(filename, d.__dict__)
+        self.from_module(d)
+
+    def from_module(self, module):
+        """"""Updates the values from the given module.  A module can be of one
+        of the following two types:
+
+        -   a string: in this case the module with that name will be imported
+        -   an actual module reference: that module is used directly
+
+        Just the uppercase variables in that module are stored in the config
+        after lowercasing.  Example usage::
+
+            app.config.from_module('yourapplication.default_config')
+            from yourapplication import default_config
+            app.config.from_module(default_config)
+
+        You should not use this function to load the actual configuration but
+        rather configuration defaults.  The actual config should be loaded
+        with :meth;`from_pyfile` and ideally from a location not within the
+        package because the package might be installed system wide.
+
+        :param module: an import name or module
+        """"""
+        if isinstance(module, basestring):
+            d = import_string(module).__dict__
+        else:
+            d = module.__dict__
+        for key, value in d.iteritems():
+            if key.isupper():
+                self[key.lower()] = value
+
+    def __repr__(self):
+        return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
+
+
 class Flask(_PackageBoundObject):
     """"""The flask object implements a WSGI application and acts as the central
     object.  It is passed the name of the module or package of the
@@ -675,12 +760,12 @@ class Flask(_PackageBoundObject):
     secret_key = ConfigAttribute('secret_key')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session.cookie_name')
+    session_cookie_name = ConfigAttribute('session_cookie_name')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('session.permanent_lifetime')
+    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
@@ -711,18 +796,18 @@ class Flask(_PackageBoundObject):
     default_config = ImmutableDict({
         'debug':                                False,
         'secret_key':                           None,
-        'session.cookie_name':                  'session',
-        'session.permanent_lifetime':           timedelta(days=31),
+        'session_cookie_name':                  'session',
+        'permanent_session_lifetime':           timedelta(days=31),
         'use_x_sendfile':                       False
     })
 
-    def __init__(self, import_name, config=None):
+    def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary
-        self.config = self.default_config.copy()
-        if config:
-            self.config.update(config)
+        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: exactly like a regular dictionary but supports additional methods
+        #: to load a config from files.
+        self.config = Config(self.root_path, self.default_config)
 
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
"
68278fd78e15e3ef6a591f3f2b6cc700d1e4d6dd,4d16486132c349cdc7d473ef3c238dfa3f9d5385,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Improved configuration support.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 17f73ad7..b1f9cdac 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -27,6 +27,11 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+# config keys used for the ConfigTestCase
+TEST_KEY = 'foo'
+SECRET_KEY = 'devkey'
+
+
 @contextmanager
 def catch_stderr():
     old_stderr = sys.stderr
@@ -686,6 +691,24 @@ class LoggingTestCase(unittest.TestCase):
             assert rv.data == 'Hello Server Error'
 
 
+class ConfigTestCase(unittest.TestCase):
+
+    def common_module_test(self, app):
+        assert app.secret_key == 'devkey'
+        assert app.config['test_key'] == 'foo'
+        assert 'ConfigTestCase' not in app.config
+
+    def test_config_from_file(self):
+        app = flask.Flask(__name__)
+        app.config.from_pyfile('flask_tests.py')
+        self.common_module_test(app)
+
+    def test_config_from_module(self):
+        app = flask.Flask(__name__)
+        app.config.from_module(__name__)
+        self.common_module_test(app)
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -696,6 +719,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ModuleTestCase))
     suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(LoggingTestCase))
+    suite.addTest(unittest.makeSuite(ConfigTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 17f73ad7..b1f9cdac 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -27,6 +27,11 @@ sys.path.append(os.path.join(example_path, 'flaskr'))
 sys.path.append(os.path.join(example_path, 'minitwit'))
 
 
+# config keys used for the ConfigTestCase
+TEST_KEY = 'foo'
+SECRET_KEY = 'devkey'
+
+
 @contextmanager
 def catch_stderr():
     old_stderr = sys.stderr
@@ -686,6 +691,24 @@ class LoggingTestCase(unittest.TestCase):
             assert rv.data == 'Hello Server Error'
 
 
+class ConfigTestCase(unittest.TestCase):
+
+    def common_module_test(self, app):
+        assert app.secret_key == 'devkey'
+        assert app.config['test_key'] == 'foo'
+        assert 'ConfigTestCase' not in app.config
+
+    def test_config_from_file(self):
+        app = flask.Flask(__name__)
+        app.config.from_pyfile('flask_tests.py')
+        self.common_module_test(app)
+
+    def test_config_from_module(self):
+        app = flask.Flask(__name__)
+        app.config.from_module(__name__)
+        self.common_module_test(app)
+
+
 def suite():
     from minitwit_tests import MiniTwitTestCase
     from flaskr_tests import FlaskrTestCase
@@ -696,6 +719,7 @@ def suite():
     suite.addTest(unittest.makeSuite(ModuleTestCase))
     suite.addTest(unittest.makeSuite(SendfileTestCase))
     suite.addTest(unittest.makeSuite(LoggingTestCase))
+    suite.addTest(unittest.makeSuite(ConfigTestCase))
     if flask.json_available:
         suite.addTest(unittest.makeSuite(JSONTestCase))
     suite.addTest(unittest.makeSuite(MiniTwitTestCase))
"
4d16486132c349cdc7d473ef3c238dfa3f9d5385,35fd6eb22c4dec893770dd5720a51608a06fb8cd,flask.py,flask.py,flask.py,Use uppercase for config and support any object.,"diff --git a/flask.py b/flask.py
index c90a42e5..84e3d916 100644
--- a/flask.py
+++ b/flask.py
@@ -680,36 +680,36 @@ class Config(dict):
         d = type(sys)('config')
         d.__file__ = filename
         execfile(filename, d.__dict__)
-        self.from_module(d)
+        self.from_object(d)
 
-    def from_module(self, module):
-        """"""Updates the values from the given module.  A module can be of one
+    def from_object(self, obj):
+        """"""Updates the values from the given object.  An object can be of one
         of the following two types:
 
-        -   a string: in this case the module with that name will be imported
-        -   an actual module reference: that module is used directly
+        -   a string: in this case the object with that name will be imported
+        -   an actual object reference: that object is used directly
 
-        Just the uppercase variables in that module are stored in the config
+        Objects are usually either modules or classes.
+
+        Just the uppercase variables in that object are stored in the config
         after lowercasing.  Example usage::
 
-            app.config.from_module('yourapplication.default_config')
+            app.config.from_object('yourapplication.default_config')
             from yourapplication import default_config
-            app.config.from_module(default_config)
+            app.config.from_object(default_config)
 
         You should not use this function to load the actual configuration but
         rather configuration defaults.  The actual config should be loaded
-        with :meth;`from_pyfile` and ideally from a location not within the
+        with :meth:`from_pyfile` and ideally from a location not within the
         package because the package might be installed system wide.
 
-        :param module: an import name or module
+        :param obj: an import name or object
         """"""
-        if isinstance(module, basestring):
-            d = import_string(module).__dict__
-        else:
-            d = module.__dict__
-        for key, value in d.iteritems():
+        if isinstance(obj, basestring):
+            obj = import_string(obj)
+        for key in dir(obj):
             if key.isupper():
-                self[key.lower()] = value
+                self[key] = getattr(obj, key)
 
     def __repr__(self):
         return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
@@ -752,27 +752,27 @@ class Flask(_PackageBoundObject):
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
-    debug = ConfigAttribute('debug')
+    debug = ConfigAttribute('DEBUG')
 
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = ConfigAttribute('secret_key')
+    secret_key = ConfigAttribute('SECRET_KEY')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session_cookie_name')
+    session_cookie_name = ConfigAttribute('SESSION_COOKIE_NAME')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
+    permanent_session_lifetime = ConfigAttribute('PERMANENT_SESSION_LIFETIME')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = ConfigAttribute('use_x_sendfile')
+    use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -794,11 +794,11 @@ class Flask(_PackageBoundObject):
 
     #: default configuration parameters
     default_config = ImmutableDict({
-        'debug':                                False,
-        'secret_key':                           None,
-        'session_cookie_name':                  'session',
-        'permanent_session_lifetime':           timedelta(days=31),
-        'use_x_sendfile':                       False
+        'DEBUG':                                False,
+        'SECRET_KEY':                           None,
+        'SESSION_COOKIE_NAME':                  'session',
+        'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
+        'USE_X_SENDFILE':                       False
     })
 
     def __init__(self, import_name):
","diff --git a/flask.py b/flask.py
index c90a42e5..84e3d916 100644
--- a/flask.py
+++ b/flask.py
@@ -680,36 +680,36 @@ class Config(dict):
         d = type(sys)('config')
         d.__file__ = filename
         execfile(filename, d.__dict__)
-        self.from_module(d)
+        self.from_object(d)
 
-    def from_module(self, module):
-        """"""Updates the values from the given module.  A module can be of one
+    def from_object(self, obj):
+        """"""Updates the values from the given object.  An object can be of one
         of the following two types:
 
-        -   a string: in this case the module with that name will be imported
-        -   an actual module reference: that module is used directly
+        -   a string: in this case the object with that name will be imported
+        -   an actual object reference: that object is used directly
 
-        Just the uppercase variables in that module are stored in the config
+        Objects are usually either modules or classes.
+
+        Just the uppercase variables in that object are stored in the config
         after lowercasing.  Example usage::
 
-            app.config.from_module('yourapplication.default_config')
+            app.config.from_object('yourapplication.default_config')
             from yourapplication import default_config
-            app.config.from_module(default_config)
+            app.config.from_object(default_config)
 
         You should not use this function to load the actual configuration but
         rather configuration defaults.  The actual config should be loaded
-        with :meth;`from_pyfile` and ideally from a location not within the
+        with :meth:`from_pyfile` and ideally from a location not within the
         package because the package might be installed system wide.
 
-        :param module: an import name or module
+        :param obj: an import name or object
         """"""
-        if isinstance(module, basestring):
-            d = import_string(module).__dict__
-        else:
-            d = module.__dict__
-        for key, value in d.iteritems():
+        if isinstance(obj, basestring):
+            obj = import_string(obj)
+        for key in dir(obj):
             if key.isupper():
-                self[key.lower()] = value
+                self[key] = getattr(obj, key)
 
     def __repr__(self):
         return '<%s %s>' % (self.__class__.__name__, dict.__repr__(self))
@@ -752,27 +752,27 @@ class Flask(_PackageBoundObject):
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
-    debug = ConfigAttribute('debug')
+    debug = ConfigAttribute('DEBUG')
 
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
-    secret_key = ConfigAttribute('secret_key')
+    secret_key = ConfigAttribute('SECRET_KEY')
 
     #: The secure cookie uses this for the name of the session cookie
-    session_cookie_name = ConfigAttribute('session_cookie_name')
+    session_cookie_name = ConfigAttribute('SESSION_COOKIE_NAME')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
-    permanent_session_lifetime = ConfigAttribute('permanent_session_lifetime')
+    permanent_session_lifetime = ConfigAttribute('PERMANENT_SESSION_LIFETIME')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
     #: mind that the server has to support this.  This only affects files
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
-    use_x_sendfile = ConfigAttribute('use_x_sendfile')
+    use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
@@ -794,11 +794,11 @@ class Flask(_PackageBoundObject):
 
     #: default configuration parameters
     default_config = ImmutableDict({
-        'debug':                                False,
-        'secret_key':                           None,
-        'session_cookie_name':                  'session',
-        'permanent_session_lifetime':           timedelta(days=31),
-        'use_x_sendfile':                       False
+        'DEBUG':                                False,
+        'SECRET_KEY':                           None,
+        'SESSION_COOKIE_NAME':                  'session',
+        'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
+        'USE_X_SENDFILE':                       False
     })
 
     def __init__(self, import_name):
"
4d16486132c349cdc7d473ef3c238dfa3f9d5385,35fd6eb22c4dec893770dd5720a51608a06fb8cd,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Use uppercase for config and support any object.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b1f9cdac..8ab5ed1d 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -693,20 +693,29 @@ class LoggingTestCase(unittest.TestCase):
 
 class ConfigTestCase(unittest.TestCase):
 
-    def common_module_test(self, app):
+    def common_object_test(self, app):
         assert app.secret_key == 'devkey'
-        assert app.config['test_key'] == 'foo'
+        assert app.config['TEST_KEY'] == 'foo'
         assert 'ConfigTestCase' not in app.config
 
     def test_config_from_file(self):
         app = flask.Flask(__name__)
         app.config.from_pyfile('flask_tests.py')
-        self.common_module_test(app)
+        self.common_object_test(app)
 
     def test_config_from_module(self):
         app = flask.Flask(__name__)
-        app.config.from_module(__name__)
-        self.common_module_test(app)
+        app.config.from_object(__name__)
+        self.common_object_test(app)
+
+    def test_config_from_class(self):
+        class Base(object):
+            TEST_KEY = 'foo'
+        class Test(Base):
+            SECRET_KEY = 'devkey'
+        app = flask.Flask(__name__)
+        app.config.from_object(Test)
+        self.common_object_test(app)
 
 
 def suite():
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index b1f9cdac..8ab5ed1d 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -693,20 +693,29 @@ class LoggingTestCase(unittest.TestCase):
 
 class ConfigTestCase(unittest.TestCase):
 
-    def common_module_test(self, app):
+    def common_object_test(self, app):
         assert app.secret_key == 'devkey'
-        assert app.config['test_key'] == 'foo'
+        assert app.config['TEST_KEY'] == 'foo'
         assert 'ConfigTestCase' not in app.config
 
     def test_config_from_file(self):
         app = flask.Flask(__name__)
         app.config.from_pyfile('flask_tests.py')
-        self.common_module_test(app)
+        self.common_object_test(app)
 
     def test_config_from_module(self):
         app = flask.Flask(__name__)
-        app.config.from_module(__name__)
-        self.common_module_test(app)
+        app.config.from_object(__name__)
+        self.common_object_test(app)
+
+    def test_config_from_class(self):
+        class Base(object):
+            TEST_KEY = 'foo'
+        class Test(Base):
+            SECRET_KEY = 'devkey'
+        app = flask.Flask(__name__)
+        app.config.from_object(Test)
+        self.common_object_test(app)
 
 
 def suite():
"
e432d833b5f7b4c27e2dca5d5125bbf78a46327d,99c6287ce2319224f3a188f75641a9443466ab85,docs/deploying/cgi.rst,docs/deploying/cgi.rst,docs/deploying/cgi.rst,appengine -> app engine,,
e432d833b5f7b4c27e2dca5d5125bbf78a46327d,99c6287ce2319224f3a188f75641a9443466ab85,docs/patterns/caching.rst,docs/patterns/caching.rst,docs/patterns/caching.rst,appengine -> app engine,"diff --git a/docs/patterns/caching.rst b/docs/patterns/caching.rst
index 7a811b82..5817aa29 100644
--- a/docs/patterns/caching.rst
+++ b/docs/patterns/caching.rst
@@ -34,7 +34,7 @@ memcached server then::
     from werkzeug.contrib.cache import MemcachedCache
     cache = MemcachedCache(['127.0.0.1:11211'])
 
-If you are using appengine, you can connect to the appengine memcache
+If you are using App Engine, you can connect to the App Engine memcache
 server easily::
 
     from werkzeug.contrib.cache import GAEMemcachedCache
","diff --git a/docs/patterns/caching.rst b/docs/patterns/caching.rst
index 7a811b82..5817aa29 100644
--- a/docs/patterns/caching.rst
+++ b/docs/patterns/caching.rst
@@ -34,7 +34,7 @@ memcached server then::
     from werkzeug.contrib.cache import MemcachedCache
     cache = MemcachedCache(['127.0.0.1:11211'])
 
-If you are using appengine, you can connect to the appengine memcache
+If you are using App Engine, you can connect to the App Engine memcache
 server easily::
 
     from werkzeug.contrib.cache import GAEMemcachedCache
"
e432d833b5f7b4c27e2dca5d5125bbf78a46327d,99c6287ce2319224f3a188f75641a9443466ab85,docs/patterns/lazyloading.rst,docs/patterns/lazyloading.rst,docs/patterns/lazyloading.rst,appengine -> app engine,,
78fc9949aa7055f2e14825cec3c28bc35c42700f,182ee31503ea8a9eefd0d7063bd7fbdde991e13b,docs/api.rst,docs/api.rst,docs/api.rst,Added chapter about config,"diff --git a/docs/api.rst b/docs/api.rst
index 38c2321d..f6920199 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -289,3 +289,4 @@ Configuration
 -------------
 
 .. autoclass:: Config
+   :members:
","diff --git a/docs/api.rst b/docs/api.rst
index 38c2321d..f6920199 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -289,3 +289,4 @@ Configuration
 -------------
 
 .. autoclass:: Config
+   :members:
"
78fc9949aa7055f2e14825cec3c28bc35c42700f,182ee31503ea8a9eefd0d7063bd7fbdde991e13b,docs/config.rst,,docs/config.rst,Added chapter about config,"diff --git a/docs/config.rst b/docs/config.rst
new file mode 100644
index 00000000..24bc8b04
--- /dev/null
+++ b/docs/config.rst
@@ -0,0 +1,120 @@
+Configuration Handling
+======================
+
+.. versionadded:: 0.5
+
+Applications need some kind of configuration.  There are different things
+you might want to change.  Like toggling debug mode, the secret key and a
+lot of very similar things.
+
+The way Flask is designed usually requires the configuration to be
+available when the application starts up.  You can either hardcode the
+configuration in the code which for many small applications is not
+actually that bad, but there are better ways.
+
+Independent of how you load your config, there is a config object
+available which holds the loaded configuration values:
+The :attr:`~flask.Flask.config` attribute of the :class:`~flask.Flask`
+object.  This is the place where Flask itself puts certain configuration
+values and also where extensions can put their configuration values.  But
+this is also where you can have your own configuration.
+
+Configuration Basics
+--------------------
+
+The :attr:`~flask.Flask.config` is actually a subclass of a dictionary and
+can be modified just like any dictionary::
+
+    app = Flask(__name__)
+    app.config['DEBUG'] = True
+
+Certain configuration values are also forwarded to the
+:attr:`~flask.Flask` object so that you can read and write them from
+there::
+
+    app.debug = True
+
+To update multiple keys at once you can use the :meth:`dict.update`
+method::
+
+    app.config.update(
+        DEBUG=True,
+        SECRET_KEY='...'
+    )
+
+Builtin Configuration Values
+----------------------------
+
+The following configuration values are used internally by Flask:
+
+=============================== =========================================
+``DEBUG``                       enable/disable debug mode
+``SECRET_KEY``                  the secret key
+``SESSION_COOKIE_NAME``         the name of the session cookie
+``PERMANENT_SESSION_LIFETIME``  the lifetime of a permanent session as
+                                :class:`datetime.timedelta` object.
+``USE_X_SENDFILE``              enable/disable x-sendfile
+=============================== =========================================
+
+Configuring from Files
+----------------------
+
+Configuration becomes more useful if you can configure from a file.  And
+ideally that file would be outside of the actual application package that
+you can install the package with distribute (:ref:`distribute-deployment`)
+and still modify that file afterwards.
+
+So a common pattern is this::
+
+    app = Flask(__name__)
+    app.config.from_object('yourapplication.default_settings')
+    app.config.from_envvar('YOURAPPLICATION_SETTINGS')
+
+What this does is first loading the configuration from the
+`yourapplication.default_settings` module and then overrides the values
+with the contents of the file the :envvar:`YOURAPPLICATION_SETTINGS`
+environment variable points to.  This environment variable can be set on
+Linux or OS X with the export command in the shell before starting the
+server::
+
+    $ export YOURAPPLICATION_SETTINGS=/path/to/settings.cfg
+    $ python run-app.py
+     * Running on http://127.0.0.1:5000/
+     * Restarting with reloader...
+
+On Windows systems use the `set` builtin instead::
+
+    >set YOURAPPLICATION_SETTINGS=\path\to\settings.cfg
+
+The configuration files themselves are actual Python files.  Only values
+in uppercase are actually stored in the config object later on.  So make
+sure to use uppercase letters for your config keys.
+
+Here an example configuration file::
+
+    DEBUG = False
+    SECRET_KEY = '?\xbf,\xb4\x8d\xa3""<\x9c\xb0@\x0f5\xab,w\xee\x8d$0\x13\x8b83'
+
+Make sure to load the configuration very early on so that extensions have
+the ability to access the configuration when starting up.  There are other
+methods on the config object as well to load from individual files.  For a
+complete reference, read the :class:`~flask.Config` object's
+documentation.
+
+
+Configuration Best Practices
+----------------------------
+
+The downside with the approach mentioned earlier is that it makes testing
+a little harder.  There is no one 100% solution for this problem in
+general, but there are a couple of things you can do to improve that
+experience:
+
+1.  create your application in a function and register modules on it.
+    That way you can create multiple instances of your application with
+    different configurations attached which makes unittesting a lot
+    easier.  You can use this to pass in configuration as needed.
+
+2.  Do not write code that needs the configuration at import time.  If you
+    limit yourself to request-only accesses to the configuration you can
+    reconfigure the object later on as needed.
","diff --git a/docs/config.rst b/docs/config.rst
new file mode 100644
index 00000000..24bc8b04
--- /dev/null
+++ b/docs/config.rst
@@ -0,0 +1,120 @@
+Configuration Handling
+======================
+
+.. versionadded:: 0.5
+
+Applications need some kind of configuration.  There are different things
+you might want to change.  Like toggling debug mode, the secret key and a
+lot of very similar things.
+
+The way Flask is designed usually requires the configuration to be
+available when the application starts up.  You can either hardcode the
+configuration in the code which for many small applications is not
+actually that bad, but there are better ways.
+
+Independent of how you load your config, there is a config object
+available which holds the loaded configuration values:
+The :attr:`~flask.Flask.config` attribute of the :class:`~flask.Flask`
+object.  This is the place where Flask itself puts certain configuration
+values and also where extensions can put their configuration values.  But
+this is also where you can have your own configuration.
+
+Configuration Basics
+--------------------
+
+The :attr:`~flask.Flask.config` is actually a subclass of a dictionary and
+can be modified just like any dictionary::
+
+    app = Flask(__name__)
+    app.config['DEBUG'] = True
+
+Certain configuration values are also forwarded to the
+:attr:`~flask.Flask` object so that you can read and write them from
+there::
+
+    app.debug = True
+
+To update multiple keys at once you can use the :meth:`dict.update`
+method::
+
+    app.config.update(
+        DEBUG=True,
+        SECRET_KEY='...'
+    )
+
+Builtin Configuration Values
+----------------------------
+
+The following configuration values are used internally by Flask:
+
+=============================== =========================================
+``DEBUG``                       enable/disable debug mode
+``SECRET_KEY``                  the secret key
+``SESSION_COOKIE_NAME``         the name of the session cookie
+``PERMANENT_SESSION_LIFETIME``  the lifetime of a permanent session as
+                                :class:`datetime.timedelta` object.
+``USE_X_SENDFILE``              enable/disable x-sendfile
+=============================== =========================================
+
+Configuring from Files
+----------------------
+
+Configuration becomes more useful if you can configure from a file.  And
+ideally that file would be outside of the actual application package that
+you can install the package with distribute (:ref:`distribute-deployment`)
+and still modify that file afterwards.
+
+So a common pattern is this::
+
+    app = Flask(__name__)
+    app.config.from_object('yourapplication.default_settings')
+    app.config.from_envvar('YOURAPPLICATION_SETTINGS')
+
+What this does is first loading the configuration from the
+`yourapplication.default_settings` module and then overrides the values
+with the contents of the file the :envvar:`YOURAPPLICATION_SETTINGS`
+environment variable points to.  This environment variable can be set on
+Linux or OS X with the export command in the shell before starting the
+server::
+
+    $ export YOURAPPLICATION_SETTINGS=/path/to/settings.cfg
+    $ python run-app.py
+     * Running on http://127.0.0.1:5000/
+     * Restarting with reloader...
+
+On Windows systems use the `set` builtin instead::
+
+    >set YOURAPPLICATION_SETTINGS=\path\to\settings.cfg
+
+The configuration files themselves are actual Python files.  Only values
+in uppercase are actually stored in the config object later on.  So make
+sure to use uppercase letters for your config keys.
+
+Here an example configuration file::
+
+    DEBUG = False
+    SECRET_KEY = '?\xbf,\xb4\x8d\xa3""<\x9c\xb0@\x0f5\xab,w\xee\x8d$0\x13\x8b83'
+
+Make sure to load the configuration very early on so that extensions have
+the ability to access the configuration when starting up.  There are other
+methods on the config object as well to load from individual files.  For a
+complete reference, read the :class:`~flask.Config` object's
+documentation.
+
+
+Configuration Best Practices
+----------------------------
+
+The downside with the approach mentioned earlier is that it makes testing
+a little harder.  There is no one 100% solution for this problem in
+general, but there are a couple of things you can do to improve that
+experience:
+
+1.  create your application in a function and register modules on it.
+    That way you can create multiple instances of your application with
+    different configurations attached which makes unittesting a lot
+    easier.  You can use this to pass in configuration as needed.
+
+2.  Do not write code that needs the configuration at import time.  If you
+    limit yourself to request-only accesses to the configuration you can
+    reconfigure the object later on as needed.
"
78fc9949aa7055f2e14825cec3c28bc35c42700f,182ee31503ea8a9eefd0d7063bd7fbdde991e13b,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,Added chapter about config,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 66dc0ead..5fda5931 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -14,6 +14,7 @@ web development.
    tutorial/index
    testing
    errorhandling
+   config
    shell
    patterns/index
    deploying/index
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 66dc0ead..5fda5931 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -14,6 +14,7 @@ web development.
    tutorial/index
    testing
    errorhandling
+   config
    shell
    patterns/index
    deploying/index
"
78fc9949aa7055f2e14825cec3c28bc35c42700f,182ee31503ea8a9eefd0d7063bd7fbdde991e13b,docs/patterns/distribute.rst,docs/patterns/distribute.rst,docs/patterns/distribute.rst,Added chapter about config,"diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 2826550c..a3217f6e 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -1,3 +1,5 @@
+.. _distribute-deployment:
+
 Deploying with Distribute
 =========================
 
","diff --git a/docs/patterns/distribute.rst b/docs/patterns/distribute.rst
index 2826550c..a3217f6e 100644
--- a/docs/patterns/distribute.rst
+++ b/docs/patterns/distribute.rst
@@ -1,3 +1,5 @@
+.. _distribute-deployment:
+
 Deploying with Distribute
 =========================
 
"
78fc9949aa7055f2e14825cec3c28bc35c42700f,182ee31503ea8a9eefd0d7063bd7fbdde991e13b,flask.py,flask.py,flask.py,Added chapter about config,"diff --git a/flask.py b/flask.py
index 84e3d916..077414d5 100644
--- a/flask.py
+++ b/flask.py
@@ -641,21 +641,33 @@ class Config(dict):
         app.config.from_pyfile('yourconfig.cfg')
 
     Or alternatively you can define the configuration options in the
-    module that calls :meth:`from_module` or provide an import path to
+    module that calls :meth:`from_object` or provide an import path to
     a module that should be loaded.  It is also possible to tell it to
     use the same module and with that provide the configuration values
     just before the call::
 
         DEBUG = True
         SECRET_KEY = 'development key'
-        app.config.from_module(__name__)
+        app.config.from_object(__name__)
 
     In both cases (loading from any Python file or loading from modules),
-    only uppercase keys are added to the config.  The actual keys in the
-    config are however lowercased so they are converted for you.  This makes
-    it possible to use lowercase values in the config file for temporary
-    values that are not added to the config or to define the config keys in
-    the same file that implements the application.
+    only uppercase keys are added to the config.  This makes it possible to use
+    lowercase values in the config file for temporary values that are not added
+    to the config or to define the config keys in the same file that implements
+    the application.
+
+    Probably the most interesting way to load configurations is from an
+    environment variable pointing to a file::
+
+        app.config.from_envvar('YOURAPPLICATION_SETTINGS')
+
+    In this case before launching the application you have to set this
+    environment variable to the file you want to use.  On Linux and OS X
+    use the export statement::
+
+        export YOURAPPLICATION_SETTINGS='/path/to/config/file'
+
+    On windows use `set` instead.
 
     :param root_path: path to which files are read relative from.  When the
                       config object is created by the application, this is
@@ -667,10 +679,33 @@ class Config(dict):
         dict.__init__(self, defaults or {})
         self.root_path = root_path
 
+    def from_envvar(self, variable_name, silent=False):
+        """"""Loads a configuration from an environment variable pointing to
+        a configuration file.  This basically is just a shortcut with nicer
+        error messages for this line of code::
+
+            app.config.from_pyfile(os.environ['YOURAPPLICATION_SETTINGS'])
+
+        :param variable_name: name of the environment variable
+        :param silent: set to `True` if you want silent failing for missing
+                       files.
+        :return: bool. `True` if able to load config, `False` otherwise.
+        """"""
+        rv = os.environ.get(variable_name)
+        if not rv:
+            if silent:
+                return False
+            raise RuntimeError('The environment variable %r is not set '
+                               'and as such configuration could not be '
+                               'loaded.  Set this variable and make it '
+                               'point to a configuration file')
+        self.from_pyfile(rv)
+        return True
+
     def from_pyfile(self, filename):
         """"""Updates the values in the config from a Python file.  This function
         behaves as if the file was imported as module with the
-        :meth:`from_module` function.
+        :meth:`from_object` function.
 
         :param filename: the filename of the config.  This can either be an
                          absolute filename or a filename relative to the
@@ -752,19 +787,32 @@ class Flask(_PackageBoundObject):
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
+    #:
+    #: This attribute can also be configured from the config with the `DEBUG`
+    #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `SECRET_KEY` configuration key.  Defaults to `None`.
     secret_key = ConfigAttribute('SECRET_KEY')
 
     #: The secure cookie uses this for the name of the session cookie
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `SESSION_COOKIE_NAME` configuration key.  Defaults to ``'session'``
     session_cookie_name = ConfigAttribute('SESSION_COOKIE_NAME')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `PERMANENT_SESSION_LIFETIME` configuration key.  Defaults to
+    #: ``timedelta(days=31)``
     permanent_session_lifetime = ConfigAttribute('PERMANENT_SESSION_LIFETIME')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
@@ -772,6 +820,9 @@ class Flask(_PackageBoundObject):
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
     #: the logging format used for the debug logger.  This is only used when
","diff --git a/flask.py b/flask.py
index 84e3d916..077414d5 100644
--- a/flask.py
+++ b/flask.py
@@ -641,21 +641,33 @@ class Config(dict):
         app.config.from_pyfile('yourconfig.cfg')
 
     Or alternatively you can define the configuration options in the
-    module that calls :meth:`from_module` or provide an import path to
+    module that calls :meth:`from_object` or provide an import path to
     a module that should be loaded.  It is also possible to tell it to
     use the same module and with that provide the configuration values
     just before the call::
 
         DEBUG = True
         SECRET_KEY = 'development key'
-        app.config.from_module(__name__)
+        app.config.from_object(__name__)
 
     In both cases (loading from any Python file or loading from modules),
-    only uppercase keys are added to the config.  The actual keys in the
-    config are however lowercased so they are converted for you.  This makes
-    it possible to use lowercase values in the config file for temporary
-    values that are not added to the config or to define the config keys in
-    the same file that implements the application.
+    only uppercase keys are added to the config.  This makes it possible to use
+    lowercase values in the config file for temporary values that are not added
+    to the config or to define the config keys in the same file that implements
+    the application.
+
+    Probably the most interesting way to load configurations is from an
+    environment variable pointing to a file::
+
+        app.config.from_envvar('YOURAPPLICATION_SETTINGS')
+
+    In this case before launching the application you have to set this
+    environment variable to the file you want to use.  On Linux and OS X
+    use the export statement::
+
+        export YOURAPPLICATION_SETTINGS='/path/to/config/file'
+
+    On windows use `set` instead.
 
     :param root_path: path to which files are read relative from.  When the
                       config object is created by the application, this is
@@ -667,10 +679,33 @@ class Config(dict):
         dict.__init__(self, defaults or {})
         self.root_path = root_path
 
+    def from_envvar(self, variable_name, silent=False):
+        """"""Loads a configuration from an environment variable pointing to
+        a configuration file.  This basically is just a shortcut with nicer
+        error messages for this line of code::
+
+            app.config.from_pyfile(os.environ['YOURAPPLICATION_SETTINGS'])
+
+        :param variable_name: name of the environment variable
+        :param silent: set to `True` if you want silent failing for missing
+                       files.
+        :return: bool. `True` if able to load config, `False` otherwise.
+        """"""
+        rv = os.environ.get(variable_name)
+        if not rv:
+            if silent:
+                return False
+            raise RuntimeError('The environment variable %r is not set '
+                               'and as such configuration could not be '
+                               'loaded.  Set this variable and make it '
+                               'point to a configuration file')
+        self.from_pyfile(rv)
+        return True
+
     def from_pyfile(self, filename):
         """"""Updates the values in the config from a Python file.  This function
         behaves as if the file was imported as module with the
-        :meth:`from_module` function.
+        :meth:`from_object` function.
 
         :param filename: the filename of the config.  This can either be an
                          absolute filename or a filename relative to the
@@ -752,19 +787,32 @@ class Flask(_PackageBoundObject):
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
+    #:
+    #: This attribute can also be configured from the config with the `DEBUG`
+    #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
     #: if a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `SECRET_KEY` configuration key.  Defaults to `None`.
     secret_key = ConfigAttribute('SECRET_KEY')
 
     #: The secure cookie uses this for the name of the session cookie
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `SESSION_COOKIE_NAME` configuration key.  Defaults to ``'session'``
     session_cookie_name = ConfigAttribute('SESSION_COOKIE_NAME')
 
     #: A :class:`~datetime.timedelta` which is used to set the expiration
     #: date of a permanent session.  The default is 31 days which makes a
     #: permanent session survive for roughly one month.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `PERMANENT_SESSION_LIFETIME` configuration key.  Defaults to
+    #: ``timedelta(days=31)``
     permanent_session_lifetime = ConfigAttribute('PERMANENT_SESSION_LIFETIME')
 
     #: Enable this if you want to use the X-Sendfile feature.  Keep in
@@ -772,6 +820,9 @@ class Flask(_PackageBoundObject):
     #: sent with the :func:`send_file` method.
     #:
     #: .. versionadded:: 0.2
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
     #: the logging format used for the debug logger.  This is only used when
"
182ee31503ea8a9eefd0d7063bd7fbdde991e13b,02b916d509422a4703df5110110686288666d3d5,docs/patterns/appfactories.rst,,docs/patterns/appfactories.rst,Added appfactory pattern,"diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
new file mode 100644
index 00000000..27c53a75
--- /dev/null
+++ b/docs/patterns/appfactories.rst
@@ -0,0 +1,73 @@
+Application Factories
+=====================
+
+If you are already using packages and modules for your application
+(:ref:`packages`) there are couple of really nice ways to further improve
+the experience.  A common pattern is creating the application object when
+the module is imported.  But if you move the creation of this object,
+into a function, you can then create multiple instances of this and later.
+
+So why would you want to do this?
+
+1.  Testing.  You can have instances of the application with different
+    settings to test every case.
+2.  Multiple instances.  Imagine you want to run different versions of the
+    same application.  Of course you could have multiple instances with
+    different configs set up in your webserver, but if you use factories,
+    you can have multiple instances of the same application running in the
+    same application process which can be handy.
+
+So how would you then actually implement that?
+
+Basic Factories
+---------------
+
+The idea is to set up the application in a function.  Like this::
+
+    def create_app(config_filename):
+        app = Flask(__name__)
+        app.config.from_pyfile(config_filename)
+
+        from yourapplication.views.admin import admin
+        from yourapplication.views.frontend import frontend
+        app.register_module(admin)
+        app.register_module(frontend)
+
+        return app
+
+The downside is that you cannot use the application object in the modules
+at import time.  You can however use it from within a request.  How do you
+get access the application with the config?  Use
+:data:`~flask.current_app`::
+
+    from flask import current_app, Module, render_template
+    admin = Module(__name__, url_prefix='/admin')
+
+    @admin.route('/')
+    def index():
+        return render_template(current_app.config['INDEX_TEMPLATE'])
+
+Here we look up the name of a template in the config.
+
+Using Applications
+------------------
+
+So to use such an application you then have to create the application
+first.  Here an example `run.py` file that runs such an application::
+
+    from yourapplication import create_app
+    app = create_app('/path/to/config.cfg')
+    app.run()
+
+Factory Improvements
+--------------------
+
+The factory function from above is not very clever so far, you can improve
+it.  The following changes are straightforward and possible:
+
+1.  make it possible to pass in configuration values for unittests so that
+    you don't have to create config files on the filesystem
+2.  call a function from a module when the application is setting up so
+    that you have a place to modify attributes of the application (like
+    hooking in before / after request handlers etc.)
+3.  Add in WSGI middlewares when the application is creating if necessary.
","diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
new file mode 100644
index 00000000..27c53a75
--- /dev/null
+++ b/docs/patterns/appfactories.rst
@@ -0,0 +1,73 @@
+Application Factories
+=====================
+
+If you are already using packages and modules for your application
+(:ref:`packages`) there are couple of really nice ways to further improve
+the experience.  A common pattern is creating the application object when
+the module is imported.  But if you move the creation of this object,
+into a function, you can then create multiple instances of this and later.
+
+So why would you want to do this?
+
+1.  Testing.  You can have instances of the application with different
+    settings to test every case.
+2.  Multiple instances.  Imagine you want to run different versions of the
+    same application.  Of course you could have multiple instances with
+    different configs set up in your webserver, but if you use factories,
+    you can have multiple instances of the same application running in the
+    same application process which can be handy.
+
+So how would you then actually implement that?
+
+Basic Factories
+---------------
+
+The idea is to set up the application in a function.  Like this::
+
+    def create_app(config_filename):
+        app = Flask(__name__)
+        app.config.from_pyfile(config_filename)
+
+        from yourapplication.views.admin import admin
+        from yourapplication.views.frontend import frontend
+        app.register_module(admin)
+        app.register_module(frontend)
+
+        return app
+
+The downside is that you cannot use the application object in the modules
+at import time.  You can however use it from within a request.  How do you
+get access the application with the config?  Use
+:data:`~flask.current_app`::
+
+    from flask import current_app, Module, render_template
+    admin = Module(__name__, url_prefix='/admin')
+
+    @admin.route('/')
+    def index():
+        return render_template(current_app.config['INDEX_TEMPLATE'])
+
+Here we look up the name of a template in the config.
+
+Using Applications
+------------------
+
+So to use such an application you then have to create the application
+first.  Here an example `run.py` file that runs such an application::
+
+    from yourapplication import create_app
+    app = create_app('/path/to/config.cfg')
+    app.run()
+
+Factory Improvements
+--------------------
+
+The factory function from above is not very clever so far, you can improve
+it.  The following changes are straightforward and possible:
+
+1.  make it possible to pass in configuration values for unittests so that
+    you don't have to create config files on the filesystem
+2.  call a function from a module when the application is setting up so
+    that you have a place to modify attributes of the application (like
+    hooking in before / after request handlers etc.)
+3.  Add in WSGI middlewares when the application is creating if necessary.
"
182ee31503ea8a9eefd0d7063bd7fbdde991e13b,02b916d509422a4703df5110110686288666d3d5,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Added appfactory pattern,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index fcd482d7..ecc2c40f 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,7 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    :maxdepth: 2
 
    packages
+   appfactories
    distribute
    sqlite3
    sqlalchemy
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index fcd482d7..ecc2c40f 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -17,6 +17,7 @@ Snippet Archives <http://flask.pocoo.org/snippets/>`_.
    :maxdepth: 2
 
    packages
+   appfactories
    distribute
    sqlite3
    sqlalchemy
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/_themes,docs/_themes,docs/_themes,Ported examples over to new config. documented upgrading,"diff --git a/docs/_themes b/docs/_themes
index f87d00ee..0d8f3d85 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit f87d00eee80e4a555e94ed124a94ffea483dc329
+Subproject commit 0d8f3d85558168647632c768bdea7d58cf6f8e42
","diff --git a/docs/_themes b/docs/_themes
index f87d00ee..0d8f3d85 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit f87d00eee80e4a555e94ed124a94ffea483dc329
+Subproject commit 0d8f3d85558168647632c768bdea7d58cf6f8e42
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/becomingbig.rst,docs/becomingbig.rst,docs/becomingbig.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index fcffe7c2..8ad125de 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -27,7 +27,6 @@ endpoints.
 Here are some suggestions for how Flask can be modified to better 
 accommodate large-scale applications:
 
--   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
     of troubles for applications that have circular dependencies.  It
     also requires that the whole application is imported when the system
","diff --git a/docs/becomingbig.rst b/docs/becomingbig.rst
index fcffe7c2..8ad125de 100644
--- a/docs/becomingbig.rst
+++ b/docs/becomingbig.rst
@@ -27,7 +27,6 @@ endpoints.
 Here are some suggestions for how Flask can be modified to better 
 accommodate large-scale applications:
 
--   implement dotted names for URL endpoints
 -   get rid of the decorator function registering which causes a lot
     of troubles for applications that have circular dependencies.  It
     also requires that the whole application is imported when the system
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/config.rst,docs/config.rst,docs/config.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/config.rst b/docs/config.rst
index 24bc8b04..6a2900a1 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -1,3 +1,5 @@
+.. _config:
+
 Configuration Handling
 ======================
 
@@ -47,6 +49,8 @@ Builtin Configuration Values
 
 The following configuration values are used internally by Flask:
 
+.. tabularcolumns:: |p{6.5cm}|p{8.5cm}|
+
 =============================== =========================================
 ``DEBUG``                       enable/disable debug mode
 ``SECRET_KEY``                  the secret key
","diff --git a/docs/config.rst b/docs/config.rst
index 24bc8b04..6a2900a1 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -1,3 +1,5 @@
+.. _config:
+
 Configuration Handling
 ======================
 
@@ -47,6 +49,8 @@ Builtin Configuration Values
 
 The following configuration values are used internally by Flask:
 
+.. tabularcolumns:: |p{6.5cm}|p{8.5cm}|
+
 =============================== =========================================
 ``DEBUG``                       enable/disable debug mode
 ``SECRET_KEY``                  the secret key
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,Ported examples over to new config. documented upgrading,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 5fda5931..918ad804 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -41,4 +41,5 @@ Design notes, legal information and changelog are here for the interested.
 
    design
    license
+   upgrading
    changelog
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 5fda5931..918ad804 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -41,4 +41,5 @@ Design notes, legal information and changelog are here for the interested.
 
    design
    license
+   upgrading
    changelog
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/foreword.rst,docs/foreword.rst,docs/foreword.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/foreword.rst b/docs/foreword.rst
index 34992a18..fe466dab 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -84,11 +84,6 @@ widespread usage.  Recent versions of Flask scale nicely within reasonable
 bounds and if you grow larger, you won't have any troubles adjusting Flask
 for your new application size.
 
-Flask serves two purposes: it's an example of how to create a minimal and
-opinionated framework on top of Werkzeug to show how this can be done, and
-to provide people with a simple tool to prototype larger applications or
-to implement small and medium sized applications.
-
 If you suddenly discover that your application grows larger than
 originally intended, head over to the :ref:`becomingbig` section to see
 some possible solutions for larger applications.
","diff --git a/docs/foreword.rst b/docs/foreword.rst
index 34992a18..fe466dab 100644
--- a/docs/foreword.rst
+++ b/docs/foreword.rst
@@ -84,11 +84,6 @@ widespread usage.  Recent versions of Flask scale nicely within reasonable
 bounds and if you grow larger, you won't have any troubles adjusting Flask
 for your new application size.
 
-Flask serves two purposes: it's an example of how to create a minimal and
-opinionated framework on top of Werkzeug to show how this can be done, and
-to provide people with a simple tool to prototype larger applications or
-to implement small and medium sized applications.
-
 If you suddenly discover that your application grows larger than
 originally intended, head over to the :ref:`becomingbig` section to see
 some possible solutions for larger applications.
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
index 27c53a75..448dba71 100644
--- a/docs/patterns/appfactories.rst
+++ b/docs/patterns/appfactories.rst
@@ -1,3 +1,5 @@
+.. _app-factories:
+
 Application Factories
 =====================
 
","diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
index 27c53a75..448dba71 100644
--- a/docs/patterns/appfactories.rst
+++ b/docs/patterns/appfactories.rst
@@ -1,3 +1,5 @@
+.. _app-factories:
+
 Application Factories
 =====================
 
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index f087e6f0..e9c9f956 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -77,7 +77,7 @@ inside a `script` block here where different rules apply.
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
-   escape slashes for you (``{{ ""</script>""|tojson|safe }`` is rendered as
+   escape slashes for you (``{{ ""</script>""|tojson|safe }}`` is rendered as
    ``""<\/script>""``).
 
 
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index f087e6f0..e9c9f956 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -77,7 +77,7 @@ inside a `script` block here where different rules apply.
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
    tags.  ``|tojson`` is kindly enough to do the right thing here and
-   escape slashes for you (``{{ ""</script>""|tojson|safe }`` is rendered as
+   escape slashes for you (``{{ ""</script>""|tojson|safe }}`` is rendered as
    ``""<\/script>""``).
 
 
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/testing.rst,docs/testing.rst,docs/testing.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/testing.rst b/docs/testing.rst
index be72e746..2a58efd3 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -94,7 +94,7 @@ this::
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
+            self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
             flaskr.init_db()
 
@@ -151,13 +151,13 @@ Now we can easily test if logging in and out works and that it fails with
 invalid credentials.  Add this new test to the class::
 
    def test_login_logout(self):
-       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+       rv = self.login('admin', 'default')
        assert 'You were logged in' in rv.data
        rv = self.logout()
        assert 'You were logged out' in rv.data
-       rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+       rv = self.login('adminx', 'default')
        assert 'Invalid username' in rv.data
-       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+       rv = self.login('admin', 'defaultx')
        assert 'Invalid password' in rv.data
 
 Test Adding Messages
@@ -167,7 +167,7 @@ Now we can also test that adding messages works.  Add a new test method
 like this::
 
     def test_messages(self):
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        self.login('admin', 'default')
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
             text='<strong>HTML</strong> allowed here'
@@ -214,3 +214,7 @@ functions.  Here a full example that showcases this::
         assert flask.request.args['name'] == 'Peter'
 
 All the other objects that are context bound can be used the same.
+
+If you want to test your application with different configurations and
+there does not seem to be a good way to do that, consider switching to
+application factories (see :ref:`app-factories`).
","diff --git a/docs/testing.rst b/docs/testing.rst
index be72e746..2a58efd3 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -94,7 +94,7 @@ this::
     class FlaskrTestCase(unittest.TestCase):
 
         def setUp(self):
-            self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
+            self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
             self.app = flaskr.app.test_client()
             flaskr.init_db()
 
@@ -151,13 +151,13 @@ Now we can easily test if logging in and out works and that it fails with
 invalid credentials.  Add this new test to the class::
 
    def test_login_logout(self):
-       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+       rv = self.login('admin', 'default')
        assert 'You were logged in' in rv.data
        rv = self.logout()
        assert 'You were logged out' in rv.data
-       rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+       rv = self.login('adminx', 'default')
        assert 'Invalid username' in rv.data
-       rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+       rv = self.login('admin', 'defaultx')
        assert 'Invalid password' in rv.data
 
 Test Adding Messages
@@ -167,7 +167,7 @@ Now we can also test that adding messages works.  Add a new test method
 like this::
 
     def test_messages(self):
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        self.login('admin', 'default')
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
             text='<strong>HTML</strong> allowed here'
@@ -214,3 +214,7 @@ functions.  Here a full example that showcases this::
         assert flask.request.args['name'] == 'Peter'
 
 All the other objects that are context bound can be used the same.
+
+If you want to test your application with different configurations and
+there does not seem to be a good way to do that, consider switching to
+application factories (see :ref:`app-factories`).
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/tutorial/setup.rst,docs/tutorial/setup.rst,docs/tutorial/setup.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index f9a0b302..790cc41e 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -26,12 +26,27 @@ the values from there.
     PASSWORD = 'default'
 
 Next we can create our actual application and initialize it with the
-config::
+config from the same file::
 
     # create our little application :)
     app = Flask(__name__)
-    app.secret_key = SECRET_KEY
-    app.debug = DEBUG
+    app.config.from_object(__name__)
+
+:meth:`~flask.Config.from_object` will look at the given object (if it's a
+string it will import it) and then look for all uppercase variables
+defined there.  In our case, the configuration we just wrote a few lines
+of code above.  You can also move that into a separate file.
+
+It is also a good idea to be able to load a configuration from a
+configurable file.  This is what :meth:`~flask.Config.from_envvar` can
+do::
+
+    app.config.from_envvar('FLASKR_SETTINGS', silent=True)
+
+That way someone can set an environment variable called
+:envvar:`FLASKR_SETTINGS` to specify a config file to be loaded which will
+then override the default values.  The silent switch just tells Flask to
+not complain if no such environment key is set.
 
 The `secret_key` is needed to keep the client-side sessions secure.
 Choose that key wisely and as hard to guess and complex as possible.  The
@@ -46,7 +61,7 @@ Python shell or a script.  This will come in handy later
 ::
 
     def connect_db():
-        return sqlite3.connect(DATABASE)
+        return sqlite3.connect(app.config['DATABASE'])
 
 Finally we just add a line to the bottom of the file that fires up the
 server if we run that file as standalone application::
","diff --git a/docs/tutorial/setup.rst b/docs/tutorial/setup.rst
index f9a0b302..790cc41e 100644
--- a/docs/tutorial/setup.rst
+++ b/docs/tutorial/setup.rst
@@ -26,12 +26,27 @@ the values from there.
     PASSWORD = 'default'
 
 Next we can create our actual application and initialize it with the
-config::
+config from the same file::
 
     # create our little application :)
     app = Flask(__name__)
-    app.secret_key = SECRET_KEY
-    app.debug = DEBUG
+    app.config.from_object(__name__)
+
+:meth:`~flask.Config.from_object` will look at the given object (if it's a
+string it will import it) and then look for all uppercase variables
+defined there.  In our case, the configuration we just wrote a few lines
+of code above.  You can also move that into a separate file.
+
+It is also a good idea to be able to load a configuration from a
+configurable file.  This is what :meth:`~flask.Config.from_envvar` can
+do::
+
+    app.config.from_envvar('FLASKR_SETTINGS', silent=True)
+
+That way someone can set an environment variable called
+:envvar:`FLASKR_SETTINGS` to specify a config file to be loaded which will
+then override the default values.  The silent switch just tells Flask to
+not complain if no such environment key is set.
 
 The `secret_key` is needed to keep the client-side sessions secure.
 Choose that key wisely and as hard to guess and complex as possible.  The
@@ -46,7 +61,7 @@ Python shell or a script.  This will come in handy later
 ::
 
     def connect_db():
-        return sqlite3.connect(DATABASE)
+        return sqlite3.connect(app.config['DATABASE'])
 
 Finally we just add a line to the bottom of the file that fires up the
 server if we run that file as standalone application::
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/tutorial/views.rst,docs/tutorial/views.rst,docs/tutorial/views.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
index 03c7709b..c7cc1ed4 100644
--- a/docs/tutorial/views.rst
+++ b/docs/tutorial/views.rst
@@ -63,9 +63,9 @@ notified about that and the user asked again::
     def login():
         error = None
         if request.method == 'POST':
-            if request.form['username'] != USERNAME:
+            if request.form['username'] != app.config['USERNAME']:
                 error = 'Invalid username'
-            elif request.form['password'] != PASSWORD:
+            elif request.form['password'] != app.config['PASSWORD']:
                 error = 'Invalid password'
             else:
                 session['logged_in'] = True
","diff --git a/docs/tutorial/views.rst b/docs/tutorial/views.rst
index 03c7709b..c7cc1ed4 100644
--- a/docs/tutorial/views.rst
+++ b/docs/tutorial/views.rst
@@ -63,9 +63,9 @@ notified about that and the user asked again::
     def login():
         error = None
         if request.method == 'POST':
-            if request.form['username'] != USERNAME:
+            if request.form['username'] != app.config['USERNAME']:
                 error = 'Invalid username'
-            elif request.form['password'] != PASSWORD:
+            elif request.form['password'] != app.config['PASSWORD']:
                 error = 'Invalid password'
             else:
                 session['logged_in'] = True
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,docs/upgrading.rst,,docs/upgrading.rst,Ported examples over to new config. documented upgrading,"diff --git a/docs/upgrading.rst b/docs/upgrading.rst
new file mode 100644
index 00000000..e0f210db
--- /dev/null
+++ b/docs/upgrading.rst
@@ -0,0 +1,56 @@
+Upgrading to Newer Releases
+===========================
+
+Flask itself is changing like any software is changing over time.  Most of
+the changes are the nice kind, the kind where you don't have th change
+anything in your code to profit from a new release.
+
+However every once in a while there are changes that do require some
+changes in your code or there are changes that make it possible for you to
+improve your own code quality by taking advantage of new features in
+Flask.
+
+This section of the documentation enumerates all the changes in Flask from
+release to release and how you can change your code to have a painless
+updating experience.
+
+Version 0.5
+-----------
+
+Flask 0.5 introduces configuration support and logging as well as
+categories for flashing messages.  All these are features that are 100%
+backwards compatible but you might want to take advantage of them.
+
+Configuration Support
+`````````````````````
+
+The configuration support makes it easier to write any kind of application
+that requires some sort of configuration.  (Which most likely is the case
+for any application out there).
+
+If you previously had code like this::
+
+    app.debug = DEBUG
+    app.secret_key = SECRET_KEY
+
+You no longer have to do that, instead you can just load a configuration
+into the config object.  How this works is outlined in :ref:`config`.
+
+Logging Integration
+```````````````````
+
+Flask now configures a logger for you with some basic and useful defaults.
+If you run your application in production and want to profit from
+automatic error logging, you might be interested in attaching a proper log
+handler.  Also you can start logging warnings and errors into the logger
+when appropriately.  For more information on that, read
+:ref:`application-errors`.
+
+Categories for Flash Messages
+`````````````````````````````
+
+Flash messages can now have categories attached.  This makes it possible
+to render errors, warnings or regular messages differently for example.
+This is an opt-in feature because it requires some rethinking in the code.
+
+Read all about that in the :ref:`message-flashing-pattern` pattern.
","diff --git a/docs/upgrading.rst b/docs/upgrading.rst
new file mode 100644
index 00000000..e0f210db
--- /dev/null
+++ b/docs/upgrading.rst
@@ -0,0 +1,56 @@
+Upgrading to Newer Releases
+===========================
+
+Flask itself is changing like any software is changing over time.  Most of
+the changes are the nice kind, the kind where you don't have th change
+anything in your code to profit from a new release.
+
+However every once in a while there are changes that do require some
+changes in your code or there are changes that make it possible for you to
+improve your own code quality by taking advantage of new features in
+Flask.
+
+This section of the documentation enumerates all the changes in Flask from
+release to release and how you can change your code to have a painless
+updating experience.
+
+Version 0.5
+-----------
+
+Flask 0.5 introduces configuration support and logging as well as
+categories for flashing messages.  All these are features that are 100%
+backwards compatible but you might want to take advantage of them.
+
+Configuration Support
+`````````````````````
+
+The configuration support makes it easier to write any kind of application
+that requires some sort of configuration.  (Which most likely is the case
+for any application out there).
+
+If you previously had code like this::
+
+    app.debug = DEBUG
+    app.secret_key = SECRET_KEY
+
+You no longer have to do that, instead you can just load a configuration
+into the config object.  How this works is outlined in :ref:`config`.
+
+Logging Integration
+```````````````````
+
+Flask now configures a logger for you with some basic and useful defaults.
+If you run your application in production and want to profit from
+automatic error logging, you might be interested in attaching a proper log
+handler.  Also you can start logging warnings and errors into the logger
+when appropriately.  For more information on that, read
+:ref:`application-errors`.
+
+Categories for Flash Messages
+`````````````````````````````
+
+Flash messages can now have categories attached.  This makes it possible
+to render errors, warnings or regular messages differently for example.
+This is an opt-in feature because it requires some rethinking in the code.
+
+Read all about that in the :ref:`message-flashing-pattern` pattern.
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/flaskr/README,examples/flaskr/README,examples/flaskr/README,Ported examples over to new config. documented upgrading,"diff --git a/examples/flaskr/README b/examples/flaskr/README
index 4a9a02c6..9ab20589 100644
--- a/examples/flaskr/README
+++ b/examples/flaskr/README
@@ -10,7 +10,9 @@
 
     ~ How do I use it?
 
-      1. edit the configuration in the flaskr.py file
+      1. edit the configuration in the flaskr.py file or
+         export an FLASKR_SETTINGS environment variable
+         pointing to a configuration file.
 
       2. fire up a python shell and run this:
 
","diff --git a/examples/flaskr/README b/examples/flaskr/README
index 4a9a02c6..9ab20589 100644
--- a/examples/flaskr/README
+++ b/examples/flaskr/README
@@ -10,7 +10,9 @@
 
     ~ How do I use it?
 
-      1. edit the configuration in the flaskr.py file
+      1. edit the configuration in the flaskr.py file or
+         export an FLASKR_SETTINGS environment variable
+         pointing to a configuration file.
 
       2. fire up a python shell and run this:
 
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,examples/flaskr/flaskr.py,Ported examples over to new config. documented upgrading,"diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index f2a8b341..1df24293 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -24,13 +24,13 @@ PASSWORD = 'default'
 
 # create our little application :)
 app = Flask(__name__)
-app.secret_key = SECRET_KEY
-app.debug = DEBUG
+app.config.from_object(__name__)
+app.config.from_envvar('FLASKR_SETTINGS', silent=True)
 
 
 def connect_db():
     """"""Returns a new connection to the database.""""""
-    return sqlite3.connect(DATABASE)
+    return sqlite3.connect(app.config['DATABASE'])
 
 
 def init_db():
@@ -76,9 +76,9 @@ def add_entry():
 def login():
     error = None
     if request.method == 'POST':
-        if request.form['username'] != USERNAME:
+        if request.form['username'] != app.config['USERNAME']:
             error = 'Invalid username'
-        elif request.form['password'] != PASSWORD:
+        elif request.form['password'] != app.config['PASSWORD']:
             error = 'Invalid password'
         else:
             session['logged_in'] = True
","diff --git a/examples/flaskr/flaskr.py b/examples/flaskr/flaskr.py
index f2a8b341..1df24293 100644
--- a/examples/flaskr/flaskr.py
+++ b/examples/flaskr/flaskr.py
@@ -24,13 +24,13 @@ PASSWORD = 'default'
 
 # create our little application :)
 app = Flask(__name__)
-app.secret_key = SECRET_KEY
-app.debug = DEBUG
+app.config.from_object(__name__)
+app.config.from_envvar('FLASKR_SETTINGS', silent=True)
 
 
 def connect_db():
     """"""Returns a new connection to the database.""""""
-    return sqlite3.connect(DATABASE)
+    return sqlite3.connect(app.config['DATABASE'])
 
 
 def init_db():
@@ -76,9 +76,9 @@ def add_entry():
 def login():
     error = None
     if request.method == 'POST':
-        if request.form['username'] != USERNAME:
+        if request.form['username'] != app.config['USERNAME']:
             error = 'Invalid username'
-        elif request.form['password'] != PASSWORD:
+        elif request.form['password'] != app.config['PASSWORD']:
             error = 'Invalid password'
         else:
             session['logged_in'] = True
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,examples/flaskr/flaskr_tests.py,Ported examples over to new config. documented upgrading,"diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index 9421cca6..07e702c4 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -18,14 +18,14 @@ class FlaskrTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
+        self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
         self.app = flaskr.app.test_client()
         flaskr.init_db()
 
     def tearDown(self):
         """"""Get rid of the database again after each test.""""""
         os.close(self.db_fd)
-        os.unlink(flaskr.DATABASE)
+        os.unlink(flaskr.app.config['DATABASE'])
 
     def login(self, username, password):
         return self.app.post('/login', data=dict(
@@ -45,18 +45,22 @@ class FlaskrTestCase(unittest.TestCase):
 
     def test_login_logout(self):
         """"""Make sure login and logout works""""""
-        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.login(flaskr.app.config['USERNAME'],
+                        flaskr.app.config['PASSWORD'])
         assert 'You were logged in' in rv.data
         rv = self.logout()
         assert 'You were logged out' in rv.data
-        rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+        rv = self.login(flaskr.app.config['USERNAME'] + 'x',
+                        flaskr.app.config['PASSWORD'])
         assert 'Invalid username' in rv.data
-        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+        rv = self.login(flaskr.app.config['USERNAME'],
+                        flaskr.app.config['PASSWORD'] + 'x')
         assert 'Invalid password' in rv.data
 
     def test_messages(self):
         """"""Test that messages work""""""
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        self.login(flaskr.app.config['USERNAME'],
+                   flaskr.app.config['PASSWORD'])
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
             text='<strong>HTML</strong> allowed here'
","diff --git a/examples/flaskr/flaskr_tests.py b/examples/flaskr/flaskr_tests.py
index 9421cca6..07e702c4 100644
--- a/examples/flaskr/flaskr_tests.py
+++ b/examples/flaskr/flaskr_tests.py
@@ -18,14 +18,14 @@ class FlaskrTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db_fd, flaskr.DATABASE = tempfile.mkstemp()
+        self.db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()
         self.app = flaskr.app.test_client()
         flaskr.init_db()
 
     def tearDown(self):
         """"""Get rid of the database again after each test.""""""
         os.close(self.db_fd)
-        os.unlink(flaskr.DATABASE)
+        os.unlink(flaskr.app.config['DATABASE'])
 
     def login(self, username, password):
         return self.app.post('/login', data=dict(
@@ -45,18 +45,22 @@ class FlaskrTestCase(unittest.TestCase):
 
     def test_login_logout(self):
         """"""Make sure login and logout works""""""
-        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        rv = self.login(flaskr.app.config['USERNAME'],
+                        flaskr.app.config['PASSWORD'])
         assert 'You were logged in' in rv.data
         rv = self.logout()
         assert 'You were logged out' in rv.data
-        rv = self.login(flaskr.USERNAME + 'x', flaskr.PASSWORD)
+        rv = self.login(flaskr.app.config['USERNAME'] + 'x',
+                        flaskr.app.config['PASSWORD'])
         assert 'Invalid username' in rv.data
-        rv = self.login(flaskr.USERNAME, flaskr.PASSWORD + 'x')
+        rv = self.login(flaskr.app.config['USERNAME'],
+                        flaskr.app.config['PASSWORD'] + 'x')
         assert 'Invalid password' in rv.data
 
     def test_messages(self):
         """"""Test that messages work""""""
-        self.login(flaskr.USERNAME, flaskr.PASSWORD)
+        self.login(flaskr.app.config['USERNAME'],
+                   flaskr.app.config['PASSWORD'])
         rv = self.app.post('/add', data=dict(
             title='<Hello>',
             text='<strong>HTML</strong> allowed here'
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/minitwit/README,examples/minitwit/README,examples/minitwit/README,Ported examples over to new config. documented upgrading,"diff --git a/examples/minitwit/README b/examples/minitwit/README
index 065674a9..ab946295 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -10,7 +10,9 @@
 
     ~ How do I use it?
 
-      1. edit the configuration in the minitwit.py file
+      1. edit the configuration in the minitwit.py file or
+         export an MINITWIT_SETTINGS environment variable
+         pointing to a configuration file.
 
       2. fire up a python shell and run this:
 
","diff --git a/examples/minitwit/README b/examples/minitwit/README
index 065674a9..ab946295 100644
--- a/examples/minitwit/README
+++ b/examples/minitwit/README
@@ -10,7 +10,9 @@
 
     ~ How do I use it?
 
-      1. edit the configuration in the minitwit.py file
+      1. edit the configuration in the minitwit.py file or
+         export an MINITWIT_SETTINGS environment variable
+         pointing to a configuration file.
 
       2. fire up a python shell and run this:
 
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,examples/minitwit/minitwit.py,Ported examples over to new config. documented upgrading,"diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 07ffe4c7..b740bc25 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -27,11 +27,13 @@ SECRET_KEY = 'development key'
 
 # create our little application :)
 app = Flask(__name__)
+app.config.from_object(__name__)
+app.config.from_envvar('MINITWIT_SETTINGS', silent=True)
 
 
 def connect_db():
     """"""Returns a new connection to the database.""""""
-    return sqlite3.connect(DATABASE)
+    return sqlite3.connect(app.config['DATABASE'])
 
 
 def init_db():
@@ -237,12 +239,9 @@ def logout():
     return redirect(url_for('public_timeline'))
 
 
-# add some filters to jinja and set the secret key and debug mode
-# from the configuration.
+# add some filters to jinja
 app.jinja_env.filters['datetimeformat'] = format_datetime
 app.jinja_env.filters['gravatar'] = gravatar_url
-app.secret_key = SECRET_KEY
-app.debug = DEBUG
 
 
 if __name__ == '__main__':
","diff --git a/examples/minitwit/minitwit.py b/examples/minitwit/minitwit.py
index 07ffe4c7..b740bc25 100644
--- a/examples/minitwit/minitwit.py
+++ b/examples/minitwit/minitwit.py
@@ -27,11 +27,13 @@ SECRET_KEY = 'development key'
 
 # create our little application :)
 app = Flask(__name__)
+app.config.from_object(__name__)
+app.config.from_envvar('MINITWIT_SETTINGS', silent=True)
 
 
 def connect_db():
     """"""Returns a new connection to the database.""""""
-    return sqlite3.connect(DATABASE)
+    return sqlite3.connect(app.config['DATABASE'])
 
 
 def init_db():
@@ -237,12 +239,9 @@ def logout():
     return redirect(url_for('public_timeline'))
 
 
-# add some filters to jinja and set the secret key and debug mode
-# from the configuration.
+# add some filters to jinja
 app.jinja_env.filters['datetimeformat'] = format_datetime
 app.jinja_env.filters['gravatar'] = gravatar_url
-app.secret_key = SECRET_KEY
-app.debug = DEBUG
 
 
 if __name__ == '__main__':
"
02b916d509422a4703df5110110686288666d3d5,dfecc86dd315586bec8f5f0838195d03ba7165d3,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,examples/minitwit/minitwit_tests.py,Ported examples over to new config. documented upgrading,"diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index 10962142..87741165 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -18,14 +18,14 @@ class MiniTwitTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db_fd, minitwit.DATABASE = tempfile.mkstemp()
+        self.db_fd, minitwit.app.config['DATABASE'] = tempfile.mkstemp()
         self.app = minitwit.app.test_client()
         minitwit.init_db()
 
     def tearDown(self):
         """"""Get rid of the database again after each test.""""""
         os.close(self.db_fd)
-        os.unlink(minitwit.DATABASE)
+        os.unlink(minitwit.app.config['DATABASE'])
 
     # helper functions
 
","diff --git a/examples/minitwit/minitwit_tests.py b/examples/minitwit/minitwit_tests.py
index 10962142..87741165 100644
--- a/examples/minitwit/minitwit_tests.py
+++ b/examples/minitwit/minitwit_tests.py
@@ -18,14 +18,14 @@ class MiniTwitTestCase(unittest.TestCase):
 
     def setUp(self):
         """"""Before each test, set up a blank database""""""
-        self.db_fd, minitwit.DATABASE = tempfile.mkstemp()
+        self.db_fd, minitwit.app.config['DATABASE'] = tempfile.mkstemp()
         self.app = minitwit.app.test_client()
         minitwit.init_db()
 
     def tearDown(self):
         """"""Get rid of the database again after each test.""""""
         os.close(self.db_fd)
-        os.unlink(minitwit.DATABASE)
+        os.unlink(minitwit.app.config['DATABASE'])
 
     # helper functions
 
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,CHANGES,CHANGES,CHANGES,"0.5 is 0.3 now, why skip numbers?","diff --git a/CHANGES b/CHANGES
index 47dd08b6..c44fd9be 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,7 +3,7 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
-Version 0.5
+Version 0.3
 -----------
 
 Release date to be announced
","diff --git a/CHANGES b/CHANGES
index 47dd08b6..c44fd9be 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,7 +3,7 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
-Version 0.5
+Version 0.3
 -----------
 
 Release date to be announced
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/config.rst,docs/config.rst,docs/config.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/config.rst b/docs/config.rst
index 6a2900a1..de79cabc 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -3,7 +3,7 @@
 Configuration Handling
 ======================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Applications need some kind of configuration.  There are different things
 you might want to change.  Like toggling debug mode, the secret key and a
","diff --git a/docs/config.rst b/docs/config.rst
index 6a2900a1..de79cabc 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -3,7 +3,7 @@
 Configuration Handling
 ======================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Applications need some kind of configuration.  There are different things
 you might want to change.  Like toggling debug mode, the secret key and a
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/errorhandling.rst,docs/errorhandling.rst,docs/errorhandling.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index dcc2a2e9..f963f1ab 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -3,7 +3,7 @@
 Handling Application Errors
 ===========================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Applications fail, server fail.  Sooner or later you will see an exception
 in production.  Even if your code is 100% correct, you will still see
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index dcc2a2e9..f963f1ab 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -3,7 +3,7 @@
 Handling Application Errors
 ===========================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Applications fail, server fail.  Sooner or later you will see an exception
 in production.  Even if your code is 100% correct, you will still see
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/patterns/flashing.rst,docs/patterns/flashing.rst,docs/patterns/flashing.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index 16d8d371..b491712f 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -86,7 +86,7 @@ And of course the login template:
 Flashing With Categories
 ------------------------
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 It is also possible to provide categories when flashing a message.  The
 default category if nothing is provided is ``'message'``.  Alternative
","diff --git a/docs/patterns/flashing.rst b/docs/patterns/flashing.rst
index 16d8d371..b491712f 100644
--- a/docs/patterns/flashing.rst
+++ b/docs/patterns/flashing.rst
@@ -86,7 +86,7 @@ And of course the login template:
 Flashing With Categories
 ------------------------
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 It is also possible to provide categories when flashing a message.  The
 default category if nothing is provided is ``'message'``.  Alternative
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index a2cbb8b5..a3cc4793 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -691,7 +691,7 @@ for a full example.
 Logging
 -------
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Sometimes you might be in the situation where you deal with data that
 should be correct, but actually is not.  For example you have some client
@@ -702,7 +702,7 @@ Request`` in that situation, but other times it is not and the code has to
 continue working.
 
 Yet you want to log that something fishy happened.  This is where loggers
-come in handy.  As of Flask 0.5 a logger is preconfigured for you to use.
+come in handy.  As of Flask 0.3 a logger is preconfigured for you to use.
 
 Here are some example log calls::
 
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index a2cbb8b5..a3cc4793 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -691,7 +691,7 @@ for a full example.
 Logging
 -------
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 Sometimes you might be in the situation where you deal with data that
 should be correct, but actually is not.  For example you have some client
@@ -702,7 +702,7 @@ Request`` in that situation, but other times it is not and the code has to
 continue working.
 
 Yet you want to log that something fishy happened.  This is where loggers
-come in handy.  As of Flask 0.5 a logger is preconfigured for you to use.
+come in handy.  As of Flask 0.3 a logger is preconfigured for you to use.
 
 Here are some example log calls::
 
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/shell.rst,docs/shell.rst,docs/shell.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/shell.rst b/docs/shell.rst
index 65e44ce7..470bceca 100644
--- a/docs/shell.rst
+++ b/docs/shell.rst
@@ -1,7 +1,7 @@
 Working with the Shell
 ======================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 One of the reasons everybody loves Python is the interactive shell.  It
 basically allows you to execute Python commands in real time and
","diff --git a/docs/shell.rst b/docs/shell.rst
index 65e44ce7..470bceca 100644
--- a/docs/shell.rst
+++ b/docs/shell.rst
@@ -1,7 +1,7 @@
 Working with the Shell
 ======================
 
-.. versionadded:: 0.5
+.. versionadded:: 0.3
 
 One of the reasons everybody loves Python is the interactive shell.  It
 basically allows you to execute Python commands in real time and
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,docs/upgrading.rst,docs/upgrading.rst,docs/upgrading.rst,"0.5 is 0.3 now, why skip numbers?","diff --git a/docs/upgrading.rst b/docs/upgrading.rst
index e0f210db..f06523e9 100644
--- a/docs/upgrading.rst
+++ b/docs/upgrading.rst
@@ -14,10 +14,10 @@ This section of the documentation enumerates all the changes in Flask from
 release to release and how you can change your code to have a painless
 updating experience.
 
-Version 0.5
+Version 0.3
 -----------
 
-Flask 0.5 introduces configuration support and logging as well as
+Flask 0.3 introduces configuration support and logging as well as
 categories for flashing messages.  All these are features that are 100%
 backwards compatible but you might want to take advantage of them.
 
","diff --git a/docs/upgrading.rst b/docs/upgrading.rst
index e0f210db..f06523e9 100644
--- a/docs/upgrading.rst
+++ b/docs/upgrading.rst
@@ -14,10 +14,10 @@ This section of the documentation enumerates all the changes in Flask from
 release to release and how you can change your code to have a painless
 updating experience.
 
-Version 0.5
+Version 0.3
 -----------
 
-Flask 0.5 introduces configuration support and logging as well as
+Flask 0.3 introduces configuration support and logging as well as
 categories for flashing messages.  All these are features that are 100%
 backwards compatible but you might want to take advantage of them.
 
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,flask.py,flask.py,flask.py,"0.5 is 0.3 now, why skip numbers?","diff --git a/flask.py b/flask.py
index 077414d5..5e3367bb 100644
--- a/flask.py
+++ b/flask.py
@@ -232,7 +232,7 @@ def flash(message, category='message'):
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
 
-    .. versionchanged: 0.5
+    .. versionchanged: 0.3
        `category` parameter added.
 
     :param message: the message to be flashed.
@@ -260,7 +260,7 @@ def get_flashed_messages(with_categories=False):
           <p class=flash-{{ category }}>{{ msg }}
         {% endfor %}
 
-    .. versionchanged:: 0.5
+    .. versionchanged:: 0.3
        `with_categories` parameter added.
 
     :param with_categories: set to `True` to also receive categories.
@@ -829,7 +829,7 @@ class Flask(_PackageBoundObject):
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
     #:
-    #: .. versionadded:: 0.5
+    #: .. versionadded:: 0.3
     debug_log_format = (
         '-' * 80 + '\n' +
         '%(levelname)s in %(module)s, %(pathname)s:%(lineno)d]:\n' +
@@ -949,7 +949,7 @@ class Flask(_PackageBoundObject):
             app.logger.warning('A warning ocurred (%d apples)', 42)
             app.logger.error('An error occoured')
 
-        .. versionadded:: 0.5
+        .. versionadded:: 0.3
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
@@ -1225,7 +1225,7 @@ class Flask(_PackageBoundObject):
         registered error handlers and fall back to returning the
         exception as response.
 
-        .. versionadded: 0.5
+        .. versionadded: 0.3
         """"""
         handler = self.error_handlers.get(e.code)
         if handler is None:
@@ -1239,7 +1239,7 @@ class Flask(_PackageBoundObject):
         for an 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
-        .. versionadded: 0.5
+        .. versionadded: 0.3
         """"""
         handler = self.error_handlers.get(500)
         if self.debug:
@@ -1397,7 +1397,7 @@ class Flask(_PackageBoundObject):
         u'/'
         >>> ctx.unbind()
 
-        .. versionchanged:: 0.5
+        .. versionchanged:: 0.3
            Added support for non-with statement usage and `with` statement
            is now passed the ctx object.
 
","diff --git a/flask.py b/flask.py
index 077414d5..5e3367bb 100644
--- a/flask.py
+++ b/flask.py
@@ -232,7 +232,7 @@ def flash(message, category='message'):
     flashed message from the session and to display it to the user,
     the template has to call :func:`get_flashed_messages`.
 
-    .. versionchanged: 0.5
+    .. versionchanged: 0.3
        `category` parameter added.
 
     :param message: the message to be flashed.
@@ -260,7 +260,7 @@ def get_flashed_messages(with_categories=False):
           <p class=flash-{{ category }}>{{ msg }}
         {% endfor %}
 
-    .. versionchanged:: 0.5
+    .. versionchanged:: 0.3
        `with_categories` parameter added.
 
     :param with_categories: set to `True` to also receive categories.
@@ -829,7 +829,7 @@ class Flask(_PackageBoundObject):
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
     #:
-    #: .. versionadded:: 0.5
+    #: .. versionadded:: 0.3
     debug_log_format = (
         '-' * 80 + '\n' +
         '%(levelname)s in %(module)s, %(pathname)s:%(lineno)d]:\n' +
@@ -949,7 +949,7 @@ class Flask(_PackageBoundObject):
             app.logger.warning('A warning ocurred (%d apples)', 42)
             app.logger.error('An error occoured')
 
-        .. versionadded:: 0.5
+        .. versionadded:: 0.3
         """"""
         from logging import getLogger, StreamHandler, Formatter, DEBUG
         class DebugHandler(StreamHandler):
@@ -1225,7 +1225,7 @@ class Flask(_PackageBoundObject):
         registered error handlers and fall back to returning the
         exception as response.
 
-        .. versionadded: 0.5
+        .. versionadded: 0.3
         """"""
         handler = self.error_handlers.get(e.code)
         if handler is None:
@@ -1239,7 +1239,7 @@ class Flask(_PackageBoundObject):
         for an 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
-        .. versionadded: 0.5
+        .. versionadded: 0.3
         """"""
         handler = self.error_handlers.get(500)
         if self.debug:
@@ -1397,7 +1397,7 @@ class Flask(_PackageBoundObject):
         u'/'
         >>> ctx.unbind()
 
-        .. versionchanged:: 0.5
+        .. versionchanged:: 0.3
            Added support for non-with statement usage and `with` statement
            is now passed the ctx object.
 
"
dfecc86dd315586bec8f5f0838195d03ba7165d3,ce6e4cbd73d57cb8c1bba85c46490f71061f865f,setup.py,setup.py,setup.py,"0.5 is 0.3 now, why skip numbers?","diff --git a/setup.py b/setup.py
index ed922027..280c4f2a 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.5',
+    version='0.3',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
","diff --git a/setup.py b/setup.py
index ed922027..280c4f2a 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.5',
+    version='0.3',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
"
ce6e4cbd73d57cb8c1bba85c46490f71061f865f,d29a9765a5b7014d3a52272f80ee90f4d98cf799,CHANGES,CHANGES,CHANGES,HEAD is 0.4dev,"diff --git a/CHANGES b/CHANGES
index c44fd9be..8bd22de5 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,10 +3,15 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
+Version 0.4
+-----------
+
+Release date to be announced, codename to be selected.
+
 Version 0.3
 -----------
 
-Release date to be announced
+Released on May 28th, codename Schnaps
 
 - added support for categories for flashed messages.
 - the application now configures a :class:`logging.Handler` and will
","diff --git a/CHANGES b/CHANGES
index c44fd9be..8bd22de5 100644
--- a/CHANGES
+++ b/CHANGES
@@ -3,10 +3,15 @@ Flask Changelog
 
 Here you can see the full list of changes between each Flask release.
 
+Version 0.4
+-----------
+
+Release date to be announced, codename to be selected.
+
 Version 0.3
 -----------
 
-Release date to be announced
+Released on May 28th, codename Schnaps
 
 - added support for categories for flashed messages.
 - the application now configures a :class:`logging.Handler` and will
"
d29a9765a5b7014d3a52272f80ee90f4d98cf799,4ca1d0a2ed7639d3f1d2e466a777f7e6b0e8aa0a,setup.py,setup.py,setup.py,update setup.py,"diff --git a/setup.py b/setup.py
index 280c4f2a..66ef6a66 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.3',
+    version='0.4',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
","diff --git a/setup.py b/setup.py
index 280c4f2a..66ef6a66 100644
--- a/setup.py
+++ b/setup.py
@@ -43,7 +43,7 @@ from setuptools import setup
 
 setup(
     name='Flask',
-    version='0.3',
+    version='0.4',
     url='http://github.com/mitsuhiko/flask/',
     license='BSD',
     author='Armin Ronacher',
"
4ca1d0a2ed7639d3f1d2e466a777f7e6b0e8aa0a,6913dc173303de9534c32d716c22b7f371ab6303,CHANGES,CHANGES,CHANGES,Added missing changelog entry,"diff --git a/CHANGES b/CHANGES
index 8bd22de5..d01577cc 100644
--- a/CHANGES
+++ b/CHANGES
@@ -22,6 +22,7 @@ Released on May 28th, codename Schnaps
   the with statement for playing in the console.
 - the request context is now available within the with statement making
   it possible to further push the request context or pop it.
+- added support for configurations.
 
 Version 0.2
 -----------
","diff --git a/CHANGES b/CHANGES
index 8bd22de5..d01577cc 100644
--- a/CHANGES
+++ b/CHANGES
@@ -22,6 +22,7 @@ Released on May 28th, codename Schnaps
   the with statement for playing in the console.
 - the request context is now available within the with statement making
   it possible to further push the request context or pop it.
+- added support for configurations.
 
 Version 0.2
 -----------
"
6913dc173303de9534c32d716c22b7f371ab6303,6cb0855e2dd181df5353fc1be9b437c7bc92eb2f,CHANGES,CHANGES,CHANGES,Fixed an error reporting bug with flask.Config.from_envvar,"diff --git a/CHANGES b/CHANGES
index d01577cc..451ec9af 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,13 @@ Version 0.4
 
 Release date to be announced, codename to be selected.
 
+Version 0.3.1
+-------------
+
+Bugfix release, released May 28th
+
+- fixed a error reporting bug with :meth:`flask.Config.from_envvar`
+
 Version 0.3
 -----------
 
","diff --git a/CHANGES b/CHANGES
index d01577cc..451ec9af 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,13 @@ Version 0.4
 
 Release date to be announced, codename to be selected.
 
+Version 0.3.1
+-------------
+
+Bugfix release, released May 28th
+
+- fixed a error reporting bug with :meth:`flask.Config.from_envvar`
+
 Version 0.3
 -----------
 
"
6913dc173303de9534c32d716c22b7f371ab6303,6cb0855e2dd181df5353fc1be9b437c7bc92eb2f,flask.py,flask.py,flask.py,Fixed an error reporting bug with flask.Config.from_envvar,"diff --git a/flask.py b/flask.py
index 5e3367bb..a8e06bd3 100644
--- a/flask.py
+++ b/flask.py
@@ -698,7 +698,8 @@ class Config(dict):
             raise RuntimeError('The environment variable %r is not set '
                                'and as such configuration could not be '
                                'loaded.  Set this variable and make it '
-                               'point to a configuration file')
+                               'point to a configuration file' %
+                               variable_name)
         self.from_pyfile(rv)
         return True
 
","diff --git a/flask.py b/flask.py
index 5e3367bb..a8e06bd3 100644
--- a/flask.py
+++ b/flask.py
@@ -698,7 +698,8 @@ class Config(dict):
             raise RuntimeError('The environment variable %r is not set '
                                'and as such configuration could not be '
                                'loaded.  Set this variable and make it '
-                               'point to a configuration file')
+                               'point to a configuration file' %
+                               variable_name)
         self.from_pyfile(rv)
         return True
 
"
6913dc173303de9534c32d716c22b7f371ab6303,6cb0855e2dd181df5353fc1be9b437c7bc92eb2f,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed an error reporting bug with flask.Config.from_envvar,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 3673453a..ff95364f 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -717,6 +717,26 @@ class ConfigTestCase(unittest.TestCase):
         app.config.from_object(Test)
         self.common_object_test(app)
 
+    def test_config_from_envvar(self):
+        import os
+        env = os.environ
+        try:
+            os.environ = {}
+            app = flask.Flask(__name__)
+            try:
+                app.config.from_envvar('FOO_SETTINGS')
+            except RuntimeError, e:
+                assert ""'FOO_SETTINGS' is not set"" in str(e)
+            else:
+                assert 0, 'expected exception'
+            not app.config.from_envvar('FOO_SETTINGS', silent=True)
+
+            os.environ = {'FOO_SETTINGS': 'flask_tests.py'}
+            assert app.config.from_envvar('FOO_SETTINGS')
+            self.common_object_test(app)
+        finally:
+            os.environ = env
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 3673453a..ff95364f 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -717,6 +717,26 @@ class ConfigTestCase(unittest.TestCase):
         app.config.from_object(Test)
         self.common_object_test(app)
 
+    def test_config_from_envvar(self):
+        import os
+        env = os.environ
+        try:
+            os.environ = {}
+            app = flask.Flask(__name__)
+            try:
+                app.config.from_envvar('FOO_SETTINGS')
+            except RuntimeError, e:
+                assert ""'FOO_SETTINGS' is not set"" in str(e)
+            else:
+                assert 0, 'expected exception'
+            not app.config.from_envvar('FOO_SETTINGS', silent=True)
+
+            os.environ = {'FOO_SETTINGS': 'flask_tests.py'}
+            assert app.config.from_envvar('FOO_SETTINGS')
+            self.common_object_test(app)
+        finally:
+            os.environ = env
+
 
 def suite():
     from minitwit_tests import MiniTwitTestCase
"
6cb0855e2dd181df5353fc1be9b437c7bc92eb2f,9959ddd3da09f619d467891b194389851cf50367,flask.py,flask.py,flask.py,Removed some unused code,"diff --git a/flask.py b/flask.py
index a8e06bd3..bf4451c7 100644
--- a/flask.py
+++ b/flask.py
@@ -1424,8 +1424,3 @@ current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
 request = LocalProxy(lambda: _request_ctx_stack.top.request)
 session = LocalProxy(lambda: _request_ctx_stack.top.session)
 g = LocalProxy(lambda: _request_ctx_stack.top.g)
-
-
-# script interface to run a development server
-if __name__ == '__main__':
-    sys.exit(main(sys.argv))
","diff --git a/flask.py b/flask.py
index a8e06bd3..bf4451c7 100644
--- a/flask.py
+++ b/flask.py
@@ -1424,8 +1424,3 @@ current_app = LocalProxy(lambda: _request_ctx_stack.top.app)
 request = LocalProxy(lambda: _request_ctx_stack.top.request)
 session = LocalProxy(lambda: _request_ctx_stack.top.session)
 g = LocalProxy(lambda: _request_ctx_stack.top.g)
-
-
-# script interface to run a development server
-if __name__ == '__main__':
-    sys.exit(main(sys.argv))
"
9959ddd3da09f619d467891b194389851cf50367,dba42ae968a1cfa6cc6a3ead99ded554a710f041,CHANGES,CHANGES,CHANGES,Added missing message,"diff --git a/CHANGES b/CHANGES
index 451ec9af..d3fac153 100644
--- a/CHANGES
+++ b/CHANGES
@@ -14,6 +14,7 @@ Version 0.3.1
 Bugfix release, released May 28th
 
 - fixed a error reporting bug with :meth:`flask.Config.from_envvar`
+- removed some unused code from flask
 
 Version 0.3
 -----------
","diff --git a/CHANGES b/CHANGES
index 451ec9af..d3fac153 100644
--- a/CHANGES
+++ b/CHANGES
@@ -14,6 +14,7 @@ Version 0.3.1
 Bugfix release, released May 28th
 
 - fixed a error reporting bug with :meth:`flask.Config.from_envvar`
+- removed some unused code from flask
 
 Version 0.3
 -----------
"
dba42ae968a1cfa6cc6a3ead99ded554a710f041,8e4bcaf57630b5449999594063ffe8dc104e316a,CHANGES,CHANGES,CHANGES,Fixed build process,"diff --git a/CHANGES b/CHANGES
index d3fac153..98e94a1d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,9 @@ Bugfix release, released May 28th
 
 - fixed a error reporting bug with :meth:`flask.Config.from_envvar`
 - removed some unused code from flask
+- release does no longer include development leftover files (.git
+  folder for themes, built documentation in zip and pdf file and
+  some .pyc files)
 
 Version 0.3
 -----------
","diff --git a/CHANGES b/CHANGES
index d3fac153..98e94a1d 100644
--- a/CHANGES
+++ b/CHANGES
@@ -15,6 +15,9 @@ Bugfix release, released May 28th
 
 - fixed a error reporting bug with :meth:`flask.Config.from_envvar`
 - removed some unused code from flask
+- release does no longer include development leftover files (.git
+  folder for themes, built documentation in zip and pdf file and
+  some .pyc files)
 
 Version 0.3
 -----------
"
dba42ae968a1cfa6cc6a3ead99ded554a710f041,8e4bcaf57630b5449999594063ffe8dc104e316a,MANIFEST.in,MANIFEST.in,MANIFEST.in,Fixed build process,"diff --git a/MANIFEST.in b/MANIFEST.in
index aee76e91..709e1791 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,4 +1,10 @@
 include Makefile CHANGES LICENSE AUTHORS
 recursive-include tests *
+recursive-include examples *
 recursive-include docs *
-prune docs/_build/doctrees
+recursive-exclude docs *.pyc
+recursive-exclude docs *.pyo
+recursive-exclude examples *.pyc
+recursive-exclude examples *.pyo
+prune docs/_build
+prune docs/_themes/.git
","diff --git a/MANIFEST.in b/MANIFEST.in
index aee76e91..709e1791 100644
--- a/MANIFEST.in
+++ b/MANIFEST.in
@@ -1,4 +1,10 @@
 include Makefile CHANGES LICENSE AUTHORS
 recursive-include tests *
+recursive-include examples *
 recursive-include docs *
-prune docs/_build/doctrees
+recursive-exclude docs *.pyc
+recursive-exclude docs *.pyo
+recursive-exclude examples *.pyc
+recursive-exclude examples *.pyo
+prune docs/_build
+prune docs/_themes/.git
"
8e4bcaf57630b5449999594063ffe8dc104e316a,63caf6e15882292832485372cd86b8265a007f92,docs/design.rst,docs/design.rst,docs/design.rst,Fix some typos.,"diff --git a/docs/design.rst b/docs/design.rst
index b2a56cf5..2a152d61 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -34,8 +34,8 @@ Would look like this instead::
         return 'Hello World!'
 
 There are three major reasons for this.  The most important one is that
-implicit application objects require that there may only be one class at
-the time.  There are ways to fake multiple application with a single
+implicit application objects require that there may only be one instance at
+the time.  There are ways to fake multiple applications with a single
 application object, like maintaining a stack of applications, but this
 causes some problems I won't outline here in detail.  Now the question is:
 when does a microframework need more than one application at the same
@@ -44,7 +44,7 @@ something it can be very helpful to create a minimal application to test
 specific behavior.  When the application object is deleted everything it
 allocated will be freed again.
 
-Another thing that becomes possible when you have an explicit object laying
+Another thing that becomes possible when you have an explicit object lying
 around in your code is that you can subclass the base class
 (:class:`~flask.Flask`) to alter specific behaviour.  This would not be
 possible without hacks if the object were created ahead of time for you
","diff --git a/docs/design.rst b/docs/design.rst
index b2a56cf5..2a152d61 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -34,8 +34,8 @@ Would look like this instead::
         return 'Hello World!'
 
 There are three major reasons for this.  The most important one is that
-implicit application objects require that there may only be one class at
-the time.  There are ways to fake multiple application with a single
+implicit application objects require that there may only be one instance at
+the time.  There are ways to fake multiple applications with a single
 application object, like maintaining a stack of applications, but this
 causes some problems I won't outline here in detail.  Now the question is:
 when does a microframework need more than one application at the same
@@ -44,7 +44,7 @@ something it can be very helpful to create a minimal application to test
 specific behavior.  When the application object is deleted everything it
 allocated will be freed again.
 
-Another thing that becomes possible when you have an explicit object laying
+Another thing that becomes possible when you have an explicit object lying
 around in your code is that you can subclass the base class
 (:class:`~flask.Flask`) to alter specific behaviour.  This would not be
 possible without hacks if the object were created ahead of time for you
"
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/api.rst,docs/api.rst,docs/api.rst,More typo fixes.,,
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,docs/deploying/mod_wsgi.rst,More typo fixes.,"diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 1561a37c..b4753c3e 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -22,7 +22,7 @@ a package manager or compile it yourself.
 The mod_wsgi `installation instructions`_ cover source installations on UNIX
 systems.
 
-If you are using ubuntu / debian you can apt-get it and activate it as follows:
+If you are using Ubuntu/Debian you can apt-get it and activate it as follows:
 
 .. sourcecode:: text
 
@@ -96,7 +96,7 @@ Toubleshooting
 
 If your application does not run, follow this guide to troubleshoot:
 
-**Problem:** Application does not run, errorlog shows SystemExit ignored
+**Problem:** application does not run, errorlog shows SystemExit ignored
     You have a ``app.run()`` call in your application file that is not
     guarded by an ``if __name__ == '__main__':`` condition.  Either remove
     that :meth:`~flask.Flask.run` call from the file and move it into a
@@ -130,6 +130,6 @@ If your application does not run, follow this guide to troubleshoot:
     instead you either have to put the folder into the pythonpath the file
     is stored in, or convert your application into a package.
 
-    The reason for this is that for non-installed Packages, the module
+    The reason for this is that for non-installed packages, the module
     filename is used to locate the resources and for symlinks the wrong
     filename is picked up.
","diff --git a/docs/deploying/mod_wsgi.rst b/docs/deploying/mod_wsgi.rst
index 1561a37c..b4753c3e 100644
--- a/docs/deploying/mod_wsgi.rst
+++ b/docs/deploying/mod_wsgi.rst
@@ -22,7 +22,7 @@ a package manager or compile it yourself.
 The mod_wsgi `installation instructions`_ cover source installations on UNIX
 systems.
 
-If you are using ubuntu / debian you can apt-get it and activate it as follows:
+If you are using Ubuntu/Debian you can apt-get it and activate it as follows:
 
 .. sourcecode:: text
 
@@ -96,7 +96,7 @@ Toubleshooting
 
 If your application does not run, follow this guide to troubleshoot:
 
-**Problem:** Application does not run, errorlog shows SystemExit ignored
+**Problem:** application does not run, errorlog shows SystemExit ignored
     You have a ``app.run()`` call in your application file that is not
     guarded by an ``if __name__ == '__main__':`` condition.  Either remove
     that :meth:`~flask.Flask.run` call from the file and move it into a
@@ -130,6 +130,6 @@ If your application does not run, follow this guide to troubleshoot:
     instead you either have to put the folder into the pythonpath the file
     is stored in, or convert your application into a package.
 
-    The reason for this is that for non-installed Packages, the module
+    The reason for this is that for non-installed packages, the module
     filename is used to locate the resources and for symlinks the wrong
     filename is picked up.
"
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/design.rst,docs/design.rst,docs/design.rst,More typo fixes.,"diff --git a/docs/design.rst b/docs/design.rst
index 2a152d61..6a4674ba 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -90,7 +90,7 @@ of variables and take the return value as string.
 But that's about where similarities end.  Jinja2 for example has an
 extensive filter system, a certain way to do template inheritance, support
 for reusable blocks (macros) that can be used from inside templates and
-also from Python code, uses unicode for all operations, supports
+also from Python code, uses Unicode for all operations, supports
 iterative template rendering, configurable syntax and more.  On the other
 hand an engine like Genshi is based on XML stream evaluation, template
 inheritance by taking the availability of XPath into account and more.
","diff --git a/docs/design.rst b/docs/design.rst
index 2a152d61..6a4674ba 100644
--- a/docs/design.rst
+++ b/docs/design.rst
@@ -90,7 +90,7 @@ of variables and take the return value as string.
 But that's about where similarities end.  Jinja2 for example has an
 extensive filter system, a certain way to do template inheritance, support
 for reusable blocks (macros) that can be used from inside templates and
-also from Python code, uses unicode for all operations, supports
+also from Python code, uses Unicode for all operations, supports
 iterative template rendering, configurable syntax and more.  On the other
 hand an engine like Genshi is based on XML stream evaluation, template
 inheritance by taking the availability of XPath into account and more.
"
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/installation.rst,docs/installation.rst,docs/installation.rst,More typo fixes.,,
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,More typo fixes.,"diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index a3cc4793..1ee4c1ac 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -238,7 +238,7 @@ templates?  There are three good reasons for this:
 1. reversing is often more descriptive than hardcoding the URLs.  Also and
    more importantly you can change URLs in one go without having to change
    the URLs all over the place.
-2. URL building will handle escaping of special characters and unicode
+2. URL building will handle escaping of special characters and Unicode
    data transparently for you, you don't have to deal with that.
 3. If your application is placed outside the URL root (so say in
    ``/myapplication`` instead of ``/``), :func:`~flask.url_for` will
@@ -663,7 +663,7 @@ not using the template engine (like in this example).
 
    The problem with random is that it's hard to judge what random is.  And
    a secret key should be as random as possible.  Your operating system
-   has ways to generate pretty random stuff based on a cryptographical
+   has ways to generate pretty random stuff based on a cryptographic
    random generator which can be used to get such a key:
 
    >>> import os
@@ -707,8 +707,8 @@ come in handy.  As of Flask 0.3 a logger is preconfigured for you to use.
 Here are some example log calls::
 
     app.logger.debug('A value for debugging')
-    app.logger.warning('A warning ocurred (%d apples)', 42)
-    app.logger.error('An error occoured')
+    app.logger.warning('A warning occurred (%d apples)', 42)
+    app.logger.error('An error occurred')
 
 The attached :attr:`~flask.Flask.logger` is a standard logging
 :class:`~logging.Logger`, so head over to the official stdlib
","diff --git a/docs/quickstart.rst b/docs/quickstart.rst
index a3cc4793..1ee4c1ac 100644
--- a/docs/quickstart.rst
+++ b/docs/quickstart.rst
@@ -238,7 +238,7 @@ templates?  There are three good reasons for this:
 1. reversing is often more descriptive than hardcoding the URLs.  Also and
    more importantly you can change URLs in one go without having to change
    the URLs all over the place.
-2. URL building will handle escaping of special characters and unicode
+2. URL building will handle escaping of special characters and Unicode
    data transparently for you, you don't have to deal with that.
 3. If your application is placed outside the URL root (so say in
    ``/myapplication`` instead of ``/``), :func:`~flask.url_for` will
@@ -663,7 +663,7 @@ not using the template engine (like in this example).
 
    The problem with random is that it's hard to judge what random is.  And
    a secret key should be as random as possible.  Your operating system
-   has ways to generate pretty random stuff based on a cryptographical
+   has ways to generate pretty random stuff based on a cryptographic
    random generator which can be used to get such a key:
 
    >>> import os
@@ -707,8 +707,8 @@ come in handy.  As of Flask 0.3 a logger is preconfigured for you to use.
 Here are some example log calls::
 
     app.logger.debug('A value for debugging')
-    app.logger.warning('A warning ocurred (%d apples)', 42)
-    app.logger.error('An error occoured')
+    app.logger.warning('A warning occurred (%d apples)', 42)
+    app.logger.error('An error occurred')
 
 The attached :attr:`~flask.Flask.logger` is a standard logging
 :class:`~logging.Logger`, so head over to the official stdlib
"
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/testing.rst,docs/testing.rst,docs/testing.rst,More typo fixes.,,
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/tutorial/css.rst,docs/tutorial/css.rst,docs/tutorial/css.rst,More typo fixes.,,
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,docs/tutorial/dbinit.rst,More typo fixes.,,
63caf6e15882292832485372cd86b8265a007f92,a224fecfd57a77c3f7279102dcc0b332a6858065,docs/tutorial/testing.rst,docs/tutorial/testing.rst,docs/tutorial/testing.rst,More typo fixes.,"diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index 051e915a..ed9fc3e3 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -1,7 +1,7 @@
 .. _tutorial-testing:
 
 Bonus: Testing the Application
-===============================
+==============================
 
 Now that you have finished the application and everything works as
 expected, it's probably not a good idea to add automated tests to simplify
","diff --git a/docs/tutorial/testing.rst b/docs/tutorial/testing.rst
index 051e915a..ed9fc3e3 100644
--- a/docs/tutorial/testing.rst
+++ b/docs/tutorial/testing.rst
@@ -1,7 +1,7 @@
 .. _tutorial-testing:
 
 Bonus: Testing the Application
-===============================
+==============================
 
 Now that you have finished the application and everything works as
 expected, it's probably not a good idea to add automated tests to simplify
"
a224fecfd57a77c3f7279102dcc0b332a6858065,7a4b6088395387abe4127c9650f9cbaac11a0ec4,flask.py,flask.py,flask.py,"Add Module.app_errorhandler, like Flask.errorhandler.","diff --git a/flask.py b/flask.py
index bf4451c7..66ce172f 100644
--- a/flask.py
+++ b/flask.py
@@ -612,6 +612,15 @@ class Module(_PackageBoundObject):
             .setdefault(None, []).append(f))
         return f
 
+    def app_errorhandler(self, code):
+        """"""Like :meth:`Flask.errorhandler` but for a module.  This
+        handler is used for all requests, even if outside of the module.
+        """"""
+        def decorator(f):
+            self._record(lambda s: s.app.errorhandler(code)(f))
+            return f
+        return decorator
+
     def _record(self, func):
         self._register_events.append(func)
 
","diff --git a/flask.py b/flask.py
index bf4451c7..66ce172f 100644
--- a/flask.py
+++ b/flask.py
@@ -612,6 +612,15 @@ class Module(_PackageBoundObject):
             .setdefault(None, []).append(f))
         return f
 
+    def app_errorhandler(self, code):
+        """"""Like :meth:`Flask.errorhandler` but for a module.  This
+        handler is used for all requests, even if outside of the module.
+        """"""
+        def decorator(f):
+            self._record(lambda s: s.app.errorhandler(code)(f))
+            return f
+        return decorator
+
     def _record(self, func):
         self._register_events.append(func)
 
"
a224fecfd57a77c3f7279102dcc0b332a6858065,7a4b6088395387abe4127c9650f9cbaac11a0ec4,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,"Add Module.app_errorhandler, like Flask.errorhandler.","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index ff95364f..9d1dba6e 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -260,7 +260,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert rv.data == 'not found'
         rv = c.get('/error')
         assert rv.status_code == 500
-        assert 'internal server error' in rv.data
+        assert 'internal server error' == rv.data
 
     def test_response_creation(self):
         app = flask.Flask(__name__)
@@ -536,6 +536,30 @@ class ModuleTestCase(unittest.TestCase):
         app.register_module(admin, url_prefix='/admin')
         assert app.test_client().get('/admin/').data == '42'
 
+    def test_error_handling(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin')
+        @admin.app_errorhandler(404)
+        def not_found(e):
+            return 'not found', 404
+        @admin.app_errorhandler(500)
+        def internal_server_error(e):
+            return 'internal server error', 500
+        @admin.route('/')
+        def index():
+            flask.abort(404)
+        @admin.route('/error')
+        def error():
+            1 // 0
+        app.register_module(admin)
+        c = app.test_client()
+        rv = c.get('/')
+        assert rv.status_code == 404
+        assert rv.data == 'not found'
+        rv = c.get('/error')
+        assert rv.status_code == 500
+        assert 'internal server error' == rv.data
+
 
 class SendfileTestCase(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index ff95364f..9d1dba6e 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -260,7 +260,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert rv.data == 'not found'
         rv = c.get('/error')
         assert rv.status_code == 500
-        assert 'internal server error' in rv.data
+        assert 'internal server error' == rv.data
 
     def test_response_creation(self):
         app = flask.Flask(__name__)
@@ -536,6 +536,30 @@ class ModuleTestCase(unittest.TestCase):
         app.register_module(admin, url_prefix='/admin')
         assert app.test_client().get('/admin/').data == '42'
 
+    def test_error_handling(self):
+        app = flask.Flask(__name__)
+        admin = flask.Module(__name__, 'admin')
+        @admin.app_errorhandler(404)
+        def not_found(e):
+            return 'not found', 404
+        @admin.app_errorhandler(500)
+        def internal_server_error(e):
+            return 'internal server error', 500
+        @admin.route('/')
+        def index():
+            flask.abort(404)
+        @admin.route('/error')
+        def error():
+            1 // 0
+        app.register_module(admin)
+        c = app.test_client()
+        rv = c.get('/')
+        assert rv.status_code == 404
+        assert rv.data == 'not found'
+        rv = c.get('/error')
+        assert rv.status_code == 500
+        assert 'internal server error' == rv.data
+
 
 class SendfileTestCase(unittest.TestCase):
 
"
7a4b6088395387abe4127c9650f9cbaac11a0ec4,50bca8c2d34b4b31ffcc98f6ced44b18de3c78b0,AUTHORS,AUTHORS,AUTHORS,Updated AUTHORS file and added missing versionadded,"diff --git a/AUTHORS b/AUTHORS
index 2c125e11..e4f32ace 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -12,3 +12,12 @@ Patches and Suggestions
 - Chris Edgemon
 - Chris Grindstaff
 - Florent Xicluna
+- Georg Brandl
+- Justin Quick
+- Kenneth Reitz
+- Marian Sigler
+- Ron DuPlain
+- Sebastien Estienne
+- Simon Sapin
+- Stephane Wirtel
+- Zhao Xiaohong
","diff --git a/AUTHORS b/AUTHORS
index 2c125e11..e4f32ace 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -12,3 +12,12 @@ Patches and Suggestions
 - Chris Edgemon
 - Chris Grindstaff
 - Florent Xicluna
+- Georg Brandl
+- Justin Quick
+- Kenneth Reitz
+- Marian Sigler
+- Ron DuPlain
+- Sebastien Estienne
+- Simon Sapin
+- Stephane Wirtel
+- Zhao Xiaohong
"
7a4b6088395387abe4127c9650f9cbaac11a0ec4,50bca8c2d34b4b31ffcc98f6ced44b18de3c78b0,CHANGES,CHANGES,CHANGES,Updated AUTHORS file and added missing versionadded,"diff --git a/CHANGES b/CHANGES
index 98e94a1d..83d1af06 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,9 @@ Version 0.4
 
 Release date to be announced, codename to be selected.
 
+- added the ability to register application wide error handlers
+  from modules.
+
 Version 0.3.1
 -------------
 
","diff --git a/CHANGES b/CHANGES
index 98e94a1d..83d1af06 100644
--- a/CHANGES
+++ b/CHANGES
@@ -8,6 +8,9 @@ Version 0.4
 
 Release date to be announced, codename to be selected.
 
+- added the ability to register application wide error handlers
+  from modules.
+
 Version 0.3.1
 -------------
 
"
7a4b6088395387abe4127c9650f9cbaac11a0ec4,50bca8c2d34b4b31ffcc98f6ced44b18de3c78b0,flask.py,flask.py,flask.py,Updated AUTHORS file and added missing versionadded,"diff --git a/flask.py b/flask.py
index 66ce172f..71c30d84 100644
--- a/flask.py
+++ b/flask.py
@@ -615,6 +615,8 @@ class Module(_PackageBoundObject):
     def app_errorhandler(self, code):
         """"""Like :meth:`Flask.errorhandler` but for a module.  This
         handler is used for all requests, even if outside of the module.
+
+        .. versionadded:: 0.4
         """"""
         def decorator(f):
             self._record(lambda s: s.app.errorhandler(code)(f))
","diff --git a/flask.py b/flask.py
index 66ce172f..71c30d84 100644
--- a/flask.py
+++ b/flask.py
@@ -615,6 +615,8 @@ class Module(_PackageBoundObject):
     def app_errorhandler(self, code):
         """"""Like :meth:`Flask.errorhandler` but for a module.  This
         handler is used for all requests, even if outside of the module.
+
+        .. versionadded:: 0.4
         """"""
         def decorator(f):
             self._record(lambda s: s.app.errorhandler(code)(f))
"
50bca8c2d34b4b31ffcc98f6ced44b18de3c78b0,a6617f44c0416c6877d930b312e1f64df08eca0e,docs/api.rst,docs/api.rst,docs/api.rst,Documented _request_ctx_stack. This fixes #57,"diff --git a/docs/api.rst b/docs/api.rst
index 152c4cf7..0fb50551 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -290,3 +290,13 @@ Configuration
 
 .. autoclass:: Config
    :members:
+
+Useful Internals
+----------------
+
+.. data:: _request_ctx_stack
+
+   The internal :class:`~werkzeug.LocalStack` that is used to implement
+   all the context local objects used in Flask.  This is a documented
+   instance and can be used by extensions and application code but the
+   use is discouraged in general.
","diff --git a/docs/api.rst b/docs/api.rst
index 152c4cf7..0fb50551 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -290,3 +290,13 @@ Configuration
 
 .. autoclass:: Config
    :members:
+
+Useful Internals
+----------------
+
+.. data:: _request_ctx_stack
+
+   The internal :class:`~werkzeug.LocalStack` that is used to implement
+   all the context local objects used in Flask.  This is a documented
+   instance and can be used by extensions and application code but the
+   use is discouraged in general.
"
a6617f44c0416c6877d930b312e1f64df08eca0e,707b30749daf407c07b5b265bd892564576ad80a,Makefile,Makefile,Makefile,use setup.py test. This fixes #56,"diff --git a/Makefile b/Makefile
index b46bb3b5..4b1d8081 100644
--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,7 @@
 all: clean-pyc test
 
 test:
-	python tests/flask_tests.py
+	python setup.py test
 
 release:
 	python setup.py release sdist upload
","diff --git a/Makefile b/Makefile
index b46bb3b5..4b1d8081 100644
--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,7 @@
 all: clean-pyc test
 
 test:
-	python tests/flask_tests.py
+	python setup.py test
 
 release:
 	python setup.py release sdist upload
"
a6617f44c0416c6877d930b312e1f64df08eca0e,707b30749daf407c07b5b265bd892564576ad80a,setup.py,setup.py,setup.py,use setup.py test. This fixes #56,"diff --git a/setup.py b/setup.py
index 66ef6a66..96fc77ba 100644
--- a/setup.py
+++ b/setup.py
@@ -41,6 +41,13 @@ Links
 from setuptools import setup
 
 
+def run_tests():
+    import os, sys
+    sys.path.append(os.path.join(os.path.dirname(__file__), 'tests'))
+    from flask_tests import suite
+    return suite()
+
+
 setup(
     name='Flask',
     version='0.4',
@@ -67,5 +74,6 @@ setup(
         'Programming Language :: Python',
         'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
         'Topic :: Software Development :: Libraries :: Python Modules'
-    ]
+    ],
+    test_suite='__main__.run_tests'
 )
","diff --git a/setup.py b/setup.py
index 66ef6a66..96fc77ba 100644
--- a/setup.py
+++ b/setup.py
@@ -41,6 +41,13 @@ Links
 from setuptools import setup
 
 
+def run_tests():
+    import os, sys
+    sys.path.append(os.path.join(os.path.dirname(__file__), 'tests'))
+    from flask_tests import suite
+    return suite()
+
+
 setup(
     name='Flask',
     version='0.4',
@@ -67,5 +74,6 @@ setup(
         'Programming Language :: Python',
         'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
         'Topic :: Software Development :: Libraries :: Python Modules'
-    ]
+    ],
+    test_suite='__main__.run_tests'
 )
"
707b30749daf407c07b5b265bd892564576ad80a,ee69fb58906818f50a2afe71e4ecde7af96b791a,docs/_themes,docs/_themes,docs/_themes,Added document about extension development,"diff --git a/docs/_themes b/docs/_themes
index 0d8f3d85..77a1db55 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 0d8f3d85558168647632c768bdea7d58cf6f8e42
+Subproject commit 77a1db551aa956069ff4408b6c05814d86b0dc0d
","diff --git a/docs/_themes b/docs/_themes
index 0d8f3d85..77a1db55 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 0d8f3d85558168647632c768bdea7d58cf6f8e42
+Subproject commit 77a1db551aa956069ff4408b6c05814d86b0dc0d
"
707b30749daf407c07b5b265bd892564576ad80a,ee69fb58906818f50a2afe71e4ecde7af96b791a,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,Added document about extension development,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 918ad804..9a3ff5a8 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -40,6 +40,7 @@ Design notes, legal information and changelog are here for the interested.
    :maxdepth: 2
 
    design
+   extensiondev
    license
    upgrading
    changelog
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 918ad804..9a3ff5a8 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -40,6 +40,7 @@ Design notes, legal information and changelog are here for the interested.
    :maxdepth: 2
 
    design
+   extensiondev
    license
    upgrading
    changelog
"
707b30749daf407c07b5b265bd892564576ad80a,ee69fb58906818f50a2afe71e4ecde7af96b791a,docs/extensiondev.rst,,docs/extensiondev.rst,Added document about extension development,"diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
new file mode 100644
index 00000000..ca8a4ea4
--- /dev/null
+++ b/docs/extensiondev.rst
@@ -0,0 +1,276 @@
+Flask Extension Development
+===========================
+
+Flask, being a microframework, often requires some repetitive steps to get
+a third party library working.  Because very often these steps could be
+abstracted to support multiple projects the `Flask Extension Registry`_
+was created.
+
+If you want to create your own Flask extension for something that does not
+exist yet, this guide to extension development will help you get your
+extension running in no time and to feel like users would expect your
+extension to behave.
+
+.. _Flask Extension Registry: http://flask.pocoo.org/extensions/
+
+Anatomy of an Extension
+-----------------------
+
+Extensions are all located in a package called ``flaskext.something``
+where ""something"" is the name of the library you want to bridge.  So for
+example if you plan to add support for a library named `simplexml` to
+Flask, you would name your extension's package ``flaskext.simplexml``.
+
+The name of the actual extension (the human readable name) however would
+be something like ""Flask-SimpleXML"".  Make sure to include the name
+""Flask"" somewhere in that name and that you check the capitalization.
+This is how users can then register dependencies to your extension in
+their `setup.py` files.
+
+The magic that makes it possible to have your library in a package called
+``flaskext.something`` is called a ""namespace package"".  Check out the
+guide below how to create something like that.
+
+But how do extensions look like themselves?  An extension has to ensure
+that it works with multiple Flask application instances at once.  This is
+a requirement because many people will use patterns like the
+:ref:`app-factories` pattern to create their application as needed to aid
+unittests and to support multiple configurations.  Because of that it is
+crucial that your application supports that kind of behaviour.
+
+Most importantly the extension must be shipped with a `setup.py` file and
+registered on PyPI.  Also the development checkout link should work so
+that people can easily install the development version into their
+virtualenv without having to download the library by hand.
+
+Flask extensions must be licensed as BSD or MIT or a more liberal license
+to be enlisted on the Flask Extension Registry.  Keep in mind that the
+Flask Extension Registry is a moderated place and libraries will be
+reviewed upfront if they behave as required.
+
+""Hello Flaskext!""
+-----------------
+
+So let's get started with creating such a Flask extension.  The extension
+we want to create here will provide very basic support for SQLite3.
+
+There is a script on github called `Flask Extension Wizard`_ which helps
+you create the initial folder structure.  But for this very basic example
+we want to create all by hand to get a better feeling for it.
+
+First we create the following folder structure::
+
+    flask-sqlite3/
+        flaskext/
+            __init__.py
+            sqlite3.py
+        setup.py
+        LICENSE
+
+Here the contents of the most important files:
+
+flaskext/__init__.py
+````````````````````
+
+The only purpose of this file is to mark the package as namespace package.
+This is required so that multiple modules from different PyPI packages can
+reside in the same Python package::
+
+    __import__('pkg_resources').declare_namespace(__name__)
+
+If you want to know exactly what is happening there, checkout the
+distribute or setuptools docs which explain how this works.
+
+Just make sure to not put anything else in there!
+
+setup.py
+````````
+
+The next file that is absolutely required is the `setup.py` file which is
+used to install your Flask extension.  The following contents are
+something you can work with::
+
+    """"""
+    Flask-SQLite3
+    -------------
+
+    This is the description for that library
+    """"""
+    from setuptools import setup
+
+
+    setup(
+        name='Flask-SQLite3',
+        version='1.0',
+        url='http://example.com/flask-sqlite3/',
+        license='BSD',
+        author='Your Name',
+        author_email='your-email@example.com',
+        description='Very short description',
+        long_description=__doc__,
+        packages=['flaskext'],
+        namespace_packages=['flaskext'],
+        zip_safe=False,
+        platforms='any',
+        install_requires=[
+            'Flask'
+        ],
+        classifiers=[
+            'Environment :: Web Environment',
+            'Intended Audience :: Developers',
+            'License :: OSI Approved :: BSD License',
+            'Operating System :: OS Independent',
+            'Programming Language :: Python',
+            'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
+            'Topic :: Software Development :: Libraries :: Python Modules'
+        ]
+    )
+
+That's a lot of code but you can really just copy/paste that from existing
+extensions and adapt.  This is also what the wizard creates for you if you
+use it.
+
+flaskext/sqlite3.py
+```````````````````
+
+Now this is where your extension code goes.  But how exactly should such
+an extension look like?  What are the best practices?  Continue reading
+for some insight.
+
+
+Initializing Extensions
+-----------------------
+
+Many extensions will need some kind of initialization step.  For example,
+consider your application is currently connecting to SQLite like the
+documentation suggests (:ref:`sqlite3`) you will need to provide a few
+functions and before / after request handlers.  So how does the extension
+know the name of the application object?
+
+Quite simple: you pass it to it.
+
+There are two recommended ways for an extension to initialize:
+
+initialization functions:
+    If your extension is called `helloworld` you might have a function
+    called ``init_helloworld(app[, extra_args])`` that initalizes the
+    extension for that application.  It could attach before / after
+    handlers etc.
+
+classes:
+    Classes work mostly like initialization functions but can later be
+    used to further change the behaviour.  For an example look at how the
+    `OAuth extension`_ works: ther is an `OAuth` object that provides
+    some helper functions like `OAuth.remote_app` to create a reference to
+    a remote application that uses OAuth.
+
+What to use depends on what you have in mind.  For the SQLite 3 extension
+we will need to use the class based approach because we have to use a
+controller object that can be used to connect to the database.
+
+The Extension Code
+------------------
+
+Here the contents of the `flaskext/sqlite3.py` for copy/paste::
+
+    from __future__ import absolute_import
+    import sqlite3
+    from flask import g
+
+    class SQLite3(object):
+    
+        def __init__(self, app):
+            self.app = app
+            self.app.config.setdefault('SQLITE3_DATABASE', ':memory:')
+
+            self.app.before_request(self.before_request)
+            self.app.after_request(self.after_request)
+
+        def connect(self):
+            return sqlite3.connect(self.app.config['SQLITE3_DATABASE'])
+
+        def before_request(self):
+            g.sqlite3_db = self.connect()
+
+        def after_request(self, response):
+            g.sqlite3_db.close()
+            return response
+
+So here what the lines of code do:
+
+1.  the ``__future__`` import is necessary to activate absolute imports.
+    This is needed because otherwise we could not call our module
+    `sqlite3.py` and import the top-level `sqlite3` module which actually
+    implements the connection to SQLite.
+2.  We create a class for our extension that sets a default configuration
+    for the SQLite 3 database if it's not there (:meth:`dict.setdefault`)
+    and connects two functions as before and after request handlers.
+3.  Then it implements a `connect` function that returns a new database
+    connection and the two handlers.
+
+So why did we decide on a class based approach here?  Because using that
+extension looks something like this::
+
+    from flask import Flask, g
+    from flaskext.sqlite3 import SQLite3
+
+    app = Flask(__name__)
+    app.config.from_pyfile('the-config.cfg')
+    db = SQLite(app)
+
+Either way you can use the database from the views like this::
+
+    @app.route('/')
+    def show_all():
+        cur = g.sqlite_db.cursor()
+        cur.execute(...)
+
+But how would you open a database connection from outside a view function?
+This is where the `db` object now comes into play:
+
+>>> from yourapplication import db
+>>> con = db.connect()
+>>> cur = con.cursor()
+
+If you don't need that, you can go with initialization functions.
+
+Initialization Functions
+------------------------
+
+Here how the module would look like with initialization functions::
+
+    from __future__ import absolute_import
+    import sqlite3
+    from flask import g
+
+    def init_sqlite3(app):
+        app = app
+        app.config.setdefault('SQLITE3_DATABASE', ':memory:')
+
+        @app.before_request
+        def before_request():
+            g.sqlite3_db = sqlite3.connect(self.app.config['SQLITE3_DATABASE'])
+
+        @app.after_request
+        def after_request(response):
+            g.sqlite3_db.close()
+            return response
+
+Learn from Others
+-----------------
+
+This documentation only touches the bare minimum for extension
+development.  If you want to learn more, it's a very good idea to check
+out existing extensions on the `Flask Extension Registry`_.  If you feel
+lost there is still the `mailinglist`_ and the `IRC channel`_ to get some
+ideas for nice looking APIs.  Especially if you do something nobody before
+you did, it might be a very good idea to get some more input.
+
+Remember: good API design is hard :(
+
+
+.. _Flask Extension Wizard:
+   http://github.com/mitsuhiko/flask-extension-wizard
+.. _OAuth extension: http://packages.python.org/Flask-OAuth/
+.. _mailinglist: http://flask.pocoo.org/mailinglist/
+.. _IRC channel: http://flask.pocoo.org/community/irc/
","diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
new file mode 100644
index 00000000..ca8a4ea4
--- /dev/null
+++ b/docs/extensiondev.rst
@@ -0,0 +1,276 @@
+Flask Extension Development
+===========================
+
+Flask, being a microframework, often requires some repetitive steps to get
+a third party library working.  Because very often these steps could be
+abstracted to support multiple projects the `Flask Extension Registry`_
+was created.
+
+If you want to create your own Flask extension for something that does not
+exist yet, this guide to extension development will help you get your
+extension running in no time and to feel like users would expect your
+extension to behave.
+
+.. _Flask Extension Registry: http://flask.pocoo.org/extensions/
+
+Anatomy of an Extension
+-----------------------
+
+Extensions are all located in a package called ``flaskext.something``
+where ""something"" is the name of the library you want to bridge.  So for
+example if you plan to add support for a library named `simplexml` to
+Flask, you would name your extension's package ``flaskext.simplexml``.
+
+The name of the actual extension (the human readable name) however would
+be something like ""Flask-SimpleXML"".  Make sure to include the name
+""Flask"" somewhere in that name and that you check the capitalization.
+This is how users can then register dependencies to your extension in
+their `setup.py` files.
+
+The magic that makes it possible to have your library in a package called
+``flaskext.something`` is called a ""namespace package"".  Check out the
+guide below how to create something like that.
+
+But how do extensions look like themselves?  An extension has to ensure
+that it works with multiple Flask application instances at once.  This is
+a requirement because many people will use patterns like the
+:ref:`app-factories` pattern to create their application as needed to aid
+unittests and to support multiple configurations.  Because of that it is
+crucial that your application supports that kind of behaviour.
+
+Most importantly the extension must be shipped with a `setup.py` file and
+registered on PyPI.  Also the development checkout link should work so
+that people can easily install the development version into their
+virtualenv without having to download the library by hand.
+
+Flask extensions must be licensed as BSD or MIT or a more liberal license
+to be enlisted on the Flask Extension Registry.  Keep in mind that the
+Flask Extension Registry is a moderated place and libraries will be
+reviewed upfront if they behave as required.
+
+""Hello Flaskext!""
+-----------------
+
+So let's get started with creating such a Flask extension.  The extension
+we want to create here will provide very basic support for SQLite3.
+
+There is a script on github called `Flask Extension Wizard`_ which helps
+you create the initial folder structure.  But for this very basic example
+we want to create all by hand to get a better feeling for it.
+
+First we create the following folder structure::
+
+    flask-sqlite3/
+        flaskext/
+            __init__.py
+            sqlite3.py
+        setup.py
+        LICENSE
+
+Here the contents of the most important files:
+
+flaskext/__init__.py
+````````````````````
+
+The only purpose of this file is to mark the package as namespace package.
+This is required so that multiple modules from different PyPI packages can
+reside in the same Python package::
+
+    __import__('pkg_resources').declare_namespace(__name__)
+
+If you want to know exactly what is happening there, checkout the
+distribute or setuptools docs which explain how this works.
+
+Just make sure to not put anything else in there!
+
+setup.py
+````````
+
+The next file that is absolutely required is the `setup.py` file which is
+used to install your Flask extension.  The following contents are
+something you can work with::
+
+    """"""
+    Flask-SQLite3
+    -------------
+
+    This is the description for that library
+    """"""
+    from setuptools import setup
+
+
+    setup(
+        name='Flask-SQLite3',
+        version='1.0',
+        url='http://example.com/flask-sqlite3/',
+        license='BSD',
+        author='Your Name',
+        author_email='your-email@example.com',
+        description='Very short description',
+        long_description=__doc__,
+        packages=['flaskext'],
+        namespace_packages=['flaskext'],
+        zip_safe=False,
+        platforms='any',
+        install_requires=[
+            'Flask'
+        ],
+        classifiers=[
+            'Environment :: Web Environment',
+            'Intended Audience :: Developers',
+            'License :: OSI Approved :: BSD License',
+            'Operating System :: OS Independent',
+            'Programming Language :: Python',
+            'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
+            'Topic :: Software Development :: Libraries :: Python Modules'
+        ]
+    )
+
+That's a lot of code but you can really just copy/paste that from existing
+extensions and adapt.  This is also what the wizard creates for you if you
+use it.
+
+flaskext/sqlite3.py
+```````````````````
+
+Now this is where your extension code goes.  But how exactly should such
+an extension look like?  What are the best practices?  Continue reading
+for some insight.
+
+
+Initializing Extensions
+-----------------------
+
+Many extensions will need some kind of initialization step.  For example,
+consider your application is currently connecting to SQLite like the
+documentation suggests (:ref:`sqlite3`) you will need to provide a few
+functions and before / after request handlers.  So how does the extension
+know the name of the application object?
+
+Quite simple: you pass it to it.
+
+There are two recommended ways for an extension to initialize:
+
+initialization functions:
+    If your extension is called `helloworld` you might have a function
+    called ``init_helloworld(app[, extra_args])`` that initalizes the
+    extension for that application.  It could attach before / after
+    handlers etc.
+
+classes:
+    Classes work mostly like initialization functions but can later be
+    used to further change the behaviour.  For an example look at how the
+    `OAuth extension`_ works: ther is an `OAuth` object that provides
+    some helper functions like `OAuth.remote_app` to create a reference to
+    a remote application that uses OAuth.
+
+What to use depends on what you have in mind.  For the SQLite 3 extension
+we will need to use the class based approach because we have to use a
+controller object that can be used to connect to the database.
+
+The Extension Code
+------------------
+
+Here the contents of the `flaskext/sqlite3.py` for copy/paste::
+
+    from __future__ import absolute_import
+    import sqlite3
+    from flask import g
+
+    class SQLite3(object):
+    
+        def __init__(self, app):
+            self.app = app
+            self.app.config.setdefault('SQLITE3_DATABASE', ':memory:')
+
+            self.app.before_request(self.before_request)
+            self.app.after_request(self.after_request)
+
+        def connect(self):
+            return sqlite3.connect(self.app.config['SQLITE3_DATABASE'])
+
+        def before_request(self):
+            g.sqlite3_db = self.connect()
+
+        def after_request(self, response):
+            g.sqlite3_db.close()
+            return response
+
+So here what the lines of code do:
+
+1.  the ``__future__`` import is necessary to activate absolute imports.
+    This is needed because otherwise we could not call our module
+    `sqlite3.py` and import the top-level `sqlite3` module which actually
+    implements the connection to SQLite.
+2.  We create a class for our extension that sets a default configuration
+    for the SQLite 3 database if it's not there (:meth:`dict.setdefault`)
+    and connects two functions as before and after request handlers.
+3.  Then it implements a `connect` function that returns a new database
+    connection and the two handlers.
+
+So why did we decide on a class based approach here?  Because using that
+extension looks something like this::
+
+    from flask import Flask, g
+    from flaskext.sqlite3 import SQLite3
+
+    app = Flask(__name__)
+    app.config.from_pyfile('the-config.cfg')
+    db = SQLite(app)
+
+Either way you can use the database from the views like this::
+
+    @app.route('/')
+    def show_all():
+        cur = g.sqlite_db.cursor()
+        cur.execute(...)
+
+But how would you open a database connection from outside a view function?
+This is where the `db` object now comes into play:
+
+>>> from yourapplication import db
+>>> con = db.connect()
+>>> cur = con.cursor()
+
+If you don't need that, you can go with initialization functions.
+
+Initialization Functions
+------------------------
+
+Here how the module would look like with initialization functions::
+
+    from __future__ import absolute_import
+    import sqlite3
+    from flask import g
+
+    def init_sqlite3(app):
+        app = app
+        app.config.setdefault('SQLITE3_DATABASE', ':memory:')
+
+        @app.before_request
+        def before_request():
+            g.sqlite3_db = sqlite3.connect(self.app.config['SQLITE3_DATABASE'])
+
+        @app.after_request
+        def after_request(response):
+            g.sqlite3_db.close()
+            return response
+
+Learn from Others
+-----------------
+
+This documentation only touches the bare minimum for extension
+development.  If you want to learn more, it's a very good idea to check
+out existing extensions on the `Flask Extension Registry`_.  If you feel
+lost there is still the `mailinglist`_ and the `IRC channel`_ to get some
+ideas for nice looking APIs.  Especially if you do something nobody before
+you did, it might be a very good idea to get some more input.
+
+Remember: good API design is hard :(
+
+
+.. _Flask Extension Wizard:
+   http://github.com/mitsuhiko/flask-extension-wizard
+.. _OAuth extension: http://packages.python.org/Flask-OAuth/
+.. _mailinglist: http://flask.pocoo.org/mailinglist/
+.. _IRC channel: http://flask.pocoo.org/community/irc/
"
ee69fb58906818f50a2afe71e4ecde7af96b791a,216472b43dbb2c2501ab7f8b3e5ae861a082db3f,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,Fix missing plural in documentation,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 65678a15..99d0d7e5 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -109,7 +109,7 @@ Working with Modules
 --------------------
 
 For larger applications with more than a dozen views it makes sense to
-split the views into module.  First let's look at the typical struture of
+split the views into modules.  First let's look at the typical struture of
 such an application::
 
     /yourapplication
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 65678a15..99d0d7e5 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -109,7 +109,7 @@ Working with Modules
 --------------------
 
 For larger applications with more than a dozen views it makes sense to
-split the views into module.  First let's look at the typical struture of
+split the views into modules.  First let's look at the typical struture of
 such an application::
 
     /yourapplication
"
ee69fb58906818f50a2afe71e4ecde7af96b791a,33e7f2b990e3889d6aa9cffef4a4c9d7d0923698,flask.py,flask.py,flask.py,Invoke after_request on exceptions as well. This fixes #59,"diff --git a/flask.py b/flask.py
index 71c30d84..00d23287 100644
--- a/flask.py
+++ b/flask.py
@@ -1362,6 +1362,12 @@ class Flask(_PackageBoundObject):
         Then you still have the original application object around and
         can continue to call methods on it.
 
+        .. versionchanged:: 0.4
+           The :meth:`after_request` functions are now called even if an
+           error handler took over request processing.  This ensures that
+           even if an exception happens database have the chance to
+           properly close the connection.
+
         :param environ: a WSGI environment
         :param start_response: a callable accepting a status code,
                                a list of headers and an optional
@@ -1376,6 +1382,13 @@ class Flask(_PackageBoundObject):
                 response = self.process_response(response)
             except Exception, e:
                 response = self.make_response(self.handle_exception(e))
+                try:
+                    response = self.process_response(response)
+                except Exception, e:
+                    self.logger.exception('after_request handler failed '
+                                          'to postprocess error response. '
+                                          'Depending on uncertain state?')
+
             return response(environ, start_response)
 
     def request_context(self, environ):
","diff --git a/flask.py b/flask.py
index 71c30d84..00d23287 100644
--- a/flask.py
+++ b/flask.py
@@ -1362,6 +1362,12 @@ class Flask(_PackageBoundObject):
         Then you still have the original application object around and
         can continue to call methods on it.
 
+        .. versionchanged:: 0.4
+           The :meth:`after_request` functions are now called even if an
+           error handler took over request processing.  This ensures that
+           even if an exception happens database have the chance to
+           properly close the connection.
+
         :param environ: a WSGI environment
         :param start_response: a callable accepting a status code,
                                a list of headers and an optional
@@ -1376,6 +1382,13 @@ class Flask(_PackageBoundObject):
                 response = self.process_response(response)
             except Exception, e:
                 response = self.make_response(self.handle_exception(e))
+                try:
+                    response = self.process_response(response)
+                except Exception, e:
+                    self.logger.exception('after_request handler failed '
+                                          'to postprocess error response. '
+                                          'Depending on uncertain state?')
+
             return response(environ, start_response)
 
     def request_context(self, environ):
"
ee69fb58906818f50a2afe71e4ecde7af96b791a,33e7f2b990e3889d6aa9cffef4a4c9d7d0923698,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Invoke after_request on exceptions as well. This fixes #59,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 9d1dba6e..3f9588bc 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,6 +16,7 @@ import sys
 import flask
 import unittest
 import tempfile
+from logging import StreamHandler
 from contextlib import contextmanager
 from datetime import datetime
 from werkzeug import parse_date, parse_options_header
@@ -240,6 +241,37 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert 'after' in evts
         assert rv == 'request|after'
 
+    def test_after_request_errors(self):
+        app = flask.Flask(__name__)
+        called = []
+        @app.after_request
+        def after_request(response):
+            called.append(True)
+            return response
+        @app.route('/')
+        def fails():
+            1/0
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+        assert len(called) == 1
+
+    def test_after_request_handler_error(self):
+        error_out = StringIO()
+        app = flask.Flask(__name__)
+        app.logger.addHandler(StreamHandler(error_out))
+        @app.after_request
+        def after_request(response):
+            1/0
+            return response
+        @app.route('/')
+        def fails():
+            1/0
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+        assert 'after_request handler failed' in error_out.getvalue()
+
     def test_error_handling(self):
         app = flask.Flask(__name__)
         @app.errorhandler(404)
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 9d1dba6e..3f9588bc 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -16,6 +16,7 @@ import sys
 import flask
 import unittest
 import tempfile
+from logging import StreamHandler
 from contextlib import contextmanager
 from datetime import datetime
 from werkzeug import parse_date, parse_options_header
@@ -240,6 +241,37 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert 'after' in evts
         assert rv == 'request|after'
 
+    def test_after_request_errors(self):
+        app = flask.Flask(__name__)
+        called = []
+        @app.after_request
+        def after_request(response):
+            called.append(True)
+            return response
+        @app.route('/')
+        def fails():
+            1/0
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+        assert len(called) == 1
+
+    def test_after_request_handler_error(self):
+        error_out = StringIO()
+        app = flask.Flask(__name__)
+        app.logger.addHandler(StreamHandler(error_out))
+        @app.after_request
+        def after_request(response):
+            1/0
+            return response
+        @app.route('/')
+        def fails():
+            1/0
+        rv = app.test_client().get('/')
+        assert rv.status_code == 500
+        assert 'Internal Server Error' in rv.data
+        assert 'after_request handler failed' in error_out.getvalue()
+
     def test_error_handling(self):
         app = flask.Flask(__name__)
         @app.errorhandler(404)
"
b4d576bce249322605094525491ccba091704a35,937360877bd425543e06decd68a62e086b78bf6b,CHANGES,CHANGES,CHANGES,Documented changes in after_request handlers.,"diff --git a/CHANGES b/CHANGES
index 83d1af06..901f08b2 100644
--- a/CHANGES
+++ b/CHANGES
@@ -10,6 +10,9 @@ Release date to be announced, codename to be selected.
 
 - added the ability to register application wide error handlers
   from modules.
+- :meth:`~flask.Flask.after_request` handlers are now also invoked
+  if the request dies with an exception and an error handling page
+  kicks in.
 
 Version 0.3.1
 -------------
","diff --git a/CHANGES b/CHANGES
index 83d1af06..901f08b2 100644
--- a/CHANGES
+++ b/CHANGES
@@ -10,6 +10,9 @@ Release date to be announced, codename to be selected.
 
 - added the ability to register application wide error handlers
   from modules.
+- :meth:`~flask.Flask.after_request` handlers are now also invoked
+  if the request dies with an exception and an error handling page
+  kicks in.
 
 Version 0.3.1
 -------------
"
937360877bd425543e06decd68a62e086b78bf6b,bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,CHANGES,CHANGES,CHANGES,Added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. This fixes #59.,"diff --git a/CHANGES b/CHANGES
index 901f08b2..ca066dad 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,9 @@ Release date to be announced, codename to be selected.
 - :meth:`~flask.Flask.after_request` handlers are now also invoked
   if the request dies with an exception and an error handling page
   kicks in.
+- test client has not the ability to preserve the request context
+  for a little longer.  This can also be used to trigger custom
+  requests that do not pop the request stack for testing.
 
 Version 0.3.1
 -------------
","diff --git a/CHANGES b/CHANGES
index 901f08b2..ca066dad 100644
--- a/CHANGES
+++ b/CHANGES
@@ -13,6 +13,9 @@ Release date to be announced, codename to be selected.
 - :meth:`~flask.Flask.after_request` handlers are now also invoked
   if the request dies with an exception and an error handling page
   kicks in.
+- test client has not the ability to preserve the request context
+  for a little longer.  This can also be used to trigger custom
+  requests that do not pop the request stack for testing.
 
 Version 0.3.1
 -------------
"
937360877bd425543e06decd68a62e086b78bf6b,bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,docs/api.rst,docs/api.rst,docs/api.rst,Added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. This fixes #59.,"diff --git a/docs/api.rst b/docs/api.rst
index 0fb50551..fc6f68fb 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -300,3 +300,20 @@ Useful Internals
    all the context local objects used in Flask.  This is a documented
    instance and can be used by extensions and application code but the
    use is discouraged in general.
+
+   .. versionchanged:: 0.4
+
+   The request context is automatically popped at the end of the request
+   for you.  In debug mode the request context is kept around if
+   exceptions happen so that interactive debuggers have a chance to
+   introspect the data.  With 0.4 this can also be forced for requests
+   that did not fail and outside of `DEBUG` mode.  By setting
+   ``'flask._preserve_context'`` to `True` on the WSGI environment the
+   context will not pop itself at the end of the request.  This is used by
+   the :meth:`~flask.Flask.test_client` for example to implement the
+   deferred cleanup functionality.
+
+   You might find this helpful for unittests where you need the
+   information from the context local around for a little longer.  Make
+   sure to properly :meth:`~werkzeug.LocalStack.pop` the stack yourself in
+   that situation, otherwise your unittests will leak memory.
","diff --git a/docs/api.rst b/docs/api.rst
index 0fb50551..fc6f68fb 100644
--- a/docs/api.rst
+++ b/docs/api.rst
@@ -300,3 +300,20 @@ Useful Internals
    all the context local objects used in Flask.  This is a documented
    instance and can be used by extensions and application code but the
    use is discouraged in general.
+
+   .. versionchanged:: 0.4
+
+   The request context is automatically popped at the end of the request
+   for you.  In debug mode the request context is kept around if
+   exceptions happen so that interactive debuggers have a chance to
+   introspect the data.  With 0.4 this can also be forced for requests
+   that did not fail and outside of `DEBUG` mode.  By setting
+   ``'flask._preserve_context'`` to `True` on the WSGI environment the
+   context will not pop itself at the end of the request.  This is used by
+   the :meth:`~flask.Flask.test_client` for example to implement the
+   deferred cleanup functionality.
+
+   You might find this helpful for unittests where you need the
+   information from the context local around for a little longer.  Make
+   sure to properly :meth:`~werkzeug.LocalStack.pop` the stack yourself in
+   that situation, otherwise your unittests will leak memory.
"
937360877bd425543e06decd68a62e086b78bf6b,bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,docs/testing.rst,docs/testing.rst,docs/testing.rst,Added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. This fixes #59.,"diff --git a/docs/testing.rst b/docs/testing.rst
index db2b4188..de14413d 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -218,3 +218,27 @@ All the other objects that are context bound can be used the same.
 If you want to test your application with different configurations and
 there does not seem to be a good way to do that, consider switching to
 application factories (see :ref:`app-factories`).
+
+
+Keeping the Context Around
+--------------------------
+
+.. versionadded:: 0.4
+
+Sometimes it can be helpful to trigger a regular request but keep the
+context around for a little longer so that additional introspection can
+happen.  With Flask 0.4 this is possible by using the
+:meth:`~flask.Flask.test_client` with a `with` block::
+
+    app = flask.Flask(__name__)
+
+    with app.test_client() as c:
+        rv = c.get('/?foo=42')
+        assert request.args['foo'] == '42'
+
+If you would just be using the :meth:`~flask.Flask.test_client` without
+the `with` block, the `assert` would fail with an error because `request`
+is no longer available (because used outside of an actual request).
+Keep in mind however that :meth:`~flask.Flask.after_request` functions
+are already called at that point so your database connection and
+everything involved is probably already closed down.
","diff --git a/docs/testing.rst b/docs/testing.rst
index db2b4188..de14413d 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -218,3 +218,27 @@ All the other objects that are context bound can be used the same.
 If you want to test your application with different configurations and
 there does not seem to be a good way to do that, consider switching to
 application factories (see :ref:`app-factories`).
+
+
+Keeping the Context Around
+--------------------------
+
+.. versionadded:: 0.4
+
+Sometimes it can be helpful to trigger a regular request but keep the
+context around for a little longer so that additional introspection can
+happen.  With Flask 0.4 this is possible by using the
+:meth:`~flask.Flask.test_client` with a `with` block::
+
+    app = flask.Flask(__name__)
+
+    with app.test_client() as c:
+        rv = c.get('/?foo=42')
+        assert request.args['foo'] == '42'
+
+If you would just be using the :meth:`~flask.Flask.test_client` without
+the `with` block, the `assert` would fail with an error because `request`
+is no longer available (because used outside of an actual request).
+Keep in mind however that :meth:`~flask.Flask.after_request` functions
+are already called at that point so your database connection and
+everything involved is probably already closed down.
"
937360877bd425543e06decd68a62e086b78bf6b,bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,flask.py,flask.py,flask.py,Added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. This fixes #59.,"diff --git a/flask.py b/flask.py
index 00d23287..f5d94fbe 100644
--- a/flask.py
+++ b/flask.py
@@ -163,8 +163,10 @@ class _RequestContext(object):
     def __exit__(self, exc_type, exc_value, tb):
         # do not pop the request stack if we are in debug mode and an
         # exception happened.  This will allow the debugger to still
-        # access the request object in the interactive shell.
-        if tb is None or not self.app.debug:
+        # access the request object in the interactive shell.  Furthermore
+        # the context can be force kept alive for the test client.
+        if not self.request.environ.get('flask._preserve_context') and \
+           (tb is None or not self.app.debug):
             self.pop()
 
 
@@ -1021,9 +1023,40 @@ class Flask(_PackageBoundObject):
     def test_client(self):
         """"""Creates a test client for this application.  For information
         about unit testing head over to :ref:`testing`.
+
+        The test client can be used in a `with` block to defer the closing down
+        of the context until the end of the `with` block.  This is useful if
+        you want to access the context locals for testing::
+
+            with app.test_client() as c:
+                rv = c.get('/?foo=42')
+                assert request.args['foo'] == '42'
+
+        .. versionchanged:: 0.4
+           added support for `with` block usage for the client.
         """"""
         from werkzeug import Client
-        return Client(self, self.response_class, use_cookies=True)
+        class FlaskClient(Client):
+            preserve_context = context_preserved = False
+            def open(self, *args, **kwargs):
+                if self.context_preserved:
+                    _request_ctx_stack.pop()
+                    self.context_preserved = False
+                kwargs.setdefault('environ_overrides', {}) \
+                    ['flask._preserve_context'] = self.preserve_context
+                old = _request_ctx_stack.top
+                try:
+                    return Client.open(self, *args, **kwargs)
+                finally:
+                    self.context_preserved = _request_ctx_stack.top is not old
+            def __enter__(self):
+                self.preserve_context = True
+                return self
+            def __exit__(self, exc_type, exc_value, tb):
+                self.preserve_context = False
+                if self.context_preserved:
+                    _request_ctx_stack.pop()
+        return FlaskClient(self, self.response_class, use_cookies=True)
 
     def open_session(self, request):
         """"""Creates or opens a new session.  Default implementation stores all
","diff --git a/flask.py b/flask.py
index 00d23287..f5d94fbe 100644
--- a/flask.py
+++ b/flask.py
@@ -163,8 +163,10 @@ class _RequestContext(object):
     def __exit__(self, exc_type, exc_value, tb):
         # do not pop the request stack if we are in debug mode and an
         # exception happened.  This will allow the debugger to still
-        # access the request object in the interactive shell.
-        if tb is None or not self.app.debug:
+        # access the request object in the interactive shell.  Furthermore
+        # the context can be force kept alive for the test client.
+        if not self.request.environ.get('flask._preserve_context') and \
+           (tb is None or not self.app.debug):
             self.pop()
 
 
@@ -1021,9 +1023,40 @@ class Flask(_PackageBoundObject):
     def test_client(self):
         """"""Creates a test client for this application.  For information
         about unit testing head over to :ref:`testing`.
+
+        The test client can be used in a `with` block to defer the closing down
+        of the context until the end of the `with` block.  This is useful if
+        you want to access the context locals for testing::
+
+            with app.test_client() as c:
+                rv = c.get('/?foo=42')
+                assert request.args['foo'] == '42'
+
+        .. versionchanged:: 0.4
+           added support for `with` block usage for the client.
         """"""
         from werkzeug import Client
-        return Client(self, self.response_class, use_cookies=True)
+        class FlaskClient(Client):
+            preserve_context = context_preserved = False
+            def open(self, *args, **kwargs):
+                if self.context_preserved:
+                    _request_ctx_stack.pop()
+                    self.context_preserved = False
+                kwargs.setdefault('environ_overrides', {}) \
+                    ['flask._preserve_context'] = self.preserve_context
+                old = _request_ctx_stack.top
+                try:
+                    return Client.open(self, *args, **kwargs)
+                finally:
+                    self.context_preserved = _request_ctx_stack.top is not old
+            def __enter__(self):
+                self.preserve_context = True
+                return self
+            def __exit__(self, exc_type, exc_value, tb):
+                self.preserve_context = False
+                if self.context_preserved:
+                    _request_ctx_stack.pop()
+        return FlaskClient(self, self.response_class, use_cookies=True)
 
     def open_session(self, request):
         """"""Creates or opens a new session.  Default implementation stores all
"
937360877bd425543e06decd68a62e086b78bf6b,bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Added support for deferred context cleanup. test_client users can now access the context locals after the actual request if the client is used with a with-block. This fixes #59.,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 3f9588bc..6fbc88a6 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -58,6 +58,7 @@ class ContextTestCase(unittest.TestCase):
             assert index() == 'Hello World!'
         with app.test_request_context('/meh'):
             assert meh() == 'http://localhost/meh'
+        assert flask._request_ctx_stack.top is None
 
     def test_manual_context_binding(self):
         app = flask.Flask(__name__)
@@ -76,6 +77,36 @@ class ContextTestCase(unittest.TestCase):
         else:
             assert 0, 'expected runtime error'
 
+    def test_test_client_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            flask.g.value = 42
+            return 'Hello World!'
+
+        @app.route('/other')
+        def other():
+            1/0
+
+        with app.test_client() as c:
+            resp = c.get('/')
+            assert flask.g.value == 42
+            assert resp.data == 'Hello World!'
+            assert resp.status_code == 200
+
+            resp = c.get('/other')
+            assert not hasattr(flask.g, 'value')
+            assert 'Internal Server Error' in resp.data
+            assert resp.status_code == 500
+            flask.g.value = 23
+
+        try:
+            flask.g.value
+        except (AttributeError, RuntimeError):
+            pass
+        else:
+            raise AssertionError('some kind of exception expected')
+
 
 class BasicFunctionalityTestCase(unittest.TestCase):
 
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 3f9588bc..6fbc88a6 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -58,6 +58,7 @@ class ContextTestCase(unittest.TestCase):
             assert index() == 'Hello World!'
         with app.test_request_context('/meh'):
             assert meh() == 'http://localhost/meh'
+        assert flask._request_ctx_stack.top is None
 
     def test_manual_context_binding(self):
         app = flask.Flask(__name__)
@@ -76,6 +77,36 @@ class ContextTestCase(unittest.TestCase):
         else:
             assert 0, 'expected runtime error'
 
+    def test_test_client_context_binding(self):
+        app = flask.Flask(__name__)
+        @app.route('/')
+        def index():
+            flask.g.value = 42
+            return 'Hello World!'
+
+        @app.route('/other')
+        def other():
+            1/0
+
+        with app.test_client() as c:
+            resp = c.get('/')
+            assert flask.g.value == 42
+            assert resp.data == 'Hello World!'
+            assert resp.status_code == 200
+
+            resp = c.get('/other')
+            assert not hasattr(flask.g, 'value')
+            assert 'Internal Server Error' in resp.data
+            assert resp.status_code == 500
+            flask.g.value = 23
+
+        try:
+            flask.g.value
+        except (AttributeError, RuntimeError):
+            pass
+        else:
+            raise AssertionError('some kind of exception expected')
+
 
 class BasicFunctionalityTestCase(unittest.TestCase):
 
"
bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,9983e847425621b5e474ae9da6822f1af0b0cc1f,CHANGES,CHANGES,CHANGES,Fixed after_request handlers being called twice in some cases and improved logging system,"diff --git a/CHANGES b/CHANGES
index ca066dad..0eb34dc1 100644
--- a/CHANGES
+++ b/CHANGES
@@ -16,6 +16,8 @@ Release date to be announced, codename to be selected.
 - test client has not the ability to preserve the request context
   for a little longer.  This can also be used to trigger custom
   requests that do not pop the request stack for testing.
+- because the Python standard library caches loggers, the name of
+  the logger is configurable now to better support unittests.
 
 Version 0.3.1
 -------------
","diff --git a/CHANGES b/CHANGES
index ca066dad..0eb34dc1 100644
--- a/CHANGES
+++ b/CHANGES
@@ -16,6 +16,8 @@ Release date to be announced, codename to be selected.
 - test client has not the ability to preserve the request context
   for a little longer.  This can also be used to trigger custom
   requests that do not pop the request stack for testing.
+- because the Python standard library caches loggers, the name of
+  the logger is configurable now to better support unittests.
 
 Version 0.3.1
 -------------
"
bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,9983e847425621b5e474ae9da6822f1af0b0cc1f,flask.py,flask.py,flask.py,Fixed after_request handlers being called twice in some cases and improved logging system,"diff --git a/flask.py b/flask.py
index f5d94fbe..8e78bea8 100644
--- a/flask.py
+++ b/flask.py
@@ -16,6 +16,7 @@ import mimetypes
 from datetime import datetime, timedelta
 
 from itertools import chain
+from threading import Lock
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
@@ -50,6 +51,9 @@ try:
 except (ImportError, AttributeError):
     pkg_resources = None
 
+# a lock used for logger initialization
+_logger_lock = Lock()
+
 
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
@@ -839,6 +843,12 @@ class Flask(_PackageBoundObject):
     #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
+    #: the name of the logger to use.  By default the logger name is the
+    #: package name passed to the constructor.
+    #:
+    #: .. versionadded:: 0.4
+    logger_name = ConfigAttribute('LOGGER_NAME')
+
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
@@ -863,7 +873,8 @@ class Flask(_PackageBoundObject):
         'SECRET_KEY':                           None,
         'SESSION_COOKIE_NAME':                  'session',
         'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
-        'USE_X_SENDFILE':                       False
+        'USE_X_SENDFILE':                       False,
+        'LOGGER_NAME':                          None
     })
 
     def __init__(self, import_name):
@@ -874,6 +885,10 @@ class Flask(_PackageBoundObject):
         #: to load a config from files.
         self.config = Config(self.root_path, self.default_config)
 
+        #: prepare the deferred setup of the logger
+        self._logger = None
+        self.logger_name = self.import_name
+
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -952,7 +967,7 @@ class Flask(_PackageBoundObject):
         )
         self.jinja_env.filters['tojson'] = _tojson_filter
 
-    @cached_property
+    @property
     def logger(self):
         """"""A :class:`logging.Logger` object for this application.  The
         default configuration is to log to stderr if the application is
@@ -965,6 +980,11 @@ class Flask(_PackageBoundObject):
 
         .. versionadded:: 0.3
         """"""
+        if self._logger and self._logger.name == self.logger_name:
+            return self._logger
+        with _logger_lock:
+            if self._logger and self._logger.name == self.logger_name:
+                return self._logger
             from logging import getLogger, StreamHandler, Formatter, DEBUG
             class DebugHandler(StreamHandler):
                 def emit(x, record):
@@ -973,8 +993,9 @@ class Flask(_PackageBoundObject):
             handler = DebugHandler()
             handler.setLevel(DEBUG)
             handler.setFormatter(Formatter(self.debug_log_format))
-        logger = getLogger(self.import_name)
+            logger = getLogger(self.logger_name)
             logger.addHandler(handler)
+            self._logger = logger
             return logger
 
     def create_jinja_loader(self):
@@ -1412,16 +1433,12 @@ class Flask(_PackageBoundObject):
                 if rv is None:
                     rv = self.dispatch_request()
                 response = self.make_response(rv)
-                response = self.process_response(response)
             except Exception, e:
                 response = self.make_response(self.handle_exception(e))
             try:
                 response = self.process_response(response)
             except Exception, e:
-                    self.logger.exception('after_request handler failed '
-                                          'to postprocess error response. '
-                                          'Depending on uncertain state?')
-
+                response = self.make_response(self.handle_exception(e))
             return response(environ, start_response)
 
     def request_context(self, environ):
","diff --git a/flask.py b/flask.py
index f5d94fbe..8e78bea8 100644
--- a/flask.py
+++ b/flask.py
@@ -16,6 +16,7 @@ import mimetypes
 from datetime import datetime, timedelta
 
 from itertools import chain
+from threading import Lock
 from jinja2 import Environment, PackageLoader, FileSystemLoader
 from werkzeug import Request as RequestBase, Response as ResponseBase, \
      LocalStack, LocalProxy, create_environ, SharedDataMiddleware, \
@@ -50,6 +51,9 @@ try:
 except (ImportError, AttributeError):
     pkg_resources = None
 
+# a lock used for logger initialization
+_logger_lock = Lock()
+
 
 class Request(RequestBase):
     """"""The request object used by default in flask.  Remembers the
@@ -839,6 +843,12 @@ class Flask(_PackageBoundObject):
     #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
+    #: the name of the logger to use.  By default the logger name is the
+    #: package name passed to the constructor.
+    #:
+    #: .. versionadded:: 0.4
+    logger_name = ConfigAttribute('LOGGER_NAME')
+
     #: the logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
@@ -863,7 +873,8 @@ class Flask(_PackageBoundObject):
         'SECRET_KEY':                           None,
         'SESSION_COOKIE_NAME':                  'session',
         'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
-        'USE_X_SENDFILE':                       False
+        'USE_X_SENDFILE':                       False,
+        'LOGGER_NAME':                          None
     })
 
     def __init__(self, import_name):
@@ -874,6 +885,10 @@ class Flask(_PackageBoundObject):
         #: to load a config from files.
         self.config = Config(self.root_path, self.default_config)
 
+        #: prepare the deferred setup of the logger
+        self._logger = None
+        self.logger_name = self.import_name
+
         #: a dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
@@ -952,7 +967,7 @@ class Flask(_PackageBoundObject):
         )
         self.jinja_env.filters['tojson'] = _tojson_filter
 
-    @cached_property
+    @property
     def logger(self):
         """"""A :class:`logging.Logger` object for this application.  The
         default configuration is to log to stderr if the application is
@@ -965,6 +980,11 @@ class Flask(_PackageBoundObject):
 
         .. versionadded:: 0.3
         """"""
+        if self._logger and self._logger.name == self.logger_name:
+            return self._logger
+        with _logger_lock:
+            if self._logger and self._logger.name == self.logger_name:
+                return self._logger
             from logging import getLogger, StreamHandler, Formatter, DEBUG
             class DebugHandler(StreamHandler):
                 def emit(x, record):
@@ -973,8 +993,9 @@ class Flask(_PackageBoundObject):
             handler = DebugHandler()
             handler.setLevel(DEBUG)
             handler.setFormatter(Formatter(self.debug_log_format))
-        logger = getLogger(self.import_name)
+            logger = getLogger(self.logger_name)
             logger.addHandler(handler)
+            self._logger = logger
             return logger
 
     def create_jinja_loader(self):
@@ -1412,16 +1433,12 @@ class Flask(_PackageBoundObject):
                 if rv is None:
                     rv = self.dispatch_request()
                 response = self.make_response(rv)
-                response = self.process_response(response)
             except Exception, e:
                 response = self.make_response(self.handle_exception(e))
             try:
                 response = self.process_response(response)
             except Exception, e:
-                    self.logger.exception('after_request handler failed '
-                                          'to postprocess error response. '
-                                          'Depending on uncertain state?')
-
+                response = self.make_response(self.handle_exception(e))
             return response(environ, start_response)
 
     def request_context(self, environ):
"
bc00fd1e83f23f57dd6a765b6a4bab2394584ae6,9983e847425621b5e474ae9da6822f1af0b0cc1f,tests/flask_tests.py,tests/flask_tests.py,tests/flask_tests.py,Fixed after_request handlers being called twice in some cases and improved logging system,"diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6fbc88a6..eccf68f3 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -288,11 +288,11 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert len(called) == 1
 
     def test_after_request_handler_error(self):
-        error_out = StringIO()
+        called = []
         app = flask.Flask(__name__)
-        app.logger.addHandler(StreamHandler(error_out))
         @app.after_request
         def after_request(response):
+            called.append(True)
             1/0
             return response
         @app.route('/')
@@ -301,7 +301,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         rv = app.test_client().get('/')
         assert rv.status_code == 500
         assert 'Internal Server Error' in rv.data
-        assert 'after_request handler failed' in error_out.getvalue()
+        assert len(called) == 1
 
     def test_error_handling(self):
         app = flask.Flask(__name__)
@@ -707,6 +707,14 @@ class SendfileTestCase(unittest.TestCase):
 
 class LoggingTestCase(unittest.TestCase):
 
+    def test_logger_cache(self):
+        app = flask.Flask(__name__)
+        logger1 = app.logger
+        assert app.logger is logger1
+        assert logger1.name == __name__
+        app.logger_name = __name__ + '/test_logger_cache'
+        assert app.logger is not logger1
+
     def test_debug_log(self):
         app = flask.Flask(__name__)
         app.debug = True
@@ -736,9 +744,9 @@ class LoggingTestCase(unittest.TestCase):
                 assert False, 'debug log ate the exception'
 
     def test_exception_logging(self):
-        from logging import StreamHandler
         out = StringIO()
         app = flask.Flask(__name__)
+        app.logger_name = 'flask_tests/test_exception_logging'
         app.logger.addHandler(StreamHandler(out))
 
         @app.route('/')
","diff --git a/tests/flask_tests.py b/tests/flask_tests.py
index 6fbc88a6..eccf68f3 100644
--- a/tests/flask_tests.py
+++ b/tests/flask_tests.py
@@ -288,11 +288,11 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         assert len(called) == 1
 
     def test_after_request_handler_error(self):
-        error_out = StringIO()
+        called = []
         app = flask.Flask(__name__)
-        app.logger.addHandler(StreamHandler(error_out))
         @app.after_request
         def after_request(response):
+            called.append(True)
             1/0
             return response
         @app.route('/')
@@ -301,7 +301,7 @@ class BasicFunctionalityTestCase(unittest.TestCase):
         rv = app.test_client().get('/')
         assert rv.status_code == 500
         assert 'Internal Server Error' in rv.data
-        assert 'after_request handler failed' in error_out.getvalue()
+        assert len(called) == 1
 
     def test_error_handling(self):
         app = flask.Flask(__name__)
@@ -707,6 +707,14 @@ class SendfileTestCase(unittest.TestCase):
 
 class LoggingTestCase(unittest.TestCase):
 
+    def test_logger_cache(self):
+        app = flask.Flask(__name__)
+        logger1 = app.logger
+        assert app.logger is logger1
+        assert logger1.name == __name__
+        app.logger_name = __name__ + '/test_logger_cache'
+        assert app.logger is not logger1
+
     def test_debug_log(self):
         app = flask.Flask(__name__)
         app.debug = True
@@ -736,9 +744,9 @@ class LoggingTestCase(unittest.TestCase):
                 assert False, 'debug log ate the exception'
 
     def test_exception_logging(self):
-        from logging import StreamHandler
         out = StringIO()
         app = flask.Flask(__name__)
+        app.logger_name = 'flask_tests/test_exception_logging'
         app.logger.addHandler(StreamHandler(out))
 
         @app.route('/')
"
9983e847425621b5e474ae9da6822f1af0b0cc1f,1ffa295d933c7e0cd1ee14c1592c40f72b9f22bb,docs/conf.py,docs/conf.py,docs/conf.py,Added message that setup.py develop is required to build the docs,"diff --git a/docs/conf.py b/docs/conf.py
index cffb1b7f..6308beee 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -43,12 +43,20 @@ master_doc = 'index'
 project = u'Flask'
 copyright = u'2010, Armin Ronacher'
 
-import pkg_resources
-
 # The version info for the project you're documenting, acts as replacement for
 # |version| and |release|, also used in various other places throughout the
 # built documents.
-release = __import__('pkg_resources').get_distribution('Flask').version
+import pkg_resources
+try:
+    release = pkg_resources.get_distribution('Flask').version
+except pkg_resources.DistributionNotFound:
+    print 'To build the documentation, The distribution information of Flask'
+    print 'Has to be available.  Either install the package into your'
+    print 'development environment or run ""setup.py develop"" to setup the'
+    print 'metadata.  A virtualenv is recommended!'
+    sys.exit(1)
+del pkg_resources
+
 if 'dev' in release:
     release = release.split('dev')[0] + 'dev'
 version = '.'.join(release.split('.')[:2])
","diff --git a/docs/conf.py b/docs/conf.py
index cffb1b7f..6308beee 100644
--- a/docs/conf.py
+++ b/docs/conf.py
@@ -43,12 +43,20 @@ master_doc = 'index'
 project = u'Flask'
 copyright = u'2010, Armin Ronacher'
 
-import pkg_resources
-
 # The version info for the project you're documenting, acts as replacement for
 # |version| and |release|, also used in various other places throughout the
 # built documents.
-release = __import__('pkg_resources').get_distribution('Flask').version
+import pkg_resources
+try:
+    release = pkg_resources.get_distribution('Flask').version
+except pkg_resources.DistributionNotFound:
+    print 'To build the documentation, The distribution information of Flask'
+    print 'Has to be available.  Either install the package into your'
+    print 'development environment or run ""setup.py develop"" to setup the'
+    print 'metadata.  A virtualenv is recommended!'
+    sys.exit(1)
+del pkg_resources
+
 if 'dev' in release:
     release = release.split('dev')[0] + 'dev'
 version = '.'.join(release.split('.')[:2])
"
1ffa295d933c7e0cd1ee14c1592c40f72b9f22bb,f904ef27d3d1f4e03972c34858787294c74c164f,docs/errorhandling.rst,docs/errorhandling.rst,docs/errorhandling.rst,Fixing typo in error handling documentation (s/changes are/chances are/),"diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index f963f1ab..ae292a1a 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -35,7 +35,7 @@ If the application runs in production mode (which it will do on your
 server) you won't see any log messages by default.  Why that?  Flask tries
 to be a zero-configuration framework and where should it drop the logs for
 you if there is no configuration.  Guessing is not a good idea because
-changes are, the place it guessed is not the place where the user has the
+chances are, the place it guessed is not the place where the user has the
 permission to create a logfile.  Also, for most small applications nobody
 will look at the logs anyways.
 
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index f963f1ab..ae292a1a 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -35,7 +35,7 @@ If the application runs in production mode (which it will do on your
 server) you won't see any log messages by default.  Why that?  Flask tries
 to be a zero-configuration framework and where should it drop the logs for
 you if there is no configuration.  Guessing is not a good idea because
-changes are, the place it guessed is not the place where the user has the
+chances are, the place it guessed is not the place where the user has the
 permission to create a logfile.  Also, for most small applications nobody
 will look at the logs anyways.
 
"
f904ef27d3d1f4e03972c34858787294c74c164f,12c2cb5e12895a0d16b37b7a9e9a96d69a34c36e,flask.py,flask.py,flask.py,Typo in docs for Flask.handle_exception,"diff --git a/flask.py b/flask.py
index 8e78bea8..2ca3e5a4 100644
--- a/flask.py
+++ b/flask.py
@@ -1301,7 +1301,7 @@ class Flask(_PackageBoundObject):
     def handle_exception(self, e):
         """"""Default exception handling that kicks in when an exception
         occours that is not catched.  In debug mode the exception will
-        be re-raised immediately, otherwise it is logged an the handler
+        be re-raised immediately, otherwise it is logged and the handler
         for an 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
","diff --git a/flask.py b/flask.py
index 8e78bea8..2ca3e5a4 100644
--- a/flask.py
+++ b/flask.py
@@ -1301,7 +1301,7 @@ class Flask(_PackageBoundObject):
     def handle_exception(self, e):
         """"""Default exception handling that kicks in when an exception
         occours that is not catched.  In debug mode the exception will
-        be re-raised immediately, otherwise it is logged an the handler
+        be re-raised immediately, otherwise it is logged and the handler
         for an 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
"
12c2cb5e12895a0d16b37b7a9e9a96d69a34c36e,cc7876f97fbc787ac7702453bdc62541f8ea47f6,flask.py,flask.py,flask.py,"Fix in docs for handle_exception: ""A"" before nouns pronounced with an initial consonant sound","diff --git a/flask.py b/flask.py
index 2ca3e5a4..32a97cbf 100644
--- a/flask.py
+++ b/flask.py
@@ -1302,7 +1302,7 @@ class Flask(_PackageBoundObject):
         """"""Default exception handling that kicks in when an exception
         occours that is not catched.  In debug mode the exception will
         be re-raised immediately, otherwise it is logged and the handler
-        for an 500 internal server error is used.  If no such handler
+        for a 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
         .. versionadded: 0.3
","diff --git a/flask.py b/flask.py
index 2ca3e5a4..32a97cbf 100644
--- a/flask.py
+++ b/flask.py
@@ -1302,7 +1302,7 @@ class Flask(_PackageBoundObject):
         """"""Default exception handling that kicks in when an exception
         occours that is not catched.  In debug mode the exception will
         be re-raised immediately, otherwise it is logged and the handler
-        for an 500 internal server error is used.  If no such handler
+        for a 500 internal server error is used.  If no such handler
         exists, a default 500 internal server error message is displayed.
 
         .. versionadded: 0.3
"
cc7876f97fbc787ac7702453bdc62541f8ea47f6,e67903d134039b2452b2a3806e10451491ce768d,flask.py,flask.py,flask.py,"Fixing another article error, in handle_http_exception.","diff --git a/flask.py b/flask.py
index 32a97cbf..abcd08e5 100644
--- a/flask.py
+++ b/flask.py
@@ -1287,7 +1287,7 @@ class Flask(_PackageBoundObject):
         return f
 
     def handle_http_exception(self, e):
-        """"""Handles an HTTP exception.  By default this will invoke the
+        """"""Handles a HTTP exception.  By default this will invoke the
         registered error handlers and fall back to returning the
         exception as response.
 
","diff --git a/flask.py b/flask.py
index 32a97cbf..abcd08e5 100644
--- a/flask.py
+++ b/flask.py
@@ -1287,7 +1287,7 @@ class Flask(_PackageBoundObject):
         return f
 
     def handle_http_exception(self, e):
-        """"""Handles an HTTP exception.  By default this will invoke the
+        """"""Handles a HTTP exception.  By default this will invoke the
         registered error handlers and fall back to returning the
         exception as response.
 
"
e67903d134039b2452b2a3806e10451491ce768d,e7a9df784c9edee7742052aadacc2389bf21230c,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Typo in jQuery pattern docs,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index e9c9f956..397635c7 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -76,7 +76,7 @@ inside a `script` block here where different rules apply.
    In HTML the `script` tag is declared `CDATA` which means that entities
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
-   tags.  ``|tojson`` is kindly enough to do the right thing here and
+   tags.  ``|tojson`` is kind enough to do the right thing here and
    escape slashes for you (``{{ ""</script>""|tojson|safe }}`` is rendered as
    ``""<\/script>""``).
 
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index e9c9f956..397635c7 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -76,7 +76,7 @@ inside a `script` block here where different rules apply.
    In HTML the `script` tag is declared `CDATA` which means that entities
    will not be parsed.  Everything until ``</script>`` is handled as script.
    This also means that there must never be any ``</`` between the script
-   tags.  ``|tojson`` is kindly enough to do the right thing here and
+   tags.  ``|tojson`` is kind enough to do the right thing here and
    escape slashes for you (``{{ ""</script>""|tojson|safe }}`` is rendered as
    ``""<\/script>""``).
 
"
e7a9df784c9edee7742052aadacc2389bf21230c,2fb09d07f29aaacac3afd6b64c997e761a292864,docs/patterns/jquery.rst,docs/patterns/jquery.rst,docs/patterns/jquery.rst,Another typo in jQuery pattern,"diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 397635c7..a97f7ff4 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -150,7 +150,7 @@ explanation of the little bit of code above:
 
 1. ``$(function() { ... })`` specifies code that should run once the
    browser is done loading the basic parts of the page.
-2. ``#('selector')`` selects an element and lets you operate on it.
+2. ``$('selector')`` selects an element and lets you operate on it.
 3. ``element.bind('event', func)`` specifies a function that should run
    when the user clicked on the element.  If that function returns
    `false`, the default behaviour will not kick in (in this case, navigate
","diff --git a/docs/patterns/jquery.rst b/docs/patterns/jquery.rst
index 397635c7..a97f7ff4 100644
--- a/docs/patterns/jquery.rst
+++ b/docs/patterns/jquery.rst
@@ -150,7 +150,7 @@ explanation of the little bit of code above:
 
 1. ``$(function() { ... })`` specifies code that should run once the
    browser is done loading the basic parts of the page.
-2. ``#('selector')`` selects an element and lets you operate on it.
+2. ``$('selector')`` selects an element and lets you operate on it.
 3. ``element.bind('event', func)`` specifies a function that should run
    when the user clicked on the element.  If that function returns
    `false`, the default behaviour will not kick in (in this case, navigate
"
2fb09d07f29aaacac3afd6b64c997e761a292864,7dae84f0027945bac29b45b63fdc0f795a5a813a,docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,docs/deploying/fastcgi.rst,Enhanced the nginx deployment subsection of the documentation with working examples.  'tricky' was changed to 'different' to offer a more neutral tone. 'some' was changed to 'no' and 'not properly' swapped with 'by default' to explain the difference. Configuration allows for static serving of media alongside a FastCGI application in a clean declarative manner. Tested on nginx 0.7.x and 0.8.x,"diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
index 7949cca4..a29664e8 100644
--- a/docs/deploying/fastcgi.rst
+++ b/docs/deploying/fastcgi.rst
@@ -73,26 +73,27 @@ root.
 Configuring nginx
 -----------------
 
-Installing FastCGI applications on nginx is a bit tricky because by default
-some FastCGI parameters are not properly forwarded.
+Installing FastCGI applications on nginx is a bit different because by default
+no FastCGI parameters are forwarded.
 
-A basic FastCGI configuration for nginx looks like this::
+A basic flask FastCGI configuration for nginx looks like this::
 
-    location /yourapplication/ {
+    location = /yourapplication { rewrite ^ /yourapplication/ last; }
+    location /yourapplication { try_files $uri @yourapplication; }
+    location @yourapplication {
         include fastcgi_params;
-        if ($uri ~ ^/yourapplication/(.*)?) {
-            set $path_url $1;
-        }
-        fastcgi_param PATH_INFO $path_url;
-        fastcgi_param SCRIPT_NAME /yourapplication;
+	fastcgi_split_path_info ^(/yourapplication)(.*)$;
+        fastcgi_param PATH_INFO $fastcgi_path_info;
+        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
         fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
     }
 
 This configuration binds the application to `/yourapplication`.  If you want
-to have it in the URL root it's a bit easier because you don't have to figure
+to have it in the URL root it's a bit simpler because you don't have to figure
 out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
 
-    location /yourapplication/ {
+    location / { try_files $uri @yourapplication; }
+    location @yourapplication {
         include fastcgi_params;
         fastcgi_param PATH_INFO $fastcgi_script_name;
         fastcgi_param SCRIPT_NAME """";
","diff --git a/docs/deploying/fastcgi.rst b/docs/deploying/fastcgi.rst
index 7949cca4..a29664e8 100644
--- a/docs/deploying/fastcgi.rst
+++ b/docs/deploying/fastcgi.rst
@@ -73,26 +73,27 @@ root.
 Configuring nginx
 -----------------
 
-Installing FastCGI applications on nginx is a bit tricky because by default
-some FastCGI parameters are not properly forwarded.
+Installing FastCGI applications on nginx is a bit different because by default
+no FastCGI parameters are forwarded.
 
-A basic FastCGI configuration for nginx looks like this::
+A basic flask FastCGI configuration for nginx looks like this::
 
-    location /yourapplication/ {
+    location = /yourapplication { rewrite ^ /yourapplication/ last; }
+    location /yourapplication { try_files $uri @yourapplication; }
+    location @yourapplication {
         include fastcgi_params;
-        if ($uri ~ ^/yourapplication/(.*)?) {
-            set $path_url $1;
-        }
-        fastcgi_param PATH_INFO $path_url;
-        fastcgi_param SCRIPT_NAME /yourapplication;
+	fastcgi_split_path_info ^(/yourapplication)(.*)$;
+        fastcgi_param PATH_INFO $fastcgi_path_info;
+        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
         fastcgi_pass unix:/tmp/yourapplication-fcgi.sock;
     }
 
 This configuration binds the application to `/yourapplication`.  If you want
-to have it in the URL root it's a bit easier because you don't have to figure
+to have it in the URL root it's a bit simpler because you don't have to figure
 out how to calculate `PATH_INFO` and `SCRIPT_NAME`::
 
-    location /yourapplication/ {
+    location / { try_files $uri @yourapplication; }
+    location @yourapplication {
         include fastcgi_params;
         fastcgi_param PATH_INFO $fastcgi_script_name;
         fastcgi_param SCRIPT_NAME """";
"
7dae84f0027945bac29b45b63fdc0f795a5a813a,88a031ab24b0e7e2a5190f9e48f80f2b21aba1a0,flask.py,flask.py,flask.py,"Revert that change, an HTTP is correct from what I know.","diff --git a/flask.py b/flask.py
index abcd08e5..32a97cbf 100644
--- a/flask.py
+++ b/flask.py
@@ -1287,7 +1287,7 @@ class Flask(_PackageBoundObject):
         return f
 
     def handle_http_exception(self, e):
-        """"""Handles a HTTP exception.  By default this will invoke the
+        """"""Handles an HTTP exception.  By default this will invoke the
         registered error handlers and fall back to returning the
         exception as response.
 
","diff --git a/flask.py b/flask.py
index abcd08e5..32a97cbf 100644
--- a/flask.py
+++ b/flask.py
@@ -1287,7 +1287,7 @@ class Flask(_PackageBoundObject):
         return f
 
     def handle_http_exception(self, e):
-        """"""Handles a HTTP exception.  By default this will invoke the
+        """"""Handles an HTTP exception.  By default this will invoke the
         registered error handlers and fall back to returning the
         exception as response.
 
"
88a031ab24b0e7e2a5190f9e48f80f2b21aba1a0,e3de5e6ca39e024874cb465c9047b65373d73b64,docs/extensiondev.rst,docs/extensiondev.rst,docs/extensiondev.rst,Typo in extension development docs.,"diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
index ca8a4ea4..b0eff526 100644
--- a/docs/extensiondev.rst
+++ b/docs/extensiondev.rst
@@ -222,7 +222,7 @@ Either way you can use the database from the views like this::
 
     @app.route('/')
     def show_all():
-        cur = g.sqlite_db.cursor()
+        cur = g.sqlite3_db.cursor()
         cur.execute(...)
 
 But how would you open a database connection from outside a view function?
","diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
index ca8a4ea4..b0eff526 100644
--- a/docs/extensiondev.rst
+++ b/docs/extensiondev.rst
@@ -222,7 +222,7 @@ Either way you can use the database from the views like this::
 
     @app.route('/')
     def show_all():
-        cur = g.sqlite_db.cursor()
+        cur = g.sqlite3_db.cursor()
         cur.execute(...)
 
 But how would you open a database connection from outside a view function?
"
e3de5e6ca39e024874cb465c9047b65373d73b64,51a5add86d0fa9889b69d51d45d06a2ac4c5df9f,flask.py,flask.py,flask.py,Fix inconsistent capitalisation and punctuation in attribute docstrings,"diff --git a/flask.py b/flask.py
index 32a97cbf..81cd582f 100644
--- a/flask.py
+++ b/flask.py
@@ -448,11 +448,11 @@ else:
 class _PackageBoundObject(object):
 
     def __init__(self, import_name):
-        #: the name of the package or module.  Do not change this once
+        #: The name of the package or module.  Do not change this once
         #: it was set by the constructor.
         self.import_name = import_name
 
-        #: where is the app root located?
+        #: Where is the app root located?
         self.root_path = _get_package_path(self.import_name)
 
     def open_resource(self, resource):
@@ -788,20 +788,20 @@ class Flask(_PackageBoundObject):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects.  See :class:`~flask.Request`
+    #: The class that is used for request objects.  See :class:`~flask.Request`
     #: for more information.
     request_class = Request
 
-    #: the class that is used for response objects.  See
+    #: The class that is used for response objects.  See
     #: :class:`~flask.Response` for more information.
     response_class = Response
 
-    #: path for the static files.  If you don't want to use static files
+    #: Path for the static files.  If you don't want to use static files
     #: you can set this value to `None` in which case no URL rule is added
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
-    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: The debug flag.  Set this to `True` to enable debugging of the
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
@@ -810,7 +810,7 @@ class Flask(_PackageBoundObject):
     #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
-    #: if a secret key is set, cryptographic components can use this to
+    #: If a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
     #:
@@ -818,7 +818,7 @@ class Flask(_PackageBoundObject):
     #: `SECRET_KEY` configuration key.  Defaults to `None`.
     secret_key = ConfigAttribute('SECRET_KEY')
 
-    #: The secure cookie uses this for the name of the session cookie
+    #: The secure cookie uses this for the name of the session cookie.
     #:
     #: This attribute can also be configured from the config with the
     #: `SESSION_COOKIE_NAME` configuration key.  Defaults to ``'session'``
@@ -843,13 +843,13 @@ class Flask(_PackageBoundObject):
     #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
-    #: the name of the logger to use.  By default the logger name is the
+    #: The name of the logger to use.  By default the logger name is the
     #: package name passed to the constructor.
     #:
     #: .. versionadded:: 0.4
     logger_name = ConfigAttribute('LOGGER_NAME')
 
-    #: the logging format used for the debug logger.  This is only used when
+    #: The logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
     #:
@@ -861,13 +861,13 @@ class Flask(_PackageBoundObject):
         '-' * 80
     )
 
-    #: options that are passed directly to the Jinja2 environment
+    #: Options that are passed directly to the Jinja2 environment.
     jinja_options = ImmutableDict(
         autoescape=True,
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    #: default configuration parameters
+    #: Default configuration parameters.
     default_config = ImmutableDict({
         'DEBUG':                                False,
         'SECRET_KEY':                           None,
@@ -880,29 +880,29 @@ class Flask(_PackageBoundObject):
     def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: The configuration dictionary as :class:`Config`.  This behaves
         #: exactly like a regular dictionary but supports additional methods
         #: to load a config from files.
         self.config = Config(self.root_path, self.default_config)
 
-        #: prepare the deferred setup of the logger
+        #: Prepare the deferred setup of the logger.
         self._logger = None
         self.logger_name = self.import_name
 
-        #: a dictionary of all view functions registered.  The keys will
+        #: A dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
         #: to register a view function, use the :meth:`route` decorator.
         self.view_functions = {}
 
-        #: a dictionary of all registered error handlers.  The key is
+        #: A dictionary of all registered error handlers.  The key is
         #: be the error code as integer, the value the function that
         #: should handle that error.
         #: To register a error handler, use the :meth:`errorhandler`
         #: decorator.
         self.error_handlers = {}
 
-        #: a dictionary with lists of functions that should be called at the
+        #: A dictionary with lists of functions that should be called at the
         #: beginning of the request.  The key of the dictionary is the name of
         #: the module this function is active for, `None` for all requests.
         #: This can for example be used to open database connections or
@@ -910,7 +910,7 @@ class Flask(_PackageBoundObject):
         #: function here, use the :meth:`before_request` decorator.
         self.before_request_funcs = {}
 
-        #: a dictionary with lists of functions that should be called after
+        #: A dictionary with lists of functions that should be called after
         #: each request.  The key of the dictionary is the name of the module
         #: this function is active for, `None` for all requests.  This can for
         #: example be used to open database connections or getting hold of the
@@ -918,7 +918,7 @@ class Flask(_PackageBoundObject):
         #: :meth:`before_request` decorator.
         self.after_request_funcs = {}
 
-        #: a dictionary with list of functions that are called without argument
+        #: A dictionary with list of functions that are called without argument
         #: to populate the template context.  They key of the dictionary is the
         #: name of the module this function is active for, `None` for all
         #: requests.  Each returns a dictionary that the template context is
@@ -928,7 +928,7 @@ class Flask(_PackageBoundObject):
             None: [_default_template_ctx_processor]
         }
 
-        #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
+        #: The :class:`~werkzeug.routing.Map` for this instance.  You can use
         #: this to change the routing converters after the class was created
         #: but before any routes are connected.  Example::
         #:
@@ -956,7 +956,7 @@ class Flask(_PackageBoundObject):
                 self.static_path: target
             })
 
-        #: the Jinja2 environment.  It is created from the
+        #: The Jinja2 environment.  It is created from the
         #: :attr:`jinja_options` and the loader that is returned
         #: by the :meth:`create_jinja_loader` function.
         self.jinja_env = Environment(loader=self.create_jinja_loader(),
","diff --git a/flask.py b/flask.py
index 32a97cbf..81cd582f 100644
--- a/flask.py
+++ b/flask.py
@@ -448,11 +448,11 @@ else:
 class _PackageBoundObject(object):
 
     def __init__(self, import_name):
-        #: the name of the package or module.  Do not change this once
+        #: The name of the package or module.  Do not change this once
         #: it was set by the constructor.
         self.import_name = import_name
 
-        #: where is the app root located?
+        #: Where is the app root located?
         self.root_path = _get_package_path(self.import_name)
 
     def open_resource(self, resource):
@@ -788,20 +788,20 @@ class Flask(_PackageBoundObject):
         app = Flask(__name__)
     """"""
 
-    #: the class that is used for request objects.  See :class:`~flask.Request`
+    #: The class that is used for request objects.  See :class:`~flask.Request`
     #: for more information.
     request_class = Request
 
-    #: the class that is used for response objects.  See
+    #: The class that is used for response objects.  See
     #: :class:`~flask.Response` for more information.
     response_class = Response
 
-    #: path for the static files.  If you don't want to use static files
+    #: Path for the static files.  If you don't want to use static files
     #: you can set this value to `None` in which case no URL rule is added
     #: and the development server will no longer serve any static files.
     static_path = '/static'
 
-    #: the debug flag.  Set this to `True` to enable debugging of the
+    #: The debug flag.  Set this to `True` to enable debugging of the
     #: application.  In debug mode the debugger will kick in when an unhandled
     #: exception ocurrs and the integrated server will automatically reload
     #: the application if changes in the code are detected.
@@ -810,7 +810,7 @@ class Flask(_PackageBoundObject):
     #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
-    #: if a secret key is set, cryptographic components can use this to
+    #: If a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
     #:
@@ -818,7 +818,7 @@ class Flask(_PackageBoundObject):
     #: `SECRET_KEY` configuration key.  Defaults to `None`.
     secret_key = ConfigAttribute('SECRET_KEY')
 
-    #: The secure cookie uses this for the name of the session cookie
+    #: The secure cookie uses this for the name of the session cookie.
     #:
     #: This attribute can also be configured from the config with the
     #: `SESSION_COOKIE_NAME` configuration key.  Defaults to ``'session'``
@@ -843,13 +843,13 @@ class Flask(_PackageBoundObject):
     #: `USE_X_SENDFILE` configuration key.  Defaults to `False`.
     use_x_sendfile = ConfigAttribute('USE_X_SENDFILE')
 
-    #: the name of the logger to use.  By default the logger name is the
+    #: The name of the logger to use.  By default the logger name is the
     #: package name passed to the constructor.
     #:
     #: .. versionadded:: 0.4
     logger_name = ConfigAttribute('LOGGER_NAME')
 
-    #: the logging format used for the debug logger.  This is only used when
+    #: The logging format used for the debug logger.  This is only used when
     #: the application is in debug mode, otherwise the attached logging
     #: handler does the formatting.
     #:
@@ -861,13 +861,13 @@ class Flask(_PackageBoundObject):
         '-' * 80
     )
 
-    #: options that are passed directly to the Jinja2 environment
+    #: Options that are passed directly to the Jinja2 environment.
     jinja_options = ImmutableDict(
         autoescape=True,
         extensions=['jinja2.ext.autoescape', 'jinja2.ext.with_']
     )
 
-    #: default configuration parameters
+    #: Default configuration parameters.
     default_config = ImmutableDict({
         'DEBUG':                                False,
         'SECRET_KEY':                           None,
@@ -880,29 +880,29 @@ class Flask(_PackageBoundObject):
     def __init__(self, import_name):
         _PackageBoundObject.__init__(self, import_name)
 
-        #: the configuration dictionary as :class:`Config`.  This behaves
+        #: The configuration dictionary as :class:`Config`.  This behaves
         #: exactly like a regular dictionary but supports additional methods
         #: to load a config from files.
         self.config = Config(self.root_path, self.default_config)
 
-        #: prepare the deferred setup of the logger
+        #: Prepare the deferred setup of the logger.
         self._logger = None
         self.logger_name = self.import_name
 
-        #: a dictionary of all view functions registered.  The keys will
+        #: A dictionary of all view functions registered.  The keys will
         #: be function names which are also used to generate URLs and
         #: the values are the function objects themselves.
         #: to register a view function, use the :meth:`route` decorator.
         self.view_functions = {}
 
-        #: a dictionary of all registered error handlers.  The key is
+        #: A dictionary of all registered error handlers.  The key is
         #: be the error code as integer, the value the function that
         #: should handle that error.
         #: To register a error handler, use the :meth:`errorhandler`
         #: decorator.
         self.error_handlers = {}
 
-        #: a dictionary with lists of functions that should be called at the
+        #: A dictionary with lists of functions that should be called at the
         #: beginning of the request.  The key of the dictionary is the name of
         #: the module this function is active for, `None` for all requests.
         #: This can for example be used to open database connections or
@@ -910,7 +910,7 @@ class Flask(_PackageBoundObject):
         #: function here, use the :meth:`before_request` decorator.
         self.before_request_funcs = {}
 
-        #: a dictionary with lists of functions that should be called after
+        #: A dictionary with lists of functions that should be called after
         #: each request.  The key of the dictionary is the name of the module
         #: this function is active for, `None` for all requests.  This can for
         #: example be used to open database connections or getting hold of the
@@ -918,7 +918,7 @@ class Flask(_PackageBoundObject):
         #: :meth:`before_request` decorator.
         self.after_request_funcs = {}
 
-        #: a dictionary with list of functions that are called without argument
+        #: A dictionary with list of functions that are called without argument
         #: to populate the template context.  They key of the dictionary is the
         #: name of the module this function is active for, `None` for all
         #: requests.  Each returns a dictionary that the template context is
@@ -928,7 +928,7 @@ class Flask(_PackageBoundObject):
             None: [_default_template_ctx_processor]
         }
 
-        #: the :class:`~werkzeug.routing.Map` for this instance.  You can use
+        #: The :class:`~werkzeug.routing.Map` for this instance.  You can use
         #: this to change the routing converters after the class was created
         #: but before any routes are connected.  Example::
         #:
@@ -956,7 +956,7 @@ class Flask(_PackageBoundObject):
                 self.static_path: target
             })
 
-        #: the Jinja2 environment.  It is created from the
+        #: The Jinja2 environment.  It is created from the
         #: :attr:`jinja_options` and the loader that is returned
         #: by the :meth:`create_jinja_loader` function.
         self.jinja_env = Environment(loader=self.create_jinja_loader(),
"
51a5add86d0fa9889b69d51d45d06a2ac4c5df9f,06ed3e1e8888b73794876d39a53382eb45a54fe2,flask.py,flask.py,flask.py,Misleading templates path example in docs for open_resource,"diff --git a/flask.py b/flask.py
index 81cd582f..ca69a056 100644
--- a/flask.py
+++ b/flask.py
@@ -463,7 +463,7 @@ class _PackageBoundObject(object):
             /schemal.sql
             /static
                 /style.css
-            /template
+            /templates
                 /layout.html
                 /index.html
 
","diff --git a/flask.py b/flask.py
index 81cd582f..ca69a056 100644
--- a/flask.py
+++ b/flask.py
@@ -463,7 +463,7 @@ class _PackageBoundObject(object):
             /schemal.sql
             /static
                 /style.css
-            /template
+            /templates
                 /layout.html
                 /index.html
 
"
06ed3e1e8888b73794876d39a53382eb45a54fe2,f5fb4576577cbedcedba9eb16d9fdace18c9292c,CHANGES,CHANGES,CHANGES,Added TESTING flag.  This fixes #58.,"diff --git a/CHANGES b/CHANGES
index 0eb34dc1..1dca6ee6 100644
--- a/CHANGES
+++ b/CHANGES
@@ -18,6 +18,7 @@ Release date to be announced, codename to be selected.
   requests that do not pop the request stack for testing.
 - because the Python standard library caches loggers, the name of
   the logger is configurable now to better support unittests.
+- added `TESTING` switch that can activate unittesting helpers.
 
 Version 0.3.1
 -------------
","diff --git a/CHANGES b/CHANGES
index 0eb34dc1..1dca6ee6 100644
--- a/CHANGES
+++ b/CHANGES
@@ -18,6 +18,7 @@ Release date to be announced, codename to be selected.
   requests that do not pop the request stack for testing.
 - because the Python standard library caches loggers, the name of
   the logger is configurable now to better support unittests.
+- added `TESTING` switch that can activate unittesting helpers.
 
 Version 0.3.1
 -------------
"
06ed3e1e8888b73794876d39a53382eb45a54fe2,f5fb4576577cbedcedba9eb16d9fdace18c9292c,docs/config.rst,docs/config.rst,docs/config.rst,Added TESTING flag.  This fixes #58.,"diff --git a/docs/config.rst b/docs/config.rst
index de79cabc..e057ba4d 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -53,6 +53,7 @@ The following configuration values are used internally by Flask:
 
 =============================== =========================================
 ``DEBUG``                       enable/disable debug mode
+``TESTING``                     enable/disable testing mode
 ``SECRET_KEY``                  the secret key
 ``SESSION_COOKIE_NAME``         the name of the session cookie
 ``PERMANENT_SESSION_LIFETIME``  the lifetime of a permanent session as
","diff --git a/docs/config.rst b/docs/config.rst
index de79cabc..e057ba4d 100644
--- a/docs/config.rst
+++ b/docs/config.rst
@@ -53,6 +53,7 @@ The following configuration values are used internally by Flask:
 
 =============================== =========================================
 ``DEBUG``                       enable/disable debug mode
+``TESTING``                     enable/disable testing mode
 ``SECRET_KEY``                  the secret key
 ``SESSION_COOKIE_NAME``         the name of the session cookie
 ``PERMANENT_SESSION_LIFETIME``  the lifetime of a permanent session as
"
06ed3e1e8888b73794876d39a53382eb45a54fe2,f5fb4576577cbedcedba9eb16d9fdace18c9292c,flask.py,flask.py,flask.py,Added TESTING flag.  This fixes #58.,"diff --git a/flask.py b/flask.py
index ca69a056..c4656cdb 100644
--- a/flask.py
+++ b/flask.py
@@ -810,6 +810,15 @@ class Flask(_PackageBoundObject):
     #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
+    #: The testing flask.  Set this to `True` to enable the test mode of
+    #: Flask extensions (and in the future probably also Flask itself).
+    #: For example this might activate unittest helpers that have an
+    #: additional runtime cost which should not be enabled by default.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `TESTING` configuration key.  Defaults to `False`.
+    testing = ConfigAttribute('TESTING')
+
     #: If a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
@@ -870,6 +879,7 @@ class Flask(_PackageBoundObject):
     #: Default configuration parameters.
     default_config = ImmutableDict({
         'DEBUG':                                False,
+        'TESTING':                              False,
         'SECRET_KEY':                           None,
         'SESSION_COOKIE_NAME':                  'session',
         'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
","diff --git a/flask.py b/flask.py
index ca69a056..c4656cdb 100644
--- a/flask.py
+++ b/flask.py
@@ -810,6 +810,15 @@ class Flask(_PackageBoundObject):
     #: configuration key.  Defaults to `False`.
     debug = ConfigAttribute('DEBUG')
 
+    #: The testing flask.  Set this to `True` to enable the test mode of
+    #: Flask extensions (and in the future probably also Flask itself).
+    #: For example this might activate unittest helpers that have an
+    #: additional runtime cost which should not be enabled by default.
+    #:
+    #: This attribute can also be configured from the config with the
+    #: `TESTING` configuration key.  Defaults to `False`.
+    testing = ConfigAttribute('TESTING')
+
     #: If a secret key is set, cryptographic components can use this to
     #: sign cookies and other things.  Set this to a complex random value
     #: when you want to use the secure cookie for instance.
@@ -870,6 +879,7 @@ class Flask(_PackageBoundObject):
     #: Default configuration parameters.
     default_config = ImmutableDict({
         'DEBUG':                                False,
+        'TESTING':                              False,
         'SECRET_KEY':                           None,
         'SESSION_COOKIE_NAME':                  'session',
         'PERMANENT_SESSION_LIFETIME':           timedelta(days=31),
"
f5fb4576577cbedcedba9eb16d9fdace18c9292c,ca0aa9533f7c3a925f1115581872793bdf34bb34,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,"Added an HTML FAQ document, first draft.","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 9a3ff5a8..2422d12e 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -40,6 +40,7 @@ Design notes, legal information and changelog are here for the interested.
    :maxdepth: 2
 
    design
+   htmlfaq
    extensiondev
    license
    upgrading
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 9a3ff5a8..2422d12e 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -40,6 +40,7 @@ Design notes, legal information and changelog are here for the interested.
    :maxdepth: 2
 
    design
+   htmlfaq
    extensiondev
    license
    upgrading
"
f5fb4576577cbedcedba9eb16d9fdace18c9292c,ca0aa9533f7c3a925f1115581872793bdf34bb34,docs/htmlfaq.rst,,docs/htmlfaq.rst,"Added an HTML FAQ document, first draft.","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
new file mode 100644
index 00000000..b92beb77
--- /dev/null
+++ b/docs/htmlfaq.rst
@@ -0,0 +1,162 @@
+HTML/XHTML FAQ
+==============
+
+The Flask documentation and example applications are using HTML5.  You
+will notice that in many situations when end tags are optional they are
+not used to keep the HTML cleaner and also faster to load.  Because there
+is a lot of confusion about HTML and XHTML out there this document tries
+to answer some of them.
+
+
+History on XHTML
+----------------
+
+For a while it looked like HTML was about to be replaced by XHTML.
+However barely any websites on the internet are actually real XHTML (which
+means XHTML processed with XML rules).  There are a couple of reasons why
+this is the case.  It mostly has to do with Internet Explorer which does
+not accept the XHTML mimetype to switch the browser into XML mode.
+However this is really easy to bypass but barely anyone does that.  This
+probably has to do with the fact that XHTML is really painful.
+
+Why is it painful?  XML has very strict errorhandling.  On a parsing error
+the browser is supposed to show the user an ugly error message.  Most of
+the (X)HTML generation on the web is based on non-XML template engines
+(such as Jinja, the one used in Flask) which do not protect you from
+accidentally creating invalid HTML.  There are XML based template engines
+but they usually come with a larger runtime overhead and are not as
+straightforward to use because they have to obey XML rules.
+
+Now the majority of users assumed they were using XHTML though.  The
+reasons for that is that they sticked an XHTML doctype on top of the
+document and self-closed all necessary tags (``<br>`` becomes ``<br/>`` or
+``<br></br>`` in XHTML).  However even if the document properly validates
+as XHTML there are still other things to keep in mind.
+
+XHTML also changes the way you work with JavaScript because you now have
+to use the namespaced DOM interface with the XHTML namespace to query for
+HTML elements.
+
+History of HTML5
+----------------
+
+HTML5 was started in 2004 under the name Web Applications 1.0 by the
+WHATWG (Apple, Mozilla, Opera) and the idea was to write a new and
+improved specification of HTML based on actual browser behaviour instead
+of behaviour that exists on the paper but could not be implemented
+because of backwards compatibility with the already existing web.
+
+For example in theory HTML4 ``<title/Hello/`` means exactly the same as
+``<title>Hello</title>`` but because existing websites are using
+pseudo-XHTML which uses the Slash in different ways, this could not be
+implemented properly.
+
+In 2007 the specification was adopted as the basis of a new HTML
+specification under the umbrella of the W3C.  Currently it looks like
+XHTML is losing traction, the XHTML 2 working group was disbanded and
+HTML5 is being implemented by all major browser vendors.
+
+HTML versus XHTML
+-----------------
+
+The following table gives you a quick overview of features available in
+HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
+was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
+
++-----------------------------------------+----------+----------+----------+
+|                                         | HTML4.01 | XHTML1.1 | HTML5    |
++=========================================+==========+==========+==========+
+| ``<tag/value/`` == ``<tag>value</tag>`` | |Y| [1]_ | |N|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| ``<br/>`` supported                     | |N|      | |Y|      | |Y| [2]_ |
++-----------------------------------------+----------+----------+----------+
+| ``<script/>`` supported                 | |N|      | |Y|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| might be served as `text/html`          | |Y|      | |N| [3]_ | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| might be served as                      | |N|      | |Y|      | |N|      |
+| `application/xml+html`                  |          |          |          |
++-----------------------------------------+----------+----------+----------+
+| strict error handling                   | |N|      | |Y|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| inline SVG                              | |N|      | |Y|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| inline MathML                           | |N|      | |Y|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| ``<video>`` tag                         | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| ``<audio>`` tag                         | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| New semantical tags like ``<article>``  | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+
+.. [1] Obscure feature inherited from SGML not supported by browsers
+.. [2] For compatibility with XHTML generating server code for some
+       tags such as ``<br>``.  Should not be used.
+.. [3] XHTML 1.0 is the last XHTML standard that allows to be served
+       as `text/html` for backwards compatibility reasons.
+
+.. |Y| image:: _static/yes.png
+       :alt: Yes
+.. |N| image:: _static/no.png
+       :alt: No
+
+What does Strict Mean?
+----------------------
+
+HTML5 has strictly defined parsing rules, but it also specifies how a
+browser should react to parsing errors.  Some things people stumble upon
+with HTML5 and older HTML standards is that browsers will accept some
+things that still create the expected output even though it looks wrong
+(eg: certain tags are missing or are not closed).
+
+Some of that is caused by the error handling browsers use if they
+encounter a markup error, others are actually specified.  The following
+things are optional in HTML5 by standard and have to be supported by
+browsers (and are supported):
+
+-   ``<html>``, ``<head>`` or ``<body>``
+-   The closing tags for ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
+    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, ``<tfoot>``.
+-   quotes for attribtues if they contain no whitespace and some
+    special chars that require quoting.
+
+This means the following piece of HTML5 is perfectly valid:
+
+.. sourcecode:: html
+
+    <!doctype html>
+    <title>Hello HTML5</title>
+    <div class=header>
+      <h1>Hello HTML5</h1>
+      <p class=tagline>HTML5 is awesome
+    </div>
+    <ul class=nav>
+      <li><a href=/index>Index</a>
+      <li><a href=/downloads>Downloads</a>
+      <li><a href=/about>About</a>
+    </ul>
+    <div class=body>
+      <h2>HTML5 is probably the future</h2>
+      <p>
+        There might be some other things around but in terms of
+        browser vendor support, HTML5 is hard to beat.
+      <dl>
+        <dt>Key 1
+        <dd>Value 1
+        <dt>Key 2
+        <dd>Value 2
+      </dl>
+    </div>
+
+
+What should be used?
+--------------------
+
+Currently the answer is HTML5.  There are very few reasons to use XHTML
+with the latest development.  There are some companies successfully using
+actual XML and XSLT on the client side with fallbacks to server side HTML4
+generation for browsers not supporting XML and XSLT but but it's not very
+common.  Now that MathML and SVG landed in HTML5 and with the sad support
+for XHTML in Internet Explorer and many JavaScript libraries for most
+applications no reasons remain to use XHTML.
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
new file mode 100644
index 00000000..b92beb77
--- /dev/null
+++ b/docs/htmlfaq.rst
@@ -0,0 +1,162 @@
+HTML/XHTML FAQ
+==============
+
+The Flask documentation and example applications are using HTML5.  You
+will notice that in many situations when end tags are optional they are
+not used to keep the HTML cleaner and also faster to load.  Because there
+is a lot of confusion about HTML and XHTML out there this document tries
+to answer some of them.
+
+
+History on XHTML
+----------------
+
+For a while it looked like HTML was about to be replaced by XHTML.
+However barely any websites on the internet are actually real XHTML (which
+means XHTML processed with XML rules).  There are a couple of reasons why
+this is the case.  It mostly has to do with Internet Explorer which does
+not accept the XHTML mimetype to switch the browser into XML mode.
+However this is really easy to bypass but barely anyone does that.  This
+probably has to do with the fact that XHTML is really painful.
+
+Why is it painful?  XML has very strict errorhandling.  On a parsing error
+the browser is supposed to show the user an ugly error message.  Most of
+the (X)HTML generation on the web is based on non-XML template engines
+(such as Jinja, the one used in Flask) which do not protect you from
+accidentally creating invalid HTML.  There are XML based template engines
+but they usually come with a larger runtime overhead and are not as
+straightforward to use because they have to obey XML rules.
+
+Now the majority of users assumed they were using XHTML though.  The
+reasons for that is that they sticked an XHTML doctype on top of the
+document and self-closed all necessary tags (``<br>`` becomes ``<br/>`` or
+``<br></br>`` in XHTML).  However even if the document properly validates
+as XHTML there are still other things to keep in mind.
+
+XHTML also changes the way you work with JavaScript because you now have
+to use the namespaced DOM interface with the XHTML namespace to query for
+HTML elements.
+
+History of HTML5
+----------------
+
+HTML5 was started in 2004 under the name Web Applications 1.0 by the
+WHATWG (Apple, Mozilla, Opera) and the idea was to write a new and
+improved specification of HTML based on actual browser behaviour instead
+of behaviour that exists on the paper but could not be implemented
+because of backwards compatibility with the already existing web.
+
+For example in theory HTML4 ``<title/Hello/`` means exactly the same as
+``<title>Hello</title>`` but because existing websites are using
+pseudo-XHTML which uses the Slash in different ways, this could not be
+implemented properly.
+
+In 2007 the specification was adopted as the basis of a new HTML
+specification under the umbrella of the W3C.  Currently it looks like
+XHTML is losing traction, the XHTML 2 working group was disbanded and
+HTML5 is being implemented by all major browser vendors.
+
+HTML versus XHTML
+-----------------
+
+The following table gives you a quick overview of features available in
+HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
+was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
+
++-----------------------------------------+----------+----------+----------+
+|                                         | HTML4.01 | XHTML1.1 | HTML5    |
++=========================================+==========+==========+==========+
+| ``<tag/value/`` == ``<tag>value</tag>`` | |Y| [1]_ | |N|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| ``<br/>`` supported                     | |N|      | |Y|      | |Y| [2]_ |
++-----------------------------------------+----------+----------+----------+
+| ``<script/>`` supported                 | |N|      | |Y|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| might be served as `text/html`          | |Y|      | |N| [3]_ | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| might be served as                      | |N|      | |Y|      | |N|      |
+| `application/xml+html`                  |          |          |          |
++-----------------------------------------+----------+----------+----------+
+| strict error handling                   | |N|      | |Y|      | |N|      |
++-----------------------------------------+----------+----------+----------+
+| inline SVG                              | |N|      | |Y|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| inline MathML                           | |N|      | |Y|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| ``<video>`` tag                         | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| ``<audio>`` tag                         | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+| New semantical tags like ``<article>``  | |N|      | |N|      | |Y|      |
++-----------------------------------------+----------+----------+----------+
+
+.. [1] Obscure feature inherited from SGML not supported by browsers
+.. [2] For compatibility with XHTML generating server code for some
+       tags such as ``<br>``.  Should not be used.
+.. [3] XHTML 1.0 is the last XHTML standard that allows to be served
+       as `text/html` for backwards compatibility reasons.
+
+.. |Y| image:: _static/yes.png
+       :alt: Yes
+.. |N| image:: _static/no.png
+       :alt: No
+
+What does Strict Mean?
+----------------------
+
+HTML5 has strictly defined parsing rules, but it also specifies how a
+browser should react to parsing errors.  Some things people stumble upon
+with HTML5 and older HTML standards is that browsers will accept some
+things that still create the expected output even though it looks wrong
+(eg: certain tags are missing or are not closed).
+
+Some of that is caused by the error handling browsers use if they
+encounter a markup error, others are actually specified.  The following
+things are optional in HTML5 by standard and have to be supported by
+browsers (and are supported):
+
+-   ``<html>``, ``<head>`` or ``<body>``
+-   The closing tags for ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
+    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, ``<tfoot>``.
+-   quotes for attribtues if they contain no whitespace and some
+    special chars that require quoting.
+
+This means the following piece of HTML5 is perfectly valid:
+
+.. sourcecode:: html
+
+    <!doctype html>
+    <title>Hello HTML5</title>
+    <div class=header>
+      <h1>Hello HTML5</h1>
+      <p class=tagline>HTML5 is awesome
+    </div>
+    <ul class=nav>
+      <li><a href=/index>Index</a>
+      <li><a href=/downloads>Downloads</a>
+      <li><a href=/about>About</a>
+    </ul>
+    <div class=body>
+      <h2>HTML5 is probably the future</h2>
+      <p>
+        There might be some other things around but in terms of
+        browser vendor support, HTML5 is hard to beat.
+      <dl>
+        <dt>Key 1
+        <dd>Value 1
+        <dt>Key 2
+        <dd>Value 2
+      </dl>
+    </div>
+
+
+What should be used?
+--------------------
+
+Currently the answer is HTML5.  There are very few reasons to use XHTML
+with the latest development.  There are some companies successfully using
+actual XML and XSLT on the client side with fallbacks to server side HTML4
+generation for browsers not supporting XML and XSLT but but it's not very
+common.  Now that MathML and SVG landed in HTML5 and with the sad support
+for XHTML in Internet Explorer and many JavaScript libraries for most
+applications no reasons remain to use XHTML.
"
ca0aa9533f7c3a925f1115581872793bdf34bb34,235d693bfc5633aae310ab3dc35e86c8892a0b2b,docs/_themes,docs/_themes,docs/_themes,Fixed tabularcolumns,"diff --git a/docs/_themes b/docs/_themes
index 77a1db55..ec7aaaae 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 77a1db551aa956069ff4408b6c05814d86b0dc0d
+Subproject commit ec7aaaae18f8b874e5e8cbb953aaba1580cb8d70
","diff --git a/docs/_themes b/docs/_themes
index 77a1db55..ec7aaaae 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit 77a1db551aa956069ff4408b6c05814d86b0dc0d
+Subproject commit ec7aaaae18f8b874e5e8cbb953aaba1580cb8d70
"
ca0aa9533f7c3a925f1115581872793bdf34bb34,235d693bfc5633aae310ab3dc35e86c8892a0b2b,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,Fixed tabularcolumns,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index b92beb77..21b41b2f 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -63,6 +63,8 @@ The following table gives you a quick overview of features available in
 HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
 was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 
+.. tabularcolumns:: |p{9cm}|p{2cm}|p{2cm}|p{2cm}|
+
 +-----------------------------------------+----------+----------+----------+
 |                                         | HTML4.01 | XHTML1.1 | HTML5    |
 +=========================================+==========+==========+==========+
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index b92beb77..21b41b2f 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -63,6 +63,8 @@ The following table gives you a quick overview of features available in
 HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
 was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 
+.. tabularcolumns:: |p{9cm}|p{2cm}|p{2cm}|p{2cm}|
+
 +-----------------------------------------+----------+----------+----------+
 |                                         | HTML4.01 | XHTML1.1 | HTML5    |
 +=========================================+==========+==========+==========+
"
235d693bfc5633aae310ab3dc35e86c8892a0b2b,5a5a4a85bf1cfe783e7009d463aa16368dd5c92f,AUTHORS,AUTHORS,AUTHORS,Applied leafstorm's html5faq patch,"diff --git a/AUTHORS b/AUTHORS
index e4f32ace..c3c0e13b 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -16,6 +16,7 @@ Patches and Suggestions
 - Justin Quick
 - Kenneth Reitz
 - Marian Sigler
+- Matthew Frazier
 - Ron DuPlain
 - Sebastien Estienne
 - Simon Sapin
","diff --git a/AUTHORS b/AUTHORS
index e4f32ace..c3c0e13b 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -16,6 +16,7 @@ Patches and Suggestions
 - Justin Quick
 - Kenneth Reitz
 - Marian Sigler
+- Matthew Frazier
 - Ron DuPlain
 - Sebastien Estienne
 - Simon Sapin
"
235d693bfc5633aae310ab3dc35e86c8892a0b2b,5a5a4a85bf1cfe783e7009d463aa16368dd5c92f,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,Applied leafstorm's html5faq patch,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 21b41b2f..2127afef 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -2,66 +2,75 @@ HTML/XHTML FAQ
 ==============
 
 The Flask documentation and example applications are using HTML5.  You
-will notice that in many situations when end tags are optional they are
-not used to keep the HTML cleaner and also faster to load.  Because there
-is a lot of confusion about HTML and XHTML out there this document tries
-to answer some of them.
+may notice that in many situations, when end tags are optional they are
+not used, so that the HTML is cleaner and faster to load.  Because there
+is much confusion about HTML and XHTML among developers, this document tries
+to answer some of the major questions.
 
 
-History on XHTML
+History of XHTML
 ----------------
 
-For a while it looked like HTML was about to be replaced by XHTML.
-However barely any websites on the internet are actually real XHTML (which
-means XHTML processed with XML rules).  There are a couple of reasons why
-this is the case.  It mostly has to do with Internet Explorer which does
-not accept the XHTML mimetype to switch the browser into XML mode.
-However this is really easy to bypass but barely anyone does that.  This
-probably has to do with the fact that XHTML is really painful.
-
-Why is it painful?  XML has very strict errorhandling.  On a parsing error
-the browser is supposed to show the user an ugly error message.  Most of
+For a while, it appeared that HTML was about to be replaced by XHTML.
+However, barely any websites on the Internet are actual XHTML (which is
+HTML processed using XML rules).  There are a couple of major reasons
+why this is the case.  One of them is Internet Explorer's lack of proper
+XHTML support. The XHTML spec states that XHTML must be served with the MIME
+type `application/xhtml+xml`, but Internet Explorer refuses to read files
+with that MIME type.
+While it is relatively easy to configure Web servers to serve XHTML properly,
+few people do.  This is likely because properly using XHTML can be quite
+painful.
+
+One of the most important causes of pain is XML's draconian (strict and
+ruthless) error handling.  When an XML parsing error is encountered,
+the browser is supposed to show the user an ugly error message, instead
+of attempting to recover from the error and display what it can.  Most of
 the (X)HTML generation on the web is based on non-XML template engines
 (such as Jinja, the one used in Flask) which do not protect you from
-accidentally creating invalid HTML.  There are XML based template engines
-but they usually come with a larger runtime overhead and are not as
-straightforward to use because they have to obey XML rules.
-
-Now the majority of users assumed they were using XHTML though.  The
-reasons for that is that they sticked an XHTML doctype on top of the
-document and self-closed all necessary tags (``<br>`` becomes ``<br/>`` or
-``<br></br>`` in XHTML).  However even if the document properly validates
-as XHTML there are still other things to keep in mind.
-
-XHTML also changes the way you work with JavaScript because you now have
-to use the namespaced DOM interface with the XHTML namespace to query for
-HTML elements.
+accidentally creating invalid XHTML.  There are XML based template engines,
+such as Kid and the popular Genshi, but they often come with a larger
+runtime overhead and, are not as straightforward to use because they have
+to obey XML rules.
+
+The majority of users, however, assumed they were properly using XHTML.
+They wrote an XHTML doctype at the top of the document and self-closed all
+the necessary tags (``<br>`` becomes ``<br/>`` or ``<br></br>`` in XHTML).
+However, even if the document properly validates as XHTML, what really
+determines XHTML/HTML processing in browsers is the MIME type, which as
+said before is often not set properly. So the valid XHTML was being treated
+as invalid HTML.
+
+XHTML also changed the way JavaScript is used. To properly work with XHTML,
+programmers have to use the namespaced DOM interface with the XHTML
+namespace to query for HTML elements.
 
 History of HTML5
 ----------------
 
-HTML5 was started in 2004 under the name Web Applications 1.0 by the
-WHATWG (Apple, Mozilla, Opera) and the idea was to write a new and
-improved specification of HTML based on actual browser behaviour instead
-of behaviour that exists on the paper but could not be implemented
-because of backwards compatibility with the already existing web.
+Development of the HTML5 specification was started in 2004 under the name
+""Web Applications 1.0"" by the Web Hypertext Application Technology Working
+Group, or WHATWG (which was formed by the major browser vendors Apple,
+Mozilla, and Opera) with the goal of writing a new and improved HTML
+specification, based on existing browser behaviour instead of unrealistic
+and backwards-incompatible specifications.
 
-For example in theory HTML4 ``<title/Hello/`` means exactly the same as
-``<title>Hello</title>`` but because existing websites are using
-pseudo-XHTML which uses the Slash in different ways, this could not be
-implemented properly.
+For example, in HTML4 ``<title/Hello/`` theoretically parses exactly the
+same as ``<title>Hello</title>``.  However, since people were using
+XHTML-like tags along the lines of ``<link />``, browser vendors implemented
+the XHTML syntax over the syntax defined by the specification.
 
-In 2007 the specification was adopted as the basis of a new HTML
-specification under the umbrella of the W3C.  Currently it looks like
-XHTML is losing traction, the XHTML 2 working group was disbanded and
-HTML5 is being implemented by all major browser vendors.
+In 2007, the specification was adopted as the basis of a new HTML
+specification under the umbrella of the W3C, known as HTML5.  Currently,
+it appears that XHTML is losing traction, as the XHTML 2 working group has
+een disbanded and HTML5 is being implemented by all major browser vendors.
 
 HTML versus XHTML
 -----------------
 
 The following table gives you a quick overview of features available in
-HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
-was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
+HTML 4.01, XHTML 1.1 and HTML5. (XHTML 1.0 is not included, as it was
+superseded by XHTML 1.1 and the barely-used XHTML5.)
 
 .. tabularcolumns:: |p{9cm}|p{2cm}|p{2cm}|p{2cm}|
 
@@ -74,10 +83,10 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 +-----------------------------------------+----------+----------+----------+
 | ``<script/>`` supported                 | |N|      | |Y|      | |N|      |
 +-----------------------------------------+----------+----------+----------+
-| might be served as `text/html`          | |Y|      | |N| [3]_ | |Y|      |
+| should be served as `text/html`         | |Y|      | |N| [3]_ | |Y|      |
 +-----------------------------------------+----------+----------+----------+
-| might be served as                      | |N|      | |Y|      | |N|      |
-| `application/xml+html`                  |          |          |          |
+| should be served as                     | |N|      | |Y|      | |N|      |
+| `application/xhtml+xml`                 |          |          |          |
 +-----------------------------------------+----------+----------+----------+
 | strict error handling                   | |N|      | |Y|      | |N|      |
 +-----------------------------------------+----------+----------+----------+
@@ -89,12 +98,13 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 +-----------------------------------------+----------+----------+----------+
 | ``<audio>`` tag                         | |N|      | |N|      | |Y|      |
 +-----------------------------------------+----------+----------+----------+
-| New semantical tags like ``<article>``  | |N|      | |N|      | |Y|      |
+| New semantic tags like ``<article>``    | |N|      | |N|      | |Y|      |
 +-----------------------------------------+----------+----------+----------+
 
-.. [1] Obscure feature inherited from SGML not supported by browsers
-.. [2] For compatibility with XHTML generating server code for some
-       tags such as ``<br>``.  Should not be used.
+.. [1] This is an obscure feature inherited from SGML. It is usually not
+       supported by browsers, for reasons detailed above.
+.. [2] This is for compatibility with server code that generates XHTML for
+       tags such as ``<br>``.  It should not be used in new code.
 .. [3] XHTML 1.0 is the last XHTML standard that allows to be served
        as `text/html` for backwards compatibility reasons.
 
@@ -103,27 +113,30 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 .. |N| image:: _static/no.png
        :alt: No
 
-What does Strict Mean?
-----------------------
+What does ""strict"" mean?
+------------------------
 
-HTML5 has strictly defined parsing rules, but it also specifies how a
-browser should react to parsing errors.  Some things people stumble upon
-with HTML5 and older HTML standards is that browsers will accept some
-things that still create the expected output even though it looks wrong
-(eg: certain tags are missing or are not closed).
+HTML5 has strictly defined parsing rules, but it also specifies exactly
+how a browser should react to parsing errors - unlike XHTML, which simply
+states parsing should abort. Some people are confused by apparently
+invalid syntax that still generates the expected results (for example,
+missing end tags or unquoted attribute values).
 
-Some of that is caused by the error handling browsers use if they
-encounter a markup error, others are actually specified.  The following
-things are optional in HTML5 by standard and have to be supported by
-browsers (and are supported):
+Some of these work because of the lenient error handling most browsers use
+when they encounter a markup error, others are actually specified.  The
+following constructs are optional in HTML5 by standard, but have to be
+supported by browsers:
 
--   ``<html>``, ``<head>`` or ``<body>``
--   The closing tags for ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
-    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, ``<tfoot>``.
--   quotes for attribtues if they contain no whitespace and some
-    special chars that require quoting.
+-   Wrapping the document in an ``<html>`` tag
+-   Wrapping header elements in ``<head>`` or the body elements in
+    ``<body>``
+-   Closing the ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
+    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, or ``<tfoot>`` tags.
+-   Quoting attributes, so long as they contain no whitespace or
+    special characters (like ``<``, ``>``, ``'``, or ``""``).
+-   Requiring boolean attributes to have a value.
 
-This means the following piece of HTML5 is perfectly valid:
+This means the following page in HTML5 is perfectly valid:
 
 .. sourcecode:: html
 
@@ -152,13 +165,43 @@ This means the following piece of HTML5 is perfectly valid:
     </div>
 
 
+New technologies in HTML5
+-------------------------
+
+HTML5 adds many new features that make Web applications easier to write
+and to use.
+
+-   The ``<audio>`` and ``<video>`` tags provide a way to embed audio and
+    video without complicated add-ons like QuickTime and Flask.
+-   Semantic elements like ``<article>``, ``<header>``, ``<nav>``, and
+    ``<time>`` that make content easier to understand.
+-   The ``<canvas>`` tag, which supports a powerful drawing API, reducing
+    the need for server-generated images to present data graphically.
+-   New form control types like ``<input type=""date"">`` that allow user
+    agents to make entering and validating values easier.
+-   Advanced JavaScript APIs like Web Storage, Web Workers, Web Sockets,
+    geolocation, and offline applications.
+
+Many other features have been added, as well. A good guide to new features
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
+Not all of them are supported in browsers yet, however, so use caution.
+
+_Dive into HTML5: http://www.diveintohtml5.org/
+
 What should be used?
 --------------------
 
-Currently the answer is HTML5.  There are very few reasons to use XHTML
-with the latest development.  There are some companies successfully using
-actual XML and XSLT on the client side with fallbacks to server side HTML4
-generation for browsers not supporting XML and XSLT but but it's not very
-common.  Now that MathML and SVG landed in HTML5 and with the sad support
-for XHTML in Internet Explorer and many JavaScript libraries for most
-applications no reasons remain to use XHTML.
+Currently, the answer is HTML5.  There are very few reasons to use XHTML
+considering the latest developments in Web browsers.  To summarize the
+reasons given above:
+
+-   Internet Explorer (which, sadly, currently leads in market share)
+    has poor support for XHTML.
+-   Many JavaScript libraries also do not support XHTML, due to the more
+    complicated namespacing API it requires.
+-   HTML5 adds several new features, including semantic tags and the
+    long-awaited ``<audio>`` and ``<video>`` tags.
+-   It has the support of most browser vendors behind it.
+-   It is much easier to write, and more compact.
+
+For most applications, it is undoubtably better to use HTML5 than XHTML.
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 21b41b2f..2127afef 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -2,66 +2,75 @@ HTML/XHTML FAQ
 ==============
 
 The Flask documentation and example applications are using HTML5.  You
-will notice that in many situations when end tags are optional they are
-not used to keep the HTML cleaner and also faster to load.  Because there
-is a lot of confusion about HTML and XHTML out there this document tries
-to answer some of them.
+may notice that in many situations, when end tags are optional they are
+not used, so that the HTML is cleaner and faster to load.  Because there
+is much confusion about HTML and XHTML among developers, this document tries
+to answer some of the major questions.
 
 
-History on XHTML
+History of XHTML
 ----------------
 
-For a while it looked like HTML was about to be replaced by XHTML.
-However barely any websites on the internet are actually real XHTML (which
-means XHTML processed with XML rules).  There are a couple of reasons why
-this is the case.  It mostly has to do with Internet Explorer which does
-not accept the XHTML mimetype to switch the browser into XML mode.
-However this is really easy to bypass but barely anyone does that.  This
-probably has to do with the fact that XHTML is really painful.
+For a while, it appeared that HTML was about to be replaced by XHTML.
+However, barely any websites on the Internet are actual XHTML (which is
+HTML processed using XML rules).  There are a couple of major reasons
+why this is the case.  One of them is Internet Explorer's lack of proper
+XHTML support. The XHTML spec states that XHTML must be served with the MIME
+type `application/xhtml+xml`, but Internet Explorer refuses to read files
+with that MIME type.
+While it is relatively easy to configure Web servers to serve XHTML properly,
+few people do.  This is likely because properly using XHTML can be quite
+painful.
 
-Why is it painful?  XML has very strict errorhandling.  On a parsing error
-the browser is supposed to show the user an ugly error message.  Most of
+One of the most important causes of pain is XML's draconian (strict and
+ruthless) error handling.  When an XML parsing error is encountered,
+the browser is supposed to show the user an ugly error message, instead
+of attempting to recover from the error and display what it can.  Most of
 the (X)HTML generation on the web is based on non-XML template engines
 (such as Jinja, the one used in Flask) which do not protect you from
-accidentally creating invalid HTML.  There are XML based template engines
-but they usually come with a larger runtime overhead and are not as
-straightforward to use because they have to obey XML rules.
+accidentally creating invalid XHTML.  There are XML based template engines,
+such as Kid and the popular Genshi, but they often come with a larger
+runtime overhead and, are not as straightforward to use because they have
+to obey XML rules.
 
-Now the majority of users assumed they were using XHTML though.  The
-reasons for that is that they sticked an XHTML doctype on top of the
-document and self-closed all necessary tags (``<br>`` becomes ``<br/>`` or
-``<br></br>`` in XHTML).  However even if the document properly validates
-as XHTML there are still other things to keep in mind.
+The majority of users, however, assumed they were properly using XHTML.
+They wrote an XHTML doctype at the top of the document and self-closed all
+the necessary tags (``<br>`` becomes ``<br/>`` or ``<br></br>`` in XHTML).
+However, even if the document properly validates as XHTML, what really
+determines XHTML/HTML processing in browsers is the MIME type, which as
+said before is often not set properly. So the valid XHTML was being treated
+as invalid HTML.
 
-XHTML also changes the way you work with JavaScript because you now have
-to use the namespaced DOM interface with the XHTML namespace to query for
-HTML elements.
+XHTML also changed the way JavaScript is used. To properly work with XHTML,
+programmers have to use the namespaced DOM interface with the XHTML
+namespace to query for HTML elements.
 
 History of HTML5
 ----------------
 
-HTML5 was started in 2004 under the name Web Applications 1.0 by the
-WHATWG (Apple, Mozilla, Opera) and the idea was to write a new and
-improved specification of HTML based on actual browser behaviour instead
-of behaviour that exists on the paper but could not be implemented
-because of backwards compatibility with the already existing web.
+Development of the HTML5 specification was started in 2004 under the name
+""Web Applications 1.0"" by the Web Hypertext Application Technology Working
+Group, or WHATWG (which was formed by the major browser vendors Apple,
+Mozilla, and Opera) with the goal of writing a new and improved HTML
+specification, based on existing browser behaviour instead of unrealistic
+and backwards-incompatible specifications.
 
-For example in theory HTML4 ``<title/Hello/`` means exactly the same as
-``<title>Hello</title>`` but because existing websites are using
-pseudo-XHTML which uses the Slash in different ways, this could not be
-implemented properly.
+For example, in HTML4 ``<title/Hello/`` theoretically parses exactly the
+same as ``<title>Hello</title>``.  However, since people were using
+XHTML-like tags along the lines of ``<link />``, browser vendors implemented
+the XHTML syntax over the syntax defined by the specification.
 
-In 2007 the specification was adopted as the basis of a new HTML
-specification under the umbrella of the W3C.  Currently it looks like
-XHTML is losing traction, the XHTML 2 working group was disbanded and
-HTML5 is being implemented by all major browser vendors.
+In 2007, the specification was adopted as the basis of a new HTML
+specification under the umbrella of the W3C, known as HTML5.  Currently,
+it appears that XHTML is losing traction, as the XHTML 2 working group has
+een disbanded and HTML5 is being implemented by all major browser vendors.
 
 HTML versus XHTML
 -----------------
 
 The following table gives you a quick overview of features available in
-HTML 4.01, XHTML 1.1 and HTML5 (we are not looking at XHTML 1.0 here which
-was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
+HTML 4.01, XHTML 1.1 and HTML5. (XHTML 1.0 is not included, as it was
+superseded by XHTML 1.1 and the barely-used XHTML5.)
 
 .. tabularcolumns:: |p{9cm}|p{2cm}|p{2cm}|p{2cm}|
 
@@ -74,10 +83,10 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 +-----------------------------------------+----------+----------+----------+
 | ``<script/>`` supported                 | |N|      | |Y|      | |N|      |
 +-----------------------------------------+----------+----------+----------+
-| might be served as `text/html`          | |Y|      | |N| [3]_ | |Y|      |
+| should be served as `text/html`         | |Y|      | |N| [3]_ | |Y|      |
 +-----------------------------------------+----------+----------+----------+
-| might be served as                      | |N|      | |Y|      | |N|      |
-| `application/xml+html`                  |          |          |          |
+| should be served as                     | |N|      | |Y|      | |N|      |
+| `application/xhtml+xml`                 |          |          |          |
 +-----------------------------------------+----------+----------+----------+
 | strict error handling                   | |N|      | |Y|      | |N|      |
 +-----------------------------------------+----------+----------+----------+
@@ -89,12 +98,13 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 +-----------------------------------------+----------+----------+----------+
 | ``<audio>`` tag                         | |N|      | |N|      | |Y|      |
 +-----------------------------------------+----------+----------+----------+
-| New semantical tags like ``<article>``  | |N|      | |N|      | |Y|      |
+| New semantic tags like ``<article>``    | |N|      | |N|      | |Y|      |
 +-----------------------------------------+----------+----------+----------+
 
-.. [1] Obscure feature inherited from SGML not supported by browsers
-.. [2] For compatibility with XHTML generating server code for some
-       tags such as ``<br>``.  Should not be used.
+.. [1] This is an obscure feature inherited from SGML. It is usually not
+       supported by browsers, for reasons detailed above.
+.. [2] This is for compatibility with server code that generates XHTML for
+       tags such as ``<br>``.  It should not be used in new code.
 .. [3] XHTML 1.0 is the last XHTML standard that allows to be served
        as `text/html` for backwards compatibility reasons.
 
@@ -103,27 +113,30 @@ was superceeded by XHTML 1.1 or XHTML5 which is barely supported currently):
 .. |N| image:: _static/no.png
        :alt: No
 
-What does Strict Mean?
-----------------------
+What does ""strict"" mean?
+------------------------
 
-HTML5 has strictly defined parsing rules, but it also specifies how a
-browser should react to parsing errors.  Some things people stumble upon
-with HTML5 and older HTML standards is that browsers will accept some
-things that still create the expected output even though it looks wrong
-(eg: certain tags are missing or are not closed).
+HTML5 has strictly defined parsing rules, but it also specifies exactly
+how a browser should react to parsing errors - unlike XHTML, which simply
+states parsing should abort. Some people are confused by apparently
+invalid syntax that still generates the expected results (for example,
+missing end tags or unquoted attribute values).
 
-Some of that is caused by the error handling browsers use if they
-encounter a markup error, others are actually specified.  The following
-things are optional in HTML5 by standard and have to be supported by
-browsers (and are supported):
+Some of these work because of the lenient error handling most browsers use
+when they encounter a markup error, others are actually specified.  The
+following constructs are optional in HTML5 by standard, but have to be
+supported by browsers:
 
--   ``<html>``, ``<head>`` or ``<body>``
--   The closing tags for ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
-    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, ``<tfoot>``.
--   quotes for attribtues if they contain no whitespace and some
-    special chars that require quoting.
+-   Wrapping the document in an ``<html>`` tag
+-   Wrapping header elements in ``<head>`` or the body elements in
+    ``<body>``
+-   Closing the ``<p>``, ``<li>``, ``<dl>``, ``<dd>``, ``<tr>``,
+    ``<td>``, ``<th>``, ``<tbody>``, ``<thead>``, or ``<tfoot>`` tags.
+-   Quoting attributes, so long as they contain no whitespace or
+    special characters (like ``<``, ``>``, ``'``, or ``""``).
+-   Requiring boolean attributes to have a value.
 
-This means the following piece of HTML5 is perfectly valid:
+This means the following page in HTML5 is perfectly valid:
 
 .. sourcecode:: html
 
@@ -152,13 +165,43 @@ This means the following piece of HTML5 is perfectly valid:
     </div>
 
 
+New technologies in HTML5
+-------------------------
+
+HTML5 adds many new features that make Web applications easier to write
+and to use.
+
+-   The ``<audio>`` and ``<video>`` tags provide a way to embed audio and
+    video without complicated add-ons like QuickTime and Flask.
+-   Semantic elements like ``<article>``, ``<header>``, ``<nav>``, and
+    ``<time>`` that make content easier to understand.
+-   The ``<canvas>`` tag, which supports a powerful drawing API, reducing
+    the need for server-generated images to present data graphically.
+-   New form control types like ``<input type=""date"">`` that allow user
+    agents to make entering and validating values easier.
+-   Advanced JavaScript APIs like Web Storage, Web Workers, Web Sockets,
+    geolocation, and offline applications.
+
+Many other features have been added, as well. A good guide to new features
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
+Not all of them are supported in browsers yet, however, so use caution.
+
+_Dive into HTML5: http://www.diveintohtml5.org/
+
 What should be used?
 --------------------
 
-Currently the answer is HTML5.  There are very few reasons to use XHTML
-with the latest development.  There are some companies successfully using
-actual XML and XSLT on the client side with fallbacks to server side HTML4
-generation for browsers not supporting XML and XSLT but but it's not very
-common.  Now that MathML and SVG landed in HTML5 and with the sad support
-for XHTML in Internet Explorer and many JavaScript libraries for most
-applications no reasons remain to use XHTML.
+Currently, the answer is HTML5.  There are very few reasons to use XHTML
+considering the latest developments in Web browsers.  To summarize the
+reasons given above:
+
+-   Internet Explorer (which, sadly, currently leads in market share)
+    has poor support for XHTML.
+-   Many JavaScript libraries also do not support XHTML, due to the more
+    complicated namespacing API it requires.
+-   HTML5 adds several new features, including semantic tags and the
+    long-awaited ``<audio>`` and ``<video>`` tags.
+-   It has the support of most browser vendors behind it.
+-   It is much easier to write, and more compact.
+
+For most applications, it is undoubtably better to use HTML5 than XHTML.
"
5a5a4a85bf1cfe783e7009d463aa16368dd5c92f,d02d01adaa5754ad694b3fee7e32aaa19a502054,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,Fixed an rst error,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 2127afef..304c6005 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -183,7 +183,7 @@ and to use.
     geolocation, and offline applications.
 
 Many other features have been added, as well. A good guide to new features
-in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
 _Dive into HTML5: http://www.diveintohtml5.org/
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 2127afef..304c6005 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -183,7 +183,7 @@ and to use.
     geolocation, and offline applications.
 
 Many other features have been added, as well. A good guide to new features
-in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
 _Dive into HTML5: http://www.diveintohtml5.org/
"
d02d01adaa5754ad694b3fee7e32aaa19a502054,1762ea5a2bee7539381c701c4d1534c4af9c2e37,docs/_themes,docs/_themes,docs/_themes,Fixed link for good,"diff --git a/docs/_themes b/docs/_themes
index ec7aaaae..c775271c 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit ec7aaaae18f8b874e5e8cbb953aaba1580cb8d70
+Subproject commit c775271cf77795a5358a13b2c2d08c0f61062557
","diff --git a/docs/_themes b/docs/_themes
index ec7aaaae..c775271c 160000
--- a/docs/_themes
+++ b/docs/_themes
@@ -1 +1 @@
-Subproject commit ec7aaaae18f8b874e5e8cbb953aaba1580cb8d70
+Subproject commit c775271cf77795a5358a13b2c2d08c0f61062557
"
d02d01adaa5754ad694b3fee7e32aaa19a502054,1762ea5a2bee7539381c701c4d1534c4af9c2e37,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,Fixed link for good,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 304c6005..66370311 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -186,7 +186,7 @@ Many other features have been added, as well. A good guide to new features
 in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
-_Dive into HTML5: http://www.diveintohtml5.org/
+.. _Dive into HTML5: http://www.diveintohtml5.org/
 
 What should be used?
 --------------------
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 304c6005..66370311 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -186,7 +186,7 @@ Many other features have been added, as well. A good guide to new features
 in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
-_Dive into HTML5: http://www.diveintohtml5.org/
+.. _Dive into HTML5: http://www.diveintohtml5.org/
 
 What should be used?
 --------------------
"
1762ea5a2bee7539381c701c4d1534c4af9c2e37,54d22f1c5537c957ed555c20e6cd8198346289e5,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,"Typo fix.  That is what was meant, right?","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 66370311..f7b700a9 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -172,7 +172,7 @@ HTML5 adds many new features that make Web applications easier to write
 and to use.
 
 -   The ``<audio>`` and ``<video>`` tags provide a way to embed audio and
-    video without complicated add-ons like QuickTime and Flask.
+    video without complicated add-ons like QuickTime or Flash.
 -   Semantic elements like ``<article>``, ``<header>``, ``<nav>``, and
     ``<time>`` that make content easier to understand.
 -   The ``<canvas>`` tag, which supports a powerful drawing API, reducing
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index 66370311..f7b700a9 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -172,7 +172,7 @@ HTML5 adds many new features that make Web applications easier to write
 and to use.
 
 -   The ``<audio>`` and ``<video>`` tags provide a way to embed audio and
-    video without complicated add-ons like QuickTime and Flask.
+    video without complicated add-ons like QuickTime or Flash.
 -   Semantic elements like ``<article>``, ``<header>``, ``<nav>``, and
     ``<time>`` that make content easier to understand.
 -   The ``<canvas>`` tag, which supports a powerful drawing API, reducing
"
54d22f1c5537c957ed555c20e6cd8198346289e5,9ecb9edc0644e9c40a0089d680783df5dbffb3d7,docs/_themes,docs/_themes,,Typos,"diff --git a/docs/_themes b/docs/_themes
deleted file mode 160000
index c775271c..00000000
--- a/docs/_themes
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit c775271cf77795a5358a13b2c2d08c0f61062557
","diff --git a/docs/_themes b/docs/_themes
deleted file mode 160000
index c775271c..00000000
--- a/docs/_themes
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit c775271cf77795a5358a13b2c2d08c0f61062557
"
54d22f1c5537c957ed555c20e6cd8198346289e5,9ecb9edc0644e9c40a0089d680783df5dbffb3d7,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,Typos,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index f7b700a9..06fd1558 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -63,7 +63,7 @@ the XHTML syntax over the syntax defined by the specification.
 In 2007, the specification was adopted as the basis of a new HTML
 specification under the umbrella of the W3C, known as HTML5.  Currently,
 it appears that XHTML is losing traction, as the XHTML 2 working group has
-een disbanded and HTML5 is being implemented by all major browser vendors.
+been disbanded and HTML5 is being implemented by all major browser vendors.
 
 HTML versus XHTML
 -----------------
@@ -204,4 +204,4 @@ reasons given above:
 -   It has the support of most browser vendors behind it.
 -   It is much easier to write, and more compact.
 
-For most applications, it is undoubtably better to use HTML5 than XHTML.
+For most applications, it is undoubtedly better to use HTML5 than XHTML.
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index f7b700a9..06fd1558 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -63,7 +63,7 @@ the XHTML syntax over the syntax defined by the specification.
 In 2007, the specification was adopted as the basis of a new HTML
 specification under the umbrella of the W3C, known as HTML5.  Currently,
 it appears that XHTML is losing traction, as the XHTML 2 working group has
-een disbanded and HTML5 is being implemented by all major browser vendors.
+been disbanded and HTML5 is being implemented by all major browser vendors.
 
 HTML versus XHTML
 -----------------
@@ -204,4 +204,4 @@ reasons given above:
 -   It has the support of most browser vendors behind it.
 -   It is much easier to write, and more compact.
 
-For most applications, it is undoubtably better to use HTML5 than XHTML.
+For most applications, it is undoubtedly better to use HTML5 than XHTML.
"
54d22f1c5537c957ed555c20e6cd8198346289e5,9ecb9edc0644e9c40a0089d680783df5dbffb3d7,docs/quickstart.rst,docs/quickstart.rst,docs/quickstart.rst,Typos,,
54d22f1c5537c957ed555c20e6cd8198346289e5,3e2a2114fd952b489515b63ca0cfa9899455583a,docs/htmlfaq.rst,docs/htmlfaq.rst,docs/htmlfaq.rst,into -> Into,"diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index f7b700a9..4a8d7235 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -183,10 +183,10 @@ and to use.
     geolocation, and offline applications.
 
 Many other features have been added, as well. A good guide to new features
-in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
-.. _Dive into HTML5: http://www.diveintohtml5.org/
+.. _Dive Into HTML5: http://www.diveintohtml5.org/
 
 What should be used?
 --------------------
","diff --git a/docs/htmlfaq.rst b/docs/htmlfaq.rst
index f7b700a9..4a8d7235 100644
--- a/docs/htmlfaq.rst
+++ b/docs/htmlfaq.rst
@@ -183,10 +183,10 @@ and to use.
     geolocation, and offline applications.
 
 Many other features have been added, as well. A good guide to new features
-in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive into HTML5`_.
+in HTML5 is Mark Pilgrim's soon-to-be-published book, `Dive Into HTML5`_.
 Not all of them are supported in browsers yet, however, so use caution.
 
-.. _Dive into HTML5: http://www.diveintohtml5.org/
+.. _Dive Into HTML5: http://www.diveintohtml5.org/
 
 What should be used?
 --------------------
"
223d44dca8e28c95ffb841118b93b1d36bf9b092,41f5ad9b1539410507455db6df1424d1a7215b05,docs/_static/no.png,docs/_static/no.png,docs/_static/no.png,added images,"diff --git a/docs/_static/no.png b/docs/_static/no.png
new file mode 100644
index 00000000..4ac1083d
Binary files /dev/null and b/docs/_static/no.png differ
","diff --git a/docs/_static/no.png b/docs/_static/no.png
new file mode 100644
index 00000000..4ac1083d
Binary files /dev/null and b/docs/_static/no.png differ
"
223d44dca8e28c95ffb841118b93b1d36bf9b092,41f5ad9b1539410507455db6df1424d1a7215b05,docs/_static/yes.png,docs/_static/yes.png,docs/_static/yes.png,added images,"diff --git a/docs/_static/yes.png b/docs/_static/yes.png
new file mode 100644
index 00000000..ac27c4e1
Binary files /dev/null and b/docs/_static/yes.png differ
","diff --git a/docs/_static/yes.png b/docs/_static/yes.png
new file mode 100644
index 00000000..ac27c4e1
Binary files /dev/null and b/docs/_static/yes.png differ
"
41f5ad9b1539410507455db6df1424d1a7215b05,540eca16f8a5963a74298f3630523fd9ad49187a,docs/extensiondev.rst,docs/extensiondev.rst,docs/extensiondev.rst,Fix some typos in the docs  Signed-off-by: Armin Ronacher <armin.ronacher@active-4.com>,"diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
index b0eff526..542ec192 100644
--- a/docs/extensiondev.rst
+++ b/docs/extensiondev.rst
@@ -160,7 +160,7 @@ initialization functions:
 classes:
     Classes work mostly like initialization functions but can later be
     used to further change the behaviour.  For an example look at how the
-    `OAuth extension`_ works: ther is an `OAuth` object that provides
+    `OAuth extension`_ works: there is an `OAuth` object that provides
     some helper functions like `OAuth.remote_app` to create a reference to
     a remote application that uses OAuth.
 
","diff --git a/docs/extensiondev.rst b/docs/extensiondev.rst
index b0eff526..542ec192 100644
--- a/docs/extensiondev.rst
+++ b/docs/extensiondev.rst
@@ -160,7 +160,7 @@ initialization functions:
 classes:
     Classes work mostly like initialization functions but can later be
     used to further change the behaviour.  For an example look at how the
-    `OAuth extension`_ works: ther is an `OAuth` object that provides
+    `OAuth extension`_ works: there is an `OAuth` object that provides
     some helper functions like `OAuth.remote_app` to create a reference to
     a remote application that uses OAuth.
 
"
41f5ad9b1539410507455db6df1424d1a7215b05,540eca16f8a5963a74298f3630523fd9ad49187a,docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,docs/patterns/appfactories.rst,Fix some typos in the docs  Signed-off-by: Armin Ronacher <armin.ronacher@active-4.com>,"diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
index 448dba71..134ffcf4 100644
--- a/docs/patterns/appfactories.rst
+++ b/docs/patterns/appfactories.rst
@@ -4,7 +4,7 @@ Application Factories
 =====================
 
 If you are already using packages and modules for your application
-(:ref:`packages`) there are couple of really nice ways to further improve
+(:ref:`packages`) there are a couple of really nice ways to further improve
 the experience.  A common pattern is creating the application object when
 the module is imported.  But if you move the creation of this object,
 into a function, you can then create multiple instances of this and later.
","diff --git a/docs/patterns/appfactories.rst b/docs/patterns/appfactories.rst
index 448dba71..134ffcf4 100644
--- a/docs/patterns/appfactories.rst
+++ b/docs/patterns/appfactories.rst
@@ -4,7 +4,7 @@ Application Factories
 =====================
 
 If you are already using packages and modules for your application
-(:ref:`packages`) there are couple of really nice ways to further improve
+(:ref:`packages`) there are a couple of really nice ways to further improve
 the experience.  A common pattern is creating the application object when
 the module is imported.  But if you move the creation of this object,
 into a function, you can then create multiple instances of this and later.
"
41f5ad9b1539410507455db6df1424d1a7215b05,540eca16f8a5963a74298f3630523fd9ad49187a,docs/patterns/index.rst,docs/patterns/index.rst,docs/patterns/index.rst,Fix some typos in the docs  Signed-off-by: Armin Ronacher <armin.ronacher@active-4.com>,"diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index ecc2c40f..2a8c0af7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -3,10 +3,10 @@
 Patterns for Flask
 ==================
 
-Certain things are common enough that the changes are high you will find
+Certain things are common enough that the chances are high you will find
 them in most web applications.  For example quite a lot of applications
 are using relational databases and user authentication.  In that case,
-changes are they will open a database connection at the beginning of the
+chances are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
","diff --git a/docs/patterns/index.rst b/docs/patterns/index.rst
index ecc2c40f..2a8c0af7 100644
--- a/docs/patterns/index.rst
+++ b/docs/patterns/index.rst
@@ -3,10 +3,10 @@
 Patterns for Flask
 ==================
 
-Certain things are common enough that the changes are high you will find
+Certain things are common enough that the chances are high you will find
 them in most web applications.  For example quite a lot of applications
 are using relational databases and user authentication.  In that case,
-changes are they will open a database connection at the beginning of the
+chances are they will open a database connection at the beginning of the
 request and get the information of the currently logged in user.  At the
 end of the request, the database connection is closed again.
 
"
41f5ad9b1539410507455db6df1424d1a7215b05,540eca16f8a5963a74298f3630523fd9ad49187a,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,Fix some typos in the docs  Signed-off-by: Armin Ronacher <armin.ronacher@active-4.com>,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 99d0d7e5..fd9bc689 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -59,7 +59,7 @@ following quick checklist:
    Not the object itself, but the module it is in.  Do the importing at
    the *bottom* of the file.
 
-Here an example `__init__.py`::
+Here's an example `__init__.py`::
 
     from flask import Flask
     app = Flask(__name__)
@@ -109,7 +109,7 @@ Working with Modules
 --------------------
 
 For larger applications with more than a dozen views it makes sense to
-split the views into modules.  First let's look at the typical struture of
+split the views into modules.  First let's look at the typical structure of
 such an application::
 
     /yourapplication
@@ -133,10 +133,10 @@ sure to place an empty `__init__.py` file in there.  Let's start with the
 
 First we have to create a :class:`~flask.Module` object with the name of
 the package.  This works very similar to the :class:`~flask.Flask` object
-you have already worked with, it just does not support all of the method,
+you have already worked with, it just does not support all of the methods,
 but most of them are the same.
 
-Long story short, here a nice and concise example::
+Long story short, here's a nice and concise example::
 
     from flask import Module
 
@@ -151,7 +151,7 @@ Long story short, here a nice and concise example::
         pass
 
     @admin.route('/logout')
-    def login():
+    def logout():
         pass
 
 Do the same with the `frontend.py` and then make sure to register the
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index 99d0d7e5..fd9bc689 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -59,7 +59,7 @@ following quick checklist:
    Not the object itself, but the module it is in.  Do the importing at
    the *bottom* of the file.
 
-Here an example `__init__.py`::
+Here's an example `__init__.py`::
 
     from flask import Flask
     app = Flask(__name__)
@@ -109,7 +109,7 @@ Working with Modules
 --------------------
 
 For larger applications with more than a dozen views it makes sense to
-split the views into modules.  First let's look at the typical struture of
+split the views into modules.  First let's look at the typical structure of
 such an application::
 
     /yourapplication
@@ -133,10 +133,10 @@ sure to place an empty `__init__.py` file in there.  Let's start with the
 
 First we have to create a :class:`~flask.Module` object with the name of
 the package.  This works very similar to the :class:`~flask.Flask` object
-you have already worked with, it just does not support all of the method,
+you have already worked with, it just does not support all of the methods,
 but most of them are the same.
 
-Long story short, here a nice and concise example::
+Long story short, here's a nice and concise example::
 
     from flask import Module
 
@@ -151,7 +151,7 @@ Long story short, here a nice and concise example::
         pass
 
     @admin.route('/logout')
-    def login():
+    def logout():
         pass
 
 Do the same with the `frontend.py` and then make sure to register the
"
540eca16f8a5963a74298f3630523fd9ad49187a,33a035bb0ec07a4ca92f1397e7caeb7714c57bd6,docs/contents.rst.inc,docs/contents.rst.inc,docs/contents.rst.inc,Added security document,"diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 2422d12e..3dbe28aa 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -41,6 +41,7 @@ Design notes, legal information and changelog are here for the interested.
 
    design
    htmlfaq
+   security
    extensiondev
    license
    upgrading
","diff --git a/docs/contents.rst.inc b/docs/contents.rst.inc
index 2422d12e..3dbe28aa 100644
--- a/docs/contents.rst.inc
+++ b/docs/contents.rst.inc
@@ -41,6 +41,7 @@ Design notes, legal information and changelog are here for the interested.
 
    design
    htmlfaq
+   security
    extensiondev
    license
    upgrading
"
540eca16f8a5963a74298f3630523fd9ad49187a,33a035bb0ec07a4ca92f1397e7caeb7714c57bd6,docs/security.rst,,docs/security.rst,Added security document,"diff --git a/docs/security.rst b/docs/security.rst
new file mode 100644
index 00000000..db3d3c74
--- /dev/null
+++ b/docs/security.rst
@@ -0,0 +1,134 @@
+Security Considerations
+=======================
+
+Web applications usually face all kinds of security problems and it's very
+hard to get everything right.  Flask tries to solve a few of these things
+for you, but there are a couple more you have to take care of yourself.
+
+Cross-Site Scripting (XSS)
+--------------------------
+
+Flask configures Jinja2 to automatically escape all values unless
+explicitly told otherwise.  This should rule out all XSS problems caused
+in templates, but there are still other places where you have to be
+careful:
+
+-   generating HTML without the help of Jinja2
+-   calling :class:`~flask.Markup` on data submitted by users
+-   sending out HTML from uploaded files, never do that, use the
+    `Content-Disposition: attachment` header to prevent that problem.
+-   sending out textfiles from uploaded files.  Some browsers are using
+    content-type guessing based on the first few bytes so users could
+    trick a browser to execute HTML.
+
+Cross-Site Request Forgery (CSRF)
+---------------------------------
+
+Another big problem is CSRF.  This is a very complex topic and I won't
+outline it here in detail just mention what it is and how to theoretically
+prevent it.
+
+So if your authentication information is stored in cookies you have
+implicit state management.  By that I mean that the state of ""being logged
+in"" is controlled by a cookie and that cookie is sent with each request to
+a page.  Unfortunately that really means ""each request"" so also requests
+triggered by 3rd party sites.  If you don't keep that in mind some people
+might be able to trick your application's users with social engineering to
+do stupid things without them knowing.
+
+Say you have a specific URL that, when you sent `POST` requests to will
+delete a user's profile (say `http://example.com/user/delete`).  If an
+attacker now creates a page that sents a post request to that page with
+some JavaScript he just has to trick some users to that page and their
+profiles will end up being deleted.
+
+Imagine you would run Facebook with millions of concurrent users and
+someone would send out links to images of little kittens.  When a user
+would go to that page their profiles would get deleted while they are
+looking at images of fluffy cats.
+
+So how can you prevent yourself from that?  Basically for each request
+that modifies content on the server you would have to either use a
+one-time token and store that in the cookie **and** also transmit it with
+the form data.   After recieving the data on the server again you would
+then have to compare the two tokens and ensure they are equal.
+
+Why does not Flask do that for you?  The ideal place for this to happen is
+the form validation framework which does not exist in Flask.
+
+.. _json-security:
+
+JSON Security
+-------------
+
+JSON itself is a high-level serilization format, so there is barely
+anything that could cause security problems, right?  You can't declare
+recursive structures that could cause problems and the only thing that
+could possibly break are very large responses that can cause some kind of
+denial of service at the receivers side.
+
+However there is a catch.  Due to how browsers the CSRF issue comes up
+with JSON unfortunately.  Fortunately there is also a weird part of the
+JavaScript specification that can be used to solve that problem easily and
+Flask is kinda doing that for you by preventing you from doing dangerous
+stuff.  Unfortunately that protection is only there for
+:func:`~flask.jsonify` so you are still at risk when using other ways to
+generate JSON.
+
+So what is the issue and how to avoid it?  The problem are arrays at
+toplevel in JSON.  Imagine you send the following data out in a JSON
+request.  Say that's exporting the names and email adresses of all your
+friends for a part of the userinterface that is written in JavaScript.
+Not very uncommon:
+
+.. sourcecode:: javascript
+
+    [
+        {""username"": ""admin"",
+         ""email"": ""admin@localhost""}
+    ]
+
+And it is doing that of course only as long as you are logged in and only
+for you.  And it is doing that for all `GET` requests to a certain URL,
+say the URL for that request is
+``http://example.com/api/get_friends.json``.
+
+So now what happens if a clever hacker is embedding this to his website
+and social engineers a victim to visiting his site:
+
+.. sourcecode:: html
+
+    <script type=text/javascript>
+    var captured = [];
+    var oldArray = Array;
+    function Array() {
+      var obj = this, id = 0, capture = function(value) {
+        obj.__defineSetter__(id++, capture);
+        if (value)
+          captured.push(value);
+      };
+      capture();
+    }
+    </script>
+    <script type=text/javascript
+      src=http://example.com/api/get_friends.json></script>
+    <script type=text/javascript>
+    Array = oldArray;
+    // now we have all the data in the captured array.
+    </script>
+
+If you know a bit of JavaScript internals you might know that it's
+possible to patch constructors and register callbacks for setters.  An
+attacker can use this (like above) to get all the data you exported in
+your JSON file.  The browser will totally ignore the ``application/json``
+mimetype if ``text/javascript`` is defined as content type in the script
+tag and evaluate that as JavaScript.  Because toplevel array elements are
+allowed (albeit useless) and we hooked in our own constructor, after that
+page loaded the data from the JSON response is in the `captured` array.
+
+Because it is a syntax error in JavaScript to have an object literal
+(``{...}``) toplevel an attacker could not just do a request to an
+external URL with the script tag to load up the data.  So what Flask does
+is only allowing objects as toplevel elements when using
+:func:`~flask.jsonify`.  Make sure to do the same when using an ordinary
+JSON generate function.
","diff --git a/docs/security.rst b/docs/security.rst
new file mode 100644
index 00000000..db3d3c74
--- /dev/null
+++ b/docs/security.rst
@@ -0,0 +1,134 @@
+Security Considerations
+=======================
+
+Web applications usually face all kinds of security problems and it's very
+hard to get everything right.  Flask tries to solve a few of these things
+for you, but there are a couple more you have to take care of yourself.
+
+Cross-Site Scripting (XSS)
+--------------------------
+
+Flask configures Jinja2 to automatically escape all values unless
+explicitly told otherwise.  This should rule out all XSS problems caused
+in templates, but there are still other places where you have to be
+careful:
+
+-   generating HTML without the help of Jinja2
+-   calling :class:`~flask.Markup` on data submitted by users
+-   sending out HTML from uploaded files, never do that, use the
+    `Content-Disposition: attachment` header to prevent that problem.
+-   sending out textfiles from uploaded files.  Some browsers are using
+    content-type guessing based on the first few bytes so users could
+    trick a browser to execute HTML.
+
+Cross-Site Request Forgery (CSRF)
+---------------------------------
+
+Another big problem is CSRF.  This is a very complex topic and I won't
+outline it here in detail just mention what it is and how to theoretically
+prevent it.
+
+So if your authentication information is stored in cookies you have
+implicit state management.  By that I mean that the state of ""being logged
+in"" is controlled by a cookie and that cookie is sent with each request to
+a page.  Unfortunately that really means ""each request"" so also requests
+triggered by 3rd party sites.  If you don't keep that in mind some people
+might be able to trick your application's users with social engineering to
+do stupid things without them knowing.
+
+Say you have a specific URL that, when you sent `POST` requests to will
+delete a user's profile (say `http://example.com/user/delete`).  If an
+attacker now creates a page that sents a post request to that page with
+some JavaScript he just has to trick some users to that page and their
+profiles will end up being deleted.
+
+Imagine you would run Facebook with millions of concurrent users and
+someone would send out links to images of little kittens.  When a user
+would go to that page their profiles would get deleted while they are
+looking at images of fluffy cats.
+
+So how can you prevent yourself from that?  Basically for each request
+that modifies content on the server you would have to either use a
+one-time token and store that in the cookie **and** also transmit it with
+the form data.   After recieving the data on the server again you would
+then have to compare the two tokens and ensure they are equal.
+
+Why does not Flask do that for you?  The ideal place for this to happen is
+the form validation framework which does not exist in Flask.
+
+.. _json-security:
+
+JSON Security
+-------------
+
+JSON itself is a high-level serilization format, so there is barely
+anything that could cause security problems, right?  You can't declare
+recursive structures that could cause problems and the only thing that
+could possibly break are very large responses that can cause some kind of
+denial of service at the receivers side.
+
+However there is a catch.  Due to how browsers the CSRF issue comes up
+with JSON unfortunately.  Fortunately there is also a weird part of the
+JavaScript specification that can be used to solve that problem easily and
+Flask is kinda doing that for you by preventing you from doing dangerous
+stuff.  Unfortunately that protection is only there for
+:func:`~flask.jsonify` so you are still at risk when using other ways to
+generate JSON.
+
+So what is the issue and how to avoid it?  The problem are arrays at
+toplevel in JSON.  Imagine you send the following data out in a JSON
+request.  Say that's exporting the names and email adresses of all your
+friends for a part of the userinterface that is written in JavaScript.
+Not very uncommon:
+
+.. sourcecode:: javascript
+
+    [
+        {""username"": ""admin"",
+         ""email"": ""admin@localhost""}
+    ]
+
+And it is doing that of course only as long as you are logged in and only
+for you.  And it is doing that for all `GET` requests to a certain URL,
+say the URL for that request is
+``http://example.com/api/get_friends.json``.
+
+So now what happens if a clever hacker is embedding this to his website
+and social engineers a victim to visiting his site:
+
+.. sourcecode:: html
+
+    <script type=text/javascript>
+    var captured = [];
+    var oldArray = Array;
+    function Array() {
+      var obj = this, id = 0, capture = function(value) {
+        obj.__defineSetter__(id++, capture);
+        if (value)
+          captured.push(value);
+      };
+      capture();
+    }
+    </script>
+    <script type=text/javascript
+      src=http://example.com/api/get_friends.json></script>
+    <script type=text/javascript>
+    Array = oldArray;
+    // now we have all the data in the captured array.
+    </script>
+
+If you know a bit of JavaScript internals you might know that it's
+possible to patch constructors and register callbacks for setters.  An
+attacker can use this (like above) to get all the data you exported in
+your JSON file.  The browser will totally ignore the ``application/json``
+mimetype if ``text/javascript`` is defined as content type in the script
+tag and evaluate that as JavaScript.  Because toplevel array elements are
+allowed (albeit useless) and we hooked in our own constructor, after that
+page loaded the data from the JSON response is in the `captured` array.
+
+Because it is a syntax error in JavaScript to have an object literal
+(``{...}``) toplevel an attacker could not just do a request to an
+external URL with the script tag to load up the data.  So what Flask does
+is only allowing objects as toplevel elements when using
+:func:`~flask.jsonify`.  Make sure to do the same when using an ordinary
+JSON generate function.
"
540eca16f8a5963a74298f3630523fd9ad49187a,33a035bb0ec07a4ca92f1397e7caeb7714c57bd6,flask.py,flask.py,flask.py,Added security document,"diff --git a/flask.py b/flask.py
index c4656cdb..227bbf1e 100644
--- a/flask.py
+++ b/flask.py
@@ -300,7 +300,9 @@ def jsonify(*args, **kwargs):
             ""id"": 42
         }
 
-    This requires Python 2.6 or an installed version of simplejson.
+    This requires Python 2.6 or an installed version of simplejson.  For
+    security reasons only objects are supported toplevel.  For more
+    information about this, have a look at :ref:`json-security`.
 
     .. versionadded:: 0.2
     """"""
","diff --git a/flask.py b/flask.py
index c4656cdb..227bbf1e 100644
--- a/flask.py
+++ b/flask.py
@@ -300,7 +300,9 @@ def jsonify(*args, **kwargs):
             ""id"": 42
         }
 
-    This requires Python 2.6 or an installed version of simplejson.
+    This requires Python 2.6 or an installed version of simplejson.  For
+    security reasons only objects are supported toplevel.  For more
+    information about this, have a look at :ref:`json-security`.
 
     .. versionadded:: 0.2
     """"""
"
33a035bb0ec07a4ca92f1397e7caeb7714c57bd6,52f38bbf8bee2f7b5aa4fe708dc304cb590d3a0b,docs/security.rst,docs/security.rst,docs/security.rst,Fixed a broken sentence,"diff --git a/docs/security.rst b/docs/security.rst
index db3d3c74..18b976ab 100644
--- a/docs/security.rst
+++ b/docs/security.rst
@@ -67,8 +67,8 @@ recursive structures that could cause problems and the only thing that
 could possibly break are very large responses that can cause some kind of
 denial of service at the receivers side.
 
-However there is a catch.  Due to how browsers the CSRF issue comes up
-with JSON unfortunately.  Fortunately there is also a weird part of the
+However there is a catch.  Due to how browsers work the CSRF issue comes
+up with JSON unfortunately.  Fortunately there is also a weird part of the
 JavaScript specification that can be used to solve that problem easily and
 Flask is kinda doing that for you by preventing you from doing dangerous
 stuff.  Unfortunately that protection is only there for
","diff --git a/docs/security.rst b/docs/security.rst
index db3d3c74..18b976ab 100644
--- a/docs/security.rst
+++ b/docs/security.rst
@@ -67,8 +67,8 @@ recursive structures that could cause problems and the only thing that
 could possibly break are very large responses that can cause some kind of
 denial of service at the receivers side.
 
-However there is a catch.  Due to how browsers the CSRF issue comes up
-with JSON unfortunately.  Fortunately there is also a weird part of the
+However there is a catch.  Due to how browsers work the CSRF issue comes
+up with JSON unfortunately.  Fortunately there is also a weird part of the
 JavaScript specification that can be used to solve that problem easily and
 Flask is kinda doing that for you by preventing you from doing dangerous
 stuff.  Unfortunately that protection is only there for
"
52f38bbf8bee2f7b5aa4fe708dc304cb590d3a0b,20c2e53893c202a4555bd7390672ee948fa6b1e0,docs/testing.rst,docs/testing.rst,docs/testing.rst,Alcoholified placeholders,"diff --git a/docs/testing.rst b/docs/testing.rst
index de14413d..f9785b18 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -233,8 +233,8 @@ happen.  With Flask 0.4 this is possible by using the
     app = flask.Flask(__name__)
 
     with app.test_client() as c:
-        rv = c.get('/?foo=42')
-        assert request.args['foo'] == '42'
+        rv = c.get('/?tequila=42')
+        assert request.args['tequila'] == '42'
 
 If you would just be using the :meth:`~flask.Flask.test_client` without
 the `with` block, the `assert` would fail with an error because `request`
","diff --git a/docs/testing.rst b/docs/testing.rst
index de14413d..f9785b18 100644
--- a/docs/testing.rst
+++ b/docs/testing.rst
@@ -233,8 +233,8 @@ happen.  With Flask 0.4 this is possible by using the
     app = flask.Flask(__name__)
 
     with app.test_client() as c:
-        rv = c.get('/?foo=42')
-        assert request.args['foo'] == '42'
+        rv = c.get('/?tequila=42')
+        assert request.args['tequila'] == '42'
 
 If you would just be using the :meth:`~flask.Flask.test_client` without
 the `with` block, the `assert` would fail with an error because `request`
"
52f38bbf8bee2f7b5aa4fe708dc304cb590d3a0b,20c2e53893c202a4555bd7390672ee948fa6b1e0,flask.py,flask.py,flask.py,Alcoholified placeholders,"diff --git a/flask.py b/flask.py
index 227bbf1e..93b39e05 100644
--- a/flask.py
+++ b/flask.py
@@ -213,7 +213,7 @@ def url_for(endpoint, **values):
 def get_template_attribute(template_name, attribute):
     """"""Loads a macro (or variable) a template exports.  This can be used to
     invoke a macro from within Python code.  If you for example have a
-    template named `_foo.html` with the following contents:
+    template named `_cider.html` with the following contents:
 
     .. sourcecode:: html+jinja
 
@@ -221,7 +221,7 @@ def get_template_attribute(template_name, attribute):
 
     You can access this from Python code like this::
 
-        hello = get_template_attribute('_foo.html', 'hello')
+        hello = get_template_attribute('_cider.html', 'hello')
         return hello('World')
 
     .. versionadded:: 0.2
@@ -1062,8 +1062,8 @@ class Flask(_PackageBoundObject):
         you want to access the context locals for testing::
 
             with app.test_client() as c:
-                rv = c.get('/?foo=42')
-                assert request.args['foo'] == '42'
+                rv = c.get('/?vodka=42')
+                assert request.args['vodka'] == '42'
 
         .. versionchanged:: 0.4
            added support for `with` block usage for the client.
","diff --git a/flask.py b/flask.py
index 227bbf1e..93b39e05 100644
--- a/flask.py
+++ b/flask.py
@@ -213,7 +213,7 @@ def url_for(endpoint, **values):
 def get_template_attribute(template_name, attribute):
     """"""Loads a macro (or variable) a template exports.  This can be used to
     invoke a macro from within Python code.  If you for example have a
-    template named `_foo.html` with the following contents:
+    template named `_cider.html` with the following contents:
 
     .. sourcecode:: html+jinja
 
@@ -221,7 +221,7 @@ def get_template_attribute(template_name, attribute):
 
     You can access this from Python code like this::
 
-        hello = get_template_attribute('_foo.html', 'hello')
+        hello = get_template_attribute('_cider.html', 'hello')
         return hello('World')
 
     .. versionadded:: 0.2
@@ -1062,8 +1062,8 @@ class Flask(_PackageBoundObject):
         you want to access the context locals for testing::
 
             with app.test_client() as c:
-                rv = c.get('/?foo=42')
-                assert request.args['foo'] == '42'
+                rv = c.get('/?vodka=42')
+                assert request.args['vodka'] == '42'
 
         .. versionchanged:: 0.4
            added support for `with` block usage for the client.
"
20c2e53893c202a4555bd7390672ee948fa6b1e0,ea72e272a677365a60f1c412f91ebfac58ba13bb,docs/errorhandling.rst,docs/errorhandling.rst,docs/errorhandling.rst,Fixed a broken example,"diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index ae292a1a..cc7437a6 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -151,7 +151,7 @@ File logging
 
     from logging import Formatter
     file_handler.setFormatter(Formatter(
-        '%(astime)s %(levelname)s: %(message)s '
+        '%(asctime)s %(levelname)s: %(message)s '
         '[in %(pathname)s:%(lineno)d]'
     ))
 
","diff --git a/docs/errorhandling.rst b/docs/errorhandling.rst
index ae292a1a..cc7437a6 100644
--- a/docs/errorhandling.rst
+++ b/docs/errorhandling.rst
@@ -151,7 +151,7 @@ File logging
 
     from logging import Formatter
     file_handler.setFormatter(Formatter(
-        '%(astime)s %(levelname)s: %(message)s '
+        '%(asctime)s %(levelname)s: %(message)s '
         '[in %(pathname)s:%(lineno)d]'
     ))
 
"
ea72e272a677365a60f1c412f91ebfac58ba13bb,f66c252e47c63d7961b8d2c00acdf5aed11eb851,docs/patterns/packages.rst,docs/patterns/packages.rst,docs/patterns/packages.rst,typo,"diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index fd9bc689..db5b00a3 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -186,7 +186,7 @@ different module (say `frontend`).  This would look like this::
     def index():
         return ""I'm the frontend index""
 
-Now let's say we only want to redirect to a different module in the same
+Now let's say we only want to redirect to a different function in the same
 module.  Then we can either use the full qualified endpoint name like we
 did in the example above, or we just use the function name::
 
","diff --git a/docs/patterns/packages.rst b/docs/patterns/packages.rst
index fd9bc689..db5b00a3 100644
--- a/docs/patterns/packages.rst
+++ b/docs/patterns/packages.rst
@@ -186,7 +186,7 @@ different module (say `frontend`).  This would look like this::
     def index():
         return ""I'm the frontend index""
 
-Now let's say we only want to redirect to a different module in the same
+Now let's say we only want to redirect to a different function in the same
 module.  Then we can either use the full qualified endpoint name like we
 did in the example above, or we just use the function name::
 
"
